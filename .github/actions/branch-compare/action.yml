name: "Branch Compare"
description: "Compare artifacts between PR branch and base branch"

inputs:
    build-command:
        description: "The command that generates the artifact to compare"
        required: true
    path-to-artifact:
        description: >-
            The path to the artifact to compare - should be the same for both
            the current branch and base branch. Write artifacts from the
            `build-command` to `${{ runner.temp }}`/... to pass files in a temp
            directory.
        required: true

outputs:
    pr-artifact-path:
        description: "Path to the artifact generated for the PR branch"
    base-artifact-path:
        description: "Path to the artifact generated for the base branch"

runs:
    using: "composite"
    steps:
        - name: Check out latest commit
          uses: actions/checkout@v4

        - name: Install & cache node_modules
          uses: ./.github/actions/shared-node-cache
          with:
              node-version: ${{ matrix.node-version }}

        - name: Build for current PR
          shell: bash
          run: ${{ inputs.build-command }}

        - name: Capture output artifact from build-command for current PR
          shell: bash
          run: |
              PR_ARTIFACT_DIR="${{ runner.temp }}/branch-compare/pr"
              mkdir -p "$PR_ARTIFACT_DIR"
              cp ${{ inputs.path-to-artifact }} "$PR_ARTIFACT_DIR/"
              echo "pr-artifact-path=$PR_ARTIFACT_DIR" >> $GITHUB_OUTPUT

        - name: Check out base branch
          uses: actions/checkout@v4
          with:
              # This checks out the base branch of the PR (the branch the PR
              # is targeting)
              ref: ${{ github.event.pull_request.base.ref }}

        - name: Re-install node_modules for base branch
          shell: bash
          run: |
              pnpm clean
              pnpm install

        - name: Build for base
          shell: bash
          run: ${{ inputs.build-command }}

        - name: Capture output artifact from build-command for base branch
          shell: bash
          run: |
              BASE_ARTIFACT_DIR="${{ runner.temp }}/branch-compare/base"
              mkdir -p "$BASE_ARTIFACT_DIR"
              cp ${{ inputs.path-to-artifact }} "$BASE_ARTIFACT_DIR/"
              echo "base-artifact-path=$BASE_ARTIFACT_DIR" >> $GITHUB_OUTPUT
