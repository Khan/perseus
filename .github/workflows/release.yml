name: Release

on:
  push:
    branches:
      - main

# This workflow will run changesets depending on two different scenarios:
#
# 1. If we are landing a specific commit into main (Author PR), then
#    changesets will check if there are changes verifying the Markdown files
#    generated automatically:
#
#    a) There are new versions and there's NO Release PR, then the changesets
#    action will create a new Release PR.
#
#    b) There's a Release PR, then the changesets action will update the
#    existing Release PR with the new commit.
#
#    NOTE: (in both cases, changesets will modify the new version in
#    package.json for each package, and will remove the MD files as part of the
#    Release PR).
#
# 2. If we are landing the Release PR into main, then the changesets action
#    will publish the changes to npm.
#
# For more info about this workflow, see:
# https://github.com/changesets/action#usage
jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_NODECI_PRIVATE_KEY }}
      - name: Clone repository
        run: git clone git@github.com:Khan/wonder-stuff.git .

      - name: Setup Node.js 12.x
        uses: actions/setup-node@master
        with:
          # This is our target Node version.
          # This should match the engine value in the root package.json
          node-version: 12.x

      - name: Install Dependencies
        run: yarn

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: yarn publish:ci
        env:
          # We use a Personal Access Token here rather than the GITHUB_TOKEN
          # so that it will trigger our other actions. The token has to be on
          # the account of someone with appropriate access levels and given the
          # repo scope.
          GITHUB_TOKEN: ${{ secrets.KHAN_ACTIONS_BOT_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Build Slack message
        id: slack_message
        if: steps.changesets.outputs.published == 'true'
        # We have to do this in stages to make sure that the output into the
        # GITHUB_ENV retains are lines and is valid for updating the env.
        # This is based on:
        # - LIVE: https://trstringer.com/github-actions-multiline-strings/
        # - ARCHIVE: https://web.archive.org/web/20211017170102/https://trstringer.com/github-actions-multiline-strings/
        # - LIVE: https://renehernandez.io/snippets/multiline-strings-as-a-job-output-in-github-actions/
        # - ARCHIVE: https://web.archive.org/web/20211115000540/https://renehernandez.io/snippets/multiline-strings-as-a-job-output-in-github-actions/
        run: |
          UPDATED_PACKAGES=$(jq -r '[group_by(.name) | .[] | " - "+.[].name+"@"+.[].version] | join("\n")' <<< '${{ steps.changesets.outputs.publishedPackages }}')
          UPDATED_PACKAGES="${UPDATED_PACKAGES//'%'/'%25'}"
          UPDATED_PACKAGES="${UPDATED_PACKAGES//$'\n'/'%0A'}"
          UPDATED_PACKAGES="${UPDATED_PACKAGES//$'\r'/'%0D'}"
          echo "::set-output name=updated_packages::$UPDATED_PACKAGES"

      - name: Send a Slack notification for web if a publish happens
        if: steps.changesets.outputs.published == 'true'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_FEIWEB_WEBHOOK }}
          SLACK_CHANNEL: frontend-infra-web
          SLACK_MSG_AUTHOR: ${{ github.event.pull_request.user.login }}
          SLACK_USERNAME: GithubGoose
          SLACK_ICON_EMOJI: ":goose:"
          SLACK_MESSAGE: "A new version of ${{ github.event.repository.name }} was published! ðŸŽ‰ \n${{ steps.slack_message.outputs.updated_packages }}\n\nRelease notes â†’ https://github.com/Khan/${{ github.event.repository.name }}/releases/"
          SLACK_TITLE: "New Wonder Stuff release!"
          SLACK_FOOTER: Wonder Stuff Slack Notification
          MSG_MINIMAL: true

      - name: Send a Slack notification for mobile if a publish happens
        if: steps.changesets.outputs.published == 'true'
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_FEIMOBILE_WEBHOOK }}
          SLACK_CHANNEL: frontend-infra-mobile
          SLACK_MSG_AUTHOR: ${{ github.event.pull_request.user.login }}
          SLACK_USERNAME: GithubGoose
          SLACK_ICON_EMOJI: ":goose:"
          SLACK_MESSAGE: "A new version of ${{ github.event.repository.name }} was published! ðŸŽ‰ \n${{ steps.slack_message.outputs.updated_packages }}\n\nRelease notes â†’ https://github.com/Khan/${{ github.event.repository.name }}/releases/"
          SLACK_TITLE: "New Wonder Stuff release!"
          SLACK_FOOTER: Wonder Stuff Slack Notification
          MSG_MINIMAL: true
