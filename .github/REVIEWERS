[<REQUIRED> REVIEWER RULES]

Be sure to read through https://khanacademy.atlassian.net/wiki/spaces/FRONTEND/pages/598278672/Gerald+Documentation before adding any rules!

Examples:

# This rule will request @owner1 for review on changes to all files. This rule will also request @owner2 for a blocking review.
# **/*                @owner1 @owner2!

# This rule will request @owner1 and @Org/team1 for review on changes to all .js files
# **/*.js             @owner1 @Org/team1

# This rule will request @owner1 and @owner2 for review on changes to all files in the src/ directory. It will not match files in nested directories, such as src/about/about.js
# src/*               @owner1 @owner2

# This rule will request @owner1 and @owner2 for review on changes to all files in the src/ directory, recursively. In contrast to the rule above, it WILL match src/about/about.js
# src/**              @owner1 @owner2

# This rule will request @owner1 for review on changes to all files that have the word "gerald" in its name
# **/*gerald*         @owner1

# The following rules will both request @owner1 for review on changes to any file that ends with .js, .txt, or .yml
# **/*.(js|txt|yml)   @owner1 # This is in the style of Regex groups (https://www.regular-expressions.info/brackets.html)
# **/*.{js,txt,yml}   @owner1 # This is in the style of Bash brace expansions (https://github.com/micromatch/braces)

# This rule will request @owner1 for review on changes made to main.js or main.test.js. Read more about extended globbing: https://github.com/micromatch/micromatch#extglobs
# main?(.test).js     @owner1

# This rule will request @owner1 for review on changes made to file-1, file-2, and file-3.
# file-[1-5]          @owner1 # This is in the style of Regex character glasses (https://github.com/micromatch/micromatch#regex-character-classes)

# This rule will request @owner1 for review on changes made to file-0, file-2, file-3, ..., file-9.
# file-[[:digit:]]    @owner1 # This uses POSIX character classes (https://github.com/micromatch/picomatch#posix-brackets)

Regex Examples:

# This rule will request @owner1 for review on changes that include the word "gerald"
# "/gerald/ig"                @owner1

# This rule will request @owner1 for review on changes that *add* the word "gerald"
# "/^\+.*gerald/igm"          @owner1

# This rule will request @owner1 for review on changes that *remove* the word "gerald"
# "/^\-.*gerald/igm"          @owner1

# This rule will request @owner1 for review on changes that *add OR remove* the word "gerald"
# "/^(\-|\+).*gerald/igm"     @owner1

----Everything above this line will be ignored!----
[ON PULL REQUEST] (DO NOT DELETE THIS LINE)

**/*    @Khan/perseus!
