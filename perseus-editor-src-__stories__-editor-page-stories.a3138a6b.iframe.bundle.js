"use strict";(self.webpackChunkperseus=self.webpackChunkperseus||[]).push([[9027],{"./packages/perseus-editor/src/__stories__/editor-page.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Demo:()=>Demo,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/@storybook/addon-actions/dist/index.mjs"),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js"),___WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/perseus-editor/src/index.ts");(0,__webpack_require__("./packages/perseus-editor/src/util/register-all-widgets-and-editors-for-testing.ts").r)();const __WEBPACK_DEFAULT_EXPORT__={title:"Perseus/Editor/EditorPage"},onChangeAction=(0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_0__.aD)("onChange"),Demo=()=>{const[previewDevice,setPreviewDevice]=react__WEBPACK_IMPORTED_MODULE_1__.useState("phone"),[jsonMode,setJsonMode]=react__WEBPACK_IMPORTED_MODULE_1__.useState(!1),[answerArea,setAnswerArea]=react__WEBPACK_IMPORTED_MODULE_1__.useState(),[question,setQuestion]=react__WEBPACK_IMPORTED_MODULE_1__.useState(),[hints,setHints]=react__WEBPACK_IMPORTED_MODULE_1__.useState();return react__WEBPACK_IMPORTED_MODULE_1__.createElement(___WEBPACK_IMPORTED_MODULE_2__.cx,{apiOptions:{isMobile:!1},previewDevice,onPreviewDeviceChange:newDevice=>setPreviewDevice(newDevice),developerMode:!0,jsonMode,answerArea,question,hints,frameSource:"about:blank",previewURL:"about:blank",itemId:"1",onChange:props=>{onChangeAction(props),"jsonMode"in props&&setJsonMode(props.jsonMode),"answerArea"in props&&setAnswerArea(props.answerArea),"question"in props&&setQuestion(props.question),"hints"in props&&setHints(props.hints)}})};Demo.parameters={...Demo.parameters,docs:{...Demo.parameters?.docs,source:{originalSource:'(): React.ReactElement => {\n  const [previewDevice, setPreviewDevice] = React.useState<DeviceType>("phone");\n  const [jsonMode, setJsonMode] = React.useState<boolean | undefined>(false);\n  const [answerArea, setAnswerArea] = React.useState<PerseusAnswerArea | undefined | null>();\n  const [question, setQuestion] = React.useState<PerseusRenderer | undefined>();\n  const [hints, setHints] = React.useState<ReadonlyArray<Hint> | undefined>();\n  return <EditorPage apiOptions={{\n    isMobile: false\n  }} previewDevice={previewDevice} onPreviewDeviceChange={newDevice => setPreviewDevice(newDevice)} developerMode={true} jsonMode={jsonMode} answerArea={answerArea} question={question} hints={hints} frameSource="about:blank" previewURL="about:blank" itemId="1" onChange={props => {\n    onChangeAction(props);\n    if ("jsonMode" in props) {\n      setJsonMode(props.jsonMode);\n    }\n    if ("answerArea" in props) {\n      setAnswerArea(props.answerArea);\n    }\n    if ("question" in props) {\n      setQuestion(props.question);\n    }\n    if ("hints" in props) {\n      setHints(props.hints);\n    }\n  }} />;\n}',...Demo.parameters?.docs?.source}}};const __namedExportsOrder=["Demo"]}}]);