import{a as u,j as a,F as k}from"./jsx-runtime-FVsy8kgq.js";import{B as S}from"./choice-j6w4LtFN.js";import{V as T}from"./index-6h5t6F0w.js";import{S as x}from"./index-qUyqkRvh.js";import{s as h}from"./index-deFLJwr4.js";import{L as q}from"./index-h_CiYGGb.js";import{L as F,p as A}from"./labeled-switch-rKIyx6Iy.js";import{l as B}from"./index-awljIyHI.js";import{C as _}from"./coordinate-pair-input-23mAp7kL.js";import{P as I,L as O}from"./locked-figure-settings-actions-DsQ3rjOG.js";import{C as R}from"./color-select-DT9P5Df1.js";import{C as U,g as j}from"./util-sCSzm9ZT.js";import{L as M}from"./locked-label-settings-dnFaULZV.js";const y=l=>{var f;const{flags:c,coord:r,color:p,filled:g=!0,labels:n,onChangeProps:s,onMove:b,onRemove:w}=l;function L(e){const o={color:e};o.labels=n.map(t=>({...t,color:e})),s(o)}function v(e){const o=e[0]-r[0],t=e[1]-r[1],d={coord:e};d.labels=n.map(m=>({...m,coord:[m.coord[0]+o,m.coord[1]+t]})),s(d)}function C(e,o){const t=[...n];t[o]={...n[o],...e},s({labels:t})}function P(e){const o=n.filter((t,d)=>d!==e);s({labels:o})}return u(I,{expanded:l.expanded,onToggle:l.onToggle,header:u(T,{style:i.row,children:[a(q,{children:`Point (${r[0]}, ${r[1]})`}),a(x,{size:h.xSmall_8}),a(U,{color:p,filled:g})]}),children:[a(_,{coord:r,style:i.spaceUnder,onChange:v}),a(R,{selectedValue:p,onChange:L,style:i.spaceUnder}),a(F,{label:"open point",checked:!g,onChange:e=>{s({filled:!e})},style:i.spaceUnder}),((f=c==null?void 0:c.mafs)==null?void 0:f["locked-point-labels"])&&u(k,{children:[n.map((e,o)=>a(M,{...e,expanded:!0,onChangeProps:t=>{C(t,o)},onRemove:()=>{P(o)}})),a(S,{kind:"tertiary",startIcon:A,onClick:()=>{const e={...j("label"),coord:[r[0]+.5,r[1]-1*(n==null?void 0:n.length)],color:p};s({labels:[...n,e]})},style:i.addButton,children:"Add visible label"})]}),a(O,{figureType:l.type,onMove:b,onRemove:w})]})},i=B.StyleSheet.create({row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:h.xSmall_8},addButton:{alignSelf:"start"}}),Y=y;y.__docgenInfo={description:"",methods:[],displayName:"LockedPointSettings",props:{flags:{required:!1,tsType:{name:'APIOptions["flags"]',raw:'APIOptions["flags"]'},description:""},showLabelsFlag:{required:!1,tsType:{name:"boolean"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPointType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedPointType"}],raw:"Partial<LockedPointType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};export{Y as L};
