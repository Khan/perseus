import{a as y}from"./chunk-D5ZWXAHU-vR62DWf0.js";import{M as f}from"./math-input-pv6DDwNv.js";import"./v4-yQnnJER4.js";import"./prop-types-Z7w_StVF.js";import"./random-util-g9RgnkPR.js";import"./underscore-885MUNGo.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./mobile-keypad-GoBBfhc_.js";import"./index-6oxdNXpR.js";import"./no-important-xCWWYXQR.js";import"./index-9gkyvru-.js";import"./index-OQMtW1Q1.js";import"./index-J2t_5nK1.js";import"./index-iTGWTR8W.js";import"./assertThisInitialized-4q6YPdh3.js";import"./index-k8usAFZT.js";import"./tiny-invariant-bHgPayXn.js";import"./index-QHkT31Yt.js";import"./tabbar-zpu-45Sc.js";import"./item-Q2jDffTR.js";import"./button-assets-uYiIcYAX.js";import"./get-decimal-separator-c07pHhM9.js";import"./keypad-button-uIr91j9g.js";import"./operators-page-i_O-a_W8.js";import"./navigation-pad--isevtM_.js";import"./key-translator-PHTr4acW.js";import"./index-o42urCig.js";import"./index-Z0DV6Rs4.js";import"./index-oZ7IFo8m.js";import"./index-NdzxJoEP.js";import"./index-DQI2fDhH.js";import"./index-xxLWRBZ2.js";import"./index-OUR0CuKj.js";import"./index-86cQASob.js";import"./Popper-Y5KDXl-P.js";import"./index-dnMhQZ-1.js";import"./jquery-5v7aFUvu.js";import"./i18n-context-jir6aF-r.js";const tr={title:"Perseus/Components/Math Input",component:f,args:{keypadButtonSets:{advancedRelations:!0,basicRelations:!0,divisionKey:!0,logarithms:!0,preAlgebra:!0,trigonometry:!0,scientific:!0},convertDotToTimes:!1,value:"",onChange:y("onChange"),analytics:{onAnalyticsEvent:()=>Promise.resolve()},labelText:"Math input"},parameters:{controls:{exclude:["onChange","analytics"]}}},r={},e={args:{ariaLabel:"Sample label"}},t={args:{buttonsVisible:"always"}},a={args:{buttonsVisible:"never"}};var o,i,s;r.parameters={...r.parameters,docs:{...(o=r.parameters)==null?void 0:o.docs,source:{originalSource:"{}",...(s=(i=r.parameters)==null?void 0:i.docs)==null?void 0:s.source}}};var p,m,n;e.parameters={...e.parameters,docs:{...(p=e.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    ariaLabel: "Sample label"
  }
}`,...(n=(m=e.parameters)==null?void 0:m.docs)==null?void 0:n.source}}};var c,l,u;t.parameters={...t.parameters,docs:{...(c=t.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    buttonsVisible: "always"
  }
}`,...(u=(l=t.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};var d,b,g;a.parameters={...a.parameters,docs:{...(d=a.parameters)==null?void 0:d.docs,source:{originalSource:`{
  args: {
    buttonsVisible: "never"
  }
}`,...(g=(b=a.parameters)==null?void 0:b.docs)==null?void 0:g.source}}};const ar=["DefaultWithBasicButtonSet","DefaultWithAriaLabel","KeypadOpenByDefault","KeypadNeverVisible"];export{e as DefaultWithAriaLabel,r as DefaultWithBasicButtonSet,a as KeypadNeverVisible,t as KeypadOpenByDefault,ar as __namedExportsOrder,tr as default};
