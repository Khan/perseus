import{a as w,j as o,F as A}from"./jsx-runtime-FVsy8kgq.js";import"./util-XcxTwqb0.js";import{e as I}from"./svg-image-VUqtnnD6.js";import{B as j}from"./choice-E4eyMygy.js";import{V as m}from"./index-6h5t6F0w.js";import{S as z}from"./index-qUyqkRvh.js";import{s,c as u}from"./index-deFLJwr4.js";import{L as b,a as E}from"./index-h_CiYGGb.js";import{p as D}from"./plus-circle-JCxQSzSv.js";import{l as O}from"./index-awljIyHI.js";import{v as d}from"./index-IIMKO4_x.js";import{P as L,C as T,L as N}from"./locked-figure-settings-actions-TC57zwzl.js";import{C as U}from"./color-select-7lAz41OK.js";import{L as W}from"./line-swatch-SvWemPwv.js";import{L as G}from"./locked-label-settings-3s_U8s4M.js";import{g as H}from"./util-TBV6Jhp1.js";const J="The vector cannot have length 0.",k=p=>{var S;const{flags:g,points:v,color:h,labels:e,onChangeProps:c,onMove:P,onRemove:_}=p,[i,l]=v,F=`Vector (${i[0]}, ${i[1]}), (${l[0]}, ${l[1]})`,f=I(i,l);function x(n,t){if(typeof n<"u"){const r=[...v];r[t]=[...n];const y=d.midpoint(i,l),M=d.midpoint(r[0],r[1]),R=d.sub(M,y),V=e==null?void 0:e.map(C=>({...C,coord:d.add(C.coord,R)}));c({points:r,labels:V})}}function $(n){const t={color:n};t.labels=e==null?void 0:e.map(r=>({...r,color:n})),c(t)}function q(n,t){if(!e)return;const r=[...e];r[t]={...e[t],...n},c({labels:r})}function B(n){if(!e)return;const t=e.filter((r,y)=>y!==n);c({labels:t})}return w(L,{expanded:p.expanded,onToggle:p.onToggle,header:w(m,{style:a.row,children:[o(b,{children:F}),o(z,{size:s.xSmall_8}),o(W,{color:h,lineStyle:"solid"})]}),children:[o(m,{style:[a.row,a.spaceUnder],children:o(U,{selectedValue:h,onChange:$})}),f&&o(E,{style:a.errorText,children:J}),o(L,{expanded:!0,containerStyle:a.container,panelStyle:a.accordionPanel,header:o(m,{style:a.row,children:o(b,{children:`Tail (${i[0]}, ${i[1]})`})}),children:o(T,{coord:i,error:f,onChange:n=>{x(n,0)}})}),o(L,{expanded:!0,containerStyle:a.container,panelStyle:a.accordionPanel,header:o(m,{style:a.row,children:o(b,{children:`Tip (${l[0]}, ${l[1]})`})}),children:o(T,{coord:l,error:f,onChange:n=>{x(n,1)}})}),((S=g==null?void 0:g.mafs)==null?void 0:S["locked-vector-labels"])&&w(A,{children:[o(m,{style:a.horizontalRule}),e==null?void 0:e.map((n,t)=>o(G,{...n,expanded:!0,onChangeProps:r=>{q(r,t)},onRemove:()=>{B(t)},containerStyle:a.labelContainer})),o(j,{kind:"tertiary",startIcon:D,onClick:()=>{const n=[0,-1],t=d.add(d.scale(n,(e==null?void 0:e.length)??0),d.midpoint(i,l)),r={...H("label"),coord:t,color:h};c({labels:[...e??[],r]})},style:a.addButton,children:"Add visible label"})]}),o(N,{figureType:p.type,onMove:P,onRemove:_})]})},a=O.StyleSheet.create({accordionPanel:{paddingBottom:s.medium_16},container:{marginTop:s.xSmall_8,marginBottom:0,marginLeft:-s.xxxSmall_4,marginRight:-s.xxxSmall_4,backgroundColor:u.white},errorText:{color:u.red,marginTop:s.xSmall_8},row:{flexDirection:"row",alignItems:"center"},addButton:{alignSelf:"start"},horizontalRule:{marginTop:s.small_12,marginBottom:s.xxxSmall_4,height:1,backgroundColor:u.offBlack16},labelContainer:{backgroundColor:u.white}}),me=k;k.__docgenInfo={description:"",methods:[],displayName:"LockedVectorSettings",props:{flags:{required:!1,tsType:{name:'APIOptions["flags"]',raw:'APIOptions["flags"]'},description:""},showLabelsFlag:{required:!1,tsType:{name:"boolean"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedFigure>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedFigure"}],raw:"Partial<LockedFigure>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (points, color, etc.) are updated."}}};export{me as L};
