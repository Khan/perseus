var d=Object.defineProperty;var c=(a,i,s)=>i in a?d(a,i,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[i]=s;var n=(a,i,s)=>(c(a,typeof i!="symbol"?i+"":i,s),s);import{r as p,bD as m,aB as u,_ as h,bE as g,j as e}from"./iframe-BGwaWJut.js";import"./item-version-CPsKRKIp.js";import"./article-renderer-DYIe-t54.js";import"./server-item-renderer-C9rE-tAG.js";import"./hints-renderer-DFM3F4Tx.js";import{c as x}from"./components-Bji0qxmY.js";import{B as f}from"./blur-input-BcFQZvU5.js";const{InfoTip:l}=x;class o extends p.Component{constructor(){super(...arguments);n(this,"input",p.createRef());n(this,"handleAnswerChange",s=>{const r=u.firstNumericalParse(s)||0;this.props.onChange({value:r})});n(this,"focus",()=>{var s;return(s=this.input.current)==null||s.focus(),!0});n(this,"serialize",()=>({value:this.props.value,simplify:this.props.simplify,size:this.props.size,inexact:this.props.inexact,maxError:this.props.maxError,answerType:this.props.answerType,rightAlign:this.props.rightAlign}))}render(){const s=h.map(g,function(r,t){return e.jsx("option",{value:t,children:r.name},t)},this);return e.jsxs("div",{children:[e.jsx("div",{children:e.jsxs("label",{children:["Correct answer:"," ",e.jsx(f,{value:""+this.props.value,onChange:this.handleAnswerChange,ref:this.input})]})}),e.jsxs("div",{children:[e.jsxs("label",{children:["Unsimplified answers"," ",e.jsxs("select",{value:this.props.simplify,onChange:r=>{this.props.onChange({simplify:r.target.value})},children:[e.jsx("option",{value:"required",children:"will not be graded"}),e.jsx("option",{value:"optional",children:"will be accepted"}),e.jsx("option",{value:"enforced",children:"will be marked wrong"})]})]}),e.jsxs(l,{children:[e.jsx("p",{children:'Normally select "will not be graded". This will give the user a message saying the answer is correct but not simplified. The user will then have to simplify it and re-enter, but will not be penalized. (5th grade and anything after)'}),e.jsx("p",{children:'Select "will be accepted" only if the user is not expected to know how to simplify fractions yet. (Anything prior to 5th grade)'}),e.jsx("p",{children:'Select "will be marked wrong" only if we are specifically assessing the ability to simplify.'})]})]}),e.jsxs("div",{children:[e.jsxs("label",{children:[e.jsx("input",{type:"checkbox",checked:this.props.inexact,onChange:r=>{this.props.onChange({inexact:r.target.checked})}})," ","Allow inexact answers"]}),e.jsxs("label",{children:[e.jsx("input",{type:"checkbox",style:{visibility:"hidden"}}),"Max error:"," ",e.jsx("input",{type:"text",disabled:!this.props.inexact,defaultValue:this.props.maxError,"aria-label":"Max error",onBlur:r=>{const t=""+(u.firstNumericalParse(r.target.value)||0);r.target.value=t,this.props.onChange({maxError:t})}})]})]}),e.jsxs("div",{children:["Answer type:"," ",e.jsx("select",{value:this.props.answerType,onChange:r=>{this.props.onChange({answerType:r.target.value})},"aria-label":"Answer type",children:s}),e.jsx(l,{children:e.jsx("p",{children:'Use the default "Numbers" unless the answer must be in a specific form (e.g., question is about converting decimals to fractions).'})})]}),e.jsxs("div",{children:[e.jsxs("label",{children:["Width"," ",e.jsxs("select",{value:this.props.size,onChange:r=>{this.props.onChange({size:r.target.value})},children:[e.jsx("option",{value:"normal",children:"Normal (80px)"}),e.jsx("option",{value:"small",children:"Small (40px)"})]})]}),e.jsx(l,{children:e.jsx("p",{children:'Use size "Normal" for all text boxes, unless there are multiple text boxes in one line and the answer area is too narrow to fit them.'})})]}),e.jsx("div",{children:e.jsxs("label",{children:[e.jsx("input",{type:"checkbox",checked:this.props.rightAlign,onChange:r=>{this.props.onChange({rightAlign:r.target.checked})}})," ","Right alignment"]})})]})}}n(o,"widgetName","input-number"),n(o,"defaultProps",m.defaultWidgetOptions);o.__docgenInfo={description:"",methods:[{name:"handleAnswerChange",docblock:null,modifiers:[],params:[{name:"str",optional:!1,type:null}],returns:null},{name:"focus",docblock:null,modifiers:[],params:[],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"InputNumberEditor",props:{value:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}},simplify:{required:!1,tsType:{name:"union",raw:'PerseusInputNumberWidgetOptions["simplify"]'},description:"",defaultValue:{value:'"required"',computed:!1}},size:{required:!1,tsType:{name:"union",raw:'PerseusInputNumberWidgetOptions["size"]'},description:"",defaultValue:{value:'"normal"',computed:!1}},inexact:{required:!1,tsType:{name:"boolean",raw:'PerseusInputNumberWidgetOptions["inexact"]'},description:"",defaultValue:{value:"false",computed:!1}},maxError:{required:!1,tsType:{name:"union",raw:'PerseusInputNumberWidgetOptions["maxError"]'},description:"",defaultValue:{value:"0.1",computed:!1}},answerType:{required:!1,tsType:{name:"union",raw:'PerseusInputNumberWidgetOptions["answerType"]'},description:"",defaultValue:{value:'"number"',computed:!1}},rightAlign:{required:!1,tsType:{name:"boolean",raw:'PerseusInputNumberWidgetOptions["rightAlign"]'},description:"",defaultValue:{value:"false",computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:`(arg1: {
    value?: ParsedValue | 0;
    simplify?: Props["simplify"];
    size?: Props["size"];
    inexact?: Props["inexact"];
    maxError?: Props["maxError"];
    answerType?: Props["answerType"];
    rightAlign?: Props["rightAlign"];
}) => void`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    value?: ParsedValue | 0;
    simplify?: Props["simplify"];
    size?: Props["size"];
    inexact?: Props["inexact"];
    maxError?: Props["maxError"];
    answerType?: Props["answerType"];
    rightAlign?: Props["rightAlign"];
}`,signature:{properties:[{key:"value",value:{name:"union",raw:"ParsedValue | 0",elements:[{name:"signature",type:"object",raw:`{
    value: number;
    exact: boolean;
}`,signature:{properties:[{key:"value",value:{name:"number",required:!0}},{key:"exact",value:{name:"boolean",required:!0}}]}},{name:"literal",value:"0"}],required:!1}},{key:"simplify",value:{name:"union",raw:'Props["simplify"]',required:!1}},{key:"size",value:{name:"union",raw:'Props["size"]',required:!1}},{key:"inexact",value:{name:"boolean",raw:'Props["inexact"]',required:!1}},{key:"maxError",value:{name:"union",raw:'Props["maxError"]',required:!1}},{key:"answerType",value:{name:"union",raw:'Props["answerType"]',required:!1}},{key:"rightAlign",value:{name:"boolean",raw:'Props["rightAlign"]',required:!1}}]}},name:"arg1"}],return:{name:"void"}}},description:""}}};export{o as I};
