import{S as E,a as K,M as x}from"./mobile-keypad-tUVpsJFS.js";import{a as h}from"./chunk-D5ZWXAHU-vR62DWf0.js";import{r as e}from"./index-6oxdNXpR.js";import{M as S}from"./prop-types-JWuPHey-.js";import"./key-translator-HPkFpdNX.js";import"./button-assets-L8ov_9cF.js";import"./underscore-885MUNGo.js";import"./core-widget-registry-lKD0wS3Q.js";import"./no-important-xCWWYXQR.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./index-9gkyvru-.js";import"./index-OQMtW1Q1.js";import"./index-J2t_5nK1.js";import"./index-hw7d7wq0.js";import"./assertThisInitialized-4q6YPdh3.js";import"./index-OMSOgf8r.js";import"./tiny-invariant-bHgPayXn.js";import"./index-zRqVZh6A.js";import"./tabbar-B0kYgJj9.js";import"./item-Ztp2GOp4.js";import"./keypad-button-SQB6sX9u.js";import"./operators-page-LLpnvJeI.js";import"./navigation-pad-mlqM3fWh.js";import"./v4-yQnnJER4.js";import"./index-o42urCig.js";import"./get-decimal-separator-C5N_K9o2.js";const Y={title:"math-input/Full Mobile MathInput",parameters:{backgrounds:{default:"light background",values:[{name:"light background",value:"lightgrey",default:!0}]}}},M=({keypadElement:t,setKeypadElement:s})=>{const[l,d]=e.useState(""),[o,f]=e.useState(!1),[i,v]=e.useState(!0),[p,g]=e.useState(!0),y=e.useRef(null),C=i?"CDOT":"TIMES";return e.useEffect(()=>{t==null||t.configure({keypadType:o?"EXPRESSION":"FRACTION",extraKeys:o?["x","y","PI","THETA"]:[],times:i},()=>{})},[t,o,i]),e.createElement("div",{style:{padding:"1rem 2rem"}},e.createElement("div",null,e.createElement("div",null,"NOTE: To properly test the input interaction, you will need to simulate a device using the dev tools. MathInput requires touch events (not click events)."),e.createElement("div",{style:{padding:"1rem 0"}},e.createElement("button",{onClick:()=>f(!o)},`Use ${o?"Fraction":"Expression"} Keypad`),e.createElement("button",{onClick:()=>g(!p)},`Use ${p?"Legacy":"New"} Keypad`),e.createElement("button",{onClick:()=>v(!i)},"Toggle to "+C))),e.createElement(S,{value:l,ref:y,keypadElement:t,onChange:(r,a)=>{d(r),a==null||a()},onFocus:()=>{t==null||t.activate()},onBlur:()=>{t==null||t.dismiss()},ariaLabel:"Mobile input"}),e.createElement(x,{onElementMounted:r=>{r&&s(r)},onDismiss:()=>{},onAnalyticsEvent:async r=>h("onAnalyticsEvent")(r)}))};function n(){return e.createElement(E,null,e.createElement(K.Consumer,null,({keypadElement:t,setKeypadElement:s})=>e.createElement(M,{keypadElement:t,setKeypadElement:s})))}n.__docgenInfo={description:"",methods:[],displayName:"Wrapped"};var u,m,c;n.parameters={...n.parameters,docs:{...(u=n.parameters)==null?void 0:u.docs,source:{originalSource:`function Wrapped() {
  return <StatefulKeypadContextProvider>
            <KeypadContext.Consumer>
                {({
        keypadElement,
        setKeypadElement
      }) => <Basic keypadElement={keypadElement} setKeypadElement={setKeypadElement} />}
            </KeypadContext.Consumer>
        </StatefulKeypadContextProvider>;
}`,...(c=(m=n.parameters)==null?void 0:m.docs)==null?void 0:c.source}}};const Z=["Wrapped"];export{n as Wrapped,Z as __namedExportsOrder,Y as default};
