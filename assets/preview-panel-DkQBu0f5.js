import{r as h,j as e,V as i,as as m,b4 as x,b5 as y}from"./iframe-BPwAIjyA.js";const _="_panel_1u8rs_1",b="_closeButton_1u8rs_18",P="_innerPanel_1u8rs_23",B="_openPanelButton_1u8rs_32",n={panel:_,closeButton:b,innerPanel:P,openPanelButton:B};function w({children:l,openButtonText:r,isOpen:p,onOpenChange:t,openButtonClassName:c}){const[d,u]=h.useState(!1),s=p??d,a=()=>{const o=!s;u(o),t==null||t(o)};return e.jsxs(i,{children:[!s&&e.jsx("div",{className:`${n.openPanelButton} ${c||""}`,children:e.jsx(m,{onClick:a,children:r})}),s&&e.jsxs("div",{className:n.panel,children:[e.jsx("div",{className:n.closeButton,children:e.jsx(x,{icon:y,kind:"tertiary","aria-label":"Close panel",onClick:a})}),e.jsx(i,{className:n.innerPanel,children:l})]})]})}w.__docgenInfo={description:`A reusable component that provides a toggleable preview panel with:
- A fixed-position panel on the right side
- A button to open the panel when closed
- A close button (X) when the panel is open
- Accepts any children to render inside the panel`,methods:[],displayName:"PreviewPanel",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:"The content to display inside the panel"},openButtonText:{required:!0,tsType:{name:"string"},description:'Text to display on the "open panel" button'},isOpen:{required:!1,tsType:{name:"boolean"},description:"Optional: Control the panel open state externally"},onOpenChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(isOpen: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"isOpen"}],return:{name:"void"}}},description:"Optional: Callback when panel open state changes"},openButtonClassName:{required:!1,tsType:{name:"string"},description:"Optional: Additional CSS class for the open button"}}};export{w as P,n as s};
