import{j as o,a as s,F as P}from"./jsx-runtime-FVsy8kgq.js";import{l as x,f as I}from"./article-renderer-xgDTcXb5.js";import"./jquery-yG1GhClm.js";import"./util-EodL-OyW.js";import"./phet-simulation-9JfdvNpj.js";import"./version-akiLXZts.js";import"./dependencies-8XILypbq.js";import"./perseus-api-mOiZT07d.js";import"./multi-renderer-BsBVb0qh.js";import"./hints-renderer-ZelyXyfE.js";import"./renderer-HeQMBZ0Y.js";import"./base-radio-k_XAG_WO.js";import"./button-group-nsoLlHtM.js";import"./graph-wtHZRVEi.js";import"./svg-image-WHPtcgo-.js";import"./hud-FI3E3dT_.js";import"./icon-YuYiVxsK.js";import"./index-K9BSJPWl.js";import"./inline-icon-tKY1iMkH.js";import"./math-input-uKGy3wsu.js";import"./multi-button-group-a0iIfrwx.js";import"./number-input-4TYI0Vya.js";import"./range-input-1epDLKHz.js";import"./text-input-15gEhfDF.js";import"./text-list-editor-pe7AGDAl.js";import"./index-k-0mNqHS.js";import"./i18n-context-P7VpLqM1.js";import"./index-IIMKO4_x.js";import{B as F}from"./choice-zricoHUw.js";import{V as p}from"./index-6h5t6F0w.js";import{S as X,O as G}from"./answer-choices-EARHE7Ln.js";import{P as T,C as H,I as y,L as J,a as K}from"./locked-label-settings-zjgCwf_3.js";import{S as g,a as Q}from"./index-qUyqkRvh.js";import{c as f,s as c}from"./index-deFLJwr4.js";import{L as C,a as $}from"./index-h_CiYGGb.js";import{p as _,L as Y}from"./locked-figure-aria-NOMbhLiy.js";import{l as z}from"./index-awljIyHI.js";import{C as Z}from"./color-select-uG5JE-P7.js";import{L as ee}from"./labeled-switch-qayX26Ho.js";import{L as oe}from"./line-stroke-select-svqZ1XDL.js";import{g as te}from"./util-b6krRZG5.js";const ne=""+new URL("arrow-fat-down-X5ut-FGw.svg",import.meta.url).href,re=""+new URL("arrow-fat-left-LxuHjYfJ.svg",import.meta.url).href,ie=""+new URL("arrow-fat-right-CxkbbISx.svg",import.meta.url).href,ae=""+new URL("arrow-fat-up-ah2eaaIR.svg",import.meta.url).href,le=""+new URL("minus-circle-9EKbQa8X.svg",import.meta.url).href,B=u=>{const{color:d,fillStyle:a,strokeStyle:h}=u;return o(p,{"aria-label":`${d}, stroke ${h}, fill ${a}`,style:[A.container,{border:`4px ${h} ${x[d]}`}],children:o(p,{style:[A.innerSquare,{backgroundColor:x[d],opacity:a==="white"?0:I[a]}]})})},A=z.StyleSheet.create({container:{outline:`2px solid ${f.offWhite}`,width:c.large_24,height:c.large_24,backgroundColor:f.white,alignItems:"center",justifyContent:"center"},innerSquare:{width:20,height:20}});B.__docgenInfo={description:"",methods:[],displayName:"PolygonSwatch",props:{color:{required:!0,tsType:{name:"LockedFigureColor"},description:""},fillStyle:{required:!0,tsType:{name:"LockedFigureFillType"},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const R=u=>{var S,v;const{flags:d,points:a,color:h,showVertices:q,fillStyle:k,strokeStyle:b,labels:t,ariaLabel:U,expanded:M,onToggle:j,onChangeProps:l,onMove:V,onRemove:W}=u;function D(){let n="";t&&t.length>0&&(n+=` ${t.map(i=>i.text).join(", ")}`);let e=`Polygon${n} with ${a.length} sides, vertices at `;return e+=a.map(([i,m])=>`(${i}, ${m})`).join(", "),e}function O(n){const e={color:n};e.labels=t==null?void 0:t.map(i=>({...i,color:n})),l(e)}function w(n){switch(n){case"up":l({points:a.map(([e,i])=>[e,i+1]),labels:t==null?void 0:t.map(e=>({...e,coord:[e.coord[0],e.coord[1]+1]}))});break;case"down":l({points:a.map(([e,i])=>[e,i-1]),labels:t==null?void 0:t.map(e=>({...e,coord:[e.coord[0],e.coord[1]-1]}))});break;case"left":l({points:a.map(([e,i])=>[e-1,i]),labels:t==null?void 0:t.map(e=>({...e,coord:[e.coord[0]-1,e.coord[1]]}))});break;case"right":l({points:a.map(([e,i])=>[e+1,i]),labels:t==null?void 0:t.map(e=>({...e,coord:[e.coord[0]+1,e.coord[1]]}))});break}}function E(n,e){if(!t)return;const i=[...t];i[e]={...t[e],...n},l({labels:i})}function N(n){if(!t)return;const e=t.filter((i,m)=>m!==n);l({labels:e})}return s(T,{expanded:M,onToggle:j,header:s(p,{style:r.row,children:[o(C,{children:`Polygon, ${a.length} sides`}),o(g,{size:c.xSmall_8}),o(B,{color:h,fillStyle:k,strokeStyle:b})]}),children:[s(p,{style:[r.row,r.spaceUnder],children:[o(Z,{selectedValue:h,onChange:O}),o(g,{size:c.medium_16}),s($,{tag:"label",style:[r.row,r.truncatedWidth],children:["fill",o(g,{size:c.xxSmall_6}),o(X,{selectedValue:k,onChange:n=>l({fillStyle:n}),placeholder:"",children:Object.keys(I).map(n=>o(G,{value:n,label:n},n))})]})]}),o(oe,{selectedValue:b,onChange:n=>l({strokeStyle:n})}),o(ee,{label:"show vertices",checked:q,onChange:n=>l({showVertices:n}),style:r.spaceUnder}),s(T,{header:o(C,{children:"Points"}),expanded:!0,containerStyle:r.pointAccordionContainer,panelStyle:r.pointAccordionPanel,children:[a.map((n,e)=>{const i=String.fromCharCode(65+e);return s(p,{style:[r.row,r.spaceUnder],children:[o(C,{children:`${i}:`}),o(g,{size:c.medium_16}),o(H,{coord:n,labels:["x","y"],onChange:m=>{const L=[...a];L[e]=m,u.onChangeProps({points:L})}}),a.length>3&&o(y,{"aria-label":`Delete polygon point ${i}`,icon:le,color:"destructive",onClick:()=>{const m=[...a];m.splice(e,1),u.onChangeProps({points:m})},style:r.icon})]},`locked-polygon-point-index-${e}`)}),s(p,{style:[r.row,r.polygonActionsContainer],children:[o(F,{kind:"tertiary",startIcon:_,onClick:()=>{u.onChangeProps({points:[...a,[0,0]]})},children:"Add point"}),o(Q,{}),s(p,{style:r.movementButtonsContainer,children:[o(y,{"aria-label":"Move polygon up",style:r.iconButton,size:"small",icon:ae,onClick:()=>w("up")}),s(p,{style:r.row,children:[o(y,{"aria-label":"Move polygon left",style:r.iconButton,size:"small",icon:re,onClick:()=>w("left")}),o(y,{"aria-label":"Move polygon down",style:r.iconButton,size:"small",icon:ne,onClick:()=>w("down")}),o(y,{"aria-label":"Move polygon right",style:r.iconButton,size:"small",icon:ie,onClick:()=>w("right")})]})]})]})]}),((S=d==null?void 0:d.mafs)==null?void 0:S["locked-figures-aria"])&&s(P,{children:[o(g,{size:c.small_12}),o(p,{style:r.horizontalRule}),o(Y,{ariaLabel:U,prePopulatedAriaLabel:D(),onChangeProps:n=>{l(n)}})]}),((v=d==null?void 0:d.mafs)==null?void 0:v["locked-polygon-labels"])&&s(P,{children:[o(g,{size:c.xxxSmall_4}),o(p,{style:r.horizontalRule}),o(g,{size:c.small_12}),o($,{children:"Visible labels"}),t==null?void 0:t.map((n,e)=>o(J,{...n,expanded:!0,onChangeProps:i=>{E(i,e)},onRemove:()=>{N(e)},containerStyle:r.labelContainer})),o(F,{kind:"tertiary",startIcon:_,onClick:()=>{const n={...te("label"),coord:[a[0][0],a[0][1]-((t==null?void 0:t.length)??0)],color:h};l({labels:[...t??[],n]})},style:r.addButton,children:"Add visible label"})]}),o(K,{figureType:u.type,onMove:V,onRemove:W})]})},r=z.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},pointAccordionContainer:{backgroundColor:f.white},pointAccordionPanel:{alignItems:"start"},icon:{marginInlineStart:c.xxxSmall_4},polygonActionsContainer:{width:"100%"},iconButton:{margin:0},movementButtonsContainer:{display:"flex",flexDirection:"column",alignItems:"center",minWidth:"fit-content"},spaceUnder:{marginBottom:c.xSmall_8},truncatedWidth:{minWidth:0},addButton:{alignSelf:"start"},labelContainer:{backgroundColor:f.white},horizontalRule:{height:1,backgroundColor:f.offBlack16}}),Je=R;R.__docgenInfo={description:"",methods:[],displayName:"LockedPolygonSettings",props:{flags:{required:!1,tsType:{name:'APIOptions["flags"]',raw:'APIOptions["flags"]'},description:""},showLabelsFlag:{required:!1,tsType:{name:"boolean"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPolygonType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedPolygonType"}],raw:"Partial<LockedPolygonType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};export{Je as L};
