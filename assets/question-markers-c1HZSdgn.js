import{a as d,j as i}from"./jsx-runtime-BGVbfQ2Z.js";import{r as u}from"./index-qhcEwEpg.js";import{g as b}from"./article-renderer-QLp1d1RS.js";import"./unit-tpB2tohZ.js";import"./index-eZ2N530f.js";import"./index-V35CFGao.js";import"./fixed-to-responsive-G5J_wmel.js";import{g as f}from"./dependencies-fnqF3NiV.js";import"./video-transcript-link-EcJNVxEf.js";import"./index-default-4_ZsnO94.js";import"./perseus-api-Ly41NhN4.js";import"./multi-renderer-2BUEn8H9.js";import"./hints-renderer-nXMoH6h9.js";import"./renderer-FLo8F5rM.js";import"./base-radio-9rnRpXz9.js";import"./button-group-eBTrRsKy.js";import"./graph-apb4acmV.js";import"./svg-image-YvWarZkB.js";import"./hud-Q7Km3N9P.js";import"./icon-HbAIhp4d.js";import"./info-tip-Lk8Jr-mP.js";import"./inline-icon-MJBS_-2U.js";import"./math-input-q0JvItIR.js";import"./multi-button-group-rHU9dGVb.js";import"./number-input-OD1ToMin.js";import"./prop-check-box-wH3pF7aO.js";import"./range-input-3ju1pU_r.js";import"./text-input-uBWtJznI.js";import"./text-list-editor-bJphcq85.js";import{U as C}from"./util-jqcWD9IE.js";import"./jquery-5v7aFUvu.js";import{l as o}from"./index-awljIyHI.js";import{M as _}from"./marker-_aTLFLEp.js";const{colors:g,typography:h}=b;class re extends u.Component{constructor(){super(...arguments),this._markers=[],this.handleImageDoubleClick=r=>{r.preventDefault();const e=r.currentTarget.getBoundingClientRect(),l=Math.round((r.clientX-e.left)/e.width*1e3)/10,n=Math.round((r.clientY-e.top)/e.height*1e3)/10,{markers:t,onChange:s}=this.props;s([...t,{answers:[],label:"",x:l,y:n}])}}openDropdownForMarkerIndices(r){r.forEach(e=>{this._markers[e]&&this._markers[e].openDropdown()})}render(){const{choices:r,imageUrl:e,imageWidth:l,imageHeight:n,markers:t,onChange:s}=this.props,k=f().staticUrl;return d("div",{children:[i("div",{className:o.css(m.title),children:"Markers"}),i("div",{className:o.css(m.subtitle),children:e?d("span",{children:["Double-click on the image to add a marker.",i("br",{}),i("br",{}),"Markers are read by screen readers in the order that you add them here, so add in a logical order for the learner (e.g. sequentially, clockwise). You can test order by using keyboard tabbing."]}):"Upload an image to place markers."}),e&&d("div",{className:o.css(m.markersCanvas),style:{maxWidth:l,maxHeight:n},children:[i("img",{alt:"",className:o.css(m.image),src:k(C.getRealImageUrl(e)),onDoubleClick:this.handleImageDoubleClick}),t.map((p,a)=>u.createElement(_,{...p,choices:r,key:`${p.x}.${p.y}`,onChange:c=>s([...t.slice(0,a),c,...t.slice(a+1)]),onRemove:()=>s([...t.slice(0,a),...t.slice(a+1)]),ref:c=>this._markers[a]=c}))]})]})}}const m=o.StyleSheet.create({title:{...h.bodyXsmallBold,marginBottom:6,color:g.gray17},subtitle:{...h.labelSmall,marginBottom:12,color:g.gray68},markersCanvas:{position:"relative",border:"solid 1px rgba(33, 36, 44, 0.16)"},image:{display:"block",maxWidth:"100%"}});try{questionmarkers.displayName="questionmarkers",questionmarkers.__docgenInfo={description:"",displayName:"questionmarkers",props:{choices:{defaultValue:null,description:"",name:"choices",required:!0,type:{name:"readonly string[]"}},imageUrl:{defaultValue:null,description:"",name:"imageUrl",required:!0,type:{name:"string"}},imageWidth:{defaultValue:null,description:"",name:"imageWidth",required:!0,type:{name:"number"}},imageHeight:{defaultValue:null,description:"",name:"imageHeight",required:!0,type:{name:"number"}},markers:{defaultValue:null,description:"",name:"markers",required:!0,type:{name:"readonly MarkerType[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(markers: readonly MarkerType[]) => void"}}}}}catch{}export{re as Q};
