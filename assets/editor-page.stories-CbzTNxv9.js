import{j as l}from"./jsx-runtime-BGVbfQ2Z.js";import{a as A}from"./chunk-WFFRPTHA-zlNDxfrq.js";import{r as o}from"./index-qhcEwEpg.js";import{r as g,E as h}from"./register-all-widgets-and-editors-for-testing-acYGX3xB.js";import{f as M}from"./flags-for-api-options-tCvTSycP.js";import"./preview-errors-7FWlPnjy.js";import"./index-PPLHz8o0.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./version-akiLXZts.js";import"./article-renderer-SKG7SapZ.js";import"./compare-VLxlEkSV.js";import"./index-default-4_ZsnO94.js";import"./prop-types-fFJpPeTy.js";import"./index-fuyzzUuV.js";import"./index-J2t_5nK1.js";import"./index-awljIyHI.js";import"./index-E09jvG0x.js";import"./index-oh0ULguc.js";import"./index-4c2J3ov1.js";import"./tabbar-4UDQk7cN.js";import"./item-P3WrK4af.js";import"./index-1P5txiDe.js";import"./index-tvtfaFq4.js";import"./button-assets-j_a3DoNi.js";import"./keypad-button-YUQpjb9n.js";import"./operators-page-z1_bgPo7.js";import"./navigation-pad-WomDHo4v.js";import"./index-uu39Elyn.js";import"./key-translator-wunrbeOa.js";import"./index-uTjn352v.js";import"./_commonjs-dynamic-modules-h-SxKiO4.js";import"./enums-x5qaTru7.js";import"./renderer-iSFrzCHv.js";import"./index-awCzqCwC.js";import"./jquery-5v7aFUvu.js";import"./asset-context-pmjKTqqL.js";import"./svg-image-2-s0UD4j.js";import"./index-ntsnGU3X.js";import"./dependencies-fnqF3NiV.js";import"./perseus-error-OpXxk17X.js";import"./util-WDUWldFA.js";import"./fixed-to-responsive-G5J_wmel.js";import"./constants-I_nlPaPx.js";import"./inline-icon-MJBS_-2U.js";import"./icon-paths-fAaGW1jp.js";import"./image-loader-BrzYBUzY.js";import"./tex-SwZEYYPF.js";import"./zoomable-QW77xrsT.js";import"./zoomable-tex-LJgLrbXQ.js";import"./perseus-api-Ly41NhN4.js";import"./stub-tag-editor-CaJYfBue.js";import"./text-list-editor-bJphcq85.js";import"./lint-4QkP-VXi.js";import"./index-cRKslbtI.js";import"./index-fdRf1OJX.js";import"./index-Fg8WJp4t.js";import"./index-_15Y2y0p.js";import"./index-RrkX9P05.js";import"./Popper-2p8US95Y.js";import"./math-input-ULVcRJZN.js";import"./unit-ofwaj6cd.js";import"./input-with-examples-c24ECy26.js";import"./math-output-o5-UebzW.js";import"./text-input-aDhxqzgd.js";import"./index-to4e0yK9.js";import"./tooltip-K2JbXmT6.js";import"./simple-keypad-input-opb1sbhj.js";import"./base-radio-JUrgbypf.js";import"./media-queries-MaBBbpNq.js";import"./shared-3pf9YZIg.js";import"./choice-KfPbqG3R.js";import"./icon-HbAIhp4d.js";import"./choice-icon-UwZ4yTHY.js";import"./focus-ring-SGFL5fpl.js";import"./option-status-EA5HzHH0.js";import"./choice-none-above-uTHQsuuW.js";import"./video-transcript-link-H-EyMwVm.js";import"./answer-choices-eIDZE_lE.js";import"./button-group-eBTrRsKy.js";import"./graph-9ZKRidTm.js";import"./tiny-invariant-bHgPayXn.js";import"./bundle.esm-3RuEOGQS.js";import"./hud-Q7Km3N9P.js";import"./info-tip-Fae-O4h-.js";import"./multi-button-group-rHU9dGVb.js";import"./number-input-Pc1Bye7I.js";import"./prop-check-box-wRngoh_G.js";import"./range-input-YxWiV4Eo.js";import"./marker-O4FBqhuf.js";import"./answer-pill-vgiJKzKj.js";import"./sortable-Wi-dBbPR.js";import"./multi-renderer-HU5Uo-UM.js";import"./hints-renderer-jCIUV4Tj.js";import"./components-Wi3ArvkT.js";import"./device-framer-3K2ulqmV.js";import"./constants-hQyjCzwz.js";import"./section-control-button-Z1Cf7Sk-.js";import"./editor-Jb6M5WzA.js";import"./tex-error-view-vfu3z_P8.js";import"./viewport-resizer-OTEbXcis.js";import"./structured-item-diff-YxeX_wuG.js";import"./text-diff-SkQVHh2o.js";import"./tags-diff-PqiMe4nd.js";import"./item-extras-editor-16kB4aQY.js";import"./multi-items-wzQlJlMv.js";/* empty css                       */import"./categorizer-editor-YdAyQZ_U.js";import"./editor-jsonify-2TR5KhGb.js";import"./blur-input-0MWX_AIX.js";import"./definition-editor-TsoMDcdi.js";import"./dropdown-editor-KH4ELPxC.js";import"./explanation-editor-9-RXN3Cn.js";import"./expression-editor-TFd4VJ0y.js";import"./graph-settings-MZ-AGUEv.js";import"./image-editor-GT1Q10Kq.js";import"./input-number-editor-ZOWklnCZ.js";import"./interaction-editor-Xh5m-jNq.js";import"./label-image-editor-AE0ONI_s.js";import"./form-wrapped-text-field-VVekJaqG.js";import"./answer-choices-r_XJNtSU.js";import"./behavior-Un8S5UnE.js";import"./question-markers-1t93jlYe.js";import"./marker-ddBCoCdB.js";import"./util-RXJ3igrq.js";import"./select-image-jCYRS59D.js";import"./matcher-editor-G_UgE6tZ.js";import"./number-line-editor-2WJFxdz8.js";import"./numeric-input-editor-f016ANjv.js";import"./python-program-editor-Nnn8na9T.js";import"./editor-rNYN_cuW.js";import"./sorter-editor-K4-nUN-b.js";import"./interactive-graph-settings-KQW9GRh5.js";import"./locked-point-settings-guomOMxH.js";import"./color-select-K6Cc92YD.js";import"./color-swatch-mLHKHvgW.js";g();const Xo={title:"Perseus Editor/EditorPage"},D=A("onChange"),i=()=>{const[m,n]=o.useState("phone"),[s,a]=o.useState(!1),[c,u]=o.useState(),[d,f]=o.useState(),[v,w]=o.useState();return l(h,{apiOptions:{isMobile:!1,flags:M},previewDevice:m,onPreviewDeviceChange:t=>n(t),developerMode:!0,jsonMode:s,answerArea:c,question:d,hints:v,frameSource:"about:blank",previewURL:"about:blank",itemId:"1",onChange:t=>{D(t),"jsonMode"in t&&a(t.jsonMode),"answerArea"in t&&u(t.answerArea),"question"in t&&f(t.question),"hints"in t&&w(t.hints)}})};var r,e,p;i.parameters={...i.parameters,docs:{...(r=i.parameters)==null?void 0:r.docs,source:{originalSource:`(): React.ReactElement => {
  const [previewDevice, setPreviewDevice] = React.useState<DeviceType>("phone");
  const [jsonMode, setJsonMode] = React.useState<boolean | undefined>(false);
  const [answerArea, setAnswerArea] = React.useState<PerseusAnswerArea | undefined | null>();
  const [question, setQuestion] = React.useState<PerseusRenderer | undefined>();
  const [hints, setHints] = React.useState<ReadonlyArray<Hint> | undefined>();
  return <EditorPage apiOptions={{
    isMobile: false,
    flags
  }} previewDevice={previewDevice} onPreviewDeviceChange={newDevice => setPreviewDevice(newDevice)} developerMode={true} jsonMode={jsonMode} answerArea={answerArea} question={question} hints={hints} frameSource="about:blank" previewURL="about:blank" itemId="1" onChange={props => {
    onChangeAction(props);
    if ("jsonMode" in props) {
      setJsonMode(props.jsonMode);
    }
    if ("answerArea" in props) {
      setAnswerArea(props.answerArea);
    }
    if ("question" in props) {
      setQuestion(props.question);
    }
    if ("hints" in props) {
      setHints(props.hints);
    }
  }} />;
}`,...(p=(e=i.parameters)==null?void 0:e.docs)==null?void 0:p.source}}};const Yo=["Demo"];export{i as Demo,Yo as __namedExportsOrder,Xo as default};
