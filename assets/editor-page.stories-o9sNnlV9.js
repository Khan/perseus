import{j as l}from"./jsx-runtime-BGVbfQ2Z.js";import{a as A}from"./chunk-WFFRPTHA-zlNDxfrq.js";import{r as o}from"./index-qhcEwEpg.js";import{r as g,E as h}from"./register-all-widgets-and-editors-for-testing-ayufWeqT.js";import"./preview-errors-7FWlPnjy.js";import"./index-PPLHz8o0.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./version-akiLXZts.js";import"./article-renderer-E7DFtRQw.js";import"./compare-59FC1ybr.js";import"./prop-types-hDZ1fL08.js";import"./index-V35CFGao.js";import"./index-s2vhHSme.js";import"./index-hYQ6Pa3_.js";import"./index-J2t_5nK1.js";import"./index-awljIyHI.js";import"./index-E09jvG0x.js";import"./index-3oI5GQ1q.js";import"./index-eZ2N530f.js";import"./tabbar-TVJyj4KM.js";import"./item-Vt4CkKC9.js";import"./index-FSlvaNFm.js";import"./index-tvtfaFq4.js";import"./index-ACL0N2lY.js";import"./button-assets-K2ZoY3Yc.js";import"./keypad-button-EL6QtoOZ.js";import"./operators-page-KzJU43Xg.js";import"./navigation-pad-UuYbFhLA.js";import"./index-uu39Elyn.js";import"./key-translator-wyL18-El.js";import"./_commonjs-dynamic-modules-h-SxKiO4.js";import"./enums-x5qaTru7.js";import"./renderer-pyF2Xqh8.js";import"./index-awCzqCwC.js";import"./jquery-5v7aFUvu.js";import"./index-default-4_ZsnO94.js";import"./asset-context-pmjKTqqL.js";import"./svg-image-HY4DXPYW.js";import"./index-e6QWP3dX.js";import"./dependencies-fnqF3NiV.js";import"./perseus-error-OpXxk17X.js";import"./util-0RXiyYTM.js";import"./fixed-to-responsive-G5J_wmel.js";import"./constants-I_nlPaPx.js";import"./inline-icon-MJBS_-2U.js";import"./icon-paths-fAaGW1jp.js";import"./image-loader-BrzYBUzY.js";import"./tex-SwZEYYPF.js";import"./zoomable-QW77xrsT.js";import"./zoomable-tex-LJgLrbXQ.js";import"./perseus-api-Ly41NhN4.js";import"./stub-tag-editor-CaJYfBue.js";import"./text-list-editor-bJphcq85.js";import"./lint-4QkP-VXi.js";import"./index-BHFLb_M-.js";import"./index-Nu3-Yboj.js";import"./index-tMKG4RaL.js";import"./index-K7FSCCGN.js";import"./index-G0tWdZ0L.js";import"./index-SM3muJE2.js";import"./Popper-2p8US95Y.js";import"./math-input-dC6tjm5G.js";import"./index-2IlhG4BY.js";import"./unit-kRJG92HA.js";import"./input-with-examples-9vRCIfD_.js";import"./math-output-o5-UebzW.js";import"./text-input-RuOkEIgH.js";import"./index-lQzT3gLW.js";import"./tooltip-K2JbXmT6.js";import"./simple-keypad-input-o9N8VAO8.js";import"./base-radio-5KMQqIKA.js";import"./media-queries-MaBBbpNq.js";import"./shared-3pf9YZIg.js";import"./choice-_Jh7KU-D.js";import"./icon-HbAIhp4d.js";import"./choice-icon-VPjkQVvj.js";import"./focus-ring-4m7DGTUl.js";import"./option-status-YdbdjcBE.js";import"./choice-none-above-om3KEm8J.js";import"./video-transcript-link-HLRrsdSq.js";import"./answer-choices-ngtaRiXp.js";import"./button-group-eBTrRsKy.js";import"./graph-ZVYcs1bM.js";import"./tiny-invariant-bHgPayXn.js";import"./bundle.esm-3RuEOGQS.js";import"./hud-Q7Km3N9P.js";import"./info-tip-wjwyUctM.js";import"./multi-button-group-rHU9dGVb.js";import"./number-input-lwrURXqC.js";import"./prop-check-box-Wzzgb5Z4.js";import"./range-input-ar8q3yJk.js";import"./marker-NMZmSBvB.js";import"./answer-pill-a1KpbYSt.js";import"./sortable-bkmCyC6f.js";import"./multi-renderer-9HFIo8Un.js";import"./hints-renderer-1mYJn9r9.js";import"./components-eRkN4_Up.js";import"./device-framer-hmTv7gZu.js";import"./constants-hQyjCzwz.js";import"./section-control-button-Z4_D-fX9.js";import"./index-a3cmqwki.js";import"./editor-Y5DtPN3_.js";import"./tex-error-view-exbHH5s5.js";import"./viewport-resizer-E4Z_sqrV.js";import"./structured-item-diff-rJMpqAgf.js";import"./text-diff-luaZiC3Z.js";import"./tags-diff-f6GxBxNc.js";import"./item-extras-editor-6s8wRSYf.js";import"./perseus-types-FVzQqVLf.js";import"./multi-items-hw_b8rVv.js";/* empty css                       */import"./categorizer-editor-rPniX-j3.js";import"./editor-jsonify-mCLVf2cH.js";import"./blur-input-0MWX_AIX.js";import"./definition-editor-8OTu5I4m.js";import"./dropdown-editor-2RNYAAFY.js";import"./explanation-editor-koeU2O3g.js";import"./expression-editor-InDFb-6B.js";import"./graph-settings-_MEIMkq9.js";import"./image-editor-6n6Z5pJ5.js";import"./input-number-editor-qO4kFXdS.js";import"./interaction-editor-4BrvxMpM.js";import"./interactive-graph-editor-0tKdl1TM.js";import"./index-UhH8Obic.js";import"./locked-point-settings-RAMyUFPY.js";import"./color-circle-T7KCycz_.js";import"./color-select-KaoSHZ2D.js";import"./util-QZ-4fnoK.js";import"./interactive-graph-settings-0f4rJKUU.js";import"./label-image-editor-SHjjKnyh.js";import"./form-wrapped-text-field-kWdFAbLw.js";import"./answer-choices-q4EOPgq7.js";import"./behavior-8QH_FJnY.js";import"./question-markers-vaTgXF8e.js";import"./marker-mXPN5aev.js";import"./select-image-_6CtQmgh.js";import"./matcher-editor-YjCfSnyX.js";import"./number-line-editor-w38uw3gE.js";import"./numeric-input-editor-x5DD30Hj.js";import"./python-program-editor-C-AacrD1.js";import"./editor-FRIGnG3_.js";import"./sorter-editor-iaIAa11j.js";g();const ii={title:"Perseus Editor/EditorPage"},M=A("onChange"),i=()=>{const[m,n]=o.useState("phone"),[s,a]=o.useState(!1),[c,u]=o.useState(),[d,f]=o.useState(),[v,w]=o.useState();return l(h,{apiOptions:{isMobile:!1,flags:{mafs:{segment:!0}}},previewDevice:m,onPreviewDeviceChange:t=>n(t),developerMode:!0,jsonMode:s,answerArea:c,question:d,hints:v,frameSource:"about:blank",previewURL:"about:blank",itemId:"1",onChange:t=>{M(t),"jsonMode"in t&&a(t.jsonMode),"answerArea"in t&&u(t.answerArea),"question"in t&&f(t.question),"hints"in t&&w(t.hints)}})};var r,e,p;i.parameters={...i.parameters,docs:{...(r=i.parameters)==null?void 0:r.docs,source:{originalSource:`(): React.ReactElement => {
  const [previewDevice, setPreviewDevice] = React.useState<DeviceType>("phone");
  const [jsonMode, setJsonMode] = React.useState<boolean | undefined>(false);
  const [answerArea, setAnswerArea] = React.useState<PerseusAnswerArea | undefined | null>();
  const [question, setQuestion] = React.useState<PerseusRenderer | undefined>();
  const [hints, setHints] = React.useState<ReadonlyArray<Hint> | undefined>();
  return <EditorPage apiOptions={{
    isMobile: false,
    flags: {
      mafs: {
        segment: true
      }
    }
  }} previewDevice={previewDevice} onPreviewDeviceChange={newDevice => setPreviewDevice(newDevice)} developerMode={true} jsonMode={jsonMode} answerArea={answerArea} question={question} hints={hints} frameSource="about:blank" previewURL="about:blank" itemId="1" onChange={props => {
    onChangeAction(props);
    if ("jsonMode" in props) {
      setJsonMode(props.jsonMode);
    }
    if ("answerArea" in props) {
      setAnswerArea(props.answerArea);
    }
    if ("question" in props) {
      setQuestion(props.question);
    }
    if ("hints" in props) {
      setHints(props.hints);
    }
  }} />;
}`,...(p=(e=i.parameters)==null?void 0:e.docs)==null?void 0:p.source}}};const ri=["Demo"];export{i as Demo,ri as __namedExportsOrder,ii as default};
