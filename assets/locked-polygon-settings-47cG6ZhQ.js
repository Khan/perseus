import{j as e,a}from"./jsx-runtime-FVsy8kgq.js";import{l as b,h as L}from"./article-renderer-w8M6exBY.js";import"./jquery-yG1GhClm.js";import"./util-XcxTwqb0.js";import"./phet-simulation-I2_BZVd2.js";import"./version-akiLXZts.js";import"./dependencies-8XILypbq.js";import"./perseus-api-mOiZT07d.js";import"./multi-renderer-sbZAm5do.js";import"./hints-renderer-mpZFLD0j.js";import"./renderer-fBhbjXi2.js";import"./base-radio-uDZF1tup.js";import"./button-group-nsoLlHtM.js";import"./graph-sgfCFYpv.js";import"./svg-image-Rjw-_QTV.js";import"./hud-FI3E3dT_.js";import"./icon-YuYiVxsK.js";import"./index-K9BSJPWl.js";import"./inline-icon-tKY1iMkH.js";import"./math-input-b6JdL4xR.js";import"./multi-button-group-a0iIfrwx.js";import"./number-input-dpusjjfa.js";import"./range-input-R0Q6JH86.js";import"./text-input-15gEhfDF.js";import"./text-list-editor-pe7AGDAl.js";import"./index-0C4KXdeC.js";import"./i18n-context-hxuRe8oU.js";import"./index-IIMKO4_x.js";import{B}from"./choice-E4eyMygy.js";import{V as s}from"./index-6h5t6F0w.js";import{S as U,O as M}from"./answer-choices-wrlf2Xlx.js";import{P as v,C as R,I as m,L as z}from"./locked-figure-settings-actions-n1OcBVYK.js";import{S as y,a as V}from"./index-qUyqkRvh.js";import{c as w,s as c}from"./index-deFLJwr4.js";import{L as f,a as j}from"./index-h_CiYGGb.js";import{p as W}from"./plus-circle-JCxQSzSv.js";import{l as x}from"./index-awljIyHI.js";import{C as O}from"./color-select-PkzJqyYn.js";import{L as D}from"./labeled-switch-_FZFf9Pi.js";import{L as E}from"./line-stroke-select-yR8u8-Hg.js";const N=""+new URL("arrow-fat-down-X5ut-FGw.svg",import.meta.url).href,X=""+new URL("arrow-fat-left-LxuHjYfJ.svg",import.meta.url).href,G=""+new URL("arrow-fat-right-CxkbbISx.svg",import.meta.url).href,H=""+new URL("arrow-fat-up-ah2eaaIR.svg",import.meta.url).href,J=""+new URL("minus-circle-9EKbQa8X.svg",import.meta.url).href,T=p=>{const{color:n,fillStyle:d,strokeStyle:u}=p;return e(s,{"aria-label":`${n}, stroke ${u}, fill ${d}`,style:[P.container,{border:`4px ${u} ${b[n]}`}],children:e(s,{style:[P.innerSquare,{backgroundColor:b[n],opacity:d==="white"?0:L[d]}]})})},P=x.StyleSheet.create({container:{outline:`2px solid ${w.offWhite}`,width:c.large_24,height:c.large_24,backgroundColor:w.white,alignItems:"center",justifyContent:"center"},innerSquare:{width:20,height:20}});T.__docgenInfo={description:"",methods:[],displayName:"PolygonSwatch",props:{color:{required:!0,tsType:{name:"LockedFigureColor"},description:""},fillStyle:{required:!0,tsType:{name:"LockedFigureFillType"},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const I=p=>{const{points:n,color:d,showVertices:u,fillStyle:C,strokeStyle:S,expanded:F,onToggle:q,onChangeProps:l,onMove:_,onRemove:$}=p;function A(t){l({color:t})}function g(t){switch(t){case"up":l({points:n.map(([r,i])=>[r,i+1])});break;case"down":l({points:n.map(([r,i])=>[r,i-1])});break;case"left":l({points:n.map(([r,i])=>[r-1,i])});break;case"right":l({points:n.map(([r,i])=>[r+1,i])});break}}return a(v,{expanded:F,onToggle:q,header:a(s,{style:o.row,children:[e(f,{children:`Polygon, ${n.length} sides`}),e(y,{size:c.xSmall_8}),e(T,{color:d,fillStyle:C,strokeStyle:S})]}),children:[a(s,{style:[o.row,o.spaceUnder],children:[e(O,{selectedValue:d,onChange:A}),e(y,{size:c.medium_16}),a(j,{tag:"label",style:[o.row,o.truncatedWidth],children:["fill",e(y,{size:c.xxSmall_6}),e(U,{selectedValue:C,onChange:t=>l({fillStyle:t}),placeholder:"",children:Object.keys(L).map(t=>e(M,{value:t,label:t},t))})]})]}),e(E,{selectedValue:S,onChange:t=>l({strokeStyle:t})}),e(D,{label:"show vertices",checked:u,onChange:t=>l({showVertices:t}),style:o.spaceUnder}),a(v,{header:e(f,{children:"Points"}),expanded:!0,containerStyle:o.pointAccordionContainer,panelStyle:o.pointAccordionPanel,children:[n.map((t,r)=>{const i=String.fromCharCode(65+r);return a(s,{style:[o.row,o.spaceUnder],children:[e(f,{children:`${i}:`}),e(y,{size:c.medium_16}),e(R,{coord:t,labels:["x","y"],onChange:h=>{const k=[...n];k[r]=h,p.onChangeProps({points:k})}}),n.length>3&&e(m,{"aria-label":`Delete polygon point ${i}`,icon:J,color:"destructive",onClick:()=>{const h=[...n];h.splice(r,1),p.onChangeProps({points:h})},style:o.icon})]},`locked-polygon-point-index-${r}`)}),a(s,{style:[o.row,o.polygonActionsContainer],children:[e(B,{kind:"tertiary",startIcon:W,onClick:()=>{p.onChangeProps({points:[...n,[0,0]]})},children:"Add point"}),e(V,{}),a(s,{style:o.movementButtonsContainer,children:[e(m,{"aria-label":"Move polygon up",style:o.iconButton,size:"small",icon:H,onClick:()=>g("up")}),a(s,{style:o.row,children:[e(m,{"aria-label":"Move polygon left",style:o.iconButton,size:"small",icon:X,onClick:()=>g("left")}),e(m,{"aria-label":"Move polygon down",style:o.iconButton,size:"small",icon:N,onClick:()=>g("down")}),e(m,{"aria-label":"Move polygon right",style:o.iconButton,size:"small",icon:G,onClick:()=>g("right")})]})]})]})]}),e(z,{figureType:p.type,onMove:_,onRemove:$})]})},o=x.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},pointAccordionContainer:{backgroundColor:w.white},pointAccordionPanel:{alignItems:"start"},icon:{marginInlineStart:c.xxxSmall_4},polygonActionsContainer:{width:"100%"},iconButton:{margin:0},movementButtonsContainer:{display:"flex",flexDirection:"column",alignItems:"center",minWidth:"fit-content"},spaceUnder:{marginBottom:c.xSmall_8},truncatedWidth:{minWidth:0}}),Me=I;I.__docgenInfo={description:"",methods:[],displayName:"LockedPolygonSettings",props:{flags:{required:!1,tsType:{name:'APIOptions["flags"]',raw:'APIOptions["flags"]'},description:""},showLabelsFlag:{required:!1,tsType:{name:"boolean"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPolygonType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedPolygonType"}],raw:"Partial<LockedPolygonType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};export{Me as L};
