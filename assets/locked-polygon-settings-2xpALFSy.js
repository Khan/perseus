import{j as e}from"./jsx-runtime-63Ea5SlK.js";import{r as W}from"./index-6oxdNXpR.js";import{l as j,a as F}from"./article-renderer-5ZziiuCj.js";import"./jquery-yG1GhClm.js";import"./util-_iDv4tVD.js";import"./phet-simulation-hVRVRfpl.js";import"./version-akiLXZts.js";import"./dependencies-CP7Uh8Kq.js";import"./perseus-api-ooj0_ZRv.js";import"./perseus-item-bgxUSif3.js";import"./hints-renderer-t65SiAoW.js";import"./renderer-yJbRLelh.js";import"./base-radio-l38H2mZe.js";import"./button-group-G5CZaedn.js";import"./graph-JHUHcoXy.js";import"./svg-image-wIdVOlIq.js";import"./hud-ifw9Ofbw.js";import"./icon-7RFbyLiL.js";import"./index-1hft2BpG.js";import"./inline-icon-6fh0Wu1y.js";import"./math-input-NBo1H9JC.js";import"./multi-button-group-QUVHbBcE.js";import"./number-input-T6lG2NEQ.js";import"./range-input-Gg2JKhNA.js";import"./text-input-uyhLZIJm.js";import"./text-list-editor-K49FGdd7.js";import"./i18n-context-ei4f54eq.js";import"./index-smZ6iCr_.js";import{B as L}from"./index-69t9pbsh.js";import{V as u}from"./index-CgfdZoMj.js";import{S as O,O as X}from"./answer-choices-kM2ERr5M.js";import{I as g}from"./index-fsOXV5-c.js";import{S as y,a as G}from"./index-C1N8lBvx.js";import{c as h,s}from"./index-dmcq622U.js";import{L as b,c as S}from"./index-6ID5EQ9c.js";import{p as q,L as H}from"./locked-figure-aria-wBdNFAE1.js";import{l as A}from"./index-awljIyHI.js";import{P,C as J,L as K,a as Q}from"./locked-label-settings-Su8DUDOV.js";import{C as Y}from"./color-select-16T4PdVf.js";import{L as Z}from"./labeled-switch-4ntr-TA1.js";import{L as ee}from"./line-stroke-select-jrXzgEfO.js";import{g as re,j as ne,a as oe}from"./util-6ngMjnF4.js";const te=""+new URL("arrow-fat-down-X5ut-FGw.svg",import.meta.url).href,ae=""+new URL("arrow-fat-left-LxuHjYfJ.svg",import.meta.url).href,le=""+new URL("arrow-fat-right-CxkbbISx.svg",import.meta.url).href,ie=""+new URL("arrow-fat-up-ah2eaaIR.svg",import.meta.url).href,se=""+new URL("minus-circle-9EKbQa8X.svg",import.meta.url).href,R=c=>{const{color:m,fillStyle:l,strokeStyle:p}=c;return e.jsx(u,{"aria-label":`${m}, stroke ${p}, fill ${l}`,style:[T.container,{border:`4px ${p} ${j[m]}`}],children:e.jsx(u,{style:[T.innerSquare,{backgroundColor:j[m],opacity:l==="white"?0:F[l]}]})})},T=A.StyleSheet.create({container:{outline:`2px solid ${h.offWhite}`,width:s.large_24,height:s.large_24,backgroundColor:h.white,alignItems:"center",justifyContent:"center"},innerSquare:{width:20,height:20}});R.__docgenInfo={description:"",methods:[],displayName:"PolygonSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const z=c=>{var x,C;const{flags:m,points:l,color:p,showVertices:_,fillStyle:f,strokeStyle:v,labels:n,ariaLabel:$,expanded:B,onToggle:I,onChangeProps:i,onMove:M,onRemove:U}=c;async function V(){let r=`Polygon${await ne(n)} with ${l.length} sides, vertices at `;r+=l.map(([d,k])=>`${d} comma ${k}`).join(", ");const a=oe(p,v,f);return r+=a,r}function N(o){const r={color:o};r.labels=n==null?void 0:n.map(a=>({...a,color:o})),i(r)}function w(o){switch(o){case"up":i({points:l.map(([r,a])=>[r,a+1]),labels:n==null?void 0:n.map(r=>({...r,coord:[r.coord[0],r.coord[1]+1]}))});break;case"down":i({points:l.map(([r,a])=>[r,a-1]),labels:n==null?void 0:n.map(r=>({...r,coord:[r.coord[0],r.coord[1]-1]}))});break;case"left":i({points:l.map(([r,a])=>[r-1,a]),labels:n==null?void 0:n.map(r=>({...r,coord:[r.coord[0]-1,r.coord[1]]}))});break;case"right":i({points:l.map(([r,a])=>[r+1,a]),labels:n==null?void 0:n.map(r=>({...r,coord:[r.coord[0]+1,r.coord[1]]}))});break}}function D(o,r){if(!n)return;const a=[...n];a[r]={...n[r],...o},i({labels:a})}function E(o){if(!n)return;const r=n.filter((a,d)=>d!==o);i({labels:r})}return e.jsxs(P,{expanded:B,onToggle:I,header:e.jsxs(u,{style:t.row,children:[e.jsx(b,{children:`Polygon, ${l.length} sides`}),e.jsx(y,{size:s.xSmall_8}),e.jsx(R,{color:p,fillStyle:f,strokeStyle:v})]}),children:[e.jsxs(u,{style:[t.row,t.spaceUnder],children:[e.jsx(Y,{selectedValue:p,onChange:N}),e.jsx(y,{size:s.medium_16}),e.jsxs(S,{tag:"label",style:[t.row,t.truncatedWidth],children:["fill",e.jsx(y,{size:s.xxSmall_6}),e.jsx(O,{selectedValue:f,onChange:o=>i({fillStyle:o}),placeholder:"",children:Object.keys(F).map(o=>e.jsx(X,{value:o,label:o},o))})]})]}),e.jsx(ee,{selectedValue:v,onChange:o=>i({strokeStyle:o})}),e.jsx(Z,{label:"show vertices",checked:_,onChange:o=>i({showVertices:o}),style:t.spaceUnder}),e.jsxs(P,{header:e.jsx(b,{children:"Points"}),expanded:!0,containerStyle:t.pointAccordionContainer,panelStyle:t.pointAccordionPanel,children:[l.map((o,r)=>{const a=String.fromCharCode(65+r);return e.jsxs(u,{style:[t.row,t.spaceUnder],children:[e.jsx(b,{children:`${a}:`}),e.jsx(y,{size:s.medium_16}),e.jsx(J,{coord:o,labels:["x","y"],onChange:d=>{const k=[...l];k[r]=d,c.onChangeProps({points:k})}}),l.length>3&&e.jsx(g,{"aria-label":`Delete polygon point ${a}`,icon:se,color:"destructive",onClick:()=>{const d=[...l];d.splice(r,1),c.onChangeProps({points:d})},style:t.icon})]},`locked-polygon-point-index-${r}`)}),e.jsxs(u,{style:[t.row,t.polygonActionsContainer],children:[e.jsx(L,{kind:"tertiary",startIcon:q,onClick:()=>{c.onChangeProps({points:[...l,[0,0]]})},children:"Add point"}),e.jsx(G,{}),e.jsxs(u,{style:t.movementButtonsContainer,children:[e.jsx(g,{"aria-label":"Move polygon up",style:t.iconButton,size:"small",icon:ie,onClick:()=>w("up")}),e.jsxs(u,{style:t.row,children:[e.jsx(g,{"aria-label":"Move polygon left",style:t.iconButton,size:"small",icon:ae,onClick:()=>w("left")}),e.jsx(g,{"aria-label":"Move polygon down",style:t.iconButton,size:"small",icon:te,onClick:()=>w("down")}),e.jsx(g,{"aria-label":"Move polygon right",style:t.iconButton,size:"small",icon:le,onClick:()=>w("right")})]})]})]})]}),((x=m==null?void 0:m.mafs)==null?void 0:x["locked-figures-aria"])&&e.jsxs(e.Fragment,{children:[e.jsx(y,{size:s.small_12}),e.jsx(u,{style:t.horizontalRule}),e.jsx(H,{ariaLabel:$,getPrepopulatedAriaLabel:V,onChangeProps:o=>{i(o)}})]}),((C=m==null?void 0:m.mafs)==null?void 0:C["locked-polygon-labels"])&&e.jsxs(e.Fragment,{children:[e.jsx(y,{size:s.xxxSmall_4}),e.jsx(u,{style:t.horizontalRule}),e.jsx(y,{size:s.small_12}),e.jsx(S,{children:"Visible labels"}),n==null?void 0:n.map((o,r)=>W.createElement(K,{...o,key:r,expanded:!0,onChangeProps:a=>{D(a,r)},onRemove:()=>{E(r)},containerStyle:t.labelContainer})),e.jsx(L,{kind:"tertiary",startIcon:q,onClick:()=>{const o={...re("label"),coord:[l[0][0],l[0][1]-((n==null?void 0:n.length)??0)],color:p};i({labels:[...n??[],o]})},style:t.addButton,children:"Add visible label"})]}),e.jsx(Q,{figureType:c.type,onMove:M,onRemove:U})]})},t=A.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},pointAccordionContainer:{backgroundColor:h.white},pointAccordionPanel:{alignItems:"start"},icon:{marginInlineStart:s.xxxSmall_4},polygonActionsContainer:{width:"100%"},iconButton:{margin:0},movementButtonsContainer:{display:"flex",flexDirection:"column",alignItems:"center",minWidth:"fit-content"},spaceUnder:{marginBottom:s.xSmall_8},truncatedWidth:{minWidth:0},addButton:{alignSelf:"start"},labelContainer:{backgroundColor:h.white},horizontalRule:{height:1,backgroundColor:h.offBlack16}}),Qe=z;z.__docgenInfo={description:"",methods:[],displayName:"LockedPolygonSettings",props:{flags:{required:!1,tsType:{name:'Readonly["flags"]',raw:'APIOptions["flags"]'},description:""},showLabelsFlag:{required:!1,tsType:{name:"boolean"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},type:{required:!0,tsType:{name:"literal",value:'"polygon"'},description:""},points:{required:!0,tsType:{name:"ReadonlyArray",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],raw:"ReadonlyArray<Coord>"},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},showVertices:{required:!0,tsType:{name:"boolean"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},labels:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPolygonType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: ReadonlyArray<Coord>;
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    labels?: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"ReadonlyArray",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"ReadonlyArray<Coord>",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!1}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedPolygonType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};export{Qe as L};
