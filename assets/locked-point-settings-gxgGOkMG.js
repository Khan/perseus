import{j as e}from"./jsx-runtime-63Ea5SlK.js";import{r as R}from"./index-6oxdNXpR.js";import{B}from"./index-sN6aPTh8.js";import{V as f}from"./index-Cj1jPHW9.js";import{S as c}from"./index-GucNpBmh.js";import{s as l,c as b}from"./index-dmcq622U.js";import{L as D,a as M}from"./index-SAZ92ybN.js";import{L as E,p as N}from"./locked-figure-aria-kxt1oVlf.js";import{l as V}from"./index-awljIyHI.js";import{C as O,L as U,a as X}from"./locked-label-settings-AN81cX4F.js";import{P as W}from"./trash-bold-O8DSIoTm.js";import{C as I}from"./color-select-fOSI2m11.js";import{C as Y,g as G,j as H,a as x,b as J}from"./util-iKAs7VYM.js";import{L}from"./labeled-switch-m1v-jyi6.js";const C=h=>{const{headerLabel:P,coord:i,color:p,filled:k=!0,labels:r,ariaLabel:q,onChangeProps:s,onMove:w,onRemove:g,showPoint:y,error:T,expanded:j,onTogglePoint:v,onToggle:S}=h,d=!w&&!g;async function F(){const n=await H(r),a=await x(`$${i[0]}$`),o=await x(`$${i[1]}$`);let u=`Point${n} at ${a} comma ${o}`;const m=J(p);return u+=m,u}function $(n){const a={color:n};r&&(a.labels=r.map(o=>({...o,color:n}))),s(a)}function _(n){const a=n[0]-i[0],o=n[1]-i[1],u={coord:n};r&&(u.labels=r.map(m=>({...m,coord:[m.coord[0]+a,m.coord[1]+o]}))),s(u)}function z(n,a){if(!r)return;const o=[...r];o[a]={...r[a],...n},s({labels:o})}function A(n){if(!r)return;const a=r.filter((o,u)=>u!==n);s({labels:a})}return e.jsxs(W,{expanded:j,onToggle:S,containerStyle:d?t.definingContainer:void 0,panelStyle:d?t.definingPanel:void 0,header:e.jsxs(f,{style:t.row,children:[e.jsx(D,{children:`${P||"Point"} (${i[0]}, ${i[1]})`}),e.jsx(c,{size:l.xSmall_8}),e.jsx(Y,{color:p,filled:k})]}),children:[e.jsx(O,{coord:i,style:t.spaceUnder,onChange:_,error:!!T}),v&&e.jsx(L,{label:"show point on graph",checked:!!y,style:y&&t.spaceUnder,onChange:v}),(!d||y)&&e.jsxs(e.Fragment,{children:[e.jsx(I,{selectedValue:p,onChange:$,style:t.spaceUnder}),e.jsx(L,{label:"open point",checked:!k,onChange:n=>{s({filled:!n})}})]}),!d&&e.jsxs(e.Fragment,{children:[e.jsx(c,{size:l.small_12}),e.jsx(f,{style:t.horizontalRule}),e.jsx(E,{ariaLabel:q,getPrepopulatedAriaLabel:F,onChangeProps:n=>{s(n)}})]}),e.jsx(c,{size:l.xxxSmall_4}),e.jsx(f,{style:t.horizontalRule}),e.jsx(c,{size:l.small_12}),e.jsx(M,{children:"Visible labels"}),r==null?void 0:r.map((n,a)=>R.createElement(U,{...n,key:a,containerStyle:!d&&t.lockedPointLabelContainer,expanded:!0,onChangeProps:o=>{z(o,a)},onRemove:()=>{A(a)}})),e.jsx(B,{kind:"tertiary",startIcon:N,onClick:()=>{const n={...G("label"),coord:[i[0]+.5,i[1]-1*((r==null?void 0:r.length)??0)],color:p};s({labels:[...r??[],n]})},style:t.addButton,children:"Add visible label"}),g&&e.jsx(X,{figureType:h.type,onMove:w,onRemove:g})]})},t=V.StyleSheet.create({definingContainer:{marginTop:l.xSmall_8,marginBottom:0,marginLeft:-l.xxxSmall_4,marginRight:-l.xxxSmall_4,backgroundColor:b.white},definingPanel:{paddingBottom:l.xxSmall_6},lockedPointLabelContainer:{backgroundColor:b.white},row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:l.xSmall_8},addButton:{alignSelf:"start"},horizontalRule:{height:1,backgroundColor:b.offBlack16}}),me=C;C.__docgenInfo={description:"",methods:[],displayName:"LockedPointSettings",props:{type:{required:!0,tsType:{name:"literal",value:'"point"'},description:""},coord:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},filled:{required:!0,tsType:{name:"boolean"},description:""},labels:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},headerLabel:{required:!1,tsType:{name:"string"},description:`Optional label for the point to display in the header summary.
Defaults to "Point".`},showPoint:{required:!1,tsType:{name:"boolean"},description:"Whether the extra point settings are toggled open."},error:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"Optional error message to display."},onTogglePoint:{required:!1,tsType:{name:"signature",type:"function",raw:"(newValue) => void",signature:{arguments:[{name:"newValue"}],return:{name:"void"}}},description:"Called when the extra settings toggle switch is changed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPointType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels?: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!1}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedPointType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onMove:{required:!1,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when the point is moved."},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the point is removed."}}};export{me as L};
