import{j as r}from"./jsx-runtime-63Ea5SlK.js";import{r as E}from"./index-6oxdNXpR.js";import{l as C,a as T}from"./article-renderer-bbvShesd.js";import"./jquery-yG1GhClm.js";import"./util-_iDv4tVD.js";import"./phet-simulation-hVRVRfpl.js";import"./version-akiLXZts.js";import"./dependencies-CP7Uh8Kq.js";import"./perseus-api-ooj0_ZRv.js";import"./perseus-item-uk5vbYMl.js";import"./hints-renderer-37ywniBH.js";import"./renderer-mIpEghh5.js";import"./base-radio-78qPsQVc.js";import"./button-group-G5CZaedn.js";import"./graph-JHUHcoXy.js";import"./svg-image-wIdVOlIq.js";import"./hud-ifw9Ofbw.js";import"./icon-7RFbyLiL.js";import"./index-1hft2BpG.js";import"./inline-icon-6fh0Wu1y.js";import"./math-input-NBo1H9JC.js";import"./multi-button-group-QUVHbBcE.js";import"./number-input-T6lG2NEQ.js";import"./range-input-Gg2JKhNA.js";import"./text-input-uyhLZIJm.js";import"./text-list-editor-K49FGdd7.js";import"./i18n-context-ei4f54eq.js";import"./index-smZ6iCr_.js";import{B as j}from"./index-69t9pbsh.js";import{V as m}from"./index-CgfdZoMj.js";import{S as W,O}from"./answer-choices-0E6R-XMj.js";import{I as g}from"./index-fsOXV5-c.js";import{S as y,a as X}from"./index-C1N8lBvx.js";import{c as h,s}from"./index-dmcq622U.js";import{L as b,c as L}from"./index-6ID5EQ9c.js";import{p as S,L as G}from"./locked-figure-aria-t0nH29fN.js";import{l as F}from"./index-awljIyHI.js";import{P as q,C as H,L as J,a as K}from"./locked-label-settings-JSMIZtWP.js";import{C as Q}from"./color-select-8MUbPEyp.js";import{L as Y}from"./labeled-switch-tKCBYqNw.js";import{L as Z}from"./line-stroke-select-K8tsOvC1.js";import{g as ee,j as re,a as ne}from"./util-uNwD09sQ.js";const oe=""+new URL("arrow-fat-down-X5ut-FGw.svg",import.meta.url).href,te=""+new URL("arrow-fat-left-LxuHjYfJ.svg",import.meta.url).href,ae=""+new URL("arrow-fat-right-CxkbbISx.svg",import.meta.url).href,le=""+new URL("arrow-fat-up-ah2eaaIR.svg",import.meta.url).href,ie=""+new URL("minus-circle-9EKbQa8X.svg",import.meta.url).href,A=d=>{const{color:c,fillStyle:l,strokeStyle:p}=d;return r.jsx(m,{"aria-label":`${c}, stroke ${p}, fill ${l}`,style:[P.container,{border:`4px ${p} ${C[c]}`}],children:r.jsx(m,{style:[P.innerSquare,{backgroundColor:C[c],opacity:l==="white"?0:T[l]}]})})},P=F.StyleSheet.create({container:{outline:`2px solid ${h.offWhite}`,width:s.large_24,height:s.large_24,backgroundColor:h.white,alignItems:"center",justifyContent:"center"},innerSquare:{width:20,height:20}});A.__docgenInfo={description:"",methods:[],displayName:"PolygonSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const R=d=>{var x;const{flags:c,points:l,color:p,showVertices:z,fillStyle:f,strokeStyle:v,labels:n,ariaLabel:_,expanded:$,onToggle:B,onChangeProps:i,onMove:I,onRemove:M}=d;async function U(){let e=`Polygon${await re(n)} with ${l.length} sides, vertices at `;e+=l.map(([u,k])=>`${u} comma ${k}`).join(", ");const a=ne(p,v,f);return e+=a,e}function V(o){const e={color:o};e.labels=n==null?void 0:n.map(a=>({...a,color:o})),i(e)}function w(o){switch(o){case"up":i({points:l.map(([e,a])=>[e,a+1]),labels:n==null?void 0:n.map(e=>({...e,coord:[e.coord[0],e.coord[1]+1]}))});break;case"down":i({points:l.map(([e,a])=>[e,a-1]),labels:n==null?void 0:n.map(e=>({...e,coord:[e.coord[0],e.coord[1]-1]}))});break;case"left":i({points:l.map(([e,a])=>[e-1,a]),labels:n==null?void 0:n.map(e=>({...e,coord:[e.coord[0]-1,e.coord[1]]}))});break;case"right":i({points:l.map(([e,a])=>[e+1,a]),labels:n==null?void 0:n.map(e=>({...e,coord:[e.coord[0]+1,e.coord[1]]}))});break}}function N(o,e){if(!n)return;const a=[...n];a[e]={...n[e],...o},i({labels:a})}function D(o){if(!n)return;const e=n.filter((a,u)=>u!==o);i({labels:e})}return r.jsxs(q,{expanded:$,onToggle:B,header:r.jsxs(m,{style:t.row,children:[r.jsx(b,{children:`Polygon, ${l.length} sides`}),r.jsx(y,{size:s.xSmall_8}),r.jsx(A,{color:p,fillStyle:f,strokeStyle:v})]}),children:[r.jsxs(m,{style:[t.row,t.spaceUnder],children:[r.jsx(Q,{selectedValue:p,onChange:V}),r.jsx(y,{size:s.medium_16}),r.jsxs(L,{tag:"label",style:[t.row,t.truncatedWidth],children:["fill",r.jsx(y,{size:s.xxSmall_6}),r.jsx(W,{selectedValue:f,onChange:o=>i({fillStyle:o}),placeholder:"",children:Object.keys(T).map(o=>r.jsx(O,{value:o,label:o},o))})]})]}),r.jsx(Z,{selectedValue:v,onChange:o=>i({strokeStyle:o})}),r.jsx(Y,{label:"show vertices",checked:z,onChange:o=>i({showVertices:o}),style:t.spaceUnder}),r.jsxs(q,{header:r.jsx(b,{children:"Points"}),expanded:!0,containerStyle:t.pointAccordionContainer,panelStyle:t.pointAccordionPanel,children:[l.map((o,e)=>{const a=String.fromCharCode(65+e);return r.jsxs(m,{style:[t.row,t.spaceUnder],children:[r.jsx(b,{children:`${a}:`}),r.jsx(y,{size:s.medium_16}),r.jsx(H,{coord:o,labels:["x","y"],onChange:u=>{const k=[...l];k[e]=u,d.onChangeProps({points:k})}}),l.length>3&&r.jsx(g,{"aria-label":`Delete polygon point ${a}`,icon:ie,color:"destructive",onClick:()=>{const u=[...l];u.splice(e,1),d.onChangeProps({points:u})},style:t.icon})]},`locked-polygon-point-index-${e}`)}),r.jsxs(m,{style:[t.row,t.polygonActionsContainer],children:[r.jsx(j,{kind:"tertiary",startIcon:S,onClick:()=>{d.onChangeProps({points:[...l,[0,0]]})},children:"Add point"}),r.jsx(X,{}),r.jsxs(m,{style:t.movementButtonsContainer,children:[r.jsx(g,{"aria-label":"Move polygon up",style:t.iconButton,size:"small",icon:le,onClick:()=>w("up")}),r.jsxs(m,{style:t.row,children:[r.jsx(g,{"aria-label":"Move polygon left",style:t.iconButton,size:"small",icon:te,onClick:()=>w("left")}),r.jsx(g,{"aria-label":"Move polygon down",style:t.iconButton,size:"small",icon:oe,onClick:()=>w("down")}),r.jsx(g,{"aria-label":"Move polygon right",style:t.iconButton,size:"small",icon:ae,onClick:()=>w("right")})]})]})]})]}),r.jsx(y,{size:s.small_12}),r.jsx(m,{style:t.horizontalRule}),r.jsx(G,{ariaLabel:_,getPrepopulatedAriaLabel:U,onChangeProps:o=>{i(o)}}),((x=c==null?void 0:c.mafs)==null?void 0:x["locked-polygon-labels"])&&r.jsxs(r.Fragment,{children:[r.jsx(y,{size:s.xxxSmall_4}),r.jsx(m,{style:t.horizontalRule}),r.jsx(y,{size:s.small_12}),r.jsx(L,{children:"Visible labels"}),n==null?void 0:n.map((o,e)=>E.createElement(J,{...o,key:e,expanded:!0,onChangeProps:a=>{N(a,e)},onRemove:()=>{D(e)},containerStyle:t.labelContainer})),r.jsx(j,{kind:"tertiary",startIcon:S,onClick:()=>{const o={...ee("label"),coord:[l[0][0],l[0][1]-((n==null?void 0:n.length)??0)],color:p};i({labels:[...n??[],o]})},style:t.addButton,children:"Add visible label"})]}),r.jsx(K,{figureType:d.type,onMove:I,onRemove:M})]})},t=F.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},pointAccordionContainer:{backgroundColor:h.white},pointAccordionPanel:{alignItems:"start"},icon:{marginInlineStart:s.xxxSmall_4},polygonActionsContainer:{width:"100%"},iconButton:{margin:0},movementButtonsContainer:{display:"flex",flexDirection:"column",alignItems:"center",minWidth:"fit-content"},spaceUnder:{marginBottom:s.xSmall_8},truncatedWidth:{minWidth:0},addButton:{alignSelf:"start"},labelContainer:{backgroundColor:h.white},horizontalRule:{height:1,backgroundColor:h.offBlack16}}),Ke=R;R.__docgenInfo={description:"",methods:[],displayName:"LockedPolygonSettings",props:{flags:{required:!1,tsType:{name:'Readonly["flags"]',raw:'APIOptions["flags"]'},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},type:{required:!0,tsType:{name:"literal",value:'"polygon"'},description:""},points:{required:!0,tsType:{name:"ReadonlyArray",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],raw:"ReadonlyArray<Coord>"},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},showVertices:{required:!0,tsType:{name:"boolean"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},labels:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPolygonType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: ReadonlyArray<Coord>;
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    labels?: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"ReadonlyArray",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"ReadonlyArray<Coord>",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!1}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedPolygonType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};export{Ke as L};
