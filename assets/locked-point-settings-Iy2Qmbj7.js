import{j as e}from"./jsx-runtime-63Ea5SlK.js";import{r as O}from"./index-6oxdNXpR.js";import{B as D}from"./index-69t9pbsh.js";import{V as b}from"./index-CgfdZoMj.js";import{S as c}from"./index-C1N8lBvx.js";import{s as l,c as h}from"./index-dmcq622U.js";import{L as E,c as M}from"./index-6ID5EQ9c.js";import{L as N,p as V}from"./locked-figure-aria-t0nH29fN.js";import{l as U}from"./index-awljIyHI.js";import{P as I,C as W,L as X,a as G}from"./locked-label-settings-JSMIZtWP.js";import{C as H}from"./color-select-8MUbPEyp.js";import{C as J,g as K,j as Q,a as Y}from"./util-uNwD09sQ.js";import{L as P}from"./labeled-switch-tKCBYqNw.js";const q=k=>{var L,C;const{flags:d,headerLabel:T,coord:i,color:m,filled:w=!0,labels:r,ariaLabel:j,onChangeProps:s,onMove:v,onRemove:g,showPoint:y,error:S,expanded:F,onTogglePoint:x,onToggle:_}=k,u=!v&&!g;async function z(){let a=`Point${await Q(r)} at ${i[0]} comma ${i[1]}`;const o=Y(m);return a+=o,a}function A(n){const a={color:n};r&&(a.labels=r.map(o=>({...o,color:n}))),s(a)}function R(n){const a=n[0]-i[0],o=n[1]-i[1],p={coord:n};r&&(p.labels=r.map(f=>({...f,coord:[f.coord[0]+a,f.coord[1]+o]}))),s(p)}function B(n,a){if(!r)return;const o=[...r];o[a]={...r[a],...n},s({labels:o})}function $(n){if(!r)return;const a=r.filter((o,p)=>p!==n);s({labels:a})}return e.jsxs(I,{expanded:F,onToggle:_,containerStyle:u?t.definingContainer:void 0,panelStyle:u?t.definingPanel:void 0,header:e.jsxs(b,{style:t.row,children:[e.jsx(E,{children:`${T||"Point"} (${i[0]}, ${i[1]})`}),e.jsx(c,{size:l.xSmall_8}),e.jsx(J,{color:m,filled:w})]}),children:[e.jsx(W,{coord:i,style:t.spaceUnder,onChange:R,error:!!S}),x&&e.jsx(P,{label:"show point on graph",checked:!!y,style:y&&t.spaceUnder,onChange:x}),(!u||y)&&e.jsxs(e.Fragment,{children:[e.jsx(H,{selectedValue:m,onChange:A,style:t.spaceUnder}),e.jsx(P,{label:"open point",checked:!w,onChange:n=>{s({filled:!n})}})]}),!u&&e.jsxs(e.Fragment,{children:[e.jsx(c,{size:l.small_12}),e.jsx(b,{style:t.horizontalRule}),e.jsx(N,{ariaLabel:j,getPrepopulatedAriaLabel:z,onChangeProps:n=>{s(n)}})]}),(!u&&((L=d==null?void 0:d.mafs)==null?void 0:L["locked-point-labels"])||u&&((C=d==null?void 0:d.mafs)==null?void 0:C["locked-line-labels"]))&&e.jsxs(e.Fragment,{children:[e.jsx(c,{size:l.xxxSmall_4}),e.jsx(b,{style:t.horizontalRule}),e.jsx(c,{size:l.small_12}),e.jsx(M,{children:"Visible labels"}),r==null?void 0:r.map((n,a)=>O.createElement(X,{...n,key:a,containerStyle:!u&&t.lockedPointLabelContainer,expanded:!0,onChangeProps:o=>{B(o,a)},onRemove:()=>{$(a)}})),e.jsx(D,{kind:"tertiary",startIcon:V,onClick:()=>{const n={...K("label"),coord:[i[0]+.5,i[1]-1*((r==null?void 0:r.length)??0)],color:m};s({labels:[...r??[],n]})},style:t.addButton,children:"Add visible label"})]}),g&&e.jsx(G,{figureType:k.type,onMove:v,onRemove:g})]})},t=U.StyleSheet.create({definingContainer:{marginTop:l.xSmall_8,marginBottom:0,marginLeft:-l.xxxSmall_4,marginRight:-l.xxxSmall_4,backgroundColor:h.white},definingPanel:{paddingBottom:l.xxSmall_6},lockedPointLabelContainer:{backgroundColor:h.white},row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:l.xSmall_8},addButton:{alignSelf:"start"},horizontalRule:{height:1,backgroundColor:h.offBlack16}}),pe=q;q.__docgenInfo={description:"",methods:[],displayName:"LockedPointSettings",props:{type:{required:!0,tsType:{name:"literal",value:'"point"'},description:""},coord:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},filled:{required:!0,tsType:{name:"boolean"},description:""},labels:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},flags:{required:!1,tsType:{name:'Readonly["flags"]',raw:'APIOptions["flags"]'},description:"Optional flags to determine which features are enabled."},headerLabel:{required:!1,tsType:{name:"string"},description:`Optional label for the point to display in the header summary.
Defaults to "Point".`},showPoint:{required:!1,tsType:{name:"boolean"},description:"Whether the extra point settings are toggled open."},error:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"Optional error message to display."},onTogglePoint:{required:!1,tsType:{name:"signature",type:"function",raw:"(newValue) => void",signature:{arguments:[{name:"newValue"}],return:{name:"void"}}},description:"Called when the extra settings toggle switch is changed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPointType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels?: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!1}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedPointType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onMove:{required:!1,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when the point is moved."},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the point is removed."}}};export{pe as L};
