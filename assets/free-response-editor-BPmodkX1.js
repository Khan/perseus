var f=Object.defineProperty;var C=(t,i,e)=>i in t?f(t,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[i]=e;var n=(t,i,e)=>(C(t,typeof i!="symbol"?i+"":i,e),e);import{j as r}from"./jsx-runtime-BT65X5dW.js";import"./index-default-BcKQpA1a.js";import"./index-DktHmiAd.js";import"./all-widgets-DlCGj7Au.js";import{V as l}from"./index-DyG-XbLr.js";import"./answer-choices-CAW9m8Dd.js";import{H as p}from"./index-gdjMQqRz.js";import{r as y}from"./index-C6mWTJJr.js";import"./index-B1Gws05u.js";import"./i18n-context-bNNtSo4z.js";import"./perseus-api-fTM3z0tF.js";import"./renderer-DTCW_hQD.js";import{L as d}from"./free-response-3RgbzuUw.js";import"./index-D7h-teXI.js";import"./jquery-CkHB0_Mt.js";import"./dependencies-BsVPGK1s.js";import{U as x}from"./util-Cnd0Ukpp.js";import"./zoomable-tex-Dy-nElJT.js";import"./svg-image-BmyLAfxC.js";import{n as b}from"./no-important-DlFk8a1I.js";import"./number-input-BoFWJhlc.js";import"./simple-keypad-input-Bl9QRvgR.js";import"./text-input-BdlNOW-6.js";import{B as c}from"./phet-simulation-7JtZXm76.js";import"./sortable-CkMd-CCl.js";import"./fixed-to-responsive-CTsII9Xx.js";import"./math-input-CxF14fD4.js";import"./video-transcript-link-BXfguhTw.js";import"./item-version-Bqt3bFnq.js";import"./article-renderer-DtD8ix-_.js";import"./server-item-renderer-bJ-x7ddr.js";import"./hints-renderer-CV1Czsbv.js";import"./base-radio-DRQ5uYqC.js";import"./button-group-B24xCvY2.js";import"./hud-CP_ly967.js";import"./icon-BfyZ3piz.js";import"./index-DsINhqRJ.js";import"./inline-icon-AJRwMA4Z.js";import"./multi-button-group-U6RQwTwG.js";import"./range-input-Bq0Yp9zp.js";import"./text-list-editor-C2gddtxS.js";import"./index-Dd-cahjY.js";import{C as w}from"./index-6t7BHVg9.js";import{s as u,a as q}from"./index-BfjDPqC2.js";import{p as v}from"./plus-circle-DsgEZe2H.js";const j={allowUnlimitedCharacters:!1,characterLimit:500,placeholder:"Please provide response here",question:"",scoringCriteria:[{text:""}]},k={defaultWidgetOptions:j},L=""+new URL("trash-Cncdq4KR.svg",import.meta.url).href;class m extends y.Component{constructor(){super(...arguments);n(this,"handleUpdateCharacterLimit",e=>{const a=parseInt(e.target.value);isNaN(a)||this.props.onChange({characterLimit:Math.max(1,a)})});n(this,"handleUpdateCriterion",(e,a)=>{const o=this.props.scoringCriteria.map((h,g)=>g===e?a:h);this.props.onChange({scoringCriteria:o})});n(this,"handleDeleteCriterion",e=>{this.props.onChange({scoringCriteria:this.props.scoringCriteria.filter((a,o)=>o!==e)})});n(this,"handleAddCriterion",()=>{this.props.onChange({scoringCriteria:[...this.props.scoringCriteria,{text:""}]})});n(this,"renderCriteriaList",()=>{const e=this.props.scoringCriteria.length>1;return this.props.scoringCriteria.map((a,o)=>r.jsx(A,{criterion:a,index:o,isDeletable:e,onChange:this.handleUpdateCriterion,onDelete:this.handleDeleteCriterion},o))})}serialize(){return{allowUnlimitedCharacters:this.props.allowUnlimitedCharacters,characterLimit:this.props.characterLimit,placeholder:this.props.placeholder,question:this.props.question,scoringCriteria:this.props.scoringCriteria}}getSaveWarnings(){const e=[];return this.props.question||e.push("The question is empty"),this.props.question.match(x.rWidgetRule)!=null&&e.push("The question contains a widget"),e}render(){return r.jsxs(l,{children:[r.jsx(d,{label:r.jsx(p,{children:"Question"}),field:r.jsx("textarea",{value:this.props.question,onChange:e=>this.props.onChange({question:e.target.value})}),styles:{root:s.labeledInputField}}),r.jsx(d,{label:r.jsx(p,{children:"Placeholder"}),field:r.jsx("textarea",{value:this.props.placeholder,onChange:e=>this.props.onChange({placeholder:e.target.value})}),styles:{root:s.labeledInputField}}),r.jsx(d,{label:r.jsx(p,{children:"Allow unlimited characters"}),field:r.jsx(w,{checked:this.props.allowUnlimitedCharacters,onChange:e=>this.props.onChange({allowUnlimitedCharacters:e})}),styles:{root:s.labeledInputField}}),!this.props.allowUnlimitedCharacters&&r.jsx(d,{label:r.jsx(p,{children:"Character limit"}),field:r.jsx("input",{type:"number",min:1,value:this.props.characterLimit,onChange:this.handleUpdateCharacterLimit}),styles:{root:s.labeledInputField}}),r.jsxs(l,{children:[r.jsx(p,{children:"Scoring criteria"}),r.jsx(l,{style:s.criteriaList,children:this.renderCriteriaList()}),r.jsx(l,{children:r.jsx(c,{onClick:this.handleAddCriterion,startIcon:v,children:"Add an item"})})]})]})}}n(m,"defaultProps",k.defaultWidgetOptions),n(m,"widgetName","free-response");const A=function(t){return r.jsxs(l,{style:s.criterionContainer,children:[r.jsx("textarea",{"aria-label":`Criterion ${t.index+1}`,onChange:i=>t.onChange(t.index,{text:i.target.value}),value:t.criterion.text}),t.isDeletable&&r.jsx(l,{style:s.deleteButtonContainer,children:r.jsx(c,{"aria-label":`Delete criterion ${t.index+1}`,actionType:"destructive",disabled:!t.isDeletable,kind:"tertiary",onClick:()=>t.onDelete(t.index),size:"small",startIcon:L,children:"Delete"})})]})},s=b.StyleSheet.create({criteriaList:{gap:u.small_12},criterionContainer:{paddingTop:u.xSmall_8,paddingBottom:u.xSmall_8,borderBottom:`1px solid ${q.border.primary}`,":last-child":{borderBottom:"none"}},deleteButtonContainer:{display:"flex",flexDirection:"row",justifyContent:"flex-end"},labeledInputField:{paddingBottom:u.large_24}});m.__docgenInfo={description:"",methods:[{name:"serialize",docblock:null,modifiers:[],params:[],returns:{type:{name:"signature",type:"object",raw:`{
    // Whether to allow the user to enter an unlimited number of characters.
    allowUnlimitedCharacters: boolean;
    // The maximum number of characters that the user can enter.
    characterLimit: number;
    // The placeholder text that will be displayed to the user in the text input field.
    placeholder: string;
    // The question text that will be displayed to the user.
    question: string;
    // A list of scoring criteria for the free response question. This is a list
    // of things the answer should contain to be considered correct.
    scoringCriteria: ReadonlyArray<PerseusFreeResponseWidgetScoringCriterion>;
}`,signature:{properties:[{key:"allowUnlimitedCharacters",value:{name:"boolean",required:!0}},{key:"characterLimit",value:{name:"number",required:!0}},{key:"placeholder",value:{name:"string",required:!0}},{key:"question",value:{name:"string",required:!0}},{key:"scoringCriteria",value:{name:"ReadonlyArray",elements:[{name:"signature",type:"object",raw:`{
    // An English-language description of how to score the response for this criterion.
    text: string;
}`,signature:{properties:[{key:"text",value:{name:"string",required:!0}}]}}],raw:"ReadonlyArray<PerseusFreeResponseWidgetScoringCriterion>",required:!0}}]}}}},{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:{type:{name:"Array",elements:[{name:"string"}],raw:"Array<string>"}}},{name:"handleUpdateCharacterLimit",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"handleUpdateCriterion",docblock:null,modifiers:[],params:[{name:"index",optional:!1,type:{name:"number"}},{name:"criterion",optional:!1,type:{name:"signature",type:"object",raw:`{
    // An English-language description of how to score the response for this criterion.
    text: string;
}`,signature:{properties:[{key:"text",value:{name:"string",required:!0}}]},alias:"PerseusFreeResponseWidgetScoringCriterion"}}],returns:null},{name:"handleDeleteCriterion",docblock:null,modifiers:[],params:[{name:"index",optional:!1,type:{name:"number"}}],returns:null},{name:"handleAddCriterion",docblock:null,modifiers:[],params:[],returns:null},{name:"renderCriteriaList",docblock:null,modifiers:[],params:[],returns:null}],displayName:"FreeResponseEditor",props:{allowUnlimitedCharacters:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},characterLimit:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"500",computed:!1}},placeholder:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"Please provide response here"',computed:!1}},question:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},scoringCriteria:{required:!1,tsType:{name:"ReadonlyArray",elements:[{name:"signature",type:"object",raw:`{
    // An English-language description of how to score the response for this criterion.
    text: string;
}`,signature:{properties:[{key:"text",value:{name:"string",required:!0}}]}}],raw:"ReadonlyArray<PerseusFreeResponseWidgetScoringCriterion>"},description:"",defaultValue:{value:`[
    {
        text: "",
    },
]`,computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(options: Partial<PerseusFreeResponseWidgetOptions>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    // Whether to allow the user to enter an unlimited number of characters.
    allowUnlimitedCharacters: boolean;
    // The maximum number of characters that the user can enter.
    characterLimit: number;
    // The placeholder text that will be displayed to the user in the text input field.
    placeholder: string;
    // The question text that will be displayed to the user.
    question: string;
    // A list of scoring criteria for the free response question. This is a list
    // of things the answer should contain to be considered correct.
    scoringCriteria: ReadonlyArray<PerseusFreeResponseWidgetScoringCriterion>;
}`,signature:{properties:[{key:"allowUnlimitedCharacters",value:{name:"boolean",required:!0}},{key:"characterLimit",value:{name:"number",required:!0}},{key:"placeholder",value:{name:"string",required:!0}},{key:"question",value:{name:"string",required:!0}},{key:"scoringCriteria",value:{name:"ReadonlyArray",elements:[{name:"signature",type:"object",raw:`{
    // An English-language description of how to score the response for this criterion.
    text: string;
}`,signature:{properties:[{key:"text",value:{name:"string",required:!0}}]}}],raw:"ReadonlyArray<PerseusFreeResponseWidgetScoringCriterion>",required:!0}}]}}],raw:"Partial<PerseusFreeResponseWidgetOptions>"},name:"options"}],return:{name:"void"}}},description:""}}};export{m as F};
