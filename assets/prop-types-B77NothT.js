import{y as A}from"./core-widget-registry-2tCIH_GM.js";import{a as K,V as W}from"./mobile-keypad-CyWweNsY.js";import{c as B}from"./index-C9RM_t1w.js";import{e as Q}from"./index-BzwLglMS.js";import{n as U}from"./no-important-DlFk8a1I.js";import{r as c}from"./index-C6mWTJJr.js";import{F as w}from"./index-Xl5L4rvz.js";import{M as R}from"./button-assets-CICggd4J.js";import{m as p,i as V,s as T,b as X,e as M,f as Y,h as $,M as g,j as k,k as H,c as z,g as G,l as j,a as J}from"./key-translator-Dv1F1EEG.js";import{P as f}from"./index-CrGd2QqM.js";const Z="@khanacademy/math-input",ee="__lib_version__";A(Z,ee);const L=11,F=1.045,O=2*L,te=2*O,ne=2*O,N=L,_=F*(N*4),x=4*N,S=class S extends c.Component{render(){const{x:e,y:t,animateIntoPosition:o}=this.props,n=o?{transitionDuration:"100ms",transitionProperty:"transform"}:{},s=`translate(${e}px, ${t}px)`,r={position:"absolute",zIndex:4,left:-44/2,top:0,transform:s,width:ne,height:te,touchAction:"none",...n};return c.createElement("span",{style:r,onTouchStart:this.props.onTouchStart,onTouchMove:this.props.onTouchMove,onTouchEnd:this.props.onTouchEnd,onTouchCancel:this.props.onTouchCancel},c.createElement("svg",{fill:"none",width:x,height:_,viewBox:`0 0 ${x} ${_}`},c.createElement("filter",{id:"math-input_cursor",colorInterpolationFilters:"sRGB",filterUnits:"userSpaceOnUse",height:_*.87,width:x*.82,x:"4",y:"0"},c.createElement("feFlood",{floodOpacity:"0",result:"BackgroundImageFix"}),c.createElement("feColorMatrix",{in:"SourceAlpha",type:"matrix",values:"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"}),c.createElement("feOffset",{dy:"4"}),c.createElement("feGaussianBlur",{stdDeviation:"4"}),c.createElement("feColorMatrix",{type:"matrix",values:"0 0 0 0 0.129412 0 0 0 0 0.141176 0 0 0 0 0.172549 0 0 0 0.08 0"}),c.createElement("feBlend",{in2:"BackgroundImageFix",mode:"normal",result:"effect1_dropShadow"}),c.createElement("feBlend",{in:"SourceGraphic",in2:"effect1_dropShadow",mode:"normal",result:"shape"})),c.createElement("g",{filter:"url(#math-input_cursor)"},c.createElement("path",{d:"m22 4-7.07 7.0284c-1.3988 1.3901-2.3515 3.1615-2.7376 5.09-.3861 1.9284-.1883 3.9274.5685 5.7441s2.0385 3.3694 3.6831 4.4619c1.6445 1.0925 3.5781 1.6756 5.556 1.6756s3.9115-.5831 5.556-1.6756c1.6446-1.0925 2.9263-2.6452 3.6831-4.4619s.9546-3.8157.5685-5.7441c-.3861-1.9285-1.3388-3.6999-2.7376-5.09z",fill:"#1865f2"})),c.createElement("path",{d:"m14.9301 10.4841 7.0699-7.06989 7.0699 7.06989.0001.0001c1.3988 1.3984 2.3515 3.1802 2.7376 5.1201s.1883 3.9507-.5685 5.7782c-.7568 1.8274-2.0385 3.3894-3.6831 4.4883-1.6445 1.099-3.5781 1.6855-5.556 1.6855s-3.9115-.5865-5.556-1.6855c-1.6446-1.0989-2.9263-2.6609-3.6831-4.4883-.7568-1.8275-.9546-3.8383-.5685-5.7782s1.3388-3.7217 2.7376-5.1201z",stroke:"#fff",strokeWidth:"2"})))}};S.defaultProps={animateIntoPosition:!1,visible:!1,x:0,y:0};let v=S;v.__docgenInfo={description:"",methods:[],displayName:"CursorHandle",props:{animateIntoPosition:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onTouchCancel:{required:!0,tsType:{name:"signature",type:"function",raw:"(arg1: React.TouchEvent<HTMLSpanElement>) => void",signature:{arguments:[{type:{name:"ReactTouchEvent",raw:"React.TouchEvent<HTMLSpanElement>",elements:[{name:"HTMLSpanElement"}]},name:"arg1"}],return:{name:"void"}}},description:""},onTouchEnd:{required:!0,tsType:{name:"signature",type:"function",raw:"(arg1: React.TouchEvent<HTMLSpanElement>) => void",signature:{arguments:[{type:{name:"ReactTouchEvent",raw:"React.TouchEvent<HTMLSpanElement>",elements:[{name:"HTMLSpanElement"}]},name:"arg1"}],return:{name:"void"}}},description:""},onTouchMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(arg1: React.TouchEvent<HTMLSpanElement>) => void",signature:{arguments:[{type:{name:"ReactTouchEvent",raw:"React.TouchEvent<HTMLSpanElement>",elements:[{name:"HTMLSpanElement"}]},name:"arg1"}],return:{name:"void"}}},description:""},onTouchStart:{required:!0,tsType:{name:"signature",type:"function",raw:"(arg1: React.TouchEvent<HTMLSpanElement>) => void",signature:{arguments:[{type:{name:"ReactTouchEvent",raw:"React.TouchEvent<HTMLSpanElement>",elements:[{name:"HTMLSpanElement"}]},name:"arg1"}],return:{name:"void"}}},description:""},visible:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},x:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}},y:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}}}};const P=8;class oe{constructor(e,t){this._scrollListener=()=>{e()};const o={};for(let n=0;n<t.changedTouches.length;n++){const s=t.changedTouches[n];o[s.identifier]=[s.clientX,s.clientY]}this._moveListener=n=>{for(let s=0;s<n.changedTouches.length;s++){const r=n.changedTouches[s],l=o[r.identifier];if(l){const a=[r.clientX,r.clientY],d=a[0]-l[0],u=a[1]-l[1],y=d*d+u*u,b=P*P;y>b&&e()}}},this._endAndCancelListener=n=>{for(let s=0;s<n.changedTouches.length;s++)delete o[n.changedTouches[s].identifier]}}attach(){window.addEventListener("scroll",this._scrollListener),window.addEventListener("touchmove",this._moveListener),window.addEventListener("touchend",this._endAndCancelListener),window.addEventListener("touchcancel",this._endAndCancelListener)}detach(){window.removeEventListener("scroll",this._scrollListener),window.removeEventListener("touchmove",this._moveListener),window.removeEventListener("touchend",this._endAndCancelListener),window.removeEventListener("touchcancel",this._endAndCancelListener)}}function se(i,e){const t=e[p.L]===g.MQ_END,o=k(e.parent.parent.blocks[0].ends);t?(T(e.parent.parent,e),o&&i.keystroke("Backspace")):i.keystroke("Backspace")}function ie(i,e){if(k(e)){const t=e.parent.parent,o=t.latex(),n=t[p.L];T(t,e),t.blocks[1]._el.textContent===""?i.keystroke("Backspace"):(i.keystroke("Backspace"),i.write(o.replace(/^\\sqrt\[\]/,"\\sqrt")),n===g.MQ_END?i.moveToLeftEnd():e.insRightOf(n))}else e[p.L]!==g.MQ_END&&i.keystroke("Backspace")}function re(i,e){if(k(e)){const t=e.parent.parent,o=H(t);e.insLeftOf(o==null?void 0:o.startNode),e.startSelection(),t[p.R]!==g.MQ_END?e.insRightOf(t[p.R]):e.insRightOf(t),e.select(),e.endSelection(),t[p.R]._el.textContent===""&&i.keystroke("Backspace")}else i.keystroke("Backspace")}function ae(i,e){if(e[p.L]!==g.MQ_END){i.keystroke("Backspace");return}const t=e.parent.parent;if(t[p.L].sub&&t[p.L].sub._el.textContent){e.insAtRightEnd(t[p.L].sub);return}const o=k(e),n=H(t);e.insLeftOf(n&&n.startNode||t),e.startSelection(),e.insRightOf(t),e.select(),e.endSelection(),o&&i.keystroke("Backspace")}function le(i){i.keystroke("Backspace"),i.keystroke("Backspace")}function ce(i){const e=i.cursor();if(e.selection)i.keystroke("Backspace");else{const t=e.parent,o=t.parent,n=e[p.L];V(n)?T(n,e):X(n)?T(n,e):M(n)?T(n,e):Y(t)?ie(i,e):o.ctrlSeq==="\\left("?ae(i,e):$(e)?re(i,e):n.ctrlSeq==="\\ge "||n.ctrlSeq==="\\le "?le(i):M(o)&&n===g.MQ_END?se(i,e):i.keystroke("Backspace")}}class de{constructor(e,t,o,n,s={}){var r;this.mathField=z(e,n,o,()=>({substituteTextarea:function(){return document.createElement("span")}})),(r=this.mathField)==null||r.setAriaLabel(t),this.callbacks=s,this.mobileKeyTranslator={...G(n,o),BACKSPACE:ce}}focus(){this.mathField.cursor().show(),this.mathField.focus()}blur(){this.mathField.cursor().hide(),this.mathField.blur()}pressKey(e){const t=this.getCursor(),o=this.mobileKeyTranslator[e];return o&&o(this.mathField,e),t.selection||t.show(),this.callbacks.onSelectionChanged&&this.callbacks.onSelectionChanged(t.selection),{context:this.contextForCursor()}}setCursorPosition(e,t,o){const n=o||document.elementFromPoint(e,t);if(n){const s=this.getCursor();if(n.hasAttribute("mq-root-block"))s.insAtRightEnd(this.mathField.controller().root);else{const r=this.mathField.controller(),l=e-document.body.scrollLeft,a=t-document.body.scrollTop;r.seek(n,l,a).cursor.startSelection();const d=j(s[p.L]);d&&d.endNode&&(s.insLeftOf(d.endNode),this.mathField.keystroke("Right"))}this.callbacks.onCursorMove&&this.callbacks.onCursorMove({context:this.contextForCursor()})}}getCursor(){return this.mathField.cursor()}contextForCursor(){return J(this.mathField)}getSelection(){return this.getCursor().selection}getContent(){return this.mathField.latex()}setContent(e){this.mathField.latex(e)}isEmpty(){const e=this.getCursor();return e.parent.id===1&&e[1]===0&&e[-1]===0}}const ue=60,he=(i,e)=>{const t=i.getBoundingClientRect(),o=t.bottom,n=t.top,s=document.scrollingElement,r=16;if(e){const l=window.innerHeight,a=e.clientHeight,d=l-(a+ue);if(o>d){const u=Math.min(o-d+r,n);s&&(s.scrollTop+=u);return}}s&&n<r&&(s.scrollTop-=t.height+r)},I=.8,C=class C extends c.Component{constructor(){super(...arguments),this.state={focused:!1,showInputFocusStyle:!1,handle:{animateIntoPosition:!1,visible:!1,x:0,y:0}},this._updateInputPadding=()=>{this._container=w.findDOMNode(this),this._root=this._container.querySelector(".mq-root-block");const e=this.getInputInnerPadding();this._root.style.padding=`${e.paddingTop}px ${e.paddingRight}px ${e.paddingBottom}px ${e.paddingLeft}px`,this._root.style.fontSize=`${pe}pt`},this._updateCursorHandle=e=>{const t=this._container.getBoundingClientRect(),n=this._container.querySelector(".mq-cursor").getBoundingClientRect(),s=n.width,r=2,l=this.getInputInnerPadding(),a=t.right-s-l.paddingRight,d=t.left+s+l.paddingLeft;let u=n.left;n.left>a?u=a:n.left<d&&(u=d),this.setState({handle:{visible:!0,animateIntoPosition:e,x:u+s/2-t.left,y:n.bottom+r-t.top}})},this._hideCursorHandle=()=>{this.setState({handle:{visible:!1,x:0,y:0}})},this._handleScroll=()=>{this.state.handle.animateIntoPosition!==!1&&this._hideCursorHandle()},this.blur=()=>{this.mathField.blur(),this.setState({showInputFocusStyle:!1,handle:{visible:!1}})},this.focus=e=>{var t,o;(t=this.props.keypadElement)==null||t.setKeyHandler(n=>{const s=this.mathField.pressKey(n),r=()=>{this.setState({handle:{visible:!1}})},l=this.mathField.getContent();return this.props.value!==l?this.props.onChange(l,r):r(),s}),this.mathField.focus(),(o=this.props)==null||o.onFocus(),e(!0),this.setState({focused:!0,showInputFocusStyle:!0},()=>{setTimeout(()=>{var n;if(this._isMounted){const s=(n=this.props.keypadElement)==null?void 0:n.getDOMNode();he(this._container,s)}})})},this._findHitNode=(e,t,o,n,s)=>{for(;o>=e.top&&o<=e.bottom;){o+=s;const l=[[t-n,o],[t,o],[t+n,o]].map(h=>document.elementFromPoint(...h)).filter(h=>h&&this._root.contains(h)&&(!h.classList.contains("mq-root-block")&&!h.classList.contains("mq-non-leaf")||h.classList.contains("mq-empty")||h.classList.contains("mq-hasCursor")));let a=null;const d=[];let u=0;const y={},b={};for(const h of l){const m=h.getAttribute("mathquill-command-id");m!=null?(y[m]=(y[m]||0)+1,b[m]=h):d.push(h)}for(const[h,m]of Q(y))m>u&&(u=m,a=b[h]);if(a==null&&d.length>0&&(a=d[0]),a!==null)return this.mathField.setCursorPosition(t,o,a),!0}return!1},this._insertCursorAtClosestNode=(e,t)=>{var u;const o=this.mathField.getCursor();if(!this._root.hasChildNodes()){o.insAtLeftEnd(this.mathField.mathField.controller().root);return}t>this._containerBounds.bottom?t=this._containerBounds.bottom-10:t<this._containerBounds.top&&(t=this._containerBounds.top+10),e>this._containerBounds.right?e=this._containerBounds.right-15:e<this._containerBounds.left&&(e=this._containerBounds.left+15);let n;n=-8;const s=5;if(this._findHitNode(this._containerBounds,e,t,s,n)||(t=this._containerBounds.top,n=8,this._findHitNode(this._containerBounds,e,t,s,n)))return;const r=this._root.firstChild.getBoundingClientRect(),l=this._root.lastChild.getBoundingClientRect(),a=r.left,d=l.right;Math.abs(e-d)<Math.abs(e-a)?o.insAtRightEnd(this.mathField.mathField.controller().root):o.insAtLeftEnd(this.mathField.mathField.controller().root),(u=this.props.keypadElement)==null||u.setCursor({context:this.mathField.contextForCursor()})},this.handleTouchStart=(e,t,o)=>{var n;if(e.stopPropagation(),this._hideCursorHandle(),this.mathField.getContent()!==""){this._containerBounds=this._container.getBoundingClientRect();const s=e.changedTouches[0];this._insertCursorAtClosestNode(s.clientX,s.clientY)}this.state.focused&&!t&&o(!0),this.state.focused||this.focus(o),(n=this.inputRef)==null||n.focus()},this.handleClick=(e,t,o)=>{var n;e.stopPropagation(),this._hideCursorHandle(),this.mathField.getContent()!==""&&(this._containerBounds=this._container.getBoundingClientRect(),this._insertCursorAtClosestNode(e.clientX,e.clientY)),this.state.focused&&!t&&o(!0),this.state.focused||this.focus(o),(n=this.inputRef)==null||n.focus()},this.handleTouchMove=e=>{if(e.stopPropagation(),this.mathField.getContent()!==""&&this.state.focused){const t=e.changedTouches[0];this._insertCursorAtClosestNode(t.clientX,t.clientY)}},this.handleTouchEnd=e=>{e.stopPropagation(),this.mathField.getContent()!==""&&this.state.focused&&this._updateCursorHandle()},this.onCursorHandleTouchStart=e=>{e.stopPropagation(),e.preventDefault(),this._containerBounds=this._container.getBoundingClientRect()},this._constrainToBound=(e,t,o,n)=>e<t?t+(e-t)*n:e>o?o+(e-o)*n:e,this.onCursorHandleTouchMove=e=>{e.stopPropagation();const t=e.changedTouches[0].clientX,o=e.changedTouches[0].clientY,n=t-this._containerBounds.left,s=o-2*L*F-this._containerBounds.top;this.setState({handle:{animateIntoPosition:!1,visible:!0,x:this._constrainToBound(n,0,this._containerBounds.width,I),y:this._constrainToBound(s,0,this._containerBounds.height,I)}});const l=o-22;this._insertCursorAtClosestNode(t,l)},this.onCursorHandleTouchEnd=e=>{e.stopPropagation(),this._updateCursorHandle(!0)},this.onCursorHandleTouchCancel=e=>{e.stopPropagation(),this._updateCursorHandle(!0)},this.domKeyToMathQuillKey=e=>{const t={"+":"PLUS","-":"MINUS","*":"TIMES","/":"DIVIDE",".":"DECIMAL","%":"PERCENT","=":"EQUAL",">":"GT","<":"LT","^":"EXP"};return["0","1","2","3","4","5","6","7","8","9"].includes(e)?`NUM_${e}`:e==="Backspace"?"BACKSPACE":e in t?t[e]:null},this.handleKeyUp=e=>{const t=this.domKeyToMathQuillKey(e.key);if(t){this.mathField.pressKey(t);const o=this.mathField.getContent();this.props.value!==o&&(this.mathField.setContent(this.props.value),this.props.onChange(o,()=>{}),this._hideCursorHandle())}},this.getBorderWidthPx=()=>this.state.focused?2:1,this.getInputInnerPadding=()=>{const e=D-this.getBorderWidthPx(),t=3,o=1,n=2;return{paddingTop:e-o,paddingRight:e+n,paddingBottom:e-t,paddingLeft:e+n}}}componentDidMount(){this._isMounted=!0,this.mathField=new de(this._mathContainer,this.props.ariaLabel,this.context.strings,this.context.locale,{onCursorMove:t=>{var o;(o=this.props.keypadElement)==null||o.setCursor(t)}}),this.mathField.setContent(this.props.value),this._updateInputPadding(),this._container=w.findDOMNode(this),this._root=this._container.querySelector(".mq-root-block"),this._root.addEventListener("scroll",this._handleScroll);const e=(t,o)=>{const n=this._getKeypadBounds();return n?n.left<=t&&n.right>=t&&n.top<=o&&n.bottom>=o||n.bottom<o:!1};this.recordTouchStartOutside=t=>{if(this.state.focused&&!this._container.contains(t.target)){let o=!1;if(this.props.keypadElement&&this.props.keypadElement.getDOMNode())for(let n=0;n<t.changedTouches.length;n++){const[s,r]=[t.changedTouches[n].clientX,t.changedTouches[n].clientY];if(e(s,r)){o=!0;break}}o||(this.didTouchOutside=!0,this.dragListener&&this.dragListener.detach(),this.dragListener=new oe(()=>{this.didScroll=!0,this.dragListener.detach()},t),this.dragListener.attach())}},this.blurOnTouchEndOutside=t=>{var o,n;this.state.focused&&this.didTouchOutside&&!this.didScroll&&(this.blur(),this.mathField.blur(),(n=(o=this.props).onBlur)==null||n.call(o)),this.didTouchOutside=!1,this.didScroll=!1,this.dragListener&&this.dragListener.detach()},this.blurOnClickOutside=t=>{var o,n;if(this.state.focused&&!this._container.contains(t.target)&&this.props.keypadElement&&this.props.keypadElement.getDOMNode()){const[s,r]=[t.clientX,t.clientY];e(s,r)||(this.blur(),(n=(o=this.props).onBlur)==null||n.call(o))}},window.addEventListener("touchstart",this.recordTouchStartOutside),window.addEventListener("touchend",this.blurOnTouchEndOutside),window.addEventListener("touchcancel",this.blurOnTouchEndOutside),window.addEventListener("click",this.blurOnClickOutside)}componentDidUpdate(e,t){this.mathField.getContent()!==this.props.value&&this.mathField.setContent(this.props.value),t.focused!==this.state.focused&&this._updateInputPadding()}componentWillUnmount(){this._isMounted=!1,window.removeEventListener("touchstart",this.recordTouchStartOutside),window.removeEventListener("touchend",this.blurOnTouchEndOutside),window.removeEventListener("touchcancel",this.blurOnTouchEndOutside),window.removeEventListener("click",this.blurOnClickOutside)}_getKeypadBounds(){var t;const e=(t=this.props.keypadElement)==null?void 0:t.getDOMNode();return e instanceof Element?e.getBoundingClientRect():null}render(){const{showInputFocusStyle:e,handle:t}=this.state,{style:o}=this.props,n={...Te.innerContainer,borderWidth:this.getBorderWidthPx(),...e?{borderColor:B.blue}:{},...o},s=this.context.strings.mathInputBox+" "+this.context.strings.fingerTap;return c.createElement(K.Consumer,null,({keypadActive:r,setKeypadActive:l})=>c.createElement(W,{style:ye.input,onTouchStart:a=>{this.handleTouchStart(a,r,l)},onTouchMove:this.handleTouchMove,onTouchEnd:this.handleTouchEnd,onClick:a=>{this.handleClick(a,r,l)},role:"textbox",ariaLabel:s},c.createElement("div",{className:"keypad-input",tabIndex:"0",ref:a=>{this.inputRef=a},onFocus:()=>{this.focus(l)},onBlur:this.blur,onKeyUp:this.handleKeyUp},c.createElement("div",{ref:a=>{this._mathContainer=w.findDOMNode(a)},style:n})),e&&t.visible&&c.createElement(v,{...t,onTouchStart:this.onCursorHandleTouchStart,onTouchMove:this.onCursorHandleTouchMove,onTouchEnd:this.onCursorHandleTouchEnd,onTouchCancel:this.onCursorHandleTouchCancel})))}};C.contextType=R,C.defaultProps={style:{},value:""};let E=C;E.contextType=R;const pe=18,q=128,me=20,D=12,fe=me+D*2,ge=64,ye=U.StyleSheet.create({input:{position:"relative",display:"inline-block",verticalAlign:"middle",maxWidth:q}}),Te={innerContainer:{backgroundColor:"white",minHeight:fe,minWidth:ge,maxWidth:q,boxSizing:"border-box",position:"relative",borderStyle:"solid",borderColor:B.offBlack50,borderRadius:4,color:B.offBlack}};E.__docgenInfo={description:"",methods:[{name:"_updateInputPadding",docblock:null,modifiers:[],params:[],returns:null},{name:"_getKeypadBounds",docblock:"Returns the current bounds of the keypadElement",modifiers:[],params:[],returns:{type:{name:"union",raw:"DOMRect | null",elements:[{name:"DOMRect"},{name:"null"}]}},description:"Returns the current bounds of the keypadElement"},{name:"_updateCursorHandle",docblock:null,modifiers:[],params:[{name:"animateIntoPosition",optional:!1,type:null}],returns:null},{name:"_hideCursorHandle",docblock:null,modifiers:[],params:[],returns:null},{name:"_handleScroll",docblock:null,modifiers:[],params:[],returns:null},{name:"blur",docblock:null,modifiers:[],params:[],returns:null},{name:"focus",docblock:null,modifiers:[],params:[{name:"setKeypadActive",optional:!1,type:null}],returns:null},{name:"_findHitNode",docblock:`Tries to determine which DOM node to place the cursor next to based on
where the user drags the cursor handle.  If it finds a node it will
place the cursor next to it, update the handle to be under the cursor,
and return true.  If it doesn't find a node, it returns false.

It searches for nodes by doing it tests at the following points:

  (x - dx, y), (x, y), (x + dx, y)

If it doesn't find any nodes from the rendered math it will update y
by adding dy.

The algorithm ends its search when y goes outside the bounds of
containerBounds.

@param {DOMRect} containerBounds - bounds of the container node
@param {number} x - the initial x coordinate in the viewport
@param {number} y - the initial y coordinate in the viewport
@param {number} dx - horizontal spacing between elementFromPoint calls
@param {number} dy - vertical spacing between elementFromPoint calls,
                     sign determines direction.
@returns {boolean} - true if a node was hit, false otherwise.`,modifiers:[],params:[{name:"containerBounds",description:"bounds of the container node",type:{name:"DOMRect"},optional:!1},{name:"x",description:"the initial x coordinate in the viewport",type:{name:"number"},optional:!1},{name:"y",description:"the initial y coordinate in the viewport",type:{name:"number"},optional:!1},{name:"dx",description:"horizontal spacing between elementFromPoint calls",type:{name:"number"},optional:!1},{name:"dy",description:`vertical spacing between elementFromPoint calls,
                     sign determines direction.`,type:{name:"number"},optional:!1}],returns:{description:"true if a node was hit, false otherwise.",type:{name:"boolean"}},description:`Tries to determine which DOM node to place the cursor next to based on
where the user drags the cursor handle.  If it finds a node it will
place the cursor next to it, update the handle to be under the cursor,
and return true.  If it doesn't find a node, it returns false.

It searches for nodes by doing it tests at the following points:

  (x - dx, y), (x, y), (x + dx, y)

If it doesn't find any nodes from the rendered math it will update y
by adding dy.

The algorithm ends its search when y goes outside the bounds of
containerBounds.`},{name:"_insertCursorAtClosestNode",docblock:`Inserts the cursor at the DOM node closest to the given coordinates,
based on hit-tests conducted using #_findHitNode.

@param {number} x - the x coordinate in the viewport
@param {number} y - the y coordinate in the viewport`,modifiers:[],params:[{name:"x",description:"the x coordinate in the viewport",type:{name:"number"},optional:!1},{name:"y",description:"the y coordinate in the viewport",type:{name:"number"},optional:!1}],returns:null,description:`Inserts the cursor at the DOM node closest to the given coordinates,
based on hit-tests conducted using #_findHitNode.`},{name:"handleTouchStart",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactTouchEvent",raw:"React.TouchEvent<HTMLDivElement>",elements:[{name:"HTMLDivElement"}],alias:"React.TouchEvent"}},{name:"keypadActive",optional:!1,type:{name:"boolean",raw:'KeypadContextType["keypadActive"]'}},{name:"setKeypadActive",optional:!1,type:{name:"signature",raw:'KeypadContextType["setKeypadActive"]'}}],returns:{type:{name:"void"}}},{name:"handleClick",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLDivElement>",elements:[{name:"HTMLDivElement"}],alias:"React.MouseEvent"}},{name:"keypadActive",optional:!1,type:{name:"boolean",raw:'KeypadContextType["keypadActive"]'}},{name:"setKeypadActive",optional:!1,type:{name:"signature",raw:'KeypadContextType["setKeypadActive"]'}}],returns:{type:{name:"void"}}},{name:"handleTouchMove",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"handleTouchEnd",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"onCursorHandleTouchStart",docblock:`When a touch starts in the cursor handle, we track it so as to avoid
handling any touch events ourself.

@param {TouchEvent} e - the raw touch event from the browser`,modifiers:[],params:[{name:"e",description:"the raw touch event from the browser",type:{name:"TouchEvent"},optional:!1}],returns:null,description:`When a touch starts in the cursor handle, we track it so as to avoid
handling any touch events ourself.`},{name:"_constrainToBound",docblock:null,modifiers:[],params:[{name:"value",optional:!1,type:null},{name:"min",optional:!1,type:null},{name:"max",optional:!1,type:null},{name:"friction",optional:!1,type:null}],returns:null},{name:"onCursorHandleTouchMove",docblock:`When the user moves the cursor handle update the position of the cursor
and the handle.

@param {TouchEvent} e - the raw touch event from the browser`,modifiers:[],params:[{name:"e",description:"the raw touch event from the browser",type:{name:"TouchEvent"},optional:!1}],returns:null,description:`When the user moves the cursor handle update the position of the cursor
and the handle.`},{name:"onCursorHandleTouchEnd",docblock:`When the user releases the cursor handle, animate it back into place.

@param {TouchEvent} e - the raw touch event from the browser`,modifiers:[],params:[{name:"e",description:"the raw touch event from the browser",type:{name:"TouchEvent"},optional:!1}],returns:null,description:"When the user releases the cursor handle, animate it back into place."},{name:"onCursorHandleTouchCancel",docblock:`If the gesture is cancelled mid-drag, simply hide it.

@param {TouchEvent} e - the raw touch event from the browser`,modifiers:[],params:[{name:"e",description:"the raw touch event from the browser",type:{name:"TouchEvent"},optional:!1}],returns:null,description:"If the gesture is cancelled mid-drag, simply hide it."},{name:"domKeyToMathQuillKey",docblock:null,modifiers:[],params:[{name:"key",optional:!1,type:null}],returns:null},{name:"handleKeyUp",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:null}],returns:null},{name:"getBorderWidthPx",docblock:null,modifiers:[],params:[],returns:null},{name:"getInputInnerPadding",docblock:null,modifiers:[],params:[],returns:null}],displayName:"MathInput",props:{keypadElement:{required:!1,tsType:{name:"KeypadAPI"},description:""},ariaLabel:{required:!0,tsType:{name:"string"},description:""},onBlur:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string, callback: any) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"any"},name:"callback"}],return:{name:"void"}}},description:""},onFocus:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},style:{required:!1,tsType:{name:"any"},description:"",defaultValue:{value:"{}",computed:!1}},value:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}}}};const Se=f.shape({activate:f.func.isRequired,dismiss:f.func.isRequired,configure:f.func.isRequired,setCursor:f.func.isRequired,setKeyHandler:f.func.isRequired,getDOMNode:f.func.isRequired});export{E as M,Se as k};
