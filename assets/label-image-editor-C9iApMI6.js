var C=Object.defineProperty;var v=(o,i,e)=>i in o?C(o,i,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[i]=e;var n=(o,i,e)=>v(o,typeof i!="symbol"?i+"":i,e);import{r as k,Y as w,U as b,j as t,Z as d}from"./iframe-P8a0QwVR.js";import"./changeable-2_-2l023.js";import"./article-renderer-c16ya0Fw.js";import"./server-item-renderer-BL8pKdky.js";import"./hints-renderer-CZfjqQ6B.js";import{E as A}from"./editor-jsonify-DU8NPScO.js";import{F as x}from"./form-wrapped-text-field-CGTNxnfT.js";import{A as I}from"./answer-choices-HN1-PvtF.js";import{B as q}from"./behavior-C4A5eemQ.js";import{Q as T}from"./question-markers-CAKNKMOf.js";import{S as N}from"./select-image-ePcGyKe-.js";class c extends k.Component{constructor(){super(...arguments);n(this,"_questionMarkers");n(this,"getSaveWarnings",()=>{const{choices:e,imageAlt:l,imageUrl:r,markers:a}=this.props,s=[];if(e.length<2&&s.push("Question requires at least two answer choices"),r?l||s.push("Question image has no alt text"):s.push("Image is not specified for question"),!a.length)s.push("Question has no markers, to label answers on image");else{let m=0,p=0;for(const h of a)h.answers.length||m++,h.label||p++;m&&s.push(`Question has ${m} markers with no answers selected`),p&&s.push(`Question has ${p} markers with no ARIA label`)}return s});n(this,"handleImageChange",e=>{this.props.onChange({imageUrl:e,imageWidth:0,imageHeight:0}),e&&b.getImageSize(e,(l,r)=>{this.props.onChange({imageUrl:e,imageWidth:l,imageHeight:r})})});n(this,"handleAltChange",e=>{this.props.onChange({imageAlt:e})});n(this,"handleChoicesChange",e=>{this.props.onChange({choices:e})});n(this,"handleMarkersChange",e=>{this.props.onChange({markers:e})});n(this,"handleBehaviorChange",e=>{this.props.onChange(e)})}componentDidUpdate(e){const l={};e.markers.forEach(a=>l[`${a.x}.${a.y}`]=a);const r=this.props.markers.map((a,s)=>l.hasOwnProperty(`${a.x}.${a.y}`)?-1:s).filter(a=>a!==-1);r.length&&this._questionMarkers&&this._questionMarkers.openDropdownForMarkerIndices(r)}serialize(){return A.serialize.call(this)}render(){const{choices:e,imageAlt:l,imageUrl:r,imageWidth:a,imageHeight:s,markers:m,multipleAnswers:p,hideChoicesFromInstructions:h,preferredPopoverDirection:y}=this.props,f=r&&a>0&&s>0;return t.jsxs("div",{children:[t.jsx(N,{onChange:this.handleImageChange,url:r}),t.jsx("div",{className:d.css(u.smallSpacer)}),f&&t.jsx(x,{placeholder:"Alt text (for screen readers)",onChange:g=>this.handleAltChange(g.target.value),value:l,width:"100%"}),t.jsx("div",{className:d.css(u.largeSpacer)}),t.jsx(T,{choices:e,imageUrl:f?r:"",imageWidth:a,imageHeight:s,markers:m,onChange:this.handleMarkersChange,ref:g=>this._questionMarkers=g}),t.jsx("div",{className:d.css(u.largeSpacer)}),t.jsx(I,{choices:e,onChange:this.handleChoicesChange}),t.jsx("div",{className:d.css(u.largeSpacer)}),t.jsx(q,{preferredPopoverDirection:y,multipleAnswers:p,hideChoicesFromInstructions:h,onChange:this.handleBehaviorChange})]})}}n(c,"defaultProps",w.defaultWidgetOptions),n(c,"widgetName","label-image");const u=d.StyleSheet.create({largeSpacer:{height:32},smallSpacer:{height:16}});c.__docgenInfo={description:`Direct image labeling widget editor.

Label on image widget enables creating more natural, conceptual questions
that involve the use of images, and enable learners to demonstrate their
knowledge by directly interacting with the image.`,methods:[{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:{type:{name:"any"}}},{name:"handleImageChange",docblock:null,modifiers:[],params:[{name:"url",optional:!1,type:{name:"string"}}],returns:null},{name:"handleAltChange",docblock:null,modifiers:[],params:[{name:"alt",optional:!1,type:{name:"string"}}],returns:null},{name:"handleChoicesChange",docblock:null,modifiers:[],params:[{name:"choices",optional:!1,type:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",alias:"ReadonlyArray"}}],returns:null},{name:"handleMarkersChange",docblock:null,modifiers:[],params:[{name:"markers",optional:!1,type:{name:"Array",raw:'PerseusLabelImageWidgetOptions["markers"]'}}],returns:null},{name:"handleBehaviorChange",docblock:null,modifiers:[],params:[{name:"options",optional:!1,type:{name:"any"}}],returns:null}],displayName:"LabelImageEditor",props:{choices:{required:!1,tsType:{name:"Array",elements:[{name:"string"}],raw:"string[]"},description:"",defaultValue:{value:"[]",computed:!1}},imageAlt:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},imageUrl:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},imageWidth:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}},imageHeight:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}},markers:{required:!1,tsType:{name:"Array",raw:'PerseusLabelImageWidgetOptions["markers"]'},description:"",defaultValue:{value:"[]",computed:!1}},multipleAnswers:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},hideChoicesFromInstructions:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(options: any) => void",signature:{arguments:[{type:{name:"any"},name:"options"}],return:{name:"void"}}},description:""},preferredPopoverDirection:{required:!0,tsType:{name:"union",raw:`| "NONE"
| "UP"
| "DOWN"
| "LEFT"
| "RIGHT"`,elements:[{name:"literal",value:'"NONE"'},{name:"literal",value:'"UP"'},{name:"literal",value:'"DOWN"'},{name:"literal",value:'"LEFT"'},{name:"literal",value:'"RIGHT"'}]},description:""}}};export{c as L};
