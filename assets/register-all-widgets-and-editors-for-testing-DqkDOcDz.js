var rc=Object.defineProperty;var ic=(o,l,n)=>l in o?rc(o,l,{enumerable:!0,configurable:!0,writable:!0,value:n}):o[l]=n;var x=(o,l,n)=>ic(o,typeof l!="symbol"?l+"":l,n);import{c7 as oc,c8 as lc,c9 as sc,ca as uc,r as F,_ as R,j as e,cb as Do,n as ie,o as me,bt as dc,bu as mc,cc as Po,bR as cc,bS as pc,V as Y,i as pi,an as hc,cd as gc,l as re,s as j,ce as Mo,cf as yc,cg as pu,U as Fe,ch as xs,ci as zo,cj as bc,ck as wc,P as fc,E as hu,bJ as La,cl as vc,a7 as te,A as hi,cm as mn,cn as kc,al as Le,a9 as Ze,co as xc,cp as qc,w as _o,cq as Cc,cr as Tc,ag as gu,ar as Ne,L as je,cs as lt,ct as Ac,bp as Sc,cu as qs,cv as Pc,cw as Nc,H as No,ae as po,cx as Wt,cy as Ic,ao as Ue,cz as Cs,cA as jc,bw as Q,cB as Lc,cC as Rc,cD as er,cE as Yr,cF as Fc,cG as Oc,cH as yu,cI as Ec,cJ as bu,cK as Dc,cL as Mc,cM as zc,cN as _c,cO as sn,cP as Bc,b6 as Vc,cQ as ct,cR as $c,I as nr,c2 as wu,cS as fu,cT as sa,cU as Wc,cV as Gc,q as pe,bx as nt,cW as Bo,bE as vu,t as ke,bD as Fn,cX as Hc,k as oa,cY as Gn,cZ as Uc,b3 as Ut,c0 as ir,bz as Pt,h as Kc,c_ as Xc,b_ as Vo,c$ as ku,d0 as Yc,d1 as Jc,b$ as Zc,d2 as Rn,aq as xu,bI as st,d3 as tn,d4 as $o,d5 as gi,d6 as qu,bO as Qc,d7 as ua,d8 as Wo,b4 as ep,d9 as ut,da as yi,ap as kn,bQ as da,db as np,dc as tp,dd as Go,aw as Bn,de as Cu,df as Tu,dg as Au,dh as Su,di as Pu,dj as Nu,dk as Iu,dl as ju,dm as Lu,dn as Ru,dp as Fu,dq as ap,dr as rp,ds as ip,dt as op,du as lp,dv as sp,dw as up,dx as dp,dy as mp,dz as cp,dA as pp,dB as hp,dC as gp,dD as na,bL as yp,dE as bp,dF as wp,dG as fp,dH as vp,bb as kp,bc as xp,bT as qp,bU as Cp,bV as Tp}from"./iframe-DrenmEsb.js";import"./item-version-DWOGl_3A.js";import"./article-renderer-DiAhqv4P.js";import"./server-item-renderer-Dk0InSHQ.js";import"./hints-renderer-EKE0ysCH.js";import{c as Ae}from"./components-DRJtDzFc.js";import{E as Ee}from"./editor-jsonify-a0-cuTTe.js";import{B as et}from"./blur-input-Db4dJB3Q.js";import{a as Ou,T as Ap}from"./tex-error-view-IbvgHgaq.js";import{i as Eu,g as Sp,b as Pp,a as Np}from"./icon-paths-CjY0sQEg.js";import{p as Gt,F as Ip}from"./free-response-editor-BN5ar-77.js";import{I as jp}from"./input-number-editor-CIyioWhj.js";import{P as Lp,d as Rp}from"./Popper-DHgsclpW.js";import{L as Fp}from"./label-image-editor-7ELczuAW.js";import{M as Op}from"./matcher-editor-CI1h_zZ_.js";import{N as Ep}from"./number-line-editor-Bk3xchmS.js";import{P as Dp}from"./phet-simulation-editor-DX-69Tbo.js";import{P as Mp}from"./plotter-editor-fGiKlehc.js";import{P as zp}from"./python-program-editor-c-9K8szC.js";import{S as _p}from"./sorter-editor-z2WlqZJi.js";const Bp={chooseType:oc,defaultPlotProps:lc,getEquationString:sc,typeToButton:uc};class Io extends F.Component{constructor(l){super(l),this.state=this.getInitialState(),this.handleBlur=this.handleBlur.bind(this),this.handleChange=this.handleChange.bind(this),this.handleKeyDown=this.handleKeyDown.bind(this)}getInitialState(){return{currentValue:JSON.stringify(this.props.value,null,4),valid:!0}}UNSAFE_componentWillReceiveProps(l){(!this.state.valid||!R.isEqual(l.value,JSON.parse(this.state.currentValue?this.state.currentValue:"")))&&this.setState(this.getInitialState())}handleKeyDown(l){if(l.key==="Tab"){const n=l.target.selectionStart,i=l.target.value,u=i.substring(0,n),p=i.substring(n,i.length);l.target.value=u+"    "+p,l.target.selectionStart=u.length+4,l.target.selectionEnd=u.length+4,l.preventDefault(),this.handleChange(l)}}handleChange(l){const n=l.target.value;try{let i=JSON.parse(n);R.isString(i)&&(i=JSON.parse(i)),this.setState({currentValue:n,valid:!0},function(){this.props.onChange(i)})}catch{this.setState({currentValue:n,valid:!1})}}handleBlur(l){const n=l.target.value;try{let i=JSON.parse(n);R.isString(i)&&(i=JSON.parse(i)),this.setState({currentValue:JSON.stringify(i,null,4),valid:!0},function(){this.props.onChange(i)})}catch{this.setState({currentValue:JSON.stringify(this.props.value,null,4),valid:!0})}}render(){const l="perseus-json-editor "+(this.state.valid?"valid":"invalid");return e.jsx("textarea",{className:l,value:this.state.currentValue,onChange:this.handleChange,onKeyDown:this.handleKeyDown,onBlur:this.handleBlur})}}x(Io,"displayName"),x(Io,"defaultProps",{value:{}});Io.__docgenInfo={description:"",methods:[{name:"handleKeyDown",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"handleChange",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"handleBlur",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null}],props:{multiLine:{required:!0,tsType:{name:"boolean"},description:""},value:{required:!1,tsType:{name:"any"},description:"",defaultValue:{value:"{}",computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newJson: any) => void",signature:{arguments:[{type:{name:"any"},name:"newJson"}],return:{name:"void"}}},description:""}}};const{InlineIcon:Vp}=Ae;class Du extends F.Component{render(){const{icon:l,onClick:n,title:i}=this.props;return e.jsx(Do,{className:"section-control-button simple-button simple-button--small ",onClick:u=>{u.preventDefault(),n()},role:"button",hideDefaultFocusRing:!0,"aria-label":i,style:$p.button,children:({hovered:u,focused:p,pressed:w})=>e.jsx(Vp,{...l})})}}const $p=ie.StyleSheet.create({button:{backgroundColor:me.gold,margin:2,paddingRight:10,paddingLeft:10,paddingBottom:2}});Du.__docgenInfo={description:"",methods:[],displayName:"SectionControlButton",props:{icon:{required:!0,tsType:{name:"PropsFor",elements:[{name:"InlineIcon"}],raw:"PropsFor<typeof InlineIcon>"},description:""},onClick:{required:!0,tsType:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}}},description:""},title:{required:!0,tsType:{name:"string"},description:""}}};var Mu={exports:{}};(function(o,l){(function(i,u){o.exports=u()})(typeof self<"u"?self:mc,function(){return function(n){var i={};function u(p){if(i[p])return i[p].exports;var w=i[p]={i:p,l:!1,exports:{}};return n[p].call(w.exports,w,w.exports,u),w.l=!0,w.exports}return u.m=n,u.c=i,u.d=function(p,w,k){u.o(p,w)||Object.defineProperty(p,w,{enumerable:!0,get:k})},u.r=function(p){typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(p,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(p,"__esModule",{value:!0})},u.t=function(p,w){if(w&1&&(p=u(p)),w&8||w&4&&typeof p=="object"&&p&&p.__esModule)return p;var k=Object.create(null);if(u.r(k),Object.defineProperty(k,"default",{enumerable:!0,value:p}),w&2&&typeof p!="string")for(var b in p)u.d(k,b,(function(N){return p[N]}).bind(null,b));return k},u.n=function(p){var w=p&&p.__esModule?function(){return p.default}:function(){return p};return u.d(w,"a",w),w},u.o=function(p,w){return Object.prototype.hasOwnProperty.call(p,w)},u.p="",u(u.s=1)}([function(n,i,u){},function(n,i,u){u.r(i),u(0);var p=function(){function h(t,a,r){this.lexer=void 0,this.start=void 0,this.end=void 0,this.lexer=t,this.start=a,this.end=r}return h.range=function(a,r){return r?!a||!a.loc||!r.loc||a.loc.lexer!==r.loc.lexer?null:new h(a.loc.lexer,a.loc.start,r.loc.end):a&&a.loc},h}(),w=function(){function h(a,r){this.text=void 0,this.loc=void 0,this.text=a,this.loc=r}var t=h.prototype;return t.range=function(r,s){return new h(s,p.range(this,r))},h}(),k=function h(t,a){this.position=void 0;var r="KaTeX parse error: "+t,s,m=a&&a.loc;if(m&&m.start<=m.end){var g=m.lexer.input;s=m.start;var f=m.end;s===g.length?r+=" at end of input: ":r+=" at position "+(s+1)+": ";var v=g.slice(s,f).replace(/[^]/g,"$&̲"),C;s>15?C="…"+g.slice(s-15,s):C=g.slice(0,s);var P;f+15<g.length?P=g.slice(f,f+15)+"…":P=g.slice(f),r+=C+v+P}var L=new Error(r);return L.name="ParseError",L.__proto__=h.prototype,L.position=s,L};k.prototype.__proto__=Error.prototype;var b=k,N=function(t,a){return t.indexOf(a)!==-1},O=function(t,a){return t===void 0?a:t},B=/([A-Z])/g,V=function(t){return t.replace(B,"-$1").toLowerCase()},G={"&":"&amp;",">":"&gt;","<":"&lt;",'"':"&quot;","'":"&#x27;"},_=/[&><"']/g;function M(h){return String(h).replace(_,function(t){return G[t]})}var oe=function h(t){return t.type==="ordgroup"||t.type==="color"?t.body.length===1?h(t.body[0]):t:t.type==="font"?h(t.body):t},W=function(t){var a=oe(t);return a.type==="mathord"||a.type==="textord"||a.type==="atom"},U=function(t){if(!t)throw new Error("Expected non-null, but got "+String(t));return t},E=function(t){var a=/^\s*([^\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(t);return a!=null?a[1]:"_relative"},A={contains:N,deflt:O,escape:M,hyphenate:V,getBaseElem:oe,isCharacterBox:W,protocolFromUrl:E},$=function(){function h(a){this.displayMode=void 0,this.output=void 0,this.leqno=void 0,this.fleqn=void 0,this.throwOnError=void 0,this.errorColor=void 0,this.macros=void 0,this.minRuleThickness=void 0,this.colorIsTextColor=void 0,this.strict=void 0,this.trust=void 0,this.maxSize=void 0,this.maxExpand=void 0,a=a||{},this.displayMode=A.deflt(a.displayMode,!1),this.output=A.deflt(a.output,"htmlAndMathml"),this.leqno=A.deflt(a.leqno,!1),this.fleqn=A.deflt(a.fleqn,!1),this.throwOnError=A.deflt(a.throwOnError,!0),this.errorColor=A.deflt(a.errorColor,"#cc0000"),this.macros=a.macros||{},this.minRuleThickness=Math.max(0,A.deflt(a.minRuleThickness,0)),this.colorIsTextColor=A.deflt(a.colorIsTextColor,!1),this.strict=A.deflt(a.strict,"warn"),this.trust=A.deflt(a.trust,!1),this.maxSize=Math.max(0,A.deflt(a.maxSize,1/0)),this.maxExpand=Math.max(0,A.deflt(a.maxExpand,1e3))}var t=h.prototype;return t.reportNonstrict=function(r,s,m){var g=this.strict;if(typeof g=="function"&&(g=g(r,s,m)),!(!g||g==="ignore")){if(g===!0||g==="error")throw new b("LaTeX-incompatible input and strict mode is set to 'error': "+(s+" ["+r+"]"),m);g==="warn"?typeof console<"u"&&console.warn("LaTeX-incompatible input and strict mode is set to 'warn': "+(s+" ["+r+"]")):typeof console<"u"&&console.warn("LaTeX-incompatible input and strict mode is set to "+("unrecognized '"+g+"': "+s+" ["+r+"]"))}},t.useStrictBehavior=function(r,s,m){var g=this.strict;if(typeof g=="function")try{g=g(r,s,m)}catch{g="error"}return!g||g==="ignore"?!1:g===!0||g==="error"?!0:g==="warn"?(typeof console<"u"&&console.warn("LaTeX-incompatible input and strict mode is set to 'warn': "+(s+" ["+r+"]")),!1):(typeof console<"u"&&console.warn("LaTeX-incompatible input and strict mode is set to "+("unrecognized '"+g+"': "+s+" ["+r+"]")),!1)},t.isTrusted=function(r){r.url&&!r.protocol&&(r.protocol=A.protocolFromUrl(r.url));var s=typeof this.trust=="function"?this.trust(r):this.trust;return!!s},h}(),J=function(){function h(a,r,s){this.id=void 0,this.size=void 0,this.cramped=void 0,this.id=a,this.size=r,this.cramped=s}var t=h.prototype;return t.sup=function(){return Ke[tt[this.id]]},t.sub=function(){return Ke[sr[this.id]]},t.fracNum=function(){return Ke[pa[this.id]]},t.fracDen=function(){return Ke[qi[this.id]]},t.cramp=function(){return Ke[Ci[this.id]]},t.text=function(){return Ke[ur[this.id]]},t.isTight=function(){return this.size>=2},h}(),Z=0,ue=1,de=2,Se=3,Be=4,le=5,fe=6,ge=7,Ke=[new J(Z,0,!1),new J(ue,0,!0),new J(de,1,!1),new J(Se,1,!0),new J(Be,2,!1),new J(le,2,!0),new J(fe,3,!1),new J(ge,3,!0)],tt=[Be,le,Be,le,fe,ge,fe,ge],sr=[le,le,le,le,ge,ge,ge,ge],pa=[de,Se,Be,le,fe,ge,fe,ge],qi=[Se,Se,le,le,ge,ge,ge,ge],Ci=[ue,ue,Se,Se,le,le,ge,ge],ur=[Z,ue,de,Se,de,Se,de,Se],be={DISPLAY:Ke[Z],TEXT:Ke[de],SCRIPT:Ke[Be],SCRIPTSCRIPT:Ke[fe]},ha=[{name:"latin",blocks:[[256,591],[768,879]]},{name:"cyrillic",blocks:[[1024,1279]]},{name:"brahmic",blocks:[[2304,4255]]},{name:"georgian",blocks:[[4256,4351]]},{name:"cjk",blocks:[[12288,12543],[19968,40879],[65280,65376]]},{name:"hangul",blocks:[[44032,55215]]}];function dr(h){for(var t=0;t<ha.length;t++)for(var a=ha[t],r=0;r<a.blocks.length;r++){var s=a.blocks[r];if(h>=s[0]&&h<=s[1])return a.name}return null}var at=[];ha.forEach(function(h){return h.blocks.forEach(function(t){return at.push.apply(at,t)})});function mr(h){for(var t=0;t<at.length;t+=2)if(h>=at[t]&&h<=at[t+1])return!0;return!1}var pt=80,Ti=function(t,a){return"M95,"+(622+t+a)+`
c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14
c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54
c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10
s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429
c69,-144,104.5,-217.7,106.5,-221
l`+t/2.075+" -"+t+`
c5.3,-9.3,12,-14,20,-14
H400000v`+(40+t)+`H845.2724
s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7
c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z
M`+(834+t)+" "+a+"h400000v"+(40+t)+"h-400000z"},Ai=function(t,a){return"M263,"+(601+t+a)+`c0.7,0,18,39.7,52,119
c34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120
c340,-704.7,510.7,-1060.3,512,-1067
l`+t/2.084+" -"+t+`
c4.7,-7.3,11,-11,19,-11
H40000v`+(40+t)+`H1012.3
s-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232
c-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1
s-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26
c-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z
M`+(1001+t)+" "+a+"h400000v"+(40+t)+"h-400000z"},Si=function(t,a){return"M983 "+(10+t+a)+`
l`+t/3.13+" -"+t+`
c4,-6.7,10,-10,18,-10 H400000v`+(40+t)+`
H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7
s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744
c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30
c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722
c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5
c53.7,-170.3,84.5,-266.8,92.5,-289.5z
M`+(1001+t)+" "+a+"h400000v"+(40+t)+"h-400000z"},cr=function(t,a){return"M424,"+(2398+t+a)+`
c-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514
c0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20
s-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121
s209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081
l`+t/4.223+" -"+t+`c4,-6.7,10,-10,18,-10 H400000
v`+(40+t)+`H1014.6
s-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185
c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2z M`+(1001+t)+" "+a+`
h400000v`+(40+t)+"h-400000z"},Pi=function(t,a){return"M473,"+(2713+t+a)+`
c339.3,-1799.3,509.3,-2700,510,-2702 l`+t/5.298+" -"+t+`
c3.3,-7.3,9.3,-11,18,-11 H400000v`+(40+t)+`H1017.7
s-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9
c-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200
c0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26
s76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,
606zM`+(1001+t)+" "+a+"h400000v"+(40+t)+"H1017.7z"},pr=function(t,a,r){var s=r-54-a-t;return"M702 "+(t+a)+"H400000"+(40+t)+`
H742v`+s+`l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1
h-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170
c-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667
219 661 l218 661zM702 `+a+"H400000v"+(40+t)+"H742z"},hr=function(t,a,r){a=1e3*a;var s="";switch(t){case"sqrtMain":s=Ti(a,pt);break;case"sqrtSize1":s=Ai(a,pt);break;case"sqrtSize2":s=Si(a,pt);break;case"sqrtSize3":s=cr(a,pt);break;case"sqrtSize4":s=Pi(a,pt);break;case"sqrtTall":s=pr(a,pt,r)}return s},gr={doubleleftarrow:`M262 157
l10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3
 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28
 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5
c2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5
 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87
-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7
-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z
m8 0v40h399730v-40zm0 194v40h399730v-40z`,doublerightarrow:`M399738 392l
-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5
 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88
-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68
-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18
-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782
c-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3
-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z`,leftarrow:`M400000 241H110l3-3c68.7-52.7 113.7-120
 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8
-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247
c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208
 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3
 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202
 l-3-3h399890zM100 241v40h399900v-40z`,leftbrace:`M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117
-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7
 5-6 9-10 13-.7 1-7.3 1-20 1H6z`,leftbraceunder:`M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13
 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688
 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7
-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z`,leftgroup:`M400000 80
H435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0
 435 0h399565z`,leftgroupunder:`M400000 262
H435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219
 435 219h399565z`,leftharpoon:`M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3
-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5
-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7
-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z`,leftharpoonplus:`M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5
 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3
-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7
-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z
m0 0v40h400000v-40z`,leftharpoondown:`M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333
 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5
 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667
-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z`,leftharpoondownplus:`M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12
 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7
-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0
v40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z`,lefthook:`M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5
-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3
-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21
 71.5 23h399859zM103 281v-40h399897v40z`,leftlinesegment:`M40 281 V428 H0 V94 H40 V241 H400000 v40z
M40 281 V428 H0 V94 H40 V241 H400000 v40z`,leftmapsto:`M40 281 V448H0V74H40V241H400000v40z
M40 281 V448H0V74H40V241H400000v40z`,leftToFrom:`M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23
-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8
c28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3
 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z`,longequal:`M0 50 h400000 v40H0z m0 194h40000v40H0z
M0 50 h400000 v40H0z m0 194h40000v40H0z`,midbrace:`M200428 334
c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14
-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7
 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11
 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z`,midbraceunder:`M199572 214
c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14
 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3
 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0
-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z`,oiintSize1:`M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6
-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z
m368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8
60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z`,oiintSize2:`M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8
-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z
m502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2
c0 110 84 276 504 276s502.4-166 502.4-276z`,oiiintSize1:`M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6
-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z
m525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0
85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z`,oiiintSize2:`M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8
-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z
m770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1
c0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z`,rightarrow:`M0 241v40h399891c-47.3 35.3-84 78-110 128
-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20
 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7
 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85
-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
 151.7 139 205zm0 0v40h399900v-40z`,rightbrace:`M400000 542l
-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5
s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1
c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z`,rightbraceunder:`M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3
 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237
-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z`,rightgroup:`M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0
 3-1 3-3v-38c-76-158-257-219-435-219H0z`,rightgroupunder:`M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18
 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z`,rightharpoon:`M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3
-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2
-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58
 69.2 92 94.5zm0 0v40h399900v-40z`,rightharpoonplus:`M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11
-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7
 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z
m0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z`,rightharpoondown:`M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8
 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5
-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95
-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z`,rightharpoondownplus:`M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8
 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3
 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3
-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z
m0-194v40h400000v-40zm0 0v40h400000v-40z`,righthook:`M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3
 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0
-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21
 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z`,rightlinesegment:`M399960 241 V94 h40 V428 h-40 V281 H0 v-40z
M399960 241 V94 h40 V428 h-40 V281 H0 v-40z`,rightToFrom:`M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23
 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32
-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142
-167z M100 147v40h399900v-40zM0 341v40h399900v-40z`,twoheadleftarrow:`M0 167c68 40
 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69
-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3
-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19
-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101
 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z`,twoheadrightarrow:`M400000 167
c-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3
 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42
 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333
-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70
 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z`,tilde1:`M200 55.538c-77 0-168 73.953-177 73.953-3 0-7
-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0
 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0
 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128
-68.267.847-113-73.952-191-73.952z`,tilde2:`M344 55.266c-142 0-300.638 81.316-311.5 86.418
-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9
 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114
c1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751
 181.476 676 181.476c-149 0-189-126.21-332-126.21z`,tilde3:`M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457
-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0
 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697
 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696
 -338 0-409-156.573-744-156.573z`,tilde4:`M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345
-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409
 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9
 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409
 -175.236-744-175.236z`,vec:`M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5
3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11
10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63
-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1
-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59
H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359
c-16-25.333-24-45-24-59z`,widehat1:`M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`,widehat2:`M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,widehat3:`M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,widehat4:`M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10
-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z`,widecheck1:`M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,
-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z`,widecheck2:`M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,widecheck3:`M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,widecheck4:`M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,
-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z`,baraboveleftarrow:`M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202
c4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5
c-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130
s-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47
121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6
s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11
c0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z
M100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z`,rightarrowabovebar:`M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32
-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0
13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39
-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5
-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5
-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67
151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z`,baraboveshortleftharpoon:`M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11
c1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17
c2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21
c-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40
c-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z
M0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z`,rightharpoonaboveshortbar:`M0,241 l0,40c399126,0,399993,0,399993,0
c4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,
-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6
c-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z
M0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z`,shortbaraboveleftharpoon:`M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11
c1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,
1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,
-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z
M93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z`,shortrightharpoonabovebar:`M53,241l0,40c398570,0,399437,0,399437,0
c4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,
-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6
c-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z
M500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z`},ht=function(){function h(a){this.children=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,this.children=a,this.classes=[],this.height=0,this.depth=0,this.maxFontSize=0,this.style={}}var t=h.prototype;return t.hasClass=function(r){return A.contains(this.classes,r)},t.toNode=function(){for(var r=document.createDocumentFragment(),s=0;s<this.children.length;s++)r.appendChild(this.children[s].toNode());return r},t.toMarkup=function(){for(var r="",s=0;s<this.children.length;s++)r+=this.children[s].toMarkup();return r},t.toText=function(){var r=function(m){return m.toText()};return this.children.map(r).join("")},h}(),gt=function(t){return t.filter(function(a){return a}).join(" ")},Xt=function(t,a,r){if(this.classes=t||[],this.attributes={},this.height=0,this.depth=0,this.maxFontSize=0,this.style=r||{},a){a.style.isTight()&&this.classes.push("mtight");var s=a.getColor();s&&(this.style.color=s)}},ga=function(t){var a=document.createElement(t);a.className=gt(this.classes);for(var r in this.style)this.style.hasOwnProperty(r)&&(a.style[r]=this.style[r]);for(var s in this.attributes)this.attributes.hasOwnProperty(s)&&a.setAttribute(s,this.attributes[s]);for(var m=0;m<this.children.length;m++)a.appendChild(this.children[m].toNode());return a},ya=function(t){var a="<"+t;this.classes.length&&(a+=' class="'+A.escape(gt(this.classes))+'"');var r="";for(var s in this.style)this.style.hasOwnProperty(s)&&(r+=A.hyphenate(s)+":"+this.style[s]+";");r&&(a+=' style="'+A.escape(r)+'"');for(var m in this.attributes)this.attributes.hasOwnProperty(m)&&(a+=" "+m+'="'+A.escape(this.attributes[m])+'"');a+=">";for(var g=0;g<this.children.length;g++)a+=this.children[g].toMarkup();return a+="</"+t+">",a},Pe=function(){function h(a,r,s,m){this.children=void 0,this.attributes=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.width=void 0,this.maxFontSize=void 0,this.style=void 0,Xt.call(this,a,s,m),this.children=r||[]}var t=h.prototype;return t.setAttribute=function(r,s){this.attributes[r]=s},t.hasClass=function(r){return A.contains(this.classes,r)},t.toNode=function(){return ga.call(this,"span")},t.toMarkup=function(){return ya.call(this,"span")},h}(),bn=function(){function h(a,r,s,m){this.children=void 0,this.attributes=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,Xt.call(this,r,m),this.children=s||[],this.setAttribute("href",a)}var t=h.prototype;return t.setAttribute=function(r,s){this.attributes[r]=s},t.hasClass=function(r){return A.contains(this.classes,r)},t.toNode=function(){return ga.call(this,"a")},t.toMarkup=function(){return ya.call(this,"a")},h}(),On=function(){function h(a,r,s){this.src=void 0,this.alt=void 0,this.classes=void 0,this.height=void 0,this.depth=void 0,this.maxFontSize=void 0,this.style=void 0,this.alt=r,this.src=a,this.classes=["mord"],this.style=s}var t=h.prototype;return t.hasClass=function(r){return A.contains(this.classes,r)},t.toNode=function(){var r=document.createElement("img");r.src=this.src,r.alt=this.alt,r.className="mord";for(var s in this.style)this.style.hasOwnProperty(s)&&(r.style[s]=this.style[s]);return r},t.toMarkup=function(){var r="<img  src='"+this.src+" 'alt='"+this.alt+"' ",s="";for(var m in this.style)this.style.hasOwnProperty(m)&&(s+=A.hyphenate(m)+":"+this.style[m]+";");return s&&(r+=' style="'+A.escape(s)+'"'),r+="'/>",r},h}(),yt={î:"ı̂",ï:"ı̈",í:"ı́",ì:"ı̀"},un=function(){function h(a,r,s,m,g,f,v,C){this.text=void 0,this.height=void 0,this.depth=void 0,this.italic=void 0,this.skew=void 0,this.width=void 0,this.maxFontSize=void 0,this.classes=void 0,this.style=void 0,this.text=a,this.height=r||0,this.depth=s||0,this.italic=m||0,this.skew=g||0,this.width=f||0,this.classes=v||[],this.style=C||{},this.maxFontSize=0;var P=dr(this.text.charCodeAt(0));P&&this.classes.push(P+"_fallback"),/[îïíì]/.test(this.text)&&(this.text=yt[this.text])}var t=h.prototype;return t.hasClass=function(r){return A.contains(this.classes,r)},t.toNode=function(){var r=document.createTextNode(this.text),s=null;this.italic>0&&(s=document.createElement("span"),s.style.marginRight=this.italic+"em"),this.classes.length>0&&(s=s||document.createElement("span"),s.className=gt(this.classes));for(var m in this.style)this.style.hasOwnProperty(m)&&(s=s||document.createElement("span"),s.style[m]=this.style[m]);return s?(s.appendChild(r),s):r},t.toMarkup=function(){var r=!1,s="<span";this.classes.length&&(r=!0,s+=' class="',s+=A.escape(gt(this.classes)),s+='"');var m="";this.italic>0&&(m+="margin-right:"+this.italic+"em;");for(var g in this.style)this.style.hasOwnProperty(g)&&(m+=A.hyphenate(g)+":"+this.style[g]+";");m&&(r=!0,s+=' style="'+A.escape(m)+'"');var f=A.escape(this.text);return r?(s+=">",s+=f,s+="</span>",s):f},h}(),Un=function(){function h(a,r){this.children=void 0,this.attributes=void 0,this.children=a||[],this.attributes=r||{}}var t=h.prototype;return t.toNode=function(){var r="http://www.w3.org/2000/svg",s=document.createElementNS(r,"svg");for(var m in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,m)&&s.setAttribute(m,this.attributes[m]);for(var g=0;g<this.children.length;g++)s.appendChild(this.children[g].toNode());return s},t.toMarkup=function(){var r="<svg";for(var s in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,s)&&(r+=" "+s+"='"+this.attributes[s]+"'");r+=">";for(var m=0;m<this.children.length;m++)r+=this.children[m].toMarkup();return r+="</svg>",r},h}(),Kn=function(){function h(a,r){this.pathName=void 0,this.alternate=void 0,this.pathName=a,this.alternate=r}var t=h.prototype;return t.toNode=function(){var r="http://www.w3.org/2000/svg",s=document.createElementNS(r,"path");return this.alternate?s.setAttribute("d",this.alternate):s.setAttribute("d",gr[this.pathName]),s},t.toMarkup=function(){return this.alternate?"<path d='"+this.alternate+"'/>":"<path d='"+gr[this.pathName]+"'/>"},h}(),Ni=function(){function h(a){this.attributes=void 0,this.attributes=a||{}}var t=h.prototype;return t.toNode=function(){var r="http://www.w3.org/2000/svg",s=document.createElementNS(r,"line");for(var m in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,m)&&s.setAttribute(m,this.attributes[m]);return s},t.toMarkup=function(){var r="<line";for(var s in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,s)&&(r+=" "+s+"='"+this.attributes[s]+"'");return r+="/>",r},h}();function Jo(h){if(h instanceof un)return h;throw new Error("Expected symbolNode but got "+String(h)+".")}function Rd(h){if(h instanceof Pe)return h;throw new Error("Expected span<HtmlDomNode> but got "+String(h)+".")}var Ft={"AMS-Regular":{65:[0,.68889,0,0,.72222],66:[0,.68889,0,0,.66667],67:[0,.68889,0,0,.72222],68:[0,.68889,0,0,.72222],69:[0,.68889,0,0,.66667],70:[0,.68889,0,0,.61111],71:[0,.68889,0,0,.77778],72:[0,.68889,0,0,.77778],73:[0,.68889,0,0,.38889],74:[.16667,.68889,0,0,.5],75:[0,.68889,0,0,.77778],76:[0,.68889,0,0,.66667],77:[0,.68889,0,0,.94445],78:[0,.68889,0,0,.72222],79:[.16667,.68889,0,0,.77778],80:[0,.68889,0,0,.61111],81:[.16667,.68889,0,0,.77778],82:[0,.68889,0,0,.72222],83:[0,.68889,0,0,.55556],84:[0,.68889,0,0,.66667],85:[0,.68889,0,0,.72222],86:[0,.68889,0,0,.72222],87:[0,.68889,0,0,1],88:[0,.68889,0,0,.72222],89:[0,.68889,0,0,.72222],90:[0,.68889,0,0,.66667],107:[0,.68889,0,0,.55556],165:[0,.675,.025,0,.75],174:[.15559,.69224,0,0,.94666],240:[0,.68889,0,0,.55556],295:[0,.68889,0,0,.54028],710:[0,.825,0,0,2.33334],732:[0,.9,0,0,2.33334],770:[0,.825,0,0,2.33334],771:[0,.9,0,0,2.33334],989:[.08167,.58167,0,0,.77778],1008:[0,.43056,.04028,0,.66667],8245:[0,.54986,0,0,.275],8463:[0,.68889,0,0,.54028],8487:[0,.68889,0,0,.72222],8498:[0,.68889,0,0,.55556],8502:[0,.68889,0,0,.66667],8503:[0,.68889,0,0,.44445],8504:[0,.68889,0,0,.66667],8513:[0,.68889,0,0,.63889],8592:[-.03598,.46402,0,0,.5],8594:[-.03598,.46402,0,0,.5],8602:[-.13313,.36687,0,0,1],8603:[-.13313,.36687,0,0,1],8606:[.01354,.52239,0,0,1],8608:[.01354,.52239,0,0,1],8610:[.01354,.52239,0,0,1.11111],8611:[.01354,.52239,0,0,1.11111],8619:[0,.54986,0,0,1],8620:[0,.54986,0,0,1],8621:[-.13313,.37788,0,0,1.38889],8622:[-.13313,.36687,0,0,1],8624:[0,.69224,0,0,.5],8625:[0,.69224,0,0,.5],8630:[0,.43056,0,0,1],8631:[0,.43056,0,0,1],8634:[.08198,.58198,0,0,.77778],8635:[.08198,.58198,0,0,.77778],8638:[.19444,.69224,0,0,.41667],8639:[.19444,.69224,0,0,.41667],8642:[.19444,.69224,0,0,.41667],8643:[.19444,.69224,0,0,.41667],8644:[.1808,.675,0,0,1],8646:[.1808,.675,0,0,1],8647:[.1808,.675,0,0,1],8648:[.19444,.69224,0,0,.83334],8649:[.1808,.675,0,0,1],8650:[.19444,.69224,0,0,.83334],8651:[.01354,.52239,0,0,1],8652:[.01354,.52239,0,0,1],8653:[-.13313,.36687,0,0,1],8654:[-.13313,.36687,0,0,1],8655:[-.13313,.36687,0,0,1],8666:[.13667,.63667,0,0,1],8667:[.13667,.63667,0,0,1],8669:[-.13313,.37788,0,0,1],8672:[-.064,.437,0,0,1.334],8674:[-.064,.437,0,0,1.334],8705:[0,.825,0,0,.5],8708:[0,.68889,0,0,.55556],8709:[.08167,.58167,0,0,.77778],8717:[0,.43056,0,0,.42917],8722:[-.03598,.46402,0,0,.5],8724:[.08198,.69224,0,0,.77778],8726:[.08167,.58167,0,0,.77778],8733:[0,.69224,0,0,.77778],8736:[0,.69224,0,0,.72222],8737:[0,.69224,0,0,.72222],8738:[.03517,.52239,0,0,.72222],8739:[.08167,.58167,0,0,.22222],8740:[.25142,.74111,0,0,.27778],8741:[.08167,.58167,0,0,.38889],8742:[.25142,.74111,0,0,.5],8756:[0,.69224,0,0,.66667],8757:[0,.69224,0,0,.66667],8764:[-.13313,.36687,0,0,.77778],8765:[-.13313,.37788,0,0,.77778],8769:[-.13313,.36687,0,0,.77778],8770:[-.03625,.46375,0,0,.77778],8774:[.30274,.79383,0,0,.77778],8776:[-.01688,.48312,0,0,.77778],8778:[.08167,.58167,0,0,.77778],8782:[.06062,.54986,0,0,.77778],8783:[.06062,.54986,0,0,.77778],8785:[.08198,.58198,0,0,.77778],8786:[.08198,.58198,0,0,.77778],8787:[.08198,.58198,0,0,.77778],8790:[0,.69224,0,0,.77778],8791:[.22958,.72958,0,0,.77778],8796:[.08198,.91667,0,0,.77778],8806:[.25583,.75583,0,0,.77778],8807:[.25583,.75583,0,0,.77778],8808:[.25142,.75726,0,0,.77778],8809:[.25142,.75726,0,0,.77778],8812:[.25583,.75583,0,0,.5],8814:[.20576,.70576,0,0,.77778],8815:[.20576,.70576,0,0,.77778],8816:[.30274,.79383,0,0,.77778],8817:[.30274,.79383,0,0,.77778],8818:[.22958,.72958,0,0,.77778],8819:[.22958,.72958,0,0,.77778],8822:[.1808,.675,0,0,.77778],8823:[.1808,.675,0,0,.77778],8828:[.13667,.63667,0,0,.77778],8829:[.13667,.63667,0,0,.77778],8830:[.22958,.72958,0,0,.77778],8831:[.22958,.72958,0,0,.77778],8832:[.20576,.70576,0,0,.77778],8833:[.20576,.70576,0,0,.77778],8840:[.30274,.79383,0,0,.77778],8841:[.30274,.79383,0,0,.77778],8842:[.13597,.63597,0,0,.77778],8843:[.13597,.63597,0,0,.77778],8847:[.03517,.54986,0,0,.77778],8848:[.03517,.54986,0,0,.77778],8858:[.08198,.58198,0,0,.77778],8859:[.08198,.58198,0,0,.77778],8861:[.08198,.58198,0,0,.77778],8862:[0,.675,0,0,.77778],8863:[0,.675,0,0,.77778],8864:[0,.675,0,0,.77778],8865:[0,.675,0,0,.77778],8872:[0,.69224,0,0,.61111],8873:[0,.69224,0,0,.72222],8874:[0,.69224,0,0,.88889],8876:[0,.68889,0,0,.61111],8877:[0,.68889,0,0,.61111],8878:[0,.68889,0,0,.72222],8879:[0,.68889,0,0,.72222],8882:[.03517,.54986,0,0,.77778],8883:[.03517,.54986,0,0,.77778],8884:[.13667,.63667,0,0,.77778],8885:[.13667,.63667,0,0,.77778],8888:[0,.54986,0,0,1.11111],8890:[.19444,.43056,0,0,.55556],8891:[.19444,.69224,0,0,.61111],8892:[.19444,.69224,0,0,.61111],8901:[0,.54986,0,0,.27778],8903:[.08167,.58167,0,0,.77778],8905:[.08167,.58167,0,0,.77778],8906:[.08167,.58167,0,0,.77778],8907:[0,.69224,0,0,.77778],8908:[0,.69224,0,0,.77778],8909:[-.03598,.46402,0,0,.77778],8910:[0,.54986,0,0,.76042],8911:[0,.54986,0,0,.76042],8912:[.03517,.54986,0,0,.77778],8913:[.03517,.54986,0,0,.77778],8914:[0,.54986,0,0,.66667],8915:[0,.54986,0,0,.66667],8916:[0,.69224,0,0,.66667],8918:[.0391,.5391,0,0,.77778],8919:[.0391,.5391,0,0,.77778],8920:[.03517,.54986,0,0,1.33334],8921:[.03517,.54986,0,0,1.33334],8922:[.38569,.88569,0,0,.77778],8923:[.38569,.88569,0,0,.77778],8926:[.13667,.63667,0,0,.77778],8927:[.13667,.63667,0,0,.77778],8928:[.30274,.79383,0,0,.77778],8929:[.30274,.79383,0,0,.77778],8934:[.23222,.74111,0,0,.77778],8935:[.23222,.74111,0,0,.77778],8936:[.23222,.74111,0,0,.77778],8937:[.23222,.74111,0,0,.77778],8938:[.20576,.70576,0,0,.77778],8939:[.20576,.70576,0,0,.77778],8940:[.30274,.79383,0,0,.77778],8941:[.30274,.79383,0,0,.77778],8994:[.19444,.69224,0,0,.77778],8995:[.19444,.69224,0,0,.77778],9416:[.15559,.69224,0,0,.90222],9484:[0,.69224,0,0,.5],9488:[0,.69224,0,0,.5],9492:[0,.37788,0,0,.5],9496:[0,.37788,0,0,.5],9585:[.19444,.68889,0,0,.88889],9586:[.19444,.74111,0,0,.88889],9632:[0,.675,0,0,.77778],9633:[0,.675,0,0,.77778],9650:[0,.54986,0,0,.72222],9651:[0,.54986,0,0,.72222],9654:[.03517,.54986,0,0,.77778],9660:[0,.54986,0,0,.72222],9661:[0,.54986,0,0,.72222],9664:[.03517,.54986,0,0,.77778],9674:[.11111,.69224,0,0,.66667],9733:[.19444,.69224,0,0,.94445],10003:[0,.69224,0,0,.83334],10016:[0,.69224,0,0,.83334],10731:[.11111,.69224,0,0,.66667],10846:[.19444,.75583,0,0,.61111],10877:[.13667,.63667,0,0,.77778],10878:[.13667,.63667,0,0,.77778],10885:[.25583,.75583,0,0,.77778],10886:[.25583,.75583,0,0,.77778],10887:[.13597,.63597,0,0,.77778],10888:[.13597,.63597,0,0,.77778],10889:[.26167,.75726,0,0,.77778],10890:[.26167,.75726,0,0,.77778],10891:[.48256,.98256,0,0,.77778],10892:[.48256,.98256,0,0,.77778],10901:[.13667,.63667,0,0,.77778],10902:[.13667,.63667,0,0,.77778],10933:[.25142,.75726,0,0,.77778],10934:[.25142,.75726,0,0,.77778],10935:[.26167,.75726,0,0,.77778],10936:[.26167,.75726,0,0,.77778],10937:[.26167,.75726,0,0,.77778],10938:[.26167,.75726,0,0,.77778],10949:[.25583,.75583,0,0,.77778],10950:[.25583,.75583,0,0,.77778],10955:[.28481,.79383,0,0,.77778],10956:[.28481,.79383,0,0,.77778],57350:[.08167,.58167,0,0,.22222],57351:[.08167,.58167,0,0,.38889],57352:[.08167,.58167,0,0,.77778],57353:[0,.43056,.04028,0,.66667],57356:[.25142,.75726,0,0,.77778],57357:[.25142,.75726,0,0,.77778],57358:[.41951,.91951,0,0,.77778],57359:[.30274,.79383,0,0,.77778],57360:[.30274,.79383,0,0,.77778],57361:[.41951,.91951,0,0,.77778],57366:[.25142,.75726,0,0,.77778],57367:[.25142,.75726,0,0,.77778],57368:[.25142,.75726,0,0,.77778],57369:[.25142,.75726,0,0,.77778],57370:[.13597,.63597,0,0,.77778],57371:[.13597,.63597,0,0,.77778]},"Caligraphic-Regular":{48:[0,.43056,0,0,.5],49:[0,.43056,0,0,.5],50:[0,.43056,0,0,.5],51:[.19444,.43056,0,0,.5],52:[.19444,.43056,0,0,.5],53:[.19444,.43056,0,0,.5],54:[0,.64444,0,0,.5],55:[.19444,.43056,0,0,.5],56:[0,.64444,0,0,.5],57:[.19444,.43056,0,0,.5],65:[0,.68333,0,.19445,.79847],66:[0,.68333,.03041,.13889,.65681],67:[0,.68333,.05834,.13889,.52653],68:[0,.68333,.02778,.08334,.77139],69:[0,.68333,.08944,.11111,.52778],70:[0,.68333,.09931,.11111,.71875],71:[.09722,.68333,.0593,.11111,.59487],72:[0,.68333,.00965,.11111,.84452],73:[0,.68333,.07382,0,.54452],74:[.09722,.68333,.18472,.16667,.67778],75:[0,.68333,.01445,.05556,.76195],76:[0,.68333,0,.13889,.68972],77:[0,.68333,0,.13889,1.2009],78:[0,.68333,.14736,.08334,.82049],79:[0,.68333,.02778,.11111,.79611],80:[0,.68333,.08222,.08334,.69556],81:[.09722,.68333,0,.11111,.81667],82:[0,.68333,0,.08334,.8475],83:[0,.68333,.075,.13889,.60556],84:[0,.68333,.25417,0,.54464],85:[0,.68333,.09931,.08334,.62583],86:[0,.68333,.08222,0,.61278],87:[0,.68333,.08222,.08334,.98778],88:[0,.68333,.14643,.13889,.7133],89:[.09722,.68333,.08222,.08334,.66834],90:[0,.68333,.07944,.13889,.72473]},"Fraktur-Regular":{33:[0,.69141,0,0,.29574],34:[0,.69141,0,0,.21471],38:[0,.69141,0,0,.73786],39:[0,.69141,0,0,.21201],40:[.24982,.74947,0,0,.38865],41:[.24982,.74947,0,0,.38865],42:[0,.62119,0,0,.27764],43:[.08319,.58283,0,0,.75623],44:[0,.10803,0,0,.27764],45:[.08319,.58283,0,0,.75623],46:[0,.10803,0,0,.27764],47:[.24982,.74947,0,0,.50181],48:[0,.47534,0,0,.50181],49:[0,.47534,0,0,.50181],50:[0,.47534,0,0,.50181],51:[.18906,.47534,0,0,.50181],52:[.18906,.47534,0,0,.50181],53:[.18906,.47534,0,0,.50181],54:[0,.69141,0,0,.50181],55:[.18906,.47534,0,0,.50181],56:[0,.69141,0,0,.50181],57:[.18906,.47534,0,0,.50181],58:[0,.47534,0,0,.21606],59:[.12604,.47534,0,0,.21606],61:[-.13099,.36866,0,0,.75623],63:[0,.69141,0,0,.36245],65:[0,.69141,0,0,.7176],66:[0,.69141,0,0,.88397],67:[0,.69141,0,0,.61254],68:[0,.69141,0,0,.83158],69:[0,.69141,0,0,.66278],70:[.12604,.69141,0,0,.61119],71:[0,.69141,0,0,.78539],72:[.06302,.69141,0,0,.7203],73:[0,.69141,0,0,.55448],74:[.12604,.69141,0,0,.55231],75:[0,.69141,0,0,.66845],76:[0,.69141,0,0,.66602],77:[0,.69141,0,0,1.04953],78:[0,.69141,0,0,.83212],79:[0,.69141,0,0,.82699],80:[.18906,.69141,0,0,.82753],81:[.03781,.69141,0,0,.82699],82:[0,.69141,0,0,.82807],83:[0,.69141,0,0,.82861],84:[0,.69141,0,0,.66899],85:[0,.69141,0,0,.64576],86:[0,.69141,0,0,.83131],87:[0,.69141,0,0,1.04602],88:[0,.69141,0,0,.71922],89:[.18906,.69141,0,0,.83293],90:[.12604,.69141,0,0,.60201],91:[.24982,.74947,0,0,.27764],93:[.24982,.74947,0,0,.27764],94:[0,.69141,0,0,.49965],97:[0,.47534,0,0,.50046],98:[0,.69141,0,0,.51315],99:[0,.47534,0,0,.38946],100:[0,.62119,0,0,.49857],101:[0,.47534,0,0,.40053],102:[.18906,.69141,0,0,.32626],103:[.18906,.47534,0,0,.5037],104:[.18906,.69141,0,0,.52126],105:[0,.69141,0,0,.27899],106:[0,.69141,0,0,.28088],107:[0,.69141,0,0,.38946],108:[0,.69141,0,0,.27953],109:[0,.47534,0,0,.76676],110:[0,.47534,0,0,.52666],111:[0,.47534,0,0,.48885],112:[.18906,.52396,0,0,.50046],113:[.18906,.47534,0,0,.48912],114:[0,.47534,0,0,.38919],115:[0,.47534,0,0,.44266],116:[0,.62119,0,0,.33301],117:[0,.47534,0,0,.5172],118:[0,.52396,0,0,.5118],119:[0,.52396,0,0,.77351],120:[.18906,.47534,0,0,.38865],121:[.18906,.47534,0,0,.49884],122:[.18906,.47534,0,0,.39054],8216:[0,.69141,0,0,.21471],8217:[0,.69141,0,0,.21471],58112:[0,.62119,0,0,.49749],58113:[0,.62119,0,0,.4983],58114:[.18906,.69141,0,0,.33328],58115:[.18906,.69141,0,0,.32923],58116:[.18906,.47534,0,0,.50343],58117:[0,.69141,0,0,.33301],58118:[0,.62119,0,0,.33409],58119:[0,.47534,0,0,.50073]},"Main-Bold":{33:[0,.69444,0,0,.35],34:[0,.69444,0,0,.60278],35:[.19444,.69444,0,0,.95833],36:[.05556,.75,0,0,.575],37:[.05556,.75,0,0,.95833],38:[0,.69444,0,0,.89444],39:[0,.69444,0,0,.31944],40:[.25,.75,0,0,.44722],41:[.25,.75,0,0,.44722],42:[0,.75,0,0,.575],43:[.13333,.63333,0,0,.89444],44:[.19444,.15556,0,0,.31944],45:[0,.44444,0,0,.38333],46:[0,.15556,0,0,.31944],47:[.25,.75,0,0,.575],48:[0,.64444,0,0,.575],49:[0,.64444,0,0,.575],50:[0,.64444,0,0,.575],51:[0,.64444,0,0,.575],52:[0,.64444,0,0,.575],53:[0,.64444,0,0,.575],54:[0,.64444,0,0,.575],55:[0,.64444,0,0,.575],56:[0,.64444,0,0,.575],57:[0,.64444,0,0,.575],58:[0,.44444,0,0,.31944],59:[.19444,.44444,0,0,.31944],60:[.08556,.58556,0,0,.89444],61:[-.10889,.39111,0,0,.89444],62:[.08556,.58556,0,0,.89444],63:[0,.69444,0,0,.54305],64:[0,.69444,0,0,.89444],65:[0,.68611,0,0,.86944],66:[0,.68611,0,0,.81805],67:[0,.68611,0,0,.83055],68:[0,.68611,0,0,.88194],69:[0,.68611,0,0,.75555],70:[0,.68611,0,0,.72361],71:[0,.68611,0,0,.90416],72:[0,.68611,0,0,.9],73:[0,.68611,0,0,.43611],74:[0,.68611,0,0,.59444],75:[0,.68611,0,0,.90138],76:[0,.68611,0,0,.69166],77:[0,.68611,0,0,1.09166],78:[0,.68611,0,0,.9],79:[0,.68611,0,0,.86388],80:[0,.68611,0,0,.78611],81:[.19444,.68611,0,0,.86388],82:[0,.68611,0,0,.8625],83:[0,.68611,0,0,.63889],84:[0,.68611,0,0,.8],85:[0,.68611,0,0,.88472],86:[0,.68611,.01597,0,.86944],87:[0,.68611,.01597,0,1.18888],88:[0,.68611,0,0,.86944],89:[0,.68611,.02875,0,.86944],90:[0,.68611,0,0,.70277],91:[.25,.75,0,0,.31944],92:[.25,.75,0,0,.575],93:[.25,.75,0,0,.31944],94:[0,.69444,0,0,.575],95:[.31,.13444,.03194,0,.575],97:[0,.44444,0,0,.55902],98:[0,.69444,0,0,.63889],99:[0,.44444,0,0,.51111],100:[0,.69444,0,0,.63889],101:[0,.44444,0,0,.52708],102:[0,.69444,.10903,0,.35139],103:[.19444,.44444,.01597,0,.575],104:[0,.69444,0,0,.63889],105:[0,.69444,0,0,.31944],106:[.19444,.69444,0,0,.35139],107:[0,.69444,0,0,.60694],108:[0,.69444,0,0,.31944],109:[0,.44444,0,0,.95833],110:[0,.44444,0,0,.63889],111:[0,.44444,0,0,.575],112:[.19444,.44444,0,0,.63889],113:[.19444,.44444,0,0,.60694],114:[0,.44444,0,0,.47361],115:[0,.44444,0,0,.45361],116:[0,.63492,0,0,.44722],117:[0,.44444,0,0,.63889],118:[0,.44444,.01597,0,.60694],119:[0,.44444,.01597,0,.83055],120:[0,.44444,0,0,.60694],121:[.19444,.44444,.01597,0,.60694],122:[0,.44444,0,0,.51111],123:[.25,.75,0,0,.575],124:[.25,.75,0,0,.31944],125:[.25,.75,0,0,.575],126:[.35,.34444,0,0,.575],168:[0,.69444,0,0,.575],172:[0,.44444,0,0,.76666],176:[0,.69444,0,0,.86944],177:[.13333,.63333,0,0,.89444],184:[.17014,0,0,0,.51111],198:[0,.68611,0,0,1.04166],215:[.13333,.63333,0,0,.89444],216:[.04861,.73472,0,0,.89444],223:[0,.69444,0,0,.59722],230:[0,.44444,0,0,.83055],247:[.13333,.63333,0,0,.89444],248:[.09722,.54167,0,0,.575],305:[0,.44444,0,0,.31944],338:[0,.68611,0,0,1.16944],339:[0,.44444,0,0,.89444],567:[.19444,.44444,0,0,.35139],710:[0,.69444,0,0,.575],711:[0,.63194,0,0,.575],713:[0,.59611,0,0,.575],714:[0,.69444,0,0,.575],715:[0,.69444,0,0,.575],728:[0,.69444,0,0,.575],729:[0,.69444,0,0,.31944],730:[0,.69444,0,0,.86944],732:[0,.69444,0,0,.575],733:[0,.69444,0,0,.575],915:[0,.68611,0,0,.69166],916:[0,.68611,0,0,.95833],920:[0,.68611,0,0,.89444],923:[0,.68611,0,0,.80555],926:[0,.68611,0,0,.76666],928:[0,.68611,0,0,.9],931:[0,.68611,0,0,.83055],933:[0,.68611,0,0,.89444],934:[0,.68611,0,0,.83055],936:[0,.68611,0,0,.89444],937:[0,.68611,0,0,.83055],8211:[0,.44444,.03194,0,.575],8212:[0,.44444,.03194,0,1.14999],8216:[0,.69444,0,0,.31944],8217:[0,.69444,0,0,.31944],8220:[0,.69444,0,0,.60278],8221:[0,.69444,0,0,.60278],8224:[.19444,.69444,0,0,.51111],8225:[.19444,.69444,0,0,.51111],8242:[0,.55556,0,0,.34444],8407:[0,.72444,.15486,0,.575],8463:[0,.69444,0,0,.66759],8465:[0,.69444,0,0,.83055],8467:[0,.69444,0,0,.47361],8472:[.19444,.44444,0,0,.74027],8476:[0,.69444,0,0,.83055],8501:[0,.69444,0,0,.70277],8592:[-.10889,.39111,0,0,1.14999],8593:[.19444,.69444,0,0,.575],8594:[-.10889,.39111,0,0,1.14999],8595:[.19444,.69444,0,0,.575],8596:[-.10889,.39111,0,0,1.14999],8597:[.25,.75,0,0,.575],8598:[.19444,.69444,0,0,1.14999],8599:[.19444,.69444,0,0,1.14999],8600:[.19444,.69444,0,0,1.14999],8601:[.19444,.69444,0,0,1.14999],8636:[-.10889,.39111,0,0,1.14999],8637:[-.10889,.39111,0,0,1.14999],8640:[-.10889,.39111,0,0,1.14999],8641:[-.10889,.39111,0,0,1.14999],8656:[-.10889,.39111,0,0,1.14999],8657:[.19444,.69444,0,0,.70277],8658:[-.10889,.39111,0,0,1.14999],8659:[.19444,.69444,0,0,.70277],8660:[-.10889,.39111,0,0,1.14999],8661:[.25,.75,0,0,.70277],8704:[0,.69444,0,0,.63889],8706:[0,.69444,.06389,0,.62847],8707:[0,.69444,0,0,.63889],8709:[.05556,.75,0,0,.575],8711:[0,.68611,0,0,.95833],8712:[.08556,.58556,0,0,.76666],8715:[.08556,.58556,0,0,.76666],8722:[.13333,.63333,0,0,.89444],8723:[.13333,.63333,0,0,.89444],8725:[.25,.75,0,0,.575],8726:[.25,.75,0,0,.575],8727:[-.02778,.47222,0,0,.575],8728:[-.02639,.47361,0,0,.575],8729:[-.02639,.47361,0,0,.575],8730:[.18,.82,0,0,.95833],8733:[0,.44444,0,0,.89444],8734:[0,.44444,0,0,1.14999],8736:[0,.69224,0,0,.72222],8739:[.25,.75,0,0,.31944],8741:[.25,.75,0,0,.575],8743:[0,.55556,0,0,.76666],8744:[0,.55556,0,0,.76666],8745:[0,.55556,0,0,.76666],8746:[0,.55556,0,0,.76666],8747:[.19444,.69444,.12778,0,.56875],8764:[-.10889,.39111,0,0,.89444],8768:[.19444,.69444,0,0,.31944],8771:[.00222,.50222,0,0,.89444],8776:[.02444,.52444,0,0,.89444],8781:[.00222,.50222,0,0,.89444],8801:[.00222,.50222,0,0,.89444],8804:[.19667,.69667,0,0,.89444],8805:[.19667,.69667,0,0,.89444],8810:[.08556,.58556,0,0,1.14999],8811:[.08556,.58556,0,0,1.14999],8826:[.08556,.58556,0,0,.89444],8827:[.08556,.58556,0,0,.89444],8834:[.08556,.58556,0,0,.89444],8835:[.08556,.58556,0,0,.89444],8838:[.19667,.69667,0,0,.89444],8839:[.19667,.69667,0,0,.89444],8846:[0,.55556,0,0,.76666],8849:[.19667,.69667,0,0,.89444],8850:[.19667,.69667,0,0,.89444],8851:[0,.55556,0,0,.76666],8852:[0,.55556,0,0,.76666],8853:[.13333,.63333,0,0,.89444],8854:[.13333,.63333,0,0,.89444],8855:[.13333,.63333,0,0,.89444],8856:[.13333,.63333,0,0,.89444],8857:[.13333,.63333,0,0,.89444],8866:[0,.69444,0,0,.70277],8867:[0,.69444,0,0,.70277],8868:[0,.69444,0,0,.89444],8869:[0,.69444,0,0,.89444],8900:[-.02639,.47361,0,0,.575],8901:[-.02639,.47361,0,0,.31944],8902:[-.02778,.47222,0,0,.575],8968:[.25,.75,0,0,.51111],8969:[.25,.75,0,0,.51111],8970:[.25,.75,0,0,.51111],8971:[.25,.75,0,0,.51111],8994:[-.13889,.36111,0,0,1.14999],8995:[-.13889,.36111,0,0,1.14999],9651:[.19444,.69444,0,0,1.02222],9657:[-.02778,.47222,0,0,.575],9661:[.19444,.69444,0,0,1.02222],9667:[-.02778,.47222,0,0,.575],9711:[.19444,.69444,0,0,1.14999],9824:[.12963,.69444,0,0,.89444],9825:[.12963,.69444,0,0,.89444],9826:[.12963,.69444,0,0,.89444],9827:[.12963,.69444,0,0,.89444],9837:[0,.75,0,0,.44722],9838:[.19444,.69444,0,0,.44722],9839:[.19444,.69444,0,0,.44722],10216:[.25,.75,0,0,.44722],10217:[.25,.75,0,0,.44722],10815:[0,.68611,0,0,.9],10927:[.19667,.69667,0,0,.89444],10928:[.19667,.69667,0,0,.89444],57376:[.19444,.69444,0,0,0]},"Main-BoldItalic":{33:[0,.69444,.11417,0,.38611],34:[0,.69444,.07939,0,.62055],35:[.19444,.69444,.06833,0,.94444],37:[.05556,.75,.12861,0,.94444],38:[0,.69444,.08528,0,.88555],39:[0,.69444,.12945,0,.35555],40:[.25,.75,.15806,0,.47333],41:[.25,.75,.03306,0,.47333],42:[0,.75,.14333,0,.59111],43:[.10333,.60333,.03306,0,.88555],44:[.19444,.14722,0,0,.35555],45:[0,.44444,.02611,0,.41444],46:[0,.14722,0,0,.35555],47:[.25,.75,.15806,0,.59111],48:[0,.64444,.13167,0,.59111],49:[0,.64444,.13167,0,.59111],50:[0,.64444,.13167,0,.59111],51:[0,.64444,.13167,0,.59111],52:[.19444,.64444,.13167,0,.59111],53:[0,.64444,.13167,0,.59111],54:[0,.64444,.13167,0,.59111],55:[.19444,.64444,.13167,0,.59111],56:[0,.64444,.13167,0,.59111],57:[0,.64444,.13167,0,.59111],58:[0,.44444,.06695,0,.35555],59:[.19444,.44444,.06695,0,.35555],61:[-.10889,.39111,.06833,0,.88555],63:[0,.69444,.11472,0,.59111],64:[0,.69444,.09208,0,.88555],65:[0,.68611,0,0,.86555],66:[0,.68611,.0992,0,.81666],67:[0,.68611,.14208,0,.82666],68:[0,.68611,.09062,0,.87555],69:[0,.68611,.11431,0,.75666],70:[0,.68611,.12903,0,.72722],71:[0,.68611,.07347,0,.89527],72:[0,.68611,.17208,0,.8961],73:[0,.68611,.15681,0,.47166],74:[0,.68611,.145,0,.61055],75:[0,.68611,.14208,0,.89499],76:[0,.68611,0,0,.69777],77:[0,.68611,.17208,0,1.07277],78:[0,.68611,.17208,0,.8961],79:[0,.68611,.09062,0,.85499],80:[0,.68611,.0992,0,.78721],81:[.19444,.68611,.09062,0,.85499],82:[0,.68611,.02559,0,.85944],83:[0,.68611,.11264,0,.64999],84:[0,.68611,.12903,0,.7961],85:[0,.68611,.17208,0,.88083],86:[0,.68611,.18625,0,.86555],87:[0,.68611,.18625,0,1.15999],88:[0,.68611,.15681,0,.86555],89:[0,.68611,.19803,0,.86555],90:[0,.68611,.14208,0,.70888],91:[.25,.75,.1875,0,.35611],93:[.25,.75,.09972,0,.35611],94:[0,.69444,.06709,0,.59111],95:[.31,.13444,.09811,0,.59111],97:[0,.44444,.09426,0,.59111],98:[0,.69444,.07861,0,.53222],99:[0,.44444,.05222,0,.53222],100:[0,.69444,.10861,0,.59111],101:[0,.44444,.085,0,.53222],102:[.19444,.69444,.21778,0,.4],103:[.19444,.44444,.105,0,.53222],104:[0,.69444,.09426,0,.59111],105:[0,.69326,.11387,0,.35555],106:[.19444,.69326,.1672,0,.35555],107:[0,.69444,.11111,0,.53222],108:[0,.69444,.10861,0,.29666],109:[0,.44444,.09426,0,.94444],110:[0,.44444,.09426,0,.64999],111:[0,.44444,.07861,0,.59111],112:[.19444,.44444,.07861,0,.59111],113:[.19444,.44444,.105,0,.53222],114:[0,.44444,.11111,0,.50167],115:[0,.44444,.08167,0,.48694],116:[0,.63492,.09639,0,.385],117:[0,.44444,.09426,0,.62055],118:[0,.44444,.11111,0,.53222],119:[0,.44444,.11111,0,.76777],120:[0,.44444,.12583,0,.56055],121:[.19444,.44444,.105,0,.56166],122:[0,.44444,.13889,0,.49055],126:[.35,.34444,.11472,0,.59111],163:[0,.69444,0,0,.86853],168:[0,.69444,.11473,0,.59111],176:[0,.69444,0,0,.94888],184:[.17014,0,0,0,.53222],198:[0,.68611,.11431,0,1.02277],216:[.04861,.73472,.09062,0,.88555],223:[.19444,.69444,.09736,0,.665],230:[0,.44444,.085,0,.82666],248:[.09722,.54167,.09458,0,.59111],305:[0,.44444,.09426,0,.35555],338:[0,.68611,.11431,0,1.14054],339:[0,.44444,.085,0,.82666],567:[.19444,.44444,.04611,0,.385],710:[0,.69444,.06709,0,.59111],711:[0,.63194,.08271,0,.59111],713:[0,.59444,.10444,0,.59111],714:[0,.69444,.08528,0,.59111],715:[0,.69444,0,0,.59111],728:[0,.69444,.10333,0,.59111],729:[0,.69444,.12945,0,.35555],730:[0,.69444,0,0,.94888],732:[0,.69444,.11472,0,.59111],733:[0,.69444,.11472,0,.59111],915:[0,.68611,.12903,0,.69777],916:[0,.68611,0,0,.94444],920:[0,.68611,.09062,0,.88555],923:[0,.68611,0,0,.80666],926:[0,.68611,.15092,0,.76777],928:[0,.68611,.17208,0,.8961],931:[0,.68611,.11431,0,.82666],933:[0,.68611,.10778,0,.88555],934:[0,.68611,.05632,0,.82666],936:[0,.68611,.10778,0,.88555],937:[0,.68611,.0992,0,.82666],8211:[0,.44444,.09811,0,.59111],8212:[0,.44444,.09811,0,1.18221],8216:[0,.69444,.12945,0,.35555],8217:[0,.69444,.12945,0,.35555],8220:[0,.69444,.16772,0,.62055],8221:[0,.69444,.07939,0,.62055]},"Main-Italic":{33:[0,.69444,.12417,0,.30667],34:[0,.69444,.06961,0,.51444],35:[.19444,.69444,.06616,0,.81777],37:[.05556,.75,.13639,0,.81777],38:[0,.69444,.09694,0,.76666],39:[0,.69444,.12417,0,.30667],40:[.25,.75,.16194,0,.40889],41:[.25,.75,.03694,0,.40889],42:[0,.75,.14917,0,.51111],43:[.05667,.56167,.03694,0,.76666],44:[.19444,.10556,0,0,.30667],45:[0,.43056,.02826,0,.35778],46:[0,.10556,0,0,.30667],47:[.25,.75,.16194,0,.51111],48:[0,.64444,.13556,0,.51111],49:[0,.64444,.13556,0,.51111],50:[0,.64444,.13556,0,.51111],51:[0,.64444,.13556,0,.51111],52:[.19444,.64444,.13556,0,.51111],53:[0,.64444,.13556,0,.51111],54:[0,.64444,.13556,0,.51111],55:[.19444,.64444,.13556,0,.51111],56:[0,.64444,.13556,0,.51111],57:[0,.64444,.13556,0,.51111],58:[0,.43056,.0582,0,.30667],59:[.19444,.43056,.0582,0,.30667],61:[-.13313,.36687,.06616,0,.76666],63:[0,.69444,.1225,0,.51111],64:[0,.69444,.09597,0,.76666],65:[0,.68333,0,0,.74333],66:[0,.68333,.10257,0,.70389],67:[0,.68333,.14528,0,.71555],68:[0,.68333,.09403,0,.755],69:[0,.68333,.12028,0,.67833],70:[0,.68333,.13305,0,.65277],71:[0,.68333,.08722,0,.77361],72:[0,.68333,.16389,0,.74333],73:[0,.68333,.15806,0,.38555],74:[0,.68333,.14028,0,.525],75:[0,.68333,.14528,0,.76888],76:[0,.68333,0,0,.62722],77:[0,.68333,.16389,0,.89666],78:[0,.68333,.16389,0,.74333],79:[0,.68333,.09403,0,.76666],80:[0,.68333,.10257,0,.67833],81:[.19444,.68333,.09403,0,.76666],82:[0,.68333,.03868,0,.72944],83:[0,.68333,.11972,0,.56222],84:[0,.68333,.13305,0,.71555],85:[0,.68333,.16389,0,.74333],86:[0,.68333,.18361,0,.74333],87:[0,.68333,.18361,0,.99888],88:[0,.68333,.15806,0,.74333],89:[0,.68333,.19383,0,.74333],90:[0,.68333,.14528,0,.61333],91:[.25,.75,.1875,0,.30667],93:[.25,.75,.10528,0,.30667],94:[0,.69444,.06646,0,.51111],95:[.31,.12056,.09208,0,.51111],97:[0,.43056,.07671,0,.51111],98:[0,.69444,.06312,0,.46],99:[0,.43056,.05653,0,.46],100:[0,.69444,.10333,0,.51111],101:[0,.43056,.07514,0,.46],102:[.19444,.69444,.21194,0,.30667],103:[.19444,.43056,.08847,0,.46],104:[0,.69444,.07671,0,.51111],105:[0,.65536,.1019,0,.30667],106:[.19444,.65536,.14467,0,.30667],107:[0,.69444,.10764,0,.46],108:[0,.69444,.10333,0,.25555],109:[0,.43056,.07671,0,.81777],110:[0,.43056,.07671,0,.56222],111:[0,.43056,.06312,0,.51111],112:[.19444,.43056,.06312,0,.51111],113:[.19444,.43056,.08847,0,.46],114:[0,.43056,.10764,0,.42166],115:[0,.43056,.08208,0,.40889],116:[0,.61508,.09486,0,.33222],117:[0,.43056,.07671,0,.53666],118:[0,.43056,.10764,0,.46],119:[0,.43056,.10764,0,.66444],120:[0,.43056,.12042,0,.46389],121:[.19444,.43056,.08847,0,.48555],122:[0,.43056,.12292,0,.40889],126:[.35,.31786,.11585,0,.51111],163:[0,.69444,0,0,.76909],168:[0,.66786,.10474,0,.51111],176:[0,.69444,0,0,.83129],184:[.17014,0,0,0,.46],198:[0,.68333,.12028,0,.88277],216:[.04861,.73194,.09403,0,.76666],223:[.19444,.69444,.10514,0,.53666],230:[0,.43056,.07514,0,.71555],248:[.09722,.52778,.09194,0,.51111],305:[0,.43056,0,.02778,.32246],338:[0,.68333,.12028,0,.98499],339:[0,.43056,.07514,0,.71555],567:[.19444,.43056,0,.08334,.38403],710:[0,.69444,.06646,0,.51111],711:[0,.62847,.08295,0,.51111],713:[0,.56167,.10333,0,.51111],714:[0,.69444,.09694,0,.51111],715:[0,.69444,0,0,.51111],728:[0,.69444,.10806,0,.51111],729:[0,.66786,.11752,0,.30667],730:[0,.69444,0,0,.83129],732:[0,.66786,.11585,0,.51111],733:[0,.69444,.1225,0,.51111],915:[0,.68333,.13305,0,.62722],916:[0,.68333,0,0,.81777],920:[0,.68333,.09403,0,.76666],923:[0,.68333,0,0,.69222],926:[0,.68333,.15294,0,.66444],928:[0,.68333,.16389,0,.74333],931:[0,.68333,.12028,0,.71555],933:[0,.68333,.11111,0,.76666],934:[0,.68333,.05986,0,.71555],936:[0,.68333,.11111,0,.76666],937:[0,.68333,.10257,0,.71555],8211:[0,.43056,.09208,0,.51111],8212:[0,.43056,.09208,0,1.02222],8216:[0,.69444,.12417,0,.30667],8217:[0,.69444,.12417,0,.30667],8220:[0,.69444,.1685,0,.51444],8221:[0,.69444,.06961,0,.51444],8463:[0,.68889,0,0,.54028]},"Main-Regular":{32:[0,0,0,0,.25],33:[0,.69444,0,0,.27778],34:[0,.69444,0,0,.5],35:[.19444,.69444,0,0,.83334],36:[.05556,.75,0,0,.5],37:[.05556,.75,0,0,.83334],38:[0,.69444,0,0,.77778],39:[0,.69444,0,0,.27778],40:[.25,.75,0,0,.38889],41:[.25,.75,0,0,.38889],42:[0,.75,0,0,.5],43:[.08333,.58333,0,0,.77778],44:[.19444,.10556,0,0,.27778],45:[0,.43056,0,0,.33333],46:[0,.10556,0,0,.27778],47:[.25,.75,0,0,.5],48:[0,.64444,0,0,.5],49:[0,.64444,0,0,.5],50:[0,.64444,0,0,.5],51:[0,.64444,0,0,.5],52:[0,.64444,0,0,.5],53:[0,.64444,0,0,.5],54:[0,.64444,0,0,.5],55:[0,.64444,0,0,.5],56:[0,.64444,0,0,.5],57:[0,.64444,0,0,.5],58:[0,.43056,0,0,.27778],59:[.19444,.43056,0,0,.27778],60:[.0391,.5391,0,0,.77778],61:[-.13313,.36687,0,0,.77778],62:[.0391,.5391,0,0,.77778],63:[0,.69444,0,0,.47222],64:[0,.69444,0,0,.77778],65:[0,.68333,0,0,.75],66:[0,.68333,0,0,.70834],67:[0,.68333,0,0,.72222],68:[0,.68333,0,0,.76389],69:[0,.68333,0,0,.68056],70:[0,.68333,0,0,.65278],71:[0,.68333,0,0,.78472],72:[0,.68333,0,0,.75],73:[0,.68333,0,0,.36111],74:[0,.68333,0,0,.51389],75:[0,.68333,0,0,.77778],76:[0,.68333,0,0,.625],77:[0,.68333,0,0,.91667],78:[0,.68333,0,0,.75],79:[0,.68333,0,0,.77778],80:[0,.68333,0,0,.68056],81:[.19444,.68333,0,0,.77778],82:[0,.68333,0,0,.73611],83:[0,.68333,0,0,.55556],84:[0,.68333,0,0,.72222],85:[0,.68333,0,0,.75],86:[0,.68333,.01389,0,.75],87:[0,.68333,.01389,0,1.02778],88:[0,.68333,0,0,.75],89:[0,.68333,.025,0,.75],90:[0,.68333,0,0,.61111],91:[.25,.75,0,0,.27778],92:[.25,.75,0,0,.5],93:[.25,.75,0,0,.27778],94:[0,.69444,0,0,.5],95:[.31,.12056,.02778,0,.5],97:[0,.43056,0,0,.5],98:[0,.69444,0,0,.55556],99:[0,.43056,0,0,.44445],100:[0,.69444,0,0,.55556],101:[0,.43056,0,0,.44445],102:[0,.69444,.07778,0,.30556],103:[.19444,.43056,.01389,0,.5],104:[0,.69444,0,0,.55556],105:[0,.66786,0,0,.27778],106:[.19444,.66786,0,0,.30556],107:[0,.69444,0,0,.52778],108:[0,.69444,0,0,.27778],109:[0,.43056,0,0,.83334],110:[0,.43056,0,0,.55556],111:[0,.43056,0,0,.5],112:[.19444,.43056,0,0,.55556],113:[.19444,.43056,0,0,.52778],114:[0,.43056,0,0,.39167],115:[0,.43056,0,0,.39445],116:[0,.61508,0,0,.38889],117:[0,.43056,0,0,.55556],118:[0,.43056,.01389,0,.52778],119:[0,.43056,.01389,0,.72222],120:[0,.43056,0,0,.52778],121:[.19444,.43056,.01389,0,.52778],122:[0,.43056,0,0,.44445],123:[.25,.75,0,0,.5],124:[.25,.75,0,0,.27778],125:[.25,.75,0,0,.5],126:[.35,.31786,0,0,.5],160:[0,0,0,0,.25],167:[.19444,.69444,0,0,.44445],168:[0,.66786,0,0,.5],172:[0,.43056,0,0,.66667],176:[0,.69444,0,0,.75],177:[.08333,.58333,0,0,.77778],182:[.19444,.69444,0,0,.61111],184:[.17014,0,0,0,.44445],198:[0,.68333,0,0,.90278],215:[.08333,.58333,0,0,.77778],216:[.04861,.73194,0,0,.77778],223:[0,.69444,0,0,.5],230:[0,.43056,0,0,.72222],247:[.08333,.58333,0,0,.77778],248:[.09722,.52778,0,0,.5],305:[0,.43056,0,0,.27778],338:[0,.68333,0,0,1.01389],339:[0,.43056,0,0,.77778],567:[.19444,.43056,0,0,.30556],710:[0,.69444,0,0,.5],711:[0,.62847,0,0,.5],713:[0,.56778,0,0,.5],714:[0,.69444,0,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,0,0,.5],729:[0,.66786,0,0,.27778],730:[0,.69444,0,0,.75],732:[0,.66786,0,0,.5],733:[0,.69444,0,0,.5],915:[0,.68333,0,0,.625],916:[0,.68333,0,0,.83334],920:[0,.68333,0,0,.77778],923:[0,.68333,0,0,.69445],926:[0,.68333,0,0,.66667],928:[0,.68333,0,0,.75],931:[0,.68333,0,0,.72222],933:[0,.68333,0,0,.77778],934:[0,.68333,0,0,.72222],936:[0,.68333,0,0,.77778],937:[0,.68333,0,0,.72222],8211:[0,.43056,.02778,0,.5],8212:[0,.43056,.02778,0,1],8216:[0,.69444,0,0,.27778],8217:[0,.69444,0,0,.27778],8220:[0,.69444,0,0,.5],8221:[0,.69444,0,0,.5],8224:[.19444,.69444,0,0,.44445],8225:[.19444,.69444,0,0,.44445],8230:[0,.12,0,0,1.172],8242:[0,.55556,0,0,.275],8407:[0,.71444,.15382,0,.5],8463:[0,.68889,0,0,.54028],8465:[0,.69444,0,0,.72222],8467:[0,.69444,0,.11111,.41667],8472:[.19444,.43056,0,.11111,.63646],8476:[0,.69444,0,0,.72222],8501:[0,.69444,0,0,.61111],8592:[-.13313,.36687,0,0,1],8593:[.19444,.69444,0,0,.5],8594:[-.13313,.36687,0,0,1],8595:[.19444,.69444,0,0,.5],8596:[-.13313,.36687,0,0,1],8597:[.25,.75,0,0,.5],8598:[.19444,.69444,0,0,1],8599:[.19444,.69444,0,0,1],8600:[.19444,.69444,0,0,1],8601:[.19444,.69444,0,0,1],8614:[.011,.511,0,0,1],8617:[.011,.511,0,0,1.126],8618:[.011,.511,0,0,1.126],8636:[-.13313,.36687,0,0,1],8637:[-.13313,.36687,0,0,1],8640:[-.13313,.36687,0,0,1],8641:[-.13313,.36687,0,0,1],8652:[.011,.671,0,0,1],8656:[-.13313,.36687,0,0,1],8657:[.19444,.69444,0,0,.61111],8658:[-.13313,.36687,0,0,1],8659:[.19444,.69444,0,0,.61111],8660:[-.13313,.36687,0,0,1],8661:[.25,.75,0,0,.61111],8704:[0,.69444,0,0,.55556],8706:[0,.69444,.05556,.08334,.5309],8707:[0,.69444,0,0,.55556],8709:[.05556,.75,0,0,.5],8711:[0,.68333,0,0,.83334],8712:[.0391,.5391,0,0,.66667],8715:[.0391,.5391,0,0,.66667],8722:[.08333,.58333,0,0,.77778],8723:[.08333,.58333,0,0,.77778],8725:[.25,.75,0,0,.5],8726:[.25,.75,0,0,.5],8727:[-.03472,.46528,0,0,.5],8728:[-.05555,.44445,0,0,.5],8729:[-.05555,.44445,0,0,.5],8730:[.2,.8,0,0,.83334],8733:[0,.43056,0,0,.77778],8734:[0,.43056,0,0,1],8736:[0,.69224,0,0,.72222],8739:[.25,.75,0,0,.27778],8741:[.25,.75,0,0,.5],8743:[0,.55556,0,0,.66667],8744:[0,.55556,0,0,.66667],8745:[0,.55556,0,0,.66667],8746:[0,.55556,0,0,.66667],8747:[.19444,.69444,.11111,0,.41667],8764:[-.13313,.36687,0,0,.77778],8768:[.19444,.69444,0,0,.27778],8771:[-.03625,.46375,0,0,.77778],8773:[-.022,.589,0,0,1],8776:[-.01688,.48312,0,0,.77778],8781:[-.03625,.46375,0,0,.77778],8784:[-.133,.67,0,0,.778],8801:[-.03625,.46375,0,0,.77778],8804:[.13597,.63597,0,0,.77778],8805:[.13597,.63597,0,0,.77778],8810:[.0391,.5391,0,0,1],8811:[.0391,.5391,0,0,1],8826:[.0391,.5391,0,0,.77778],8827:[.0391,.5391,0,0,.77778],8834:[.0391,.5391,0,0,.77778],8835:[.0391,.5391,0,0,.77778],8838:[.13597,.63597,0,0,.77778],8839:[.13597,.63597,0,0,.77778],8846:[0,.55556,0,0,.66667],8849:[.13597,.63597,0,0,.77778],8850:[.13597,.63597,0,0,.77778],8851:[0,.55556,0,0,.66667],8852:[0,.55556,0,0,.66667],8853:[.08333,.58333,0,0,.77778],8854:[.08333,.58333,0,0,.77778],8855:[.08333,.58333,0,0,.77778],8856:[.08333,.58333,0,0,.77778],8857:[.08333,.58333,0,0,.77778],8866:[0,.69444,0,0,.61111],8867:[0,.69444,0,0,.61111],8868:[0,.69444,0,0,.77778],8869:[0,.69444,0,0,.77778],8872:[.249,.75,0,0,.867],8900:[-.05555,.44445,0,0,.5],8901:[-.05555,.44445,0,0,.27778],8902:[-.03472,.46528,0,0,.5],8904:[.005,.505,0,0,.9],8942:[.03,.9,0,0,.278],8943:[-.19,.31,0,0,1.172],8945:[-.1,.82,0,0,1.282],8968:[.25,.75,0,0,.44445],8969:[.25,.75,0,0,.44445],8970:[.25,.75,0,0,.44445],8971:[.25,.75,0,0,.44445],8994:[-.14236,.35764,0,0,1],8995:[-.14236,.35764,0,0,1],9136:[.244,.744,0,0,.412],9137:[.244,.744,0,0,.412],9651:[.19444,.69444,0,0,.88889],9657:[-.03472,.46528,0,0,.5],9661:[.19444,.69444,0,0,.88889],9667:[-.03472,.46528,0,0,.5],9711:[.19444,.69444,0,0,1],9824:[.12963,.69444,0,0,.77778],9825:[.12963,.69444,0,0,.77778],9826:[.12963,.69444,0,0,.77778],9827:[.12963,.69444,0,0,.77778],9837:[0,.75,0,0,.38889],9838:[.19444,.69444,0,0,.38889],9839:[.19444,.69444,0,0,.38889],10216:[.25,.75,0,0,.38889],10217:[.25,.75,0,0,.38889],10222:[.244,.744,0,0,.412],10223:[.244,.744,0,0,.412],10229:[.011,.511,0,0,1.609],10230:[.011,.511,0,0,1.638],10231:[.011,.511,0,0,1.859],10232:[.024,.525,0,0,1.609],10233:[.024,.525,0,0,1.638],10234:[.024,.525,0,0,1.858],10236:[.011,.511,0,0,1.638],10815:[0,.68333,0,0,.75],10927:[.13597,.63597,0,0,.77778],10928:[.13597,.63597,0,0,.77778],57376:[.19444,.69444,0,0,0]},"Math-BoldItalic":{65:[0,.68611,0,0,.86944],66:[0,.68611,.04835,0,.8664],67:[0,.68611,.06979,0,.81694],68:[0,.68611,.03194,0,.93812],69:[0,.68611,.05451,0,.81007],70:[0,.68611,.15972,0,.68889],71:[0,.68611,0,0,.88673],72:[0,.68611,.08229,0,.98229],73:[0,.68611,.07778,0,.51111],74:[0,.68611,.10069,0,.63125],75:[0,.68611,.06979,0,.97118],76:[0,.68611,0,0,.75555],77:[0,.68611,.11424,0,1.14201],78:[0,.68611,.11424,0,.95034],79:[0,.68611,.03194,0,.83666],80:[0,.68611,.15972,0,.72309],81:[.19444,.68611,0,0,.86861],82:[0,.68611,.00421,0,.87235],83:[0,.68611,.05382,0,.69271],84:[0,.68611,.15972,0,.63663],85:[0,.68611,.11424,0,.80027],86:[0,.68611,.25555,0,.67778],87:[0,.68611,.15972,0,1.09305],88:[0,.68611,.07778,0,.94722],89:[0,.68611,.25555,0,.67458],90:[0,.68611,.06979,0,.77257],97:[0,.44444,0,0,.63287],98:[0,.69444,0,0,.52083],99:[0,.44444,0,0,.51342],100:[0,.69444,0,0,.60972],101:[0,.44444,0,0,.55361],102:[.19444,.69444,.11042,0,.56806],103:[.19444,.44444,.03704,0,.5449],104:[0,.69444,0,0,.66759],105:[0,.69326,0,0,.4048],106:[.19444,.69326,.0622,0,.47083],107:[0,.69444,.01852,0,.6037],108:[0,.69444,.0088,0,.34815],109:[0,.44444,0,0,1.0324],110:[0,.44444,0,0,.71296],111:[0,.44444,0,0,.58472],112:[.19444,.44444,0,0,.60092],113:[.19444,.44444,.03704,0,.54213],114:[0,.44444,.03194,0,.5287],115:[0,.44444,0,0,.53125],116:[0,.63492,0,0,.41528],117:[0,.44444,0,0,.68102],118:[0,.44444,.03704,0,.56666],119:[0,.44444,.02778,0,.83148],120:[0,.44444,0,0,.65903],121:[.19444,.44444,.03704,0,.59028],122:[0,.44444,.04213,0,.55509],915:[0,.68611,.15972,0,.65694],916:[0,.68611,0,0,.95833],920:[0,.68611,.03194,0,.86722],923:[0,.68611,0,0,.80555],926:[0,.68611,.07458,0,.84125],928:[0,.68611,.08229,0,.98229],931:[0,.68611,.05451,0,.88507],933:[0,.68611,.15972,0,.67083],934:[0,.68611,0,0,.76666],936:[0,.68611,.11653,0,.71402],937:[0,.68611,.04835,0,.8789],945:[0,.44444,0,0,.76064],946:[.19444,.69444,.03403,0,.65972],947:[.19444,.44444,.06389,0,.59003],948:[0,.69444,.03819,0,.52222],949:[0,.44444,0,0,.52882],950:[.19444,.69444,.06215,0,.50833],951:[.19444,.44444,.03704,0,.6],952:[0,.69444,.03194,0,.5618],953:[0,.44444,0,0,.41204],954:[0,.44444,0,0,.66759],955:[0,.69444,0,0,.67083],956:[.19444,.44444,0,0,.70787],957:[0,.44444,.06898,0,.57685],958:[.19444,.69444,.03021,0,.50833],959:[0,.44444,0,0,.58472],960:[0,.44444,.03704,0,.68241],961:[.19444,.44444,0,0,.6118],962:[.09722,.44444,.07917,0,.42361],963:[0,.44444,.03704,0,.68588],964:[0,.44444,.13472,0,.52083],965:[0,.44444,.03704,0,.63055],966:[.19444,.44444,0,0,.74722],967:[.19444,.44444,0,0,.71805],968:[.19444,.69444,.03704,0,.75833],969:[0,.44444,.03704,0,.71782],977:[0,.69444,0,0,.69155],981:[.19444,.69444,0,0,.7125],982:[0,.44444,.03194,0,.975],1009:[.19444,.44444,0,0,.6118],1013:[0,.44444,0,0,.48333]},"Math-Italic":{65:[0,.68333,0,.13889,.75],66:[0,.68333,.05017,.08334,.75851],67:[0,.68333,.07153,.08334,.71472],68:[0,.68333,.02778,.05556,.82792],69:[0,.68333,.05764,.08334,.7382],70:[0,.68333,.13889,.08334,.64306],71:[0,.68333,0,.08334,.78625],72:[0,.68333,.08125,.05556,.83125],73:[0,.68333,.07847,.11111,.43958],74:[0,.68333,.09618,.16667,.55451],75:[0,.68333,.07153,.05556,.84931],76:[0,.68333,0,.02778,.68056],77:[0,.68333,.10903,.08334,.97014],78:[0,.68333,.10903,.08334,.80347],79:[0,.68333,.02778,.08334,.76278],80:[0,.68333,.13889,.08334,.64201],81:[.19444,.68333,0,.08334,.79056],82:[0,.68333,.00773,.08334,.75929],83:[0,.68333,.05764,.08334,.6132],84:[0,.68333,.13889,.08334,.58438],85:[0,.68333,.10903,.02778,.68278],86:[0,.68333,.22222,0,.58333],87:[0,.68333,.13889,0,.94445],88:[0,.68333,.07847,.08334,.82847],89:[0,.68333,.22222,0,.58056],90:[0,.68333,.07153,.08334,.68264],97:[0,.43056,0,0,.52859],98:[0,.69444,0,0,.42917],99:[0,.43056,0,.05556,.43276],100:[0,.69444,0,.16667,.52049],101:[0,.43056,0,.05556,.46563],102:[.19444,.69444,.10764,.16667,.48959],103:[.19444,.43056,.03588,.02778,.47697],104:[0,.69444,0,0,.57616],105:[0,.65952,0,0,.34451],106:[.19444,.65952,.05724,0,.41181],107:[0,.69444,.03148,0,.5206],108:[0,.69444,.01968,.08334,.29838],109:[0,.43056,0,0,.87801],110:[0,.43056,0,0,.60023],111:[0,.43056,0,.05556,.48472],112:[.19444,.43056,0,.08334,.50313],113:[.19444,.43056,.03588,.08334,.44641],114:[0,.43056,.02778,.05556,.45116],115:[0,.43056,0,.05556,.46875],116:[0,.61508,0,.08334,.36111],117:[0,.43056,0,.02778,.57246],118:[0,.43056,.03588,.02778,.48472],119:[0,.43056,.02691,.08334,.71592],120:[0,.43056,0,.02778,.57153],121:[.19444,.43056,.03588,.05556,.49028],122:[0,.43056,.04398,.05556,.46505],915:[0,.68333,.13889,.08334,.61528],916:[0,.68333,0,.16667,.83334],920:[0,.68333,.02778,.08334,.76278],923:[0,.68333,0,.16667,.69445],926:[0,.68333,.07569,.08334,.74236],928:[0,.68333,.08125,.05556,.83125],931:[0,.68333,.05764,.08334,.77986],933:[0,.68333,.13889,.05556,.58333],934:[0,.68333,0,.08334,.66667],936:[0,.68333,.11,.05556,.61222],937:[0,.68333,.05017,.08334,.7724],945:[0,.43056,.0037,.02778,.6397],946:[.19444,.69444,.05278,.08334,.56563],947:[.19444,.43056,.05556,0,.51773],948:[0,.69444,.03785,.05556,.44444],949:[0,.43056,0,.08334,.46632],950:[.19444,.69444,.07378,.08334,.4375],951:[.19444,.43056,.03588,.05556,.49653],952:[0,.69444,.02778,.08334,.46944],953:[0,.43056,0,.05556,.35394],954:[0,.43056,0,0,.57616],955:[0,.69444,0,0,.58334],956:[.19444,.43056,0,.02778,.60255],957:[0,.43056,.06366,.02778,.49398],958:[.19444,.69444,.04601,.11111,.4375],959:[0,.43056,0,.05556,.48472],960:[0,.43056,.03588,0,.57003],961:[.19444,.43056,0,.08334,.51702],962:[.09722,.43056,.07986,.08334,.36285],963:[0,.43056,.03588,0,.57141],964:[0,.43056,.1132,.02778,.43715],965:[0,.43056,.03588,.02778,.54028],966:[.19444,.43056,0,.08334,.65417],967:[.19444,.43056,0,.05556,.62569],968:[.19444,.69444,.03588,.11111,.65139],969:[0,.43056,.03588,0,.62245],977:[0,.69444,0,.08334,.59144],981:[.19444,.69444,0,.08334,.59583],982:[0,.43056,.02778,0,.82813],1009:[.19444,.43056,0,.08334,.51702],1013:[0,.43056,0,.05556,.4059]},"Math-Regular":{65:[0,.68333,0,.13889,.75],66:[0,.68333,.05017,.08334,.75851],67:[0,.68333,.07153,.08334,.71472],68:[0,.68333,.02778,.05556,.82792],69:[0,.68333,.05764,.08334,.7382],70:[0,.68333,.13889,.08334,.64306],71:[0,.68333,0,.08334,.78625],72:[0,.68333,.08125,.05556,.83125],73:[0,.68333,.07847,.11111,.43958],74:[0,.68333,.09618,.16667,.55451],75:[0,.68333,.07153,.05556,.84931],76:[0,.68333,0,.02778,.68056],77:[0,.68333,.10903,.08334,.97014],78:[0,.68333,.10903,.08334,.80347],79:[0,.68333,.02778,.08334,.76278],80:[0,.68333,.13889,.08334,.64201],81:[.19444,.68333,0,.08334,.79056],82:[0,.68333,.00773,.08334,.75929],83:[0,.68333,.05764,.08334,.6132],84:[0,.68333,.13889,.08334,.58438],85:[0,.68333,.10903,.02778,.68278],86:[0,.68333,.22222,0,.58333],87:[0,.68333,.13889,0,.94445],88:[0,.68333,.07847,.08334,.82847],89:[0,.68333,.22222,0,.58056],90:[0,.68333,.07153,.08334,.68264],97:[0,.43056,0,0,.52859],98:[0,.69444,0,0,.42917],99:[0,.43056,0,.05556,.43276],100:[0,.69444,0,.16667,.52049],101:[0,.43056,0,.05556,.46563],102:[.19444,.69444,.10764,.16667,.48959],103:[.19444,.43056,.03588,.02778,.47697],104:[0,.69444,0,0,.57616],105:[0,.65952,0,0,.34451],106:[.19444,.65952,.05724,0,.41181],107:[0,.69444,.03148,0,.5206],108:[0,.69444,.01968,.08334,.29838],109:[0,.43056,0,0,.87801],110:[0,.43056,0,0,.60023],111:[0,.43056,0,.05556,.48472],112:[.19444,.43056,0,.08334,.50313],113:[.19444,.43056,.03588,.08334,.44641],114:[0,.43056,.02778,.05556,.45116],115:[0,.43056,0,.05556,.46875],116:[0,.61508,0,.08334,.36111],117:[0,.43056,0,.02778,.57246],118:[0,.43056,.03588,.02778,.48472],119:[0,.43056,.02691,.08334,.71592],120:[0,.43056,0,.02778,.57153],121:[.19444,.43056,.03588,.05556,.49028],122:[0,.43056,.04398,.05556,.46505],915:[0,.68333,.13889,.08334,.61528],916:[0,.68333,0,.16667,.83334],920:[0,.68333,.02778,.08334,.76278],923:[0,.68333,0,.16667,.69445],926:[0,.68333,.07569,.08334,.74236],928:[0,.68333,.08125,.05556,.83125],931:[0,.68333,.05764,.08334,.77986],933:[0,.68333,.13889,.05556,.58333],934:[0,.68333,0,.08334,.66667],936:[0,.68333,.11,.05556,.61222],937:[0,.68333,.05017,.08334,.7724],945:[0,.43056,.0037,.02778,.6397],946:[.19444,.69444,.05278,.08334,.56563],947:[.19444,.43056,.05556,0,.51773],948:[0,.69444,.03785,.05556,.44444],949:[0,.43056,0,.08334,.46632],950:[.19444,.69444,.07378,.08334,.4375],951:[.19444,.43056,.03588,.05556,.49653],952:[0,.69444,.02778,.08334,.46944],953:[0,.43056,0,.05556,.35394],954:[0,.43056,0,0,.57616],955:[0,.69444,0,0,.58334],956:[.19444,.43056,0,.02778,.60255],957:[0,.43056,.06366,.02778,.49398],958:[.19444,.69444,.04601,.11111,.4375],959:[0,.43056,0,.05556,.48472],960:[0,.43056,.03588,0,.57003],961:[.19444,.43056,0,.08334,.51702],962:[.09722,.43056,.07986,.08334,.36285],963:[0,.43056,.03588,0,.57141],964:[0,.43056,.1132,.02778,.43715],965:[0,.43056,.03588,.02778,.54028],966:[.19444,.43056,0,.08334,.65417],967:[.19444,.43056,0,.05556,.62569],968:[.19444,.69444,.03588,.11111,.65139],969:[0,.43056,.03588,0,.62245],977:[0,.69444,0,.08334,.59144],981:[.19444,.69444,0,.08334,.59583],982:[0,.43056,.02778,0,.82813],1009:[.19444,.43056,0,.08334,.51702],1013:[0,.43056,0,.05556,.4059]},"SansSerif-Bold":{33:[0,.69444,0,0,.36667],34:[0,.69444,0,0,.55834],35:[.19444,.69444,0,0,.91667],36:[.05556,.75,0,0,.55],37:[.05556,.75,0,0,1.02912],38:[0,.69444,0,0,.83056],39:[0,.69444,0,0,.30556],40:[.25,.75,0,0,.42778],41:[.25,.75,0,0,.42778],42:[0,.75,0,0,.55],43:[.11667,.61667,0,0,.85556],44:[.10556,.13056,0,0,.30556],45:[0,.45833,0,0,.36667],46:[0,.13056,0,0,.30556],47:[.25,.75,0,0,.55],48:[0,.69444,0,0,.55],49:[0,.69444,0,0,.55],50:[0,.69444,0,0,.55],51:[0,.69444,0,0,.55],52:[0,.69444,0,0,.55],53:[0,.69444,0,0,.55],54:[0,.69444,0,0,.55],55:[0,.69444,0,0,.55],56:[0,.69444,0,0,.55],57:[0,.69444,0,0,.55],58:[0,.45833,0,0,.30556],59:[.10556,.45833,0,0,.30556],61:[-.09375,.40625,0,0,.85556],63:[0,.69444,0,0,.51945],64:[0,.69444,0,0,.73334],65:[0,.69444,0,0,.73334],66:[0,.69444,0,0,.73334],67:[0,.69444,0,0,.70278],68:[0,.69444,0,0,.79445],69:[0,.69444,0,0,.64167],70:[0,.69444,0,0,.61111],71:[0,.69444,0,0,.73334],72:[0,.69444,0,0,.79445],73:[0,.69444,0,0,.33056],74:[0,.69444,0,0,.51945],75:[0,.69444,0,0,.76389],76:[0,.69444,0,0,.58056],77:[0,.69444,0,0,.97778],78:[0,.69444,0,0,.79445],79:[0,.69444,0,0,.79445],80:[0,.69444,0,0,.70278],81:[.10556,.69444,0,0,.79445],82:[0,.69444,0,0,.70278],83:[0,.69444,0,0,.61111],84:[0,.69444,0,0,.73334],85:[0,.69444,0,0,.76389],86:[0,.69444,.01528,0,.73334],87:[0,.69444,.01528,0,1.03889],88:[0,.69444,0,0,.73334],89:[0,.69444,.0275,0,.73334],90:[0,.69444,0,0,.67223],91:[.25,.75,0,0,.34306],93:[.25,.75,0,0,.34306],94:[0,.69444,0,0,.55],95:[.35,.10833,.03056,0,.55],97:[0,.45833,0,0,.525],98:[0,.69444,0,0,.56111],99:[0,.45833,0,0,.48889],100:[0,.69444,0,0,.56111],101:[0,.45833,0,0,.51111],102:[0,.69444,.07639,0,.33611],103:[.19444,.45833,.01528,0,.55],104:[0,.69444,0,0,.56111],105:[0,.69444,0,0,.25556],106:[.19444,.69444,0,0,.28611],107:[0,.69444,0,0,.53056],108:[0,.69444,0,0,.25556],109:[0,.45833,0,0,.86667],110:[0,.45833,0,0,.56111],111:[0,.45833,0,0,.55],112:[.19444,.45833,0,0,.56111],113:[.19444,.45833,0,0,.56111],114:[0,.45833,.01528,0,.37222],115:[0,.45833,0,0,.42167],116:[0,.58929,0,0,.40417],117:[0,.45833,0,0,.56111],118:[0,.45833,.01528,0,.5],119:[0,.45833,.01528,0,.74445],120:[0,.45833,0,0,.5],121:[.19444,.45833,.01528,0,.5],122:[0,.45833,0,0,.47639],126:[.35,.34444,0,0,.55],168:[0,.69444,0,0,.55],176:[0,.69444,0,0,.73334],180:[0,.69444,0,0,.55],184:[.17014,0,0,0,.48889],305:[0,.45833,0,0,.25556],567:[.19444,.45833,0,0,.28611],710:[0,.69444,0,0,.55],711:[0,.63542,0,0,.55],713:[0,.63778,0,0,.55],728:[0,.69444,0,0,.55],729:[0,.69444,0,0,.30556],730:[0,.69444,0,0,.73334],732:[0,.69444,0,0,.55],733:[0,.69444,0,0,.55],915:[0,.69444,0,0,.58056],916:[0,.69444,0,0,.91667],920:[0,.69444,0,0,.85556],923:[0,.69444,0,0,.67223],926:[0,.69444,0,0,.73334],928:[0,.69444,0,0,.79445],931:[0,.69444,0,0,.79445],933:[0,.69444,0,0,.85556],934:[0,.69444,0,0,.79445],936:[0,.69444,0,0,.85556],937:[0,.69444,0,0,.79445],8211:[0,.45833,.03056,0,.55],8212:[0,.45833,.03056,0,1.10001],8216:[0,.69444,0,0,.30556],8217:[0,.69444,0,0,.30556],8220:[0,.69444,0,0,.55834],8221:[0,.69444,0,0,.55834]},"SansSerif-Italic":{33:[0,.69444,.05733,0,.31945],34:[0,.69444,.00316,0,.5],35:[.19444,.69444,.05087,0,.83334],36:[.05556,.75,.11156,0,.5],37:[.05556,.75,.03126,0,.83334],38:[0,.69444,.03058,0,.75834],39:[0,.69444,.07816,0,.27778],40:[.25,.75,.13164,0,.38889],41:[.25,.75,.02536,0,.38889],42:[0,.75,.11775,0,.5],43:[.08333,.58333,.02536,0,.77778],44:[.125,.08333,0,0,.27778],45:[0,.44444,.01946,0,.33333],46:[0,.08333,0,0,.27778],47:[.25,.75,.13164,0,.5],48:[0,.65556,.11156,0,.5],49:[0,.65556,.11156,0,.5],50:[0,.65556,.11156,0,.5],51:[0,.65556,.11156,0,.5],52:[0,.65556,.11156,0,.5],53:[0,.65556,.11156,0,.5],54:[0,.65556,.11156,0,.5],55:[0,.65556,.11156,0,.5],56:[0,.65556,.11156,0,.5],57:[0,.65556,.11156,0,.5],58:[0,.44444,.02502,0,.27778],59:[.125,.44444,.02502,0,.27778],61:[-.13,.37,.05087,0,.77778],63:[0,.69444,.11809,0,.47222],64:[0,.69444,.07555,0,.66667],65:[0,.69444,0,0,.66667],66:[0,.69444,.08293,0,.66667],67:[0,.69444,.11983,0,.63889],68:[0,.69444,.07555,0,.72223],69:[0,.69444,.11983,0,.59722],70:[0,.69444,.13372,0,.56945],71:[0,.69444,.11983,0,.66667],72:[0,.69444,.08094,0,.70834],73:[0,.69444,.13372,0,.27778],74:[0,.69444,.08094,0,.47222],75:[0,.69444,.11983,0,.69445],76:[0,.69444,0,0,.54167],77:[0,.69444,.08094,0,.875],78:[0,.69444,.08094,0,.70834],79:[0,.69444,.07555,0,.73611],80:[0,.69444,.08293,0,.63889],81:[.125,.69444,.07555,0,.73611],82:[0,.69444,.08293,0,.64584],83:[0,.69444,.09205,0,.55556],84:[0,.69444,.13372,0,.68056],85:[0,.69444,.08094,0,.6875],86:[0,.69444,.1615,0,.66667],87:[0,.69444,.1615,0,.94445],88:[0,.69444,.13372,0,.66667],89:[0,.69444,.17261,0,.66667],90:[0,.69444,.11983,0,.61111],91:[.25,.75,.15942,0,.28889],93:[.25,.75,.08719,0,.28889],94:[0,.69444,.0799,0,.5],95:[.35,.09444,.08616,0,.5],97:[0,.44444,.00981,0,.48056],98:[0,.69444,.03057,0,.51667],99:[0,.44444,.08336,0,.44445],100:[0,.69444,.09483,0,.51667],101:[0,.44444,.06778,0,.44445],102:[0,.69444,.21705,0,.30556],103:[.19444,.44444,.10836,0,.5],104:[0,.69444,.01778,0,.51667],105:[0,.67937,.09718,0,.23889],106:[.19444,.67937,.09162,0,.26667],107:[0,.69444,.08336,0,.48889],108:[0,.69444,.09483,0,.23889],109:[0,.44444,.01778,0,.79445],110:[0,.44444,.01778,0,.51667],111:[0,.44444,.06613,0,.5],112:[.19444,.44444,.0389,0,.51667],113:[.19444,.44444,.04169,0,.51667],114:[0,.44444,.10836,0,.34167],115:[0,.44444,.0778,0,.38333],116:[0,.57143,.07225,0,.36111],117:[0,.44444,.04169,0,.51667],118:[0,.44444,.10836,0,.46111],119:[0,.44444,.10836,0,.68334],120:[0,.44444,.09169,0,.46111],121:[.19444,.44444,.10836,0,.46111],122:[0,.44444,.08752,0,.43472],126:[.35,.32659,.08826,0,.5],168:[0,.67937,.06385,0,.5],176:[0,.69444,0,0,.73752],184:[.17014,0,0,0,.44445],305:[0,.44444,.04169,0,.23889],567:[.19444,.44444,.04169,0,.26667],710:[0,.69444,.0799,0,.5],711:[0,.63194,.08432,0,.5],713:[0,.60889,.08776,0,.5],714:[0,.69444,.09205,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,.09483,0,.5],729:[0,.67937,.07774,0,.27778],730:[0,.69444,0,0,.73752],732:[0,.67659,.08826,0,.5],733:[0,.69444,.09205,0,.5],915:[0,.69444,.13372,0,.54167],916:[0,.69444,0,0,.83334],920:[0,.69444,.07555,0,.77778],923:[0,.69444,0,0,.61111],926:[0,.69444,.12816,0,.66667],928:[0,.69444,.08094,0,.70834],931:[0,.69444,.11983,0,.72222],933:[0,.69444,.09031,0,.77778],934:[0,.69444,.04603,0,.72222],936:[0,.69444,.09031,0,.77778],937:[0,.69444,.08293,0,.72222],8211:[0,.44444,.08616,0,.5],8212:[0,.44444,.08616,0,1],8216:[0,.69444,.07816,0,.27778],8217:[0,.69444,.07816,0,.27778],8220:[0,.69444,.14205,0,.5],8221:[0,.69444,.00316,0,.5]},"SansSerif-Regular":{33:[0,.69444,0,0,.31945],34:[0,.69444,0,0,.5],35:[.19444,.69444,0,0,.83334],36:[.05556,.75,0,0,.5],37:[.05556,.75,0,0,.83334],38:[0,.69444,0,0,.75834],39:[0,.69444,0,0,.27778],40:[.25,.75,0,0,.38889],41:[.25,.75,0,0,.38889],42:[0,.75,0,0,.5],43:[.08333,.58333,0,0,.77778],44:[.125,.08333,0,0,.27778],45:[0,.44444,0,0,.33333],46:[0,.08333,0,0,.27778],47:[.25,.75,0,0,.5],48:[0,.65556,0,0,.5],49:[0,.65556,0,0,.5],50:[0,.65556,0,0,.5],51:[0,.65556,0,0,.5],52:[0,.65556,0,0,.5],53:[0,.65556,0,0,.5],54:[0,.65556,0,0,.5],55:[0,.65556,0,0,.5],56:[0,.65556,0,0,.5],57:[0,.65556,0,0,.5],58:[0,.44444,0,0,.27778],59:[.125,.44444,0,0,.27778],61:[-.13,.37,0,0,.77778],63:[0,.69444,0,0,.47222],64:[0,.69444,0,0,.66667],65:[0,.69444,0,0,.66667],66:[0,.69444,0,0,.66667],67:[0,.69444,0,0,.63889],68:[0,.69444,0,0,.72223],69:[0,.69444,0,0,.59722],70:[0,.69444,0,0,.56945],71:[0,.69444,0,0,.66667],72:[0,.69444,0,0,.70834],73:[0,.69444,0,0,.27778],74:[0,.69444,0,0,.47222],75:[0,.69444,0,0,.69445],76:[0,.69444,0,0,.54167],77:[0,.69444,0,0,.875],78:[0,.69444,0,0,.70834],79:[0,.69444,0,0,.73611],80:[0,.69444,0,0,.63889],81:[.125,.69444,0,0,.73611],82:[0,.69444,0,0,.64584],83:[0,.69444,0,0,.55556],84:[0,.69444,0,0,.68056],85:[0,.69444,0,0,.6875],86:[0,.69444,.01389,0,.66667],87:[0,.69444,.01389,0,.94445],88:[0,.69444,0,0,.66667],89:[0,.69444,.025,0,.66667],90:[0,.69444,0,0,.61111],91:[.25,.75,0,0,.28889],93:[.25,.75,0,0,.28889],94:[0,.69444,0,0,.5],95:[.35,.09444,.02778,0,.5],97:[0,.44444,0,0,.48056],98:[0,.69444,0,0,.51667],99:[0,.44444,0,0,.44445],100:[0,.69444,0,0,.51667],101:[0,.44444,0,0,.44445],102:[0,.69444,.06944,0,.30556],103:[.19444,.44444,.01389,0,.5],104:[0,.69444,0,0,.51667],105:[0,.67937,0,0,.23889],106:[.19444,.67937,0,0,.26667],107:[0,.69444,0,0,.48889],108:[0,.69444,0,0,.23889],109:[0,.44444,0,0,.79445],110:[0,.44444,0,0,.51667],111:[0,.44444,0,0,.5],112:[.19444,.44444,0,0,.51667],113:[.19444,.44444,0,0,.51667],114:[0,.44444,.01389,0,.34167],115:[0,.44444,0,0,.38333],116:[0,.57143,0,0,.36111],117:[0,.44444,0,0,.51667],118:[0,.44444,.01389,0,.46111],119:[0,.44444,.01389,0,.68334],120:[0,.44444,0,0,.46111],121:[.19444,.44444,.01389,0,.46111],122:[0,.44444,0,0,.43472],126:[.35,.32659,0,0,.5],168:[0,.67937,0,0,.5],176:[0,.69444,0,0,.66667],184:[.17014,0,0,0,.44445],305:[0,.44444,0,0,.23889],567:[.19444,.44444,0,0,.26667],710:[0,.69444,0,0,.5],711:[0,.63194,0,0,.5],713:[0,.60889,0,0,.5],714:[0,.69444,0,0,.5],715:[0,.69444,0,0,.5],728:[0,.69444,0,0,.5],729:[0,.67937,0,0,.27778],730:[0,.69444,0,0,.66667],732:[0,.67659,0,0,.5],733:[0,.69444,0,0,.5],915:[0,.69444,0,0,.54167],916:[0,.69444,0,0,.83334],920:[0,.69444,0,0,.77778],923:[0,.69444,0,0,.61111],926:[0,.69444,0,0,.66667],928:[0,.69444,0,0,.70834],931:[0,.69444,0,0,.72222],933:[0,.69444,0,0,.77778],934:[0,.69444,0,0,.72222],936:[0,.69444,0,0,.77778],937:[0,.69444,0,0,.72222],8211:[0,.44444,.02778,0,.5],8212:[0,.44444,.02778,0,1],8216:[0,.69444,0,0,.27778],8217:[0,.69444,0,0,.27778],8220:[0,.69444,0,0,.5],8221:[0,.69444,0,0,.5]},"Script-Regular":{65:[0,.7,.22925,0,.80253],66:[0,.7,.04087,0,.90757],67:[0,.7,.1689,0,.66619],68:[0,.7,.09371,0,.77443],69:[0,.7,.18583,0,.56162],70:[0,.7,.13634,0,.89544],71:[0,.7,.17322,0,.60961],72:[0,.7,.29694,0,.96919],73:[0,.7,.19189,0,.80907],74:[.27778,.7,.19189,0,1.05159],75:[0,.7,.31259,0,.91364],76:[0,.7,.19189,0,.87373],77:[0,.7,.15981,0,1.08031],78:[0,.7,.3525,0,.9015],79:[0,.7,.08078,0,.73787],80:[0,.7,.08078,0,1.01262],81:[0,.7,.03305,0,.88282],82:[0,.7,.06259,0,.85],83:[0,.7,.19189,0,.86767],84:[0,.7,.29087,0,.74697],85:[0,.7,.25815,0,.79996],86:[0,.7,.27523,0,.62204],87:[0,.7,.27523,0,.80532],88:[0,.7,.26006,0,.94445],89:[0,.7,.2939,0,.70961],90:[0,.7,.24037,0,.8212]},"Size1-Regular":{40:[.35001,.85,0,0,.45834],41:[.35001,.85,0,0,.45834],47:[.35001,.85,0,0,.57778],91:[.35001,.85,0,0,.41667],92:[.35001,.85,0,0,.57778],93:[.35001,.85,0,0,.41667],123:[.35001,.85,0,0,.58334],125:[.35001,.85,0,0,.58334],710:[0,.72222,0,0,.55556],732:[0,.72222,0,0,.55556],770:[0,.72222,0,0,.55556],771:[0,.72222,0,0,.55556],8214:[-99e-5,.601,0,0,.77778],8593:[1e-5,.6,0,0,.66667],8595:[1e-5,.6,0,0,.66667],8657:[1e-5,.6,0,0,.77778],8659:[1e-5,.6,0,0,.77778],8719:[.25001,.75,0,0,.94445],8720:[.25001,.75,0,0,.94445],8721:[.25001,.75,0,0,1.05556],8730:[.35001,.85,0,0,1],8739:[-.00599,.606,0,0,.33333],8741:[-.00599,.606,0,0,.55556],8747:[.30612,.805,.19445,0,.47222],8748:[.306,.805,.19445,0,.47222],8749:[.306,.805,.19445,0,.47222],8750:[.30612,.805,.19445,0,.47222],8896:[.25001,.75,0,0,.83334],8897:[.25001,.75,0,0,.83334],8898:[.25001,.75,0,0,.83334],8899:[.25001,.75,0,0,.83334],8968:[.35001,.85,0,0,.47222],8969:[.35001,.85,0,0,.47222],8970:[.35001,.85,0,0,.47222],8971:[.35001,.85,0,0,.47222],9168:[-99e-5,.601,0,0,.66667],10216:[.35001,.85,0,0,.47222],10217:[.35001,.85,0,0,.47222],10752:[.25001,.75,0,0,1.11111],10753:[.25001,.75,0,0,1.11111],10754:[.25001,.75,0,0,1.11111],10756:[.25001,.75,0,0,.83334],10758:[.25001,.75,0,0,.83334]},"Size2-Regular":{40:[.65002,1.15,0,0,.59722],41:[.65002,1.15,0,0,.59722],47:[.65002,1.15,0,0,.81111],91:[.65002,1.15,0,0,.47222],92:[.65002,1.15,0,0,.81111],93:[.65002,1.15,0,0,.47222],123:[.65002,1.15,0,0,.66667],125:[.65002,1.15,0,0,.66667],710:[0,.75,0,0,1],732:[0,.75,0,0,1],770:[0,.75,0,0,1],771:[0,.75,0,0,1],8719:[.55001,1.05,0,0,1.27778],8720:[.55001,1.05,0,0,1.27778],8721:[.55001,1.05,0,0,1.44445],8730:[.65002,1.15,0,0,1],8747:[.86225,1.36,.44445,0,.55556],8748:[.862,1.36,.44445,0,.55556],8749:[.862,1.36,.44445,0,.55556],8750:[.86225,1.36,.44445,0,.55556],8896:[.55001,1.05,0,0,1.11111],8897:[.55001,1.05,0,0,1.11111],8898:[.55001,1.05,0,0,1.11111],8899:[.55001,1.05,0,0,1.11111],8968:[.65002,1.15,0,0,.52778],8969:[.65002,1.15,0,0,.52778],8970:[.65002,1.15,0,0,.52778],8971:[.65002,1.15,0,0,.52778],10216:[.65002,1.15,0,0,.61111],10217:[.65002,1.15,0,0,.61111],10752:[.55001,1.05,0,0,1.51112],10753:[.55001,1.05,0,0,1.51112],10754:[.55001,1.05,0,0,1.51112],10756:[.55001,1.05,0,0,1.11111],10758:[.55001,1.05,0,0,1.11111]},"Size3-Regular":{40:[.95003,1.45,0,0,.73611],41:[.95003,1.45,0,0,.73611],47:[.95003,1.45,0,0,1.04445],91:[.95003,1.45,0,0,.52778],92:[.95003,1.45,0,0,1.04445],93:[.95003,1.45,0,0,.52778],123:[.95003,1.45,0,0,.75],125:[.95003,1.45,0,0,.75],710:[0,.75,0,0,1.44445],732:[0,.75,0,0,1.44445],770:[0,.75,0,0,1.44445],771:[0,.75,0,0,1.44445],8730:[.95003,1.45,0,0,1],8968:[.95003,1.45,0,0,.58334],8969:[.95003,1.45,0,0,.58334],8970:[.95003,1.45,0,0,.58334],8971:[.95003,1.45,0,0,.58334],10216:[.95003,1.45,0,0,.75],10217:[.95003,1.45,0,0,.75]},"Size4-Regular":{40:[1.25003,1.75,0,0,.79167],41:[1.25003,1.75,0,0,.79167],47:[1.25003,1.75,0,0,1.27778],91:[1.25003,1.75,0,0,.58334],92:[1.25003,1.75,0,0,1.27778],93:[1.25003,1.75,0,0,.58334],123:[1.25003,1.75,0,0,.80556],125:[1.25003,1.75,0,0,.80556],710:[0,.825,0,0,1.8889],732:[0,.825,0,0,1.8889],770:[0,.825,0,0,1.8889],771:[0,.825,0,0,1.8889],8730:[1.25003,1.75,0,0,1],8968:[1.25003,1.75,0,0,.63889],8969:[1.25003,1.75,0,0,.63889],8970:[1.25003,1.75,0,0,.63889],8971:[1.25003,1.75,0,0,.63889],9115:[.64502,1.155,0,0,.875],9116:[1e-5,.6,0,0,.875],9117:[.64502,1.155,0,0,.875],9118:[.64502,1.155,0,0,.875],9119:[1e-5,.6,0,0,.875],9120:[.64502,1.155,0,0,.875],9121:[.64502,1.155,0,0,.66667],9122:[-99e-5,.601,0,0,.66667],9123:[.64502,1.155,0,0,.66667],9124:[.64502,1.155,0,0,.66667],9125:[-99e-5,.601,0,0,.66667],9126:[.64502,1.155,0,0,.66667],9127:[1e-5,.9,0,0,.88889],9128:[.65002,1.15,0,0,.88889],9129:[.90001,0,0,0,.88889],9130:[0,.3,0,0,.88889],9131:[1e-5,.9,0,0,.88889],9132:[.65002,1.15,0,0,.88889],9133:[.90001,0,0,0,.88889],9143:[.88502,.915,0,0,1.05556],10216:[1.25003,1.75,0,0,.80556],10217:[1.25003,1.75,0,0,.80556],57344:[-.00499,.605,0,0,1.05556],57345:[-.00499,.605,0,0,1.05556],57680:[0,.12,0,0,.45],57681:[0,.12,0,0,.45],57682:[0,.12,0,0,.45],57683:[0,.12,0,0,.45]},"Typewriter-Regular":{32:[0,0,0,0,.525],33:[0,.61111,0,0,.525],34:[0,.61111,0,0,.525],35:[0,.61111,0,0,.525],36:[.08333,.69444,0,0,.525],37:[.08333,.69444,0,0,.525],38:[0,.61111,0,0,.525],39:[0,.61111,0,0,.525],40:[.08333,.69444,0,0,.525],41:[.08333,.69444,0,0,.525],42:[0,.52083,0,0,.525],43:[-.08056,.53055,0,0,.525],44:[.13889,.125,0,0,.525],45:[-.08056,.53055,0,0,.525],46:[0,.125,0,0,.525],47:[.08333,.69444,0,0,.525],48:[0,.61111,0,0,.525],49:[0,.61111,0,0,.525],50:[0,.61111,0,0,.525],51:[0,.61111,0,0,.525],52:[0,.61111,0,0,.525],53:[0,.61111,0,0,.525],54:[0,.61111,0,0,.525],55:[0,.61111,0,0,.525],56:[0,.61111,0,0,.525],57:[0,.61111,0,0,.525],58:[0,.43056,0,0,.525],59:[.13889,.43056,0,0,.525],60:[-.05556,.55556,0,0,.525],61:[-.19549,.41562,0,0,.525],62:[-.05556,.55556,0,0,.525],63:[0,.61111,0,0,.525],64:[0,.61111,0,0,.525],65:[0,.61111,0,0,.525],66:[0,.61111,0,0,.525],67:[0,.61111,0,0,.525],68:[0,.61111,0,0,.525],69:[0,.61111,0,0,.525],70:[0,.61111,0,0,.525],71:[0,.61111,0,0,.525],72:[0,.61111,0,0,.525],73:[0,.61111,0,0,.525],74:[0,.61111,0,0,.525],75:[0,.61111,0,0,.525],76:[0,.61111,0,0,.525],77:[0,.61111,0,0,.525],78:[0,.61111,0,0,.525],79:[0,.61111,0,0,.525],80:[0,.61111,0,0,.525],81:[.13889,.61111,0,0,.525],82:[0,.61111,0,0,.525],83:[0,.61111,0,0,.525],84:[0,.61111,0,0,.525],85:[0,.61111,0,0,.525],86:[0,.61111,0,0,.525],87:[0,.61111,0,0,.525],88:[0,.61111,0,0,.525],89:[0,.61111,0,0,.525],90:[0,.61111,0,0,.525],91:[.08333,.69444,0,0,.525],92:[.08333,.69444,0,0,.525],93:[.08333,.69444,0,0,.525],94:[0,.61111,0,0,.525],95:[.09514,0,0,0,.525],96:[0,.61111,0,0,.525],97:[0,.43056,0,0,.525],98:[0,.61111,0,0,.525],99:[0,.43056,0,0,.525],100:[0,.61111,0,0,.525],101:[0,.43056,0,0,.525],102:[0,.61111,0,0,.525],103:[.22222,.43056,0,0,.525],104:[0,.61111,0,0,.525],105:[0,.61111,0,0,.525],106:[.22222,.61111,0,0,.525],107:[0,.61111,0,0,.525],108:[0,.61111,0,0,.525],109:[0,.43056,0,0,.525],110:[0,.43056,0,0,.525],111:[0,.43056,0,0,.525],112:[.22222,.43056,0,0,.525],113:[.22222,.43056,0,0,.525],114:[0,.43056,0,0,.525],115:[0,.43056,0,0,.525],116:[0,.55358,0,0,.525],117:[0,.43056,0,0,.525],118:[0,.43056,0,0,.525],119:[0,.43056,0,0,.525],120:[0,.43056,0,0,.525],121:[.22222,.43056,0,0,.525],122:[0,.43056,0,0,.525],123:[.08333,.69444,0,0,.525],124:[.08333,.69444,0,0,.525],125:[.08333,.69444,0,0,.525],126:[0,.61111,0,0,.525],127:[0,.61111,0,0,.525],160:[0,0,0,0,.525],176:[0,.61111,0,0,.525],184:[.19445,0,0,0,.525],305:[0,.43056,0,0,.525],567:[.22222,.43056,0,0,.525],711:[0,.56597,0,0,.525],713:[0,.56555,0,0,.525],714:[0,.61111,0,0,.525],715:[0,.61111,0,0,.525],728:[0,.61111,0,0,.525],730:[0,.61111,0,0,.525],770:[0,.61111,0,0,.525],771:[0,.61111,0,0,.525],776:[0,.61111,0,0,.525],915:[0,.61111,0,0,.525],916:[0,.61111,0,0,.525],920:[0,.61111,0,0,.525],923:[0,.61111,0,0,.525],926:[0,.61111,0,0,.525],928:[0,.61111,0,0,.525],931:[0,.61111,0,0,.525],933:[0,.61111,0,0,.525],934:[0,.61111,0,0,.525],936:[0,.61111,0,0,.525],937:[0,.61111,0,0,.525],8216:[0,.61111,0,0,.525],8217:[0,.61111,0,0,.525],8242:[0,.61111,0,0,.525],9251:[.11111,.21944,0,0,.525]}},yr={slant:[.25,.25,.25],space:[0,0,0],stretch:[0,0,0],shrink:[0,0,0],xHeight:[.431,.431,.431],quad:[1,1.171,1.472],extraSpace:[0,0,0],num1:[.677,.732,.925],num2:[.394,.384,.387],num3:[.444,.471,.504],denom1:[.686,.752,1.025],denom2:[.345,.344,.532],sup1:[.413,.503,.504],sup2:[.363,.431,.404],sup3:[.289,.286,.294],sub1:[.15,.143,.2],sub2:[.247,.286,.4],supDrop:[.386,.353,.494],subDrop:[.05,.071,.1],delim1:[2.39,1.7,1.98],delim2:[1.01,1.157,1.42],axisHeight:[.25,.25,.25],defaultRuleThickness:[.04,.049,.049],bigOpSpacing1:[.111,.111,.111],bigOpSpacing2:[.166,.166,.166],bigOpSpacing3:[.2,.2,.2],bigOpSpacing4:[.6,.611,.611],bigOpSpacing5:[.1,.143,.143],sqrtRuleThickness:[.04,.04,.04],ptPerEm:[10,10,10],doubleRuleSep:[.2,.2,.2],arrayRuleWidth:[.04,.04,.04],fboxsep:[.3,.3,.3],fboxrule:[.04,.04,.04]},Zo={Å:"A",Ç:"C",Ð:"D",Þ:"o",å:"a",ç:"c",ð:"d",þ:"o",А:"A",Б:"B",В:"B",Г:"F",Д:"A",Е:"E",Ж:"K",З:"3",И:"N",Й:"N",К:"K",Л:"N",М:"M",Н:"H",О:"O",П:"N",Р:"P",С:"C",Т:"T",У:"y",Ф:"O",Х:"X",Ц:"U",Ч:"h",Ш:"W",Щ:"W",Ъ:"B",Ы:"X",Ь:"B",Э:"3",Ю:"X",Я:"R",а:"a",б:"b",в:"a",г:"r",д:"y",е:"e",ж:"m",з:"e",и:"n",й:"n",к:"n",л:"n",м:"m",н:"n",о:"o",п:"n",р:"p",с:"c",т:"o",у:"y",ф:"b",х:"x",ц:"n",ч:"n",ш:"w",щ:"w",ъ:"a",ы:"m",ь:"a",э:"e",ю:"m",я:"r"};function Fd(h,t){Ft[h]=t}function Ii(h,t,a){if(!Ft[t])throw new Error("Font metrics not found for font: "+t+".");var r=h.charCodeAt(0),s=Ft[t][r];if(!s&&h[0]in Zo&&(r=Zo[h[0]].charCodeAt(0),s=Ft[t][r]),!s&&a==="text"&&mr(r)&&(s=Ft[t][77]),s)return{depth:s[0],height:s[1],italic:s[2],skew:s[3],width:s[4]}}var ji={};function Od(h){var t;if(h>=5?t=0:h>=3?t=1:t=2,!ji[t]){var a=ji[t]={cssEmPerMu:yr.quad[t]/18};for(var r in yr)yr.hasOwnProperty(r)&&(a[r]=yr[r][t])}return ji[t]}var Ed={bin:1,close:1,inner:1,open:1,punct:1,rel:1},Dd={"accent-token":1,mathord:1,"op-token":1,spacing:1,textord:1},br={math:{},text:{}},en=br;function d(h,t,a,r,s,m){br[h][s]={font:t,group:a,replace:r},m&&r&&(br[h][r]=br[h][s])}var c="math",K="text",y="main",T="ams",Xe="accent-token",se="bin",cn="close",Yt="inner",ye="mathord",an="op-token",Cn="open",wr="punct",S="rel",jn="spacing",I="textord";d(c,y,S,"≡","\\equiv",!0),d(c,y,S,"≺","\\prec",!0),d(c,y,S,"≻","\\succ",!0),d(c,y,S,"∼","\\sim",!0),d(c,y,S,"⊥","\\perp"),d(c,y,S,"⪯","\\preceq",!0),d(c,y,S,"⪰","\\succeq",!0),d(c,y,S,"≃","\\simeq",!0),d(c,y,S,"∣","\\mid",!0),d(c,y,S,"≪","\\ll",!0),d(c,y,S,"≫","\\gg",!0),d(c,y,S,"≍","\\asymp",!0),d(c,y,S,"∥","\\parallel"),d(c,y,S,"⋈","\\bowtie",!0),d(c,y,S,"⌣","\\smile",!0),d(c,y,S,"⊑","\\sqsubseteq",!0),d(c,y,S,"⊒","\\sqsupseteq",!0),d(c,y,S,"≐","\\doteq",!0),d(c,y,S,"⌢","\\frown",!0),d(c,y,S,"∋","\\ni",!0),d(c,y,S,"∝","\\propto",!0),d(c,y,S,"⊢","\\vdash",!0),d(c,y,S,"⊣","\\dashv",!0),d(c,y,S,"∋","\\owns"),d(c,y,wr,".","\\ldotp"),d(c,y,wr,"⋅","\\cdotp"),d(c,y,I,"#","\\#"),d(K,y,I,"#","\\#"),d(c,y,I,"&","\\&"),d(K,y,I,"&","\\&"),d(c,y,I,"ℵ","\\aleph",!0),d(c,y,I,"∀","\\forall",!0),d(c,y,I,"ℏ","\\hbar",!0),d(c,y,I,"∃","\\exists",!0),d(c,y,I,"∇","\\nabla",!0),d(c,y,I,"♭","\\flat",!0),d(c,y,I,"ℓ","\\ell",!0),d(c,y,I,"♮","\\natural",!0),d(c,y,I,"♣","\\clubsuit",!0),d(c,y,I,"℘","\\wp",!0),d(c,y,I,"♯","\\sharp",!0),d(c,y,I,"♢","\\diamondsuit",!0),d(c,y,I,"ℜ","\\Re",!0),d(c,y,I,"♡","\\heartsuit",!0),d(c,y,I,"ℑ","\\Im",!0),d(c,y,I,"♠","\\spadesuit",!0),d(K,y,I,"§","\\S",!0),d(K,y,I,"¶","\\P",!0),d(c,y,I,"†","\\dag"),d(K,y,I,"†","\\dag"),d(K,y,I,"†","\\textdagger"),d(c,y,I,"‡","\\ddag"),d(K,y,I,"‡","\\ddag"),d(K,y,I,"‡","\\textdaggerdbl"),d(c,y,cn,"⎱","\\rmoustache",!0),d(c,y,Cn,"⎰","\\lmoustache",!0),d(c,y,cn,"⟯","\\rgroup",!0),d(c,y,Cn,"⟮","\\lgroup",!0),d(c,y,se,"∓","\\mp",!0),d(c,y,se,"⊖","\\ominus",!0),d(c,y,se,"⊎","\\uplus",!0),d(c,y,se,"⊓","\\sqcap",!0),d(c,y,se,"∗","\\ast"),d(c,y,se,"⊔","\\sqcup",!0),d(c,y,se,"◯","\\bigcirc"),d(c,y,se,"∙","\\bullet"),d(c,y,se,"‡","\\ddagger"),d(c,y,se,"≀","\\wr",!0),d(c,y,se,"⨿","\\amalg"),d(c,y,se,"&","\\And"),d(c,y,S,"⟵","\\longleftarrow",!0),d(c,y,S,"⇐","\\Leftarrow",!0),d(c,y,S,"⟸","\\Longleftarrow",!0),d(c,y,S,"⟶","\\longrightarrow",!0),d(c,y,S,"⇒","\\Rightarrow",!0),d(c,y,S,"⟹","\\Longrightarrow",!0),d(c,y,S,"↔","\\leftrightarrow",!0),d(c,y,S,"⟷","\\longleftrightarrow",!0),d(c,y,S,"⇔","\\Leftrightarrow",!0),d(c,y,S,"⟺","\\Longleftrightarrow",!0),d(c,y,S,"↦","\\mapsto",!0),d(c,y,S,"⟼","\\longmapsto",!0),d(c,y,S,"↗","\\nearrow",!0),d(c,y,S,"↩","\\hookleftarrow",!0),d(c,y,S,"↪","\\hookrightarrow",!0),d(c,y,S,"↘","\\searrow",!0),d(c,y,S,"↼","\\leftharpoonup",!0),d(c,y,S,"⇀","\\rightharpoonup",!0),d(c,y,S,"↙","\\swarrow",!0),d(c,y,S,"↽","\\leftharpoondown",!0),d(c,y,S,"⇁","\\rightharpoondown",!0),d(c,y,S,"↖","\\nwarrow",!0),d(c,y,S,"⇌","\\rightleftharpoons",!0),d(c,T,S,"≮","\\nless",!0),d(c,T,S,"","\\@nleqslant"),d(c,T,S,"","\\@nleqq"),d(c,T,S,"⪇","\\lneq",!0),d(c,T,S,"≨","\\lneqq",!0),d(c,T,S,"","\\@lvertneqq"),d(c,T,S,"⋦","\\lnsim",!0),d(c,T,S,"⪉","\\lnapprox",!0),d(c,T,S,"⊀","\\nprec",!0),d(c,T,S,"⋠","\\npreceq",!0),d(c,T,S,"⋨","\\precnsim",!0),d(c,T,S,"⪹","\\precnapprox",!0),d(c,T,S,"≁","\\nsim",!0),d(c,T,S,"","\\@nshortmid"),d(c,T,S,"∤","\\nmid",!0),d(c,T,S,"⊬","\\nvdash",!0),d(c,T,S,"⊭","\\nvDash",!0),d(c,T,S,"⋪","\\ntriangleleft"),d(c,T,S,"⋬","\\ntrianglelefteq",!0),d(c,T,S,"⊊","\\subsetneq",!0),d(c,T,S,"","\\@varsubsetneq"),d(c,T,S,"⫋","\\subsetneqq",!0),d(c,T,S,"","\\@varsubsetneqq"),d(c,T,S,"≯","\\ngtr",!0),d(c,T,S,"","\\@ngeqslant"),d(c,T,S,"","\\@ngeqq"),d(c,T,S,"⪈","\\gneq",!0),d(c,T,S,"≩","\\gneqq",!0),d(c,T,S,"","\\@gvertneqq"),d(c,T,S,"⋧","\\gnsim",!0),d(c,T,S,"⪊","\\gnapprox",!0),d(c,T,S,"⊁","\\nsucc",!0),d(c,T,S,"⋡","\\nsucceq",!0),d(c,T,S,"⋩","\\succnsim",!0),d(c,T,S,"⪺","\\succnapprox",!0),d(c,T,S,"≆","\\ncong",!0),d(c,T,S,"","\\@nshortparallel"),d(c,T,S,"∦","\\nparallel",!0),d(c,T,S,"⊯","\\nVDash",!0),d(c,T,S,"⋫","\\ntriangleright"),d(c,T,S,"⋭","\\ntrianglerighteq",!0),d(c,T,S,"","\\@nsupseteqq"),d(c,T,S,"⊋","\\supsetneq",!0),d(c,T,S,"","\\@varsupsetneq"),d(c,T,S,"⫌","\\supsetneqq",!0),d(c,T,S,"","\\@varsupsetneqq"),d(c,T,S,"⊮","\\nVdash",!0),d(c,T,S,"⪵","\\precneqq",!0),d(c,T,S,"⪶","\\succneqq",!0),d(c,T,S,"","\\@nsubseteqq"),d(c,T,se,"⊴","\\unlhd"),d(c,T,se,"⊵","\\unrhd"),d(c,T,S,"↚","\\nleftarrow",!0),d(c,T,S,"↛","\\nrightarrow",!0),d(c,T,S,"⇍","\\nLeftarrow",!0),d(c,T,S,"⇏","\\nRightarrow",!0),d(c,T,S,"↮","\\nleftrightarrow",!0),d(c,T,S,"⇎","\\nLeftrightarrow",!0),d(c,T,S,"△","\\vartriangle"),d(c,T,I,"ℏ","\\hslash"),d(c,T,I,"▽","\\triangledown"),d(c,T,I,"◊","\\lozenge"),d(c,T,I,"Ⓢ","\\circledS"),d(c,T,I,"®","\\circledR"),d(K,T,I,"®","\\circledR"),d(c,T,I,"∡","\\measuredangle",!0),d(c,T,I,"∄","\\nexists"),d(c,T,I,"℧","\\mho"),d(c,T,I,"Ⅎ","\\Finv",!0),d(c,T,I,"⅁","\\Game",!0),d(c,T,I,"‵","\\backprime"),d(c,T,I,"▲","\\blacktriangle"),d(c,T,I,"▼","\\blacktriangledown"),d(c,T,I,"■","\\blacksquare"),d(c,T,I,"⧫","\\blacklozenge"),d(c,T,I,"★","\\bigstar"),d(c,T,I,"∢","\\sphericalangle",!0),d(c,T,I,"∁","\\complement",!0),d(c,T,I,"ð","\\eth",!0),d(c,T,I,"╱","\\diagup"),d(c,T,I,"╲","\\diagdown"),d(c,T,I,"□","\\square"),d(c,T,I,"□","\\Box"),d(c,T,I,"◊","\\Diamond"),d(c,T,I,"¥","\\yen",!0),d(K,T,I,"¥","\\yen",!0),d(c,T,I,"✓","\\checkmark",!0),d(K,T,I,"✓","\\checkmark"),d(c,T,I,"ℶ","\\beth",!0),d(c,T,I,"ℸ","\\daleth",!0),d(c,T,I,"ℷ","\\gimel",!0),d(c,T,I,"ϝ","\\digamma",!0),d(c,T,I,"ϰ","\\varkappa"),d(c,T,Cn,"┌","\\ulcorner",!0),d(c,T,cn,"┐","\\urcorner",!0),d(c,T,Cn,"└","\\llcorner",!0),d(c,T,cn,"┘","\\lrcorner",!0),d(c,T,S,"≦","\\leqq",!0),d(c,T,S,"⩽","\\leqslant",!0),d(c,T,S,"⪕","\\eqslantless",!0),d(c,T,S,"≲","\\lesssim",!0),d(c,T,S,"⪅","\\lessapprox",!0),d(c,T,S,"≊","\\approxeq",!0),d(c,T,se,"⋖","\\lessdot"),d(c,T,S,"⋘","\\lll",!0),d(c,T,S,"≶","\\lessgtr",!0),d(c,T,S,"⋚","\\lesseqgtr",!0),d(c,T,S,"⪋","\\lesseqqgtr",!0),d(c,T,S,"≑","\\doteqdot"),d(c,T,S,"≓","\\risingdotseq",!0),d(c,T,S,"≒","\\fallingdotseq",!0),d(c,T,S,"∽","\\backsim",!0),d(c,T,S,"⋍","\\backsimeq",!0),d(c,T,S,"⫅","\\subseteqq",!0),d(c,T,S,"⋐","\\Subset",!0),d(c,T,S,"⊏","\\sqsubset",!0),d(c,T,S,"≼","\\preccurlyeq",!0),d(c,T,S,"⋞","\\curlyeqprec",!0),d(c,T,S,"≾","\\precsim",!0),d(c,T,S,"⪷","\\precapprox",!0),d(c,T,S,"⊲","\\vartriangleleft"),d(c,T,S,"⊴","\\trianglelefteq"),d(c,T,S,"⊨","\\vDash",!0),d(c,T,S,"⊪","\\Vvdash",!0),d(c,T,S,"⌣","\\smallsmile"),d(c,T,S,"⌢","\\smallfrown"),d(c,T,S,"≏","\\bumpeq",!0),d(c,T,S,"≎","\\Bumpeq",!0),d(c,T,S,"≧","\\geqq",!0),d(c,T,S,"⩾","\\geqslant",!0),d(c,T,S,"⪖","\\eqslantgtr",!0),d(c,T,S,"≳","\\gtrsim",!0),d(c,T,S,"⪆","\\gtrapprox",!0),d(c,T,se,"⋗","\\gtrdot"),d(c,T,S,"⋙","\\ggg",!0),d(c,T,S,"≷","\\gtrless",!0),d(c,T,S,"⋛","\\gtreqless",!0),d(c,T,S,"⪌","\\gtreqqless",!0),d(c,T,S,"≖","\\eqcirc",!0),d(c,T,S,"≗","\\circeq",!0),d(c,T,S,"≜","\\triangleq",!0),d(c,T,S,"∼","\\thicksim"),d(c,T,S,"≈","\\thickapprox"),d(c,T,S,"⫆","\\supseteqq",!0),d(c,T,S,"⋑","\\Supset",!0),d(c,T,S,"⊐","\\sqsupset",!0),d(c,T,S,"≽","\\succcurlyeq",!0),d(c,T,S,"⋟","\\curlyeqsucc",!0),d(c,T,S,"≿","\\succsim",!0),d(c,T,S,"⪸","\\succapprox",!0),d(c,T,S,"⊳","\\vartriangleright"),d(c,T,S,"⊵","\\trianglerighteq"),d(c,T,S,"⊩","\\Vdash",!0),d(c,T,S,"∣","\\shortmid"),d(c,T,S,"∥","\\shortparallel"),d(c,T,S,"≬","\\between",!0),d(c,T,S,"⋔","\\pitchfork",!0),d(c,T,S,"∝","\\varpropto"),d(c,T,S,"◀","\\blacktriangleleft"),d(c,T,S,"∴","\\therefore",!0),d(c,T,S,"∍","\\backepsilon"),d(c,T,S,"▶","\\blacktriangleright"),d(c,T,S,"∵","\\because",!0),d(c,T,S,"⋘","\\llless"),d(c,T,S,"⋙","\\gggtr"),d(c,T,se,"⊲","\\lhd"),d(c,T,se,"⊳","\\rhd"),d(c,T,S,"≂","\\eqsim",!0),d(c,y,S,"⋈","\\Join"),d(c,T,S,"≑","\\Doteq",!0),d(c,T,se,"∔","\\dotplus",!0),d(c,T,se,"∖","\\smallsetminus"),d(c,T,se,"⋒","\\Cap",!0),d(c,T,se,"⋓","\\Cup",!0),d(c,T,se,"⩞","\\doublebarwedge",!0),d(c,T,se,"⊟","\\boxminus",!0),d(c,T,se,"⊞","\\boxplus",!0),d(c,T,se,"⋇","\\divideontimes",!0),d(c,T,se,"⋉","\\ltimes",!0),d(c,T,se,"⋊","\\rtimes",!0),d(c,T,se,"⋋","\\leftthreetimes",!0),d(c,T,se,"⋌","\\rightthreetimes",!0),d(c,T,se,"⋏","\\curlywedge",!0),d(c,T,se,"⋎","\\curlyvee",!0),d(c,T,se,"⊝","\\circleddash",!0),d(c,T,se,"⊛","\\circledast",!0),d(c,T,se,"⋅","\\centerdot"),d(c,T,se,"⊺","\\intercal",!0),d(c,T,se,"⋒","\\doublecap"),d(c,T,se,"⋓","\\doublecup"),d(c,T,se,"⊠","\\boxtimes",!0),d(c,T,S,"⇢","\\dashrightarrow",!0),d(c,T,S,"⇠","\\dashleftarrow",!0),d(c,T,S,"⇇","\\leftleftarrows",!0),d(c,T,S,"⇆","\\leftrightarrows",!0),d(c,T,S,"⇚","\\Lleftarrow",!0),d(c,T,S,"↞","\\twoheadleftarrow",!0),d(c,T,S,"↢","\\leftarrowtail",!0),d(c,T,S,"↫","\\looparrowleft",!0),d(c,T,S,"⇋","\\leftrightharpoons",!0),d(c,T,S,"↶","\\curvearrowleft",!0),d(c,T,S,"↺","\\circlearrowleft",!0),d(c,T,S,"↰","\\Lsh",!0),d(c,T,S,"⇈","\\upuparrows",!0),d(c,T,S,"↿","\\upharpoonleft",!0),d(c,T,S,"⇃","\\downharpoonleft",!0),d(c,T,S,"⊸","\\multimap",!0),d(c,T,S,"↭","\\leftrightsquigarrow",!0),d(c,T,S,"⇉","\\rightrightarrows",!0),d(c,T,S,"⇄","\\rightleftarrows",!0),d(c,T,S,"↠","\\twoheadrightarrow",!0),d(c,T,S,"↣","\\rightarrowtail",!0),d(c,T,S,"↬","\\looparrowright",!0),d(c,T,S,"↷","\\curvearrowright",!0),d(c,T,S,"↻","\\circlearrowright",!0),d(c,T,S,"↱","\\Rsh",!0),d(c,T,S,"⇊","\\downdownarrows",!0),d(c,T,S,"↾","\\upharpoonright",!0),d(c,T,S,"⇂","\\downharpoonright",!0),d(c,T,S,"⇝","\\rightsquigarrow",!0),d(c,T,S,"⇝","\\leadsto"),d(c,T,S,"⇛","\\Rrightarrow",!0),d(c,T,S,"↾","\\restriction"),d(c,y,I,"‘","`"),d(c,y,I,"$","\\$"),d(K,y,I,"$","\\$"),d(K,y,I,"$","\\textdollar"),d(c,y,I,"%","\\%"),d(K,y,I,"%","\\%"),d(c,y,I,"_","\\_"),d(K,y,I,"_","\\_"),d(K,y,I,"_","\\textunderscore"),d(c,y,I,"∠","\\angle",!0),d(c,y,I,"∞","\\infty",!0),d(c,y,I,"′","\\prime"),d(c,y,I,"△","\\triangle"),d(c,y,I,"Γ","\\Gamma",!0),d(c,y,I,"Δ","\\Delta",!0),d(c,y,I,"Θ","\\Theta",!0),d(c,y,I,"Λ","\\Lambda",!0),d(c,y,I,"Ξ","\\Xi",!0),d(c,y,I,"Π","\\Pi",!0),d(c,y,I,"Σ","\\Sigma",!0),d(c,y,I,"Υ","\\Upsilon",!0),d(c,y,I,"Φ","\\Phi",!0),d(c,y,I,"Ψ","\\Psi",!0),d(c,y,I,"Ω","\\Omega",!0),d(c,y,I,"A","Α"),d(c,y,I,"B","Β"),d(c,y,I,"E","Ε"),d(c,y,I,"Z","Ζ"),d(c,y,I,"H","Η"),d(c,y,I,"I","Ι"),d(c,y,I,"K","Κ"),d(c,y,I,"M","Μ"),d(c,y,I,"N","Ν"),d(c,y,I,"O","Ο"),d(c,y,I,"P","Ρ"),d(c,y,I,"T","Τ"),d(c,y,I,"X","Χ"),d(c,y,I,"¬","\\neg",!0),d(c,y,I,"¬","\\lnot"),d(c,y,I,"⊤","\\top"),d(c,y,I,"⊥","\\bot"),d(c,y,I,"∅","\\emptyset"),d(c,T,I,"∅","\\varnothing"),d(c,y,ye,"α","\\alpha",!0),d(c,y,ye,"β","\\beta",!0),d(c,y,ye,"γ","\\gamma",!0),d(c,y,ye,"δ","\\delta",!0),d(c,y,ye,"ϵ","\\epsilon",!0),d(c,y,ye,"ζ","\\zeta",!0),d(c,y,ye,"η","\\eta",!0),d(c,y,ye,"θ","\\theta",!0),d(c,y,ye,"ι","\\iota",!0),d(c,y,ye,"κ","\\kappa",!0),d(c,y,ye,"λ","\\lambda",!0),d(c,y,ye,"μ","\\mu",!0),d(c,y,ye,"ν","\\nu",!0),d(c,y,ye,"ξ","\\xi",!0),d(c,y,ye,"ο","\\omicron",!0),d(c,y,ye,"π","\\pi",!0),d(c,y,ye,"ρ","\\rho",!0),d(c,y,ye,"σ","\\sigma",!0),d(c,y,ye,"τ","\\tau",!0),d(c,y,ye,"υ","\\upsilon",!0),d(c,y,ye,"ϕ","\\phi",!0),d(c,y,ye,"χ","\\chi",!0),d(c,y,ye,"ψ","\\psi",!0),d(c,y,ye,"ω","\\omega",!0),d(c,y,ye,"ε","\\varepsilon",!0),d(c,y,ye,"ϑ","\\vartheta",!0),d(c,y,ye,"ϖ","\\varpi",!0),d(c,y,ye,"ϱ","\\varrho",!0),d(c,y,ye,"ς","\\varsigma",!0),d(c,y,ye,"φ","\\varphi",!0),d(c,y,se,"∗","*"),d(c,y,se,"+","+"),d(c,y,se,"−","-"),d(c,y,se,"⋅","\\cdot",!0),d(c,y,se,"∘","\\circ"),d(c,y,se,"÷","\\div",!0),d(c,y,se,"±","\\pm",!0),d(c,y,se,"×","\\times",!0),d(c,y,se,"∩","\\cap",!0),d(c,y,se,"∪","\\cup",!0),d(c,y,se,"∖","\\setminus"),d(c,y,se,"∧","\\land"),d(c,y,se,"∨","\\lor"),d(c,y,se,"∧","\\wedge",!0),d(c,y,se,"∨","\\vee",!0),d(c,y,I,"√","\\surd"),d(c,y,Cn,"(","("),d(c,y,Cn,"[","["),d(c,y,Cn,"⟨","\\langle",!0),d(c,y,Cn,"∣","\\lvert"),d(c,y,Cn,"∥","\\lVert"),d(c,y,cn,")",")"),d(c,y,cn,"]","]"),d(c,y,cn,"?","?"),d(c,y,cn,"!","!"),d(c,y,cn,"⟩","\\rangle",!0),d(c,y,cn,"∣","\\rvert"),d(c,y,cn,"∥","\\rVert"),d(c,y,S,"=","="),d(c,y,S,"<","<"),d(c,y,S,">",">"),d(c,y,S,":",":"),d(c,y,S,"≈","\\approx",!0),d(c,y,S,"≅","\\cong",!0),d(c,y,S,"≥","\\ge"),d(c,y,S,"≥","\\geq",!0),d(c,y,S,"←","\\gets"),d(c,y,S,">","\\gt"),d(c,y,S,"∈","\\in",!0),d(c,y,S,"","\\@not"),d(c,y,S,"⊂","\\subset",!0),d(c,y,S,"⊃","\\supset",!0),d(c,y,S,"⊆","\\subseteq",!0),d(c,y,S,"⊇","\\supseteq",!0),d(c,T,S,"⊈","\\nsubseteq",!0),d(c,T,S,"⊉","\\nsupseteq",!0),d(c,y,S,"⊨","\\models"),d(c,y,S,"←","\\leftarrow",!0),d(c,y,S,"≤","\\le"),d(c,y,S,"≤","\\leq",!0),d(c,y,S,"<","\\lt"),d(c,y,S,"→","\\rightarrow",!0),d(c,y,S,"→","\\to"),d(c,T,S,"≱","\\ngeq",!0),d(c,T,S,"≰","\\nleq",!0),d(c,y,jn," ","\\ "),d(c,y,jn," ","~"),d(c,y,jn," ","\\space"),d(c,y,jn," ","\\nobreakspace"),d(K,y,jn," ","\\ "),d(K,y,jn," ","~"),d(K,y,jn," ","\\space"),d(K,y,jn," ","\\nobreakspace"),d(c,y,jn,null,"\\nobreak"),d(c,y,jn,null,"\\allowbreak"),d(c,y,wr,",",","),d(c,y,wr,";",";"),d(c,T,se,"⊼","\\barwedge",!0),d(c,T,se,"⊻","\\veebar",!0),d(c,y,se,"⊙","\\odot",!0),d(c,y,se,"⊕","\\oplus",!0),d(c,y,se,"⊗","\\otimes",!0),d(c,y,I,"∂","\\partial",!0),d(c,y,se,"⊘","\\oslash",!0),d(c,T,se,"⊚","\\circledcirc",!0),d(c,T,se,"⊡","\\boxdot",!0),d(c,y,se,"△","\\bigtriangleup"),d(c,y,se,"▽","\\bigtriangledown"),d(c,y,se,"†","\\dagger"),d(c,y,se,"⋄","\\diamond"),d(c,y,se,"⋆","\\star"),d(c,y,se,"◃","\\triangleleft"),d(c,y,se,"▹","\\triangleright"),d(c,y,Cn,"{","\\{"),d(K,y,I,"{","\\{"),d(K,y,I,"{","\\textbraceleft"),d(c,y,cn,"}","\\}"),d(K,y,I,"}","\\}"),d(K,y,I,"}","\\textbraceright"),d(c,y,Cn,"{","\\lbrace"),d(c,y,cn,"}","\\rbrace"),d(c,y,Cn,"[","\\lbrack"),d(K,y,I,"[","\\lbrack"),d(c,y,cn,"]","\\rbrack"),d(K,y,I,"]","\\rbrack"),d(c,y,Cn,"(","\\lparen"),d(c,y,cn,")","\\rparen"),d(K,y,I,"<","\\textless"),d(K,y,I,">","\\textgreater"),d(c,y,Cn,"⌊","\\lfloor",!0),d(c,y,cn,"⌋","\\rfloor",!0),d(c,y,Cn,"⌈","\\lceil",!0),d(c,y,cn,"⌉","\\rceil",!0),d(c,y,I,"\\","\\backslash"),d(c,y,I,"∣","|"),d(c,y,I,"∣","\\vert"),d(K,y,I,"|","\\textbar"),d(c,y,I,"∥","\\|"),d(c,y,I,"∥","\\Vert"),d(K,y,I,"∥","\\textbardbl"),d(K,y,I,"~","\\textasciitilde"),d(K,y,I,"\\","\\textbackslash"),d(K,y,I,"^","\\textasciicircum"),d(c,y,S,"↑","\\uparrow",!0),d(c,y,S,"⇑","\\Uparrow",!0),d(c,y,S,"↓","\\downarrow",!0),d(c,y,S,"⇓","\\Downarrow",!0),d(c,y,S,"↕","\\updownarrow",!0),d(c,y,S,"⇕","\\Updownarrow",!0),d(c,y,an,"∐","\\coprod"),d(c,y,an,"⋁","\\bigvee"),d(c,y,an,"⋀","\\bigwedge"),d(c,y,an,"⨄","\\biguplus"),d(c,y,an,"⋂","\\bigcap"),d(c,y,an,"⋃","\\bigcup"),d(c,y,an,"∫","\\int"),d(c,y,an,"∫","\\intop"),d(c,y,an,"∬","\\iint"),d(c,y,an,"∭","\\iiint"),d(c,y,an,"∏","\\prod"),d(c,y,an,"∑","\\sum"),d(c,y,an,"⨂","\\bigotimes"),d(c,y,an,"⨁","\\bigoplus"),d(c,y,an,"⨀","\\bigodot"),d(c,y,an,"∮","\\oint"),d(c,y,an,"∯","\\oiint"),d(c,y,an,"∰","\\oiiint"),d(c,y,an,"⨆","\\bigsqcup"),d(c,y,an,"∫","\\smallint"),d(K,y,Yt,"…","\\textellipsis"),d(c,y,Yt,"…","\\mathellipsis"),d(K,y,Yt,"…","\\ldots",!0),d(c,y,Yt,"…","\\ldots",!0),d(c,y,Yt,"⋯","\\@cdots",!0),d(c,y,Yt,"⋱","\\ddots",!0),d(c,y,I,"⋮","\\varvdots"),d(c,y,Xe,"ˊ","\\acute"),d(c,y,Xe,"ˋ","\\grave"),d(c,y,Xe,"¨","\\ddot"),d(c,y,Xe,"~","\\tilde"),d(c,y,Xe,"ˉ","\\bar"),d(c,y,Xe,"˘","\\breve"),d(c,y,Xe,"ˇ","\\check"),d(c,y,Xe,"^","\\hat"),d(c,y,Xe,"⃗","\\vec"),d(c,y,Xe,"˙","\\dot"),d(c,y,Xe,"˚","\\mathring"),d(c,y,ye,"ı","\\imath",!0),d(c,y,ye,"ȷ","\\jmath",!0),d(K,y,I,"ı","\\i",!0),d(K,y,I,"ȷ","\\j",!0),d(K,y,I,"ß","\\ss",!0),d(K,y,I,"æ","\\ae",!0),d(K,y,I,"æ","\\ae",!0),d(K,y,I,"œ","\\oe",!0),d(K,y,I,"ø","\\o",!0),d(K,y,I,"Æ","\\AE",!0),d(K,y,I,"Œ","\\OE",!0),d(K,y,I,"Ø","\\O",!0),d(K,y,Xe,"ˊ","\\'"),d(K,y,Xe,"ˋ","\\`"),d(K,y,Xe,"ˆ","\\^"),d(K,y,Xe,"˜","\\~"),d(K,y,Xe,"ˉ","\\="),d(K,y,Xe,"˘","\\u"),d(K,y,Xe,"˙","\\."),d(K,y,Xe,"˚","\\r"),d(K,y,Xe,"ˇ","\\v"),d(K,y,Xe,"¨",'\\"'),d(K,y,Xe,"˝","\\H"),d(K,y,Xe,"◯","\\textcircled");var Qo={"--":!0,"---":!0,"``":!0,"''":!0};d(K,y,I,"–","--"),d(K,y,I,"–","\\textendash"),d(K,y,I,"—","---"),d(K,y,I,"—","\\textemdash"),d(K,y,I,"‘","`"),d(K,y,I,"‘","\\textquoteleft"),d(K,y,I,"’","'"),d(K,y,I,"’","\\textquoteright"),d(K,y,I,"“","``"),d(K,y,I,"“","\\textquotedblleft"),d(K,y,I,"”","''"),d(K,y,I,"”","\\textquotedblright"),d(c,y,I,"°","\\degree",!0),d(K,y,I,"°","\\degree"),d(K,y,I,"°","\\textdegree",!0),d(c,y,ye,"£","\\pounds"),d(c,y,ye,"£","\\mathsterling",!0),d(K,y,ye,"£","\\pounds"),d(K,y,ye,"£","\\textsterling",!0),d(c,T,I,"✠","\\maltese"),d(K,T,I,"✠","\\maltese"),d(K,y,jn," ","\\ "),d(K,y,jn," "," "),d(K,y,jn," ","~");for(var el='0123456789/@."',Li=0;Li<el.length;Li++){var nl=el.charAt(Li);d(c,y,I,nl,nl)}for(var tl='0123456789!@*()-=+[]<>|";:?/.,',Ri=0;Ri<tl.length;Ri++){var al=tl.charAt(Ri);d(K,y,I,al,al)}for(var fr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",Fi=0;Fi<fr.length;Fi++){var vr=fr.charAt(Fi);d(c,y,ye,vr,vr),d(K,y,I,vr,vr)}d(c,T,I,"C","ℂ"),d(K,T,I,"C","ℂ"),d(c,T,I,"H","ℍ"),d(K,T,I,"H","ℍ"),d(c,T,I,"N","ℕ"),d(K,T,I,"N","ℕ"),d(c,T,I,"P","ℙ"),d(K,T,I,"P","ℙ"),d(c,T,I,"Q","ℚ"),d(K,T,I,"Q","ℚ"),d(c,T,I,"R","ℝ"),d(K,T,I,"R","ℝ"),d(c,T,I,"Z","ℤ"),d(K,T,I,"Z","ℤ"),d(c,y,ye,"h","ℎ"),d(K,y,ye,"h","ℎ");for(var ve="",Nn=0;Nn<fr.length;Nn++){var rn=fr.charAt(Nn);ve=String.fromCharCode(55349,56320+Nn),d(c,y,ye,rn,ve),d(K,y,I,rn,ve),ve=String.fromCharCode(55349,56372+Nn),d(c,y,ye,rn,ve),d(K,y,I,rn,ve),ve=String.fromCharCode(55349,56424+Nn),d(c,y,ye,rn,ve),d(K,y,I,rn,ve),ve=String.fromCharCode(55349,56580+Nn),d(c,y,ye,rn,ve),d(K,y,I,rn,ve),ve=String.fromCharCode(55349,56736+Nn),d(c,y,ye,rn,ve),d(K,y,I,rn,ve),ve=String.fromCharCode(55349,56788+Nn),d(c,y,ye,rn,ve),d(K,y,I,rn,ve),ve=String.fromCharCode(55349,56840+Nn),d(c,y,ye,rn,ve),d(K,y,I,rn,ve),ve=String.fromCharCode(55349,56944+Nn),d(c,y,ye,rn,ve),d(K,y,I,rn,ve),Nn<26&&(ve=String.fromCharCode(55349,56632+Nn),d(c,y,ye,rn,ve),d(K,y,I,rn,ve),ve=String.fromCharCode(55349,56476+Nn),d(c,y,ye,rn,ve),d(K,y,I,rn,ve))}ve="𝕜",d(c,y,ye,"k",ve),d(K,y,I,"k",ve);for(var Ot=0;Ot<10;Ot++){var bt=Ot.toString();ve=String.fromCharCode(55349,57294+Ot),d(c,y,ye,bt,ve),d(K,y,I,bt,ve),ve=String.fromCharCode(55349,57314+Ot),d(c,y,ye,bt,ve),d(K,y,I,bt,ve),ve=String.fromCharCode(55349,57324+Ot),d(c,y,ye,bt,ve),d(K,y,I,bt,ve),ve=String.fromCharCode(55349,57334+Ot),d(c,y,ye,bt,ve),d(K,y,I,bt,ve)}for(var Oi="ÇÐÞçþ",Ei=0;Ei<Oi.length;Ei++){var kr=Oi.charAt(Ei);d(c,y,ye,kr,kr),d(K,y,I,kr,kr)}d(K,y,I,"ð","ð"),d(K,y,I,"–","–"),d(K,y,I,"—","—"),d(K,y,I,"‘","‘"),d(K,y,I,"’","’"),d(K,y,I,"“","“"),d(K,y,I,"”","”");var xr=[["mathbf","textbf","Main-Bold"],["mathbf","textbf","Main-Bold"],["mathdefault","textit","Math-Italic"],["mathdefault","textit","Math-Italic"],["boldsymbol","boldsymbol","Main-BoldItalic"],["boldsymbol","boldsymbol","Main-BoldItalic"],["mathscr","textscr","Script-Regular"],["","",""],["","",""],["","",""],["mathfrak","textfrak","Fraktur-Regular"],["mathfrak","textfrak","Fraktur-Regular"],["mathbb","textbb","AMS-Regular"],["mathbb","textbb","AMS-Regular"],["","",""],["","",""],["mathsf","textsf","SansSerif-Regular"],["mathsf","textsf","SansSerif-Regular"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathitsf","textitsf","SansSerif-Italic"],["mathitsf","textitsf","SansSerif-Italic"],["","",""],["","",""],["mathtt","texttt","Typewriter-Regular"],["mathtt","texttt","Typewriter-Regular"]],rl=[["mathbf","textbf","Main-Bold"],["","",""],["mathsf","textsf","SansSerif-Regular"],["mathboldsf","textboldsf","SansSerif-Bold"],["mathtt","texttt","Typewriter-Regular"]],Md=function(t,a){var r=t.charCodeAt(0),s=t.charCodeAt(1),m=(r-55296)*1024+(s-56320)+65536,g=a==="math"?0:1;if(119808<=m&&m<120484){var f=Math.floor((m-119808)/26);return[xr[f][2],xr[f][g]]}else if(120782<=m&&m<=120831){var v=Math.floor((m-120782)/10);return[rl[v][2],rl[v][g]]}else{if(m===120485||m===120486)return[xr[0][2],xr[0][g]];if(120486<m&&m<120782)return["",""];throw new b("Unsupported character: "+t)}},zd=[[1,1,1],[2,1,1],[3,1,1],[4,2,1],[5,2,1],[6,3,1],[7,4,2],[8,6,3],[9,7,6],[10,8,7],[11,10,9]],il=[.5,.6,.7,.8,.9,1,1.2,1.44,1.728,2.074,2.488],ol=function(t,a){return a.size<2?t:zd[t-1][a.size-1]},ll=function(){function h(a){this.style=void 0,this.color=void 0,this.size=void 0,this.textSize=void 0,this.phantom=void 0,this.font=void 0,this.fontFamily=void 0,this.fontWeight=void 0,this.fontShape=void 0,this.sizeMultiplier=void 0,this.maxSize=void 0,this.minRuleThickness=void 0,this._fontMetrics=void 0,this.style=a.style,this.color=a.color,this.size=a.size||h.BASESIZE,this.textSize=a.textSize||this.size,this.phantom=!!a.phantom,this.font=a.font||"",this.fontFamily=a.fontFamily||"",this.fontWeight=a.fontWeight||"",this.fontShape=a.fontShape||"",this.sizeMultiplier=il[this.size-1],this.maxSize=a.maxSize,this.minRuleThickness=a.minRuleThickness,this._fontMetrics=void 0}var t=h.prototype;return t.extend=function(r){var s={style:this.style,size:this.size,textSize:this.textSize,color:this.color,phantom:this.phantom,font:this.font,fontFamily:this.fontFamily,fontWeight:this.fontWeight,fontShape:this.fontShape,maxSize:this.maxSize,minRuleThickness:this.minRuleThickness};for(var m in r)r.hasOwnProperty(m)&&(s[m]=r[m]);return new h(s)},t.havingStyle=function(r){return this.style===r?this:this.extend({style:r,size:ol(this.textSize,r)})},t.havingCrampedStyle=function(){return this.havingStyle(this.style.cramp())},t.havingSize=function(r){return this.size===r&&this.textSize===r?this:this.extend({style:this.style.text(),size:r,textSize:r,sizeMultiplier:il[r-1]})},t.havingBaseStyle=function(r){r=r||this.style.text();var s=ol(h.BASESIZE,r);return this.size===s&&this.textSize===h.BASESIZE&&this.style===r?this:this.extend({style:r,size:s})},t.havingBaseSizing=function(){var r;switch(this.style.id){case 4:case 5:r=3;break;case 6:case 7:r=1;break;default:r=6}return this.extend({style:this.style.text(),size:r})},t.withColor=function(r){return this.extend({color:r})},t.withPhantom=function(){return this.extend({phantom:!0})},t.withFont=function(r){return this.extend({font:r})},t.withTextFontFamily=function(r){return this.extend({fontFamily:r,font:""})},t.withTextFontWeight=function(r){return this.extend({fontWeight:r,font:""})},t.withTextFontShape=function(r){return this.extend({fontShape:r,font:""})},t.sizingClasses=function(r){return r.size!==this.size?["sizing","reset-size"+r.size,"size"+this.size]:[]},t.baseSizingClasses=function(){return this.size!==h.BASESIZE?["sizing","reset-size"+this.size,"size"+h.BASESIZE]:[]},t.fontMetrics=function(){return this._fontMetrics||(this._fontMetrics=Od(this.size)),this._fontMetrics},t.getColor=function(){return this.phantom?"transparent":this.color},h}();ll.BASESIZE=6;var _d=ll,Di={pt:1,mm:7227/2540,cm:7227/254,in:72.27,bp:803/800,pc:12,dd:1238/1157,cc:14856/1157,nd:685/642,nc:1370/107,sp:1/65536,px:803/800},Bd={ex:!0,em:!0,mu:!0},sl=function(t){return typeof t!="string"&&(t=t.unit),t in Di||t in Bd||t==="ex"},on=function(t,a){var r;if(t.unit in Di)r=Di[t.unit]/a.fontMetrics().ptPerEm/a.sizeMultiplier;else if(t.unit==="mu")r=a.fontMetrics().cssEmPerMu;else{var s;if(a.style.isTight()?s=a.havingStyle(a.style.text()):s=a,t.unit==="ex")r=s.fontMetrics().xHeight;else if(t.unit==="em")r=s.fontMetrics().quad;else throw new b("Invalid unit: '"+t.unit+"'");s!==a&&(r*=s.sizeMultiplier/a.sizeMultiplier)}return Math.min(t.number*r,a.maxSize)},Mi=["\\imath","ı","\\jmath","ȷ","\\pounds","\\mathsterling","\\textsterling","£"],qr=function(t,a,r){return en[r][t]&&en[r][t].replace&&(t=en[r][t].replace),{value:t,metrics:Ii(t,a,r)}},Vn=function(t,a,r,s,m){var g=qr(t,a,r),f=g.metrics;t=g.value;var v;if(f){var C=f.italic;(r==="text"||s&&s.font==="mathit")&&(C=0),v=new un(t,f.height,f.depth,C,f.skew,f.width,m)}else typeof console<"u"&&console.warn("No character metrics "+("for '"+t+"' in style '"+a+"' and mode '"+r+"'")),v=new un(t,0,0,0,0,0,m);if(s){v.maxFontSize=s.sizeMultiplier,s.style.isTight()&&v.classes.push("mtight");var P=s.getColor();P&&(v.style.color=P)}return v},Vd=function(t,a,r,s){return s===void 0&&(s=[]),r.font==="boldsymbol"&&qr(t,"Main-Bold",a).metrics?Vn(t,"Main-Bold",a,r,s.concat(["mathbf"])):t==="\\"||en[a][t].font==="main"?Vn(t,"Main-Regular",a,r,s):Vn(t,"AMS-Regular",a,r,s.concat(["amsrm"]))},$d=function(t,a,r,s){return/[0-9]/.test(t.charAt(0))||A.contains(Mi,t)?{fontName:"Main-Italic",fontClass:"mathit"}:{fontName:"Math-Italic",fontClass:"mathdefault"}},Wd=function(t,a,r,s){return A.contains(Mi,t)?{fontName:"Main-Italic",fontClass:"mathit"}:/[0-9]/.test(t.charAt(0))?{fontName:"Caligraphic-Regular",fontClass:"mathcal"}:{fontName:"Math-Italic",fontClass:"mathdefault"}},Gd=function(t,a,r,s){return qr(t,"Math-BoldItalic",a).metrics?{fontName:"Math-BoldItalic",fontClass:"boldsymbol"}:{fontName:"Main-Bold",fontClass:"mathbf"}},Hd=function(t,a,r){var s=t.mode,m=t.text,g=["mord"],f=s==="math"||s==="text"&&a.font,v=f?a.font:a.fontFamily;if(m.charCodeAt(0)===55349){var C=Md(m,s),P=C[0],L=C[1];return Vn(m,P,s,a,g.concat(L))}else if(v){var z,X;if(v==="boldsymbol"||v==="mathnormal"){var ee=v==="boldsymbol"?Gd(m,s):Wd(m);z=ee.fontName,X=[ee.fontClass]}else A.contains(Mi,m)?(z="Main-Italic",X=["mathit"]):f?(z=ml[v].fontName,X=[v]):(z=Cr(v,a.fontWeight,a.fontShape),X=[v,a.fontWeight,a.fontShape]);if(qr(m,z,s).metrics)return Vn(m,z,s,a,g.concat(X));if(Qo.hasOwnProperty(m)&&z.substr(0,10)==="Typewriter"){for(var ae=[],ce=0;ce<m.length;ce++)ae.push(Vn(m[ce],z,s,a,g.concat(X)));return dl(ae)}}if(r==="mathord"){var xe=$d(m);return Vn(m,xe.fontName,s,a,g.concat([xe.fontClass]))}else if(r==="textord"){var qe=en[s][m]&&en[s][m].font;if(qe==="ams"){var Te=Cr("amsrm",a.fontWeight,a.fontShape);return Vn(m,Te,s,a,g.concat("amsrm",a.fontWeight,a.fontShape))}else if(qe==="main"||!qe){var Ve=Cr("textrm",a.fontWeight,a.fontShape);return Vn(m,Ve,s,a,g.concat(a.fontWeight,a.fontShape))}else{var De=Cr(qe,a.fontWeight,a.fontShape);return Vn(m,De,s,a,g.concat(De,a.fontWeight,a.fontShape))}}else throw new Error("unexpected type: "+r+" in makeOrd")},Ud=function(t,a){if(gt(t.classes)!==gt(a.classes)||t.skew!==a.skew||t.maxFontSize!==a.maxFontSize)return!1;for(var r in t.style)if(t.style.hasOwnProperty(r)&&t.style[r]!==a.style[r])return!1;for(var s in a.style)if(a.style.hasOwnProperty(s)&&t.style[s]!==a.style[s])return!1;return!0},Kd=function(t){for(var a=0;a<t.length-1;a++){var r=t[a],s=t[a+1];r instanceof un&&s instanceof un&&Ud(r,s)&&(r.text+=s.text,r.height=Math.max(r.height,s.height),r.depth=Math.max(r.depth,s.depth),r.italic=s.italic,t.splice(a+1,1),a--)}return t},zi=function(t){for(var a=0,r=0,s=0,m=0;m<t.children.length;m++){var g=t.children[m];g.height>a&&(a=g.height),g.depth>r&&(r=g.depth),g.maxFontSize>s&&(s=g.maxFontSize)}t.height=a,t.depth=r,t.maxFontSize=s},In=function(t,a,r,s){var m=new Pe(t,a,r,s);return zi(m),m},ul=function(t,a,r,s){return new Pe(t,a,r,s)},Xd=function(t,a,r){var s=In([t],[],a);return s.height=Math.max(r||a.fontMetrics().defaultRuleThickness,a.minRuleThickness),s.style.borderBottomWidth=s.height+"em",s.maxFontSize=1,s},Yd=function(t,a,r,s){var m=new bn(t,a,r,s);return zi(m),m},dl=function(t){var a=new ht(t);return zi(a),a},Jd=function(t,a){return t instanceof ht?In([],[t],a):t},Zd=function(t){if(t.positionType==="individualShift"){for(var a=t.children,r=[a[0]],s=-a[0].shift-a[0].elem.depth,m=s,g=1;g<a.length;g++){var f=-a[g].shift-m-a[g].elem.depth,v=f-(a[g-1].elem.height+a[g-1].elem.depth);m=m+f,r.push({type:"kern",size:v}),r.push(a[g])}return{children:r,depth:s}}var C;if(t.positionType==="top"){for(var P=t.positionData,L=0;L<t.children.length;L++){var z=t.children[L];P-=z.type==="kern"?z.size:z.elem.height+z.elem.depth}C=P}else if(t.positionType==="bottom")C=-t.positionData;else{var X=t.children[0];if(X.type!=="elem")throw new Error('First child must have type "elem".');if(t.positionType==="shift")C=-X.elem.depth-t.positionData;else if(t.positionType==="firstBaseline")C=-X.elem.depth;else throw new Error("Invalid positionType "+t.positionType+".")}return{children:t.children,depth:C}},Qd=function(t,a){for(var r=Zd(t),s=r.children,m=r.depth,g=0,f=0;f<s.length;f++){var v=s[f];if(v.type==="elem"){var C=v.elem;g=Math.max(g,C.maxFontSize,C.height)}}g+=2;var P=In(["pstrut"],[]);P.style.height=g+"em";for(var L=[],z=m,X=m,ee=m,ae=0;ae<s.length;ae++){var ce=s[ae];if(ce.type==="kern")ee+=ce.size;else{var xe=ce.elem,qe=ce.wrapperClasses||[],Te=ce.wrapperStyle||{},Ve=In(qe,[P,xe],void 0,Te);Ve.style.top=-g-ee-xe.depth+"em",ce.marginLeft&&(Ve.style.marginLeft=ce.marginLeft),ce.marginRight&&(Ve.style.marginRight=ce.marginRight),L.push(Ve),ee+=xe.height+xe.depth}z=Math.min(z,ee),X=Math.max(X,ee)}var De=In(["vlist"],L);De.style.height=X+"em";var Ge;if(z<0){var He=In([],[]),Je=In(["vlist"],[He]);Je.style.height=-z+"em";var fn=In(["vlist-s"],[new un("​")]);Ge=[In(["vlist-r"],[De,fn]),In(["vlist-r"],[Je])]}else Ge=[In(["vlist-r"],[De])];var hn=In(["vlist-t"],Ge);return Ge.length===2&&hn.classes.push("vlist-t2"),hn.height=X,hn.depth=-z,hn},em=function(t,a){var r=In(["mspace"],[],a),s=on(t,a);return r.style.marginRight=s+"em",r},Cr=function(t,a,r){var s="";switch(t){case"amsrm":s="AMS";break;case"textrm":s="Main";break;case"textsf":s="SansSerif";break;case"texttt":s="Typewriter";break;default:s=t}var m;return a==="textbf"&&r==="textit"?m="BoldItalic":a==="textbf"?m="Bold":a==="textit"?m="Italic":m="Regular",s+"-"+m},ml={mathbf:{variant:"bold",fontName:"Main-Bold"},mathrm:{variant:"normal",fontName:"Main-Regular"},textit:{variant:"italic",fontName:"Main-Italic"},mathit:{variant:"italic",fontName:"Main-Italic"},mathbb:{variant:"double-struck",fontName:"AMS-Regular"},mathcal:{variant:"script",fontName:"Caligraphic-Regular"},mathfrak:{variant:"fraktur",fontName:"Fraktur-Regular"},mathscr:{variant:"script",fontName:"Script-Regular"},mathsf:{variant:"sans-serif",fontName:"SansSerif-Regular"},mathtt:{variant:"monospace",fontName:"Typewriter-Regular"}},cl={vec:["vec",.471,.714],oiintSize1:["oiintSize1",.957,.499],oiintSize2:["oiintSize2",1.472,.659],oiiintSize1:["oiiintSize1",1.304,.499],oiiintSize2:["oiiintSize2",1.98,.659]},nm=function(t,a){var r=cl[t],s=r[0],m=r[1],g=r[2],f=new Kn(s),v=new Un([f],{width:m+"em",height:g+"em",style:"width:"+m+"em",viewBox:"0 0 "+1e3*m+" "+1e3*g,preserveAspectRatio:"xMinYMin"}),C=ul(["overlay"],[v],a);return C.height=g,C.style.height=g+"em",C.style.width=m+"em",C},D={fontMap:ml,makeSymbol:Vn,mathsym:Vd,makeSpan:In,makeSvgSpan:ul,makeLineSpan:Xd,makeAnchor:Yd,makeFragment:dl,wrapFragment:Jd,makeVList:Qd,makeOrd:Hd,makeGlue:em,staticSvg:nm,svgData:cl,tryCombineChars:Kd};function Ce(h,t){var a=wn(h,t);if(!a)throw new Error("Expected node of type "+t+", but got "+(h?"node of type "+h.type:String(h)));return a}function wn(h,t){return h&&h.type===t?h:null}function pl(h,t){var a=tm(h,t);if(!a)throw new Error('Expected node of type "atom" and family "'+t+'", but got '+(h?h.type==="atom"?"atom of family "+h.family:"node of type "+h.type:String(h)));return a}function tm(h,t){return h&&h.type==="atom"&&h.family===t?h:null}function hl(h){var t=Tr(h);if(!t)throw new Error("Expected node of symbol group type, but got "+(h?"node of type "+h.type:String(h)));return t}function Tr(h){return h&&(h.type==="atom"||Dd.hasOwnProperty(h.type))?h:null}var Ye={number:3,unit:"mu"},Et={number:4,unit:"mu"},rt={number:5,unit:"mu"},am={mord:{mop:Ye,mbin:Et,mrel:rt,minner:Ye},mop:{mord:Ye,mop:Ye,mrel:rt,minner:Ye},mbin:{mord:Et,mop:Et,mopen:Et,minner:Et},mrel:{mord:rt,mop:rt,mopen:rt,minner:rt},mopen:{},mclose:{mop:Ye,mbin:Et,mrel:rt,minner:Ye},mpunct:{mord:Ye,mop:Ye,mrel:rt,mopen:Ye,mclose:Ye,mpunct:Ye,minner:Ye},minner:{mord:Ye,mop:Ye,mbin:Et,mrel:rt,mopen:Ye,mpunct:Ye,minner:Ye}},rm={mord:{mop:Ye},mop:{mord:Ye,mop:Ye},mbin:{},mrel:{},mopen:{},mclose:{mop:Ye},mpunct:{},minner:{mop:Ye}},gl={},Ar={},Sr={};function he(h){for(var t=h.type,a=h.names,r=h.props,s=h.handler,m=h.htmlBuilder,g=h.mathmlBuilder,f={type:t,numArgs:r.numArgs,argTypes:r.argTypes,greediness:r.greediness===void 0?1:r.greediness,allowedInText:!!r.allowedInText,allowedInMath:r.allowedInMath===void 0?!0:r.allowedInMath,numOptionalArgs:r.numOptionalArgs||0,infix:!!r.infix,handler:s},v=0;v<a.length;++v)gl[a[v]]=f;t&&(m&&(Ar[t]=m),g&&(Sr[t]=g))}function Dt(h){var t=h.type,a=h.htmlBuilder,r=h.mathmlBuilder;he({type:t,names:[],props:{numArgs:0},handler:function(){throw new Error("Should never be called.")},htmlBuilder:a,mathmlBuilder:r})}var pn=function(t){var a=wn(t,"ordgroup");return a?a.body:[t]},wt=D.makeSpan,im=["leftmost","mbin","mopen","mrel","mop","mpunct"],om=["rightmost","mrel","mclose","mpunct"],lm={display:be.DISPLAY,text:be.TEXT,script:be.SCRIPT,scriptscript:be.SCRIPTSCRIPT},sm={mord:"mord",mop:"mop",mbin:"mbin",mrel:"mrel",mopen:"mopen",mclose:"mclose",mpunct:"mpunct",minner:"minner"},Tn=function(t,a,r,s){s===void 0&&(s=[null,null]);for(var m=[],g=0;g<t.length;g++){var f=Re(t[g],a);if(f instanceof ht){var v=f.children;m.push.apply(m,v)}else m.push(f)}if(!r)return m;var C=a;if(t.length===1){var P=wn(t[0],"sizing")||wn(t[0],"styling");P&&(P.type==="sizing"?C=a.havingSize(P.size):P.type==="styling"&&(C=a.havingStyle(lm[P.style])))}var L=wt([s[0]||"leftmost"],[],a),z=wt([s[1]||"rightmost"],[],a);return yl(m,function(X,ee){var ae=ee.classes[0],ce=X.classes[0];ae==="mbin"&&A.contains(om,ce)?ee.classes[0]="mord":ce==="mbin"&&A.contains(im,ae)&&(X.classes[0]="mord")},{node:L},z),yl(m,function(X,ee){var ae=_i(ee),ce=_i(X),xe=ae&&ce?X.hasClass("mtight")?rm[ae][ce]:am[ae][ce]:null;if(xe)return D.makeGlue(xe,C)},{node:L},z),m},yl=function h(t,a,r,s){s&&t.push(s);for(var m=0;m<t.length;m++){var g=t[m],f=bl(g);if(f){h(f.children,a,r);continue}if(g.classes[0]!=="mspace"){var v=a(g,r.node);v&&(r.insertAfter?r.insertAfter(v):(t.unshift(v),m++)),r.node=g,r.insertAfter=function(C){return function(P){t.splice(C+1,0,P),m++}}(m)}}s&&t.pop()},bl=function(t){return t instanceof ht||t instanceof bn?t:null},um=function h(t,a){var r=bl(t);if(r){var s=r.children;if(s.length){if(a==="right")return h(s[s.length-1],"right");if(a==="left")return h(s[0],"left")}}return t},_i=function(t,a){return t?(a&&(t=um(t,a)),sm[t.classes[0]]||null):null},ba=function(t,a){var r=["nulldelimiter"].concat(t.baseSizingClasses());return wt(a.concat(r))},Re=function(t,a,r){if(!t)return wt();if(Ar[t.type]){var s=Ar[t.type](t,a);if(r&&a.size!==r.size){s=wt(a.sizingClasses(r),[s],a);var m=a.sizeMultiplier/r.sizeMultiplier;s.height*=m,s.depth*=m}return s}else throw new b("Got group of unknown type: '"+t.type+"'")};function Pr(h,t){var a=wt(["base"],h,t),r=wt(["strut"]);return r.style.height=a.height+a.depth+"em",r.style.verticalAlign=-a.depth+"em",a.children.unshift(r),a}function Bi(h,t){var a=null;h.length===1&&h[0].type==="tag"&&(a=h[0].tag,h=h[0].body);for(var r=Tn(h,t,!0),s=[],m=[],g=0;g<r.length;g++)if(m.push(r[g]),r[g].hasClass("mbin")||r[g].hasClass("mrel")||r[g].hasClass("allowbreak")){for(var f=!1;g<r.length-1&&r[g+1].hasClass("mspace")&&!r[g+1].hasClass("newline");)g++,m.push(r[g]),r[g].hasClass("nobreak")&&(f=!0);f||(s.push(Pr(m,t)),m=[])}else r[g].hasClass("newline")&&(m.pop(),m.length>0&&(s.push(Pr(m,t)),m=[]),s.push(r[g]));m.length>0&&s.push(Pr(m,t));var v;a&&(v=Pr(Tn(a,t,!0)),v.classes=["tag"],s.push(v));var C=wt(["katex-html"],s);if(C.setAttribute("aria-hidden","true"),v){var P=v.children[0];P.style.height=C.height+C.depth+"em",P.style.verticalAlign=-C.depth+"em"}return C}function wl(h){return new ht(h)}var En=function(){function h(a,r){this.type=void 0,this.attributes=void 0,this.children=void 0,this.type=a,this.attributes={},this.children=r||[]}var t=h.prototype;return t.setAttribute=function(r,s){this.attributes[r]=s},t.getAttribute=function(r){return this.attributes[r]},t.toNode=function(){var r=document.createElementNS("http://www.w3.org/1998/Math/MathML",this.type);for(var s in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,s)&&r.setAttribute(s,this.attributes[s]);for(var m=0;m<this.children.length;m++)r.appendChild(this.children[m].toNode());return r},t.toMarkup=function(){var r="<"+this.type;for(var s in this.attributes)Object.prototype.hasOwnProperty.call(this.attributes,s)&&(r+=" "+s+'="',r+=A.escape(this.attributes[s]),r+='"');r+=">";for(var m=0;m<this.children.length;m++)r+=this.children[m].toMarkup();return r+="</"+this.type+">",r},t.toText=function(){return this.children.map(function(r){return r.toText()}).join("")},h}(),wa=function(){function h(a){this.text=void 0,this.text=a}var t=h.prototype;return t.toNode=function(){return document.createTextNode(this.text)},t.toMarkup=function(){return A.escape(this.toText())},t.toText=function(){return this.text},h}(),dm=function(){function h(a){this.width=void 0,this.character=void 0,this.width=a,a>=.05555&&a<=.05556?this.character=" ":a>=.1666&&a<=.1667?this.character=" ":a>=.2222&&a<=.2223?this.character=" ":a>=.2777&&a<=.2778?this.character="  ":a>=-.05556&&a<=-.05555?this.character=" ⁣":a>=-.1667&&a<=-.1666?this.character=" ⁣":a>=-.2223&&a<=-.2222?this.character=" ⁣":a>=-.2778&&a<=-.2777?this.character=" ⁣":this.character=null}var t=h.prototype;return t.toNode=function(){if(this.character)return document.createTextNode(this.character);var r=document.createElementNS("http://www.w3.org/1998/Math/MathML","mspace");return r.setAttribute("width",this.width+"em"),r},t.toMarkup=function(){return this.character?"<mtext>"+this.character+"</mtext>":'<mspace width="'+this.width+'em"/>'},t.toText=function(){return this.character?this.character:" "},h}(),ne={MathNode:En,TextNode:wa,SpaceNode:dm,newDocumentFragment:wl},Dn=function(t,a,r){return en[a][t]&&en[a][t].replace&&t.charCodeAt(0)!==55349&&!(Qo.hasOwnProperty(t)&&r&&(r.fontFamily&&r.fontFamily.substr(4,2)==="tt"||r.font&&r.font.substr(4,2)==="tt"))&&(t=en[a][t].replace),new ne.TextNode(t)},Vi=function(t){return t.length===1?t[0]:new ne.MathNode("mrow",t)},$i=function(t,a){if(a.fontFamily==="texttt")return"monospace";if(a.fontFamily==="textsf")return a.fontShape==="textit"&&a.fontWeight==="textbf"?"sans-serif-bold-italic":a.fontShape==="textit"?"sans-serif-italic":a.fontWeight==="textbf"?"bold-sans-serif":"sans-serif";if(a.fontShape==="textit"&&a.fontWeight==="textbf")return"bold-italic";if(a.fontShape==="textit")return"italic";if(a.fontWeight==="textbf")return"bold";var r=a.font;if(!r||r==="mathnormal")return null;var s=t.mode;if(r==="mathit")return"italic";if(r==="boldsymbol")return"bold-italic";if(r==="mathbf")return"bold";if(r==="mathbb")return"double-struck";if(r==="mathfrak")return"fraktur";if(r==="mathscr"||r==="mathcal")return"script";if(r==="mathsf")return"sans-serif";if(r==="mathtt")return"monospace";var m=t.text;if(A.contains(["\\imath","\\jmath"],m))return null;en[s][m]&&en[s][m].replace&&(m=en[s][m].replace);var g=D.fontMap[r].fontName;return Ii(m,g,s)?D.fontMap[r].variant:null},Mn=function(t,a,r){if(t.length===1){var s=We(t[0],a);return r&&s instanceof En&&s.type==="mo"&&(s.setAttribute("lspace","0em"),s.setAttribute("rspace","0em")),[s]}for(var m=[],g,f=0;f<t.length;f++){var v=We(t[f],a);if(v instanceof En&&g instanceof En){if(v.type==="mtext"&&g.type==="mtext"&&v.getAttribute("mathvariant")===g.getAttribute("mathvariant")){var C;(C=g.children).push.apply(C,v.children);continue}else if(v.type==="mn"&&g.type==="mn"){var P;(P=g.children).push.apply(P,v.children);continue}else if(v.type==="mi"&&v.children.length===1&&g.type==="mn"){var L=v.children[0];if(L instanceof wa&&L.text==="."){var z;(z=g.children).push.apply(z,v.children);continue}}else if(g.type==="mi"&&g.children.length===1){var X=g.children[0];if(X instanceof wa&&X.text==="̸"&&(v.type==="mo"||v.type==="mi"||v.type==="mn")){var ee=v.children[0];ee instanceof wa&&ee.text.length>0&&(ee.text=ee.text.slice(0,1)+"̸"+ee.text.slice(1),m.pop())}}}m.push(v),g=v}return m},Mt=function(t,a,r){return Vi(Mn(t,a,r))},We=function(t,a){if(!t)return new ne.MathNode("mrow");if(Sr[t.type]){var r=Sr[t.type](t,a);return r}else throw new b("Got group of unknown type: '"+t.type+"'")};function fl(h,t,a,r){var s=Mn(h,a),m;s.length===1&&s[0]instanceof En&&A.contains(["mrow","mtable"],s[0].type)?m=s[0]:m=new ne.MathNode("mrow",s);var g=new ne.MathNode("annotation",[new ne.TextNode(t)]);g.setAttribute("encoding","application/x-tex");var f=new ne.MathNode("semantics",[m,g]),v=new ne.MathNode("math",[f]);v.setAttribute("xmlns","http://www.w3.org/1998/Math/MathML");var C=r?"katex":"katex-mathml";return D.makeSpan([C],[v])}var vl=function(t){return new _d({style:t.displayMode?be.DISPLAY:be.TEXT,maxSize:t.maxSize,minRuleThickness:t.minRuleThickness})},kl=function(t,a){if(a.displayMode){var r=["katex-display"];a.leqno&&r.push("leqno"),a.fleqn&&r.push("fleqn"),t=D.makeSpan(r,[t])}return t},mm=function(t,a,r){var s=vl(r),m;if(r.output==="mathml")return fl(t,a,s,!0);if(r.output==="html"){var g=Bi(t,s);m=D.makeSpan(["katex"],[g])}else{var f=fl(t,a,s,!1),v=Bi(t,s);m=D.makeSpan(["katex"],[f,v])}return kl(m,r)},cm=function(t,a,r){var s=vl(r),m=Bi(t,s),g=D.makeSpan(["katex"],[m]);return kl(g,r)},pm={widehat:"^",widecheck:"ˇ",widetilde:"~",utilde:"~",overleftarrow:"←",underleftarrow:"←",xleftarrow:"←",overrightarrow:"→",underrightarrow:"→",xrightarrow:"→",underbrace:"⏟",overbrace:"⏞",overgroup:"⏠",undergroup:"⏡",overleftrightarrow:"↔",underleftrightarrow:"↔",xleftrightarrow:"↔",Overrightarrow:"⇒",xRightarrow:"⇒",overleftharpoon:"↼",xleftharpoonup:"↼",overrightharpoon:"⇀",xrightharpoonup:"⇀",xLeftarrow:"⇐",xLeftrightarrow:"⇔",xhookleftarrow:"↩",xhookrightarrow:"↪",xmapsto:"↦",xrightharpoondown:"⇁",xleftharpoondown:"↽",xrightleftharpoons:"⇌",xleftrightharpoons:"⇋",xtwoheadleftarrow:"↞",xtwoheadrightarrow:"↠",xlongequal:"=",xtofrom:"⇄",xrightleftarrows:"⇄",xrightequilibrium:"⇌",xleftequilibrium:"⇋"},hm=function(t){var a=new ne.MathNode("mo",[new ne.TextNode(pm[t.substr(1)])]);return a.setAttribute("stretchy","true"),a},gm={overrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],overleftarrow:[["leftarrow"],.888,522,"xMinYMin"],underrightarrow:[["rightarrow"],.888,522,"xMaxYMin"],underleftarrow:[["leftarrow"],.888,522,"xMinYMin"],xrightarrow:[["rightarrow"],1.469,522,"xMaxYMin"],xleftarrow:[["leftarrow"],1.469,522,"xMinYMin"],Overrightarrow:[["doublerightarrow"],.888,560,"xMaxYMin"],xRightarrow:[["doublerightarrow"],1.526,560,"xMaxYMin"],xLeftarrow:[["doubleleftarrow"],1.526,560,"xMinYMin"],overleftharpoon:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoonup:[["leftharpoon"],.888,522,"xMinYMin"],xleftharpoondown:[["leftharpoondown"],.888,522,"xMinYMin"],overrightharpoon:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoonup:[["rightharpoon"],.888,522,"xMaxYMin"],xrightharpoondown:[["rightharpoondown"],.888,522,"xMaxYMin"],xlongequal:[["longequal"],.888,334,"xMinYMin"],xtwoheadleftarrow:[["twoheadleftarrow"],.888,334,"xMinYMin"],xtwoheadrightarrow:[["twoheadrightarrow"],.888,334,"xMaxYMin"],overleftrightarrow:[["leftarrow","rightarrow"],.888,522],overbrace:[["leftbrace","midbrace","rightbrace"],1.6,548],underbrace:[["leftbraceunder","midbraceunder","rightbraceunder"],1.6,548],underleftrightarrow:[["leftarrow","rightarrow"],.888,522],xleftrightarrow:[["leftarrow","rightarrow"],1.75,522],xLeftrightarrow:[["doubleleftarrow","doublerightarrow"],1.75,560],xrightleftharpoons:[["leftharpoondownplus","rightharpoonplus"],1.75,716],xleftrightharpoons:[["leftharpoonplus","rightharpoondownplus"],1.75,716],xhookleftarrow:[["leftarrow","righthook"],1.08,522],xhookrightarrow:[["lefthook","rightarrow"],1.08,522],overlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],underlinesegment:[["leftlinesegment","rightlinesegment"],.888,522],overgroup:[["leftgroup","rightgroup"],.888,342],undergroup:[["leftgroupunder","rightgroupunder"],.888,342],xmapsto:[["leftmapsto","rightarrow"],1.5,522],xtofrom:[["leftToFrom","rightToFrom"],1.75,528],xrightleftarrows:[["baraboveleftarrow","rightarrowabovebar"],1.75,901],xrightequilibrium:[["baraboveshortleftharpoon","rightharpoonaboveshortbar"],1.75,716],xleftequilibrium:[["shortbaraboveleftharpoon","shortrightharpoonabovebar"],1.75,716]},ym=function(t){return t.type==="ordgroup"?t.body.length:1},bm=function(t,a){function r(){var v=4e5,C=t.label.substr(1);if(A.contains(["widehat","widecheck","widetilde","utilde"],C)){var P=t,L=ym(P.base),z,X,ee;if(L>5)C==="widehat"||C==="widecheck"?(z=420,v=2364,ee=.42,X=C+"4"):(z=312,v=2340,ee=.34,X="tilde4");else{var ae=[1,1,2,2,3,3][L];C==="widehat"||C==="widecheck"?(v=[0,1062,2364,2364,2364][ae],z=[0,239,300,360,420][ae],ee=[0,.24,.3,.3,.36,.42][ae],X=C+ae):(v=[0,600,1033,2339,2340][ae],z=[0,260,286,306,312][ae],ee=[0,.26,.286,.3,.306,.34][ae],X="tilde"+ae)}var ce=new Kn(X),xe=new Un([ce],{width:"100%",height:ee+"em",viewBox:"0 0 "+v+" "+z,preserveAspectRatio:"none"});return{span:D.makeSvgSpan([],[xe],a),minWidth:0,height:ee}}else{var qe=[],Te=gm[C],Ve=Te[0],De=Te[1],Ge=Te[2],He=Ge/1e3,Je=Ve.length,fn,hn;if(Je===1){var Me=Te[3];fn=["hide-tail"],hn=[Me]}else if(Je===2)fn=["halfarrow-left","halfarrow-right"],hn=["xMinYMin","xMaxYMin"];else if(Je===3)fn=["brace-left","brace-center","brace-right"],hn=["xMinYMin","xMidYMin","xMaxYMin"];else throw new Error(`Correct katexImagesData or update code here to support
                    `+Je+" children.");for(var zn=0;zn<Je;zn++){var Ct=new Kn(Ve[zn]),$n=new Un([Ct],{width:"400em",height:He+"em",viewBox:"0 0 "+v+" "+Ge,preserveAspectRatio:hn[zn]+" slice"}),vn=D.makeSvgSpan([fn[zn]],[$n],a);if(Je===1)return{span:vn,minWidth:De,height:He};vn.style.height=He+"em",qe.push(vn)}return{span:D.makeSpan(["stretchy"],qe,a),minWidth:De,height:He}}}var s=r(),m=s.span,g=s.minWidth,f=s.height;return m.height=f,m.style.height=f+"em",g>0&&(m.style.minWidth=g+"em"),m},wm=function(t,a,r,s){var m,g=t.height+t.depth+2*r;if(/fbox|color/.test(a)){if(m=D.makeSpan(["stretchy",a],[],s),a==="fbox"){var f=s.color&&s.getColor();f&&(m.style.borderColor=f)}}else{var v=[];/^[bx]cancel$/.test(a)&&v.push(new Ni({x1:"0",y1:"0",x2:"100%",y2:"100%","stroke-width":"0.046em"})),/^x?cancel$/.test(a)&&v.push(new Ni({x1:"0",y1:"100%",x2:"100%",y2:"0","stroke-width":"0.046em"}));var C=new Un(v,{width:"100%",height:g+"em"});m=D.makeSvgSpan([],[C],s)}return m.height=g,m.style.height=g+"em",m},it={encloseSpan:wm,mathMLnode:hm,svgSpan:bm},Wi=function(t,a){var r,s,m=wn(t,"supsub"),g;m?(s=Ce(m.base,"accent"),r=s.base,m.base=r,g=Rd(Re(m,a)),m.base=s):(s=Ce(t,"accent"),r=s.base);var f=Re(r,a.havingCrampedStyle()),v=s.isShifty&&A.isCharacterBox(r),C=0;if(v){var P=A.getBaseElem(r),L=Re(P,a.havingCrampedStyle());C=Jo(L).skew}var z=Math.min(f.height,a.fontMetrics().xHeight),X;if(s.isStretchy)X=it.svgSpan(s,a),X=D.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:f},{type:"elem",elem:X,wrapperClasses:["svg-align"],wrapperStyle:C>0?{width:"calc(100% - "+2*C+"em)",marginLeft:2*C+"em"}:void 0}]},a);else{var ee,ae;s.label==="\\vec"?(ee=D.staticSvg("vec",a),ae=D.svgData.vec[1]):(ee=D.makeOrd({mode:s.mode,text:s.label},a,"textord"),ee=Jo(ee),ee.italic=0,ae=ee.width),X=D.makeSpan(["accent-body"],[ee]);var ce=s.label==="\\textcircled";ce&&(X.classes.push("accent-full"),z=f.height);var xe=C;ce||(xe-=ae/2),X.style.left=xe+"em",s.label==="\\textcircled"&&(X.style.top=".2em"),X=D.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:f},{type:"kern",size:-z},{type:"elem",elem:X}]},a)}var qe=D.makeSpan(["mord","accent"],[X],a);return g?(g.children[0]=qe,g.height=Math.max(qe.height,g.height),g.classes[0]="mord",g):qe},xl=function(t,a){var r=t.isStretchy?it.mathMLnode(t.label):new ne.MathNode("mo",[Dn(t.label,t.mode)]),s=new ne.MathNode("mover",[We(t.base,a),r]);return s.setAttribute("accent","true"),s},fm=new RegExp(["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\mathring"].map(function(h){return"\\"+h}).join("|"));he({type:"accent",names:["\\acute","\\grave","\\ddot","\\tilde","\\bar","\\breve","\\check","\\hat","\\vec","\\dot","\\mathring","\\widecheck","\\widehat","\\widetilde","\\overrightarrow","\\overleftarrow","\\Overrightarrow","\\overleftrightarrow","\\overgroup","\\overlinesegment","\\overleftharpoon","\\overrightharpoon"],props:{numArgs:1},handler:function(t,a){var r=a[0],s=!fm.test(t.funcName),m=!s||t.funcName==="\\widehat"||t.funcName==="\\widetilde"||t.funcName==="\\widecheck";return{type:"accent",mode:t.parser.mode,label:t.funcName,isStretchy:s,isShifty:m,base:r}},htmlBuilder:Wi,mathmlBuilder:xl}),he({type:"accent",names:["\\'","\\`","\\^","\\~","\\=","\\u","\\.",'\\"',"\\r","\\H","\\v","\\textcircled"],props:{numArgs:1,allowedInText:!0,allowedInMath:!1},handler:function(t,a){var r=a[0];return{type:"accent",mode:t.parser.mode,label:t.funcName,isStretchy:!1,isShifty:!0,base:r}},htmlBuilder:Wi,mathmlBuilder:xl}),he({type:"accentUnder",names:["\\underleftarrow","\\underrightarrow","\\underleftrightarrow","\\undergroup","\\underlinesegment","\\utilde"],props:{numArgs:1},handler:function(t,a){var r=t.parser,s=t.funcName,m=a[0];return{type:"accentUnder",mode:r.mode,label:s,base:m}},htmlBuilder:function(t,a){var r=Re(t.base,a),s=it.svgSpan(t,a),m=t.label==="\\utilde"?.12:0,g=D.makeVList({positionType:"bottom",positionData:s.height+m,children:[{type:"elem",elem:s,wrapperClasses:["svg-align"]},{type:"kern",size:m},{type:"elem",elem:r}]},a);return D.makeSpan(["mord","accentunder"],[g],a)},mathmlBuilder:function(t,a){var r=it.mathMLnode(t.label),s=new ne.MathNode("munder",[We(t.base,a),r]);return s.setAttribute("accentunder","true"),s}});var Nr=function(t){var a=new ne.MathNode("mpadded",t?[t]:[]);return a.setAttribute("width","+0.6em"),a.setAttribute("lspace","0.3em"),a};he({type:"xArrow",names:["\\xleftarrow","\\xrightarrow","\\xLeftarrow","\\xRightarrow","\\xleftrightarrow","\\xLeftrightarrow","\\xhookleftarrow","\\xhookrightarrow","\\xmapsto","\\xrightharpoondown","\\xrightharpoonup","\\xleftharpoondown","\\xleftharpoonup","\\xrightleftharpoons","\\xleftrightharpoons","\\xlongequal","\\xtwoheadrightarrow","\\xtwoheadleftarrow","\\xtofrom","\\xrightleftarrows","\\xrightequilibrium","\\xleftequilibrium"],props:{numArgs:1,numOptionalArgs:1},handler:function(t,a,r){var s=t.parser,m=t.funcName;return{type:"xArrow",mode:s.mode,label:m,body:a[0],below:r[0]}},htmlBuilder:function(t,a){var r=a.style,s=a.havingStyle(r.sup()),m=D.wrapFragment(Re(t.body,s,a),a);m.classes.push("x-arrow-pad");var g;t.below&&(s=a.havingStyle(r.sub()),g=D.wrapFragment(Re(t.below,s,a),a),g.classes.push("x-arrow-pad"));var f=it.svgSpan(t,a),v=-a.fontMetrics().axisHeight+.5*f.height,C=-a.fontMetrics().axisHeight-.5*f.height-.111;(m.depth>.25||t.label==="\\xleftequilibrium")&&(C-=m.depth);var P;if(g){var L=-a.fontMetrics().axisHeight+g.height+.5*f.height+.111;P=D.makeVList({positionType:"individualShift",children:[{type:"elem",elem:m,shift:C},{type:"elem",elem:f,shift:v},{type:"elem",elem:g,shift:L}]},a)}else P=D.makeVList({positionType:"individualShift",children:[{type:"elem",elem:m,shift:C},{type:"elem",elem:f,shift:v}]},a);return P.children[0].children[0].children[1].classes.push("svg-align"),D.makeSpan(["mrel","x-arrow"],[P],a)},mathmlBuilder:function(t,a){var r=it.mathMLnode(t.label),s;if(t.body){var m=Nr(We(t.body,a));if(t.below){var g=Nr(We(t.below,a));s=new ne.MathNode("munderover",[r,g,m])}else s=new ne.MathNode("mover",[r,m])}else if(t.below){var f=Nr(We(t.below,a));s=new ne.MathNode("munder",[r,f])}else s=Nr(),s=new ne.MathNode("mover",[r,s]);return s}}),he({type:"textord",names:["\\@char"],props:{numArgs:1,allowedInText:!0},handler:function(t,a){for(var r=t.parser,s=Ce(a[0],"ordgroup"),m=s.body,g="",f=0;f<m.length;f++){var v=Ce(m[f],"textord");g+=v.text}var C=parseInt(g);if(isNaN(C))throw new b("\\@char has non-numeric argument "+g);return{type:"textord",mode:r.mode,text:String.fromCharCode(C)}}});var ql=function(t,a){var r=Tn(t.body,a.withColor(t.color),!1);return D.makeFragment(r)},Cl=function(t,a){var r=Mn(t.body,a.withColor(t.color)),s=new ne.MathNode("mstyle",r);return s.setAttribute("mathcolor",t.color),s};he({type:"color",names:["\\textcolor"],props:{numArgs:2,allowedInText:!0,greediness:3,argTypes:["color","original"]},handler:function(t,a){var r=t.parser,s=Ce(a[0],"color-token").color,m=a[1];return{type:"color",mode:r.mode,color:s,body:pn(m)}},htmlBuilder:ql,mathmlBuilder:Cl}),he({type:"color",names:["\\color"],props:{numArgs:1,allowedInText:!0,greediness:3,argTypes:["color"]},handler:function(t,a){var r=t.parser,s=t.breakOnTokenText,m=Ce(a[0],"color-token").color;r.gullet.macros.set("\\current@color",m);var g=r.parseExpression(!0,s);return{type:"color",mode:r.mode,color:m,body:g}},htmlBuilder:ql,mathmlBuilder:Cl}),he({type:"cr",names:["\\cr","\\newline"],props:{numArgs:0,numOptionalArgs:1,argTypes:["size"],allowedInText:!0},handler:function(t,a,r){var s=t.parser,m=t.funcName,g=r[0],f=m==="\\cr",v=!1;return f||(s.settings.displayMode&&s.settings.useStrictBehavior("newLineInDisplayMode","In LaTeX, \\\\ or \\newline does nothing in display mode")?v=!1:v=!0),{type:"cr",mode:s.mode,newLine:v,newRow:f,size:g&&Ce(g,"size").value}},htmlBuilder:function(t,a){if(t.newRow)throw new b("\\cr valid only within a tabular/array environment");var r=D.makeSpan(["mspace"],[],a);return t.newLine&&(r.classes.push("newline"),t.size&&(r.style.marginTop=on(t.size,a)+"em")),r},mathmlBuilder:function(t,a){var r=new ne.MathNode("mspace");return t.newLine&&(r.setAttribute("linebreak","newline"),t.size&&r.setAttribute("height",on(t.size,a)+"em")),r}});var fa=function(t,a,r){var s=en.math[t]&&en.math[t].replace,m=Ii(s||t,a,r);if(!m)throw new Error("Unsupported symbol "+t+" and font size "+a+".");return m},Gi=function(t,a,r,s){var m=r.havingBaseStyle(a),g=D.makeSpan(s.concat(m.sizingClasses(r)),[t],r),f=m.sizeMultiplier/r.sizeMultiplier;return g.height*=f,g.depth*=f,g.maxFontSize=m.sizeMultiplier,g},Tl=function(t,a,r){var s=a.havingBaseStyle(r),m=(1-a.sizeMultiplier/s.sizeMultiplier)*a.fontMetrics().axisHeight;t.classes.push("delimcenter"),t.style.top=m+"em",t.height-=m,t.depth+=m},vm=function(t,a,r,s,m,g){var f=D.makeSymbol(t,"Main-Regular",m,s),v=Gi(f,a,s,g);return r&&Tl(v,s,a),v},km=function(t,a,r,s){return D.makeSymbol(t,"Size"+a+"-Regular",r,s)},Al=function(t,a,r,s,m,g){var f=km(t,a,m,s),v=Gi(D.makeSpan(["delimsizing","size"+a],[f],s),be.TEXT,s,g);return r&&Tl(v,s,be.TEXT),v},ft=function(t,a,r){var s;a==="Size1-Regular"?s="delim-size1":s="delim-size4";var m=D.makeSpan(["delimsizinginner",s],[D.makeSpan([],[D.makeSymbol(t,a,r)])]);return{type:"elem",elem:m}},va={type:"kern",size:-.005},Sl=function(t,a,r,s,m,g){var f,v,C,P;f=C=P=t,v=null;var L="Size1-Regular";t==="\\uparrow"?C=P="⏐":t==="\\Uparrow"?C=P="‖":t==="\\downarrow"?f=C="⏐":t==="\\Downarrow"?f=C="‖":t==="\\updownarrow"?(f="\\uparrow",C="⏐",P="\\downarrow"):t==="\\Updownarrow"?(f="\\Uparrow",C="‖",P="\\Downarrow"):t==="["||t==="\\lbrack"?(f="⎡",C="⎢",P="⎣",L="Size4-Regular"):t==="]"||t==="\\rbrack"?(f="⎤",C="⎥",P="⎦",L="Size4-Regular"):t==="\\lfloor"||t==="⌊"?(C=f="⎢",P="⎣",L="Size4-Regular"):t==="\\lceil"||t==="⌈"?(f="⎡",C=P="⎢",L="Size4-Regular"):t==="\\rfloor"||t==="⌋"?(C=f="⎥",P="⎦",L="Size4-Regular"):t==="\\rceil"||t==="⌉"?(f="⎤",C=P="⎥",L="Size4-Regular"):t==="("||t==="\\lparen"?(f="⎛",C="⎜",P="⎝",L="Size4-Regular"):t===")"||t==="\\rparen"?(f="⎞",C="⎟",P="⎠",L="Size4-Regular"):t==="\\{"||t==="\\lbrace"?(f="⎧",v="⎨",P="⎩",C="⎪",L="Size4-Regular"):t==="\\}"||t==="\\rbrace"?(f="⎫",v="⎬",P="⎭",C="⎪",L="Size4-Regular"):t==="\\lgroup"||t==="⟮"?(f="⎧",P="⎩",C="⎪",L="Size4-Regular"):t==="\\rgroup"||t==="⟯"?(f="⎫",P="⎭",C="⎪",L="Size4-Regular"):t==="\\lmoustache"||t==="⎰"?(f="⎧",P="⎭",C="⎪",L="Size4-Regular"):(t==="\\rmoustache"||t==="⎱")&&(f="⎫",P="⎩",C="⎪",L="Size4-Regular");var z=fa(f,L,m),X=z.height+z.depth,ee=fa(C,L,m),ae=ee.height+ee.depth,ce=fa(P,L,m),xe=ce.height+ce.depth,qe=0,Te=1;if(v!==null){var Ve=fa(v,L,m);qe=Ve.height+Ve.depth,Te=2}var De=X+xe+qe,Ge=Math.max(0,Math.ceil((a-De)/(Te*ae))),He=De+Ge*Te*ae,Je=s.fontMetrics().axisHeight;r&&(Je*=s.sizeMultiplier);var fn=He/2-Je,hn=(Ge+1)*.005-ae,Me=[];if(Me.push(ft(P,L,m)),v===null)for(var zn=0;zn<Ge;zn++)Me.push(va),Me.push(ft(C,L,m));else{for(var Ct=0;Ct<Ge;Ct++)Me.push(va),Me.push(ft(C,L,m));Me.push({type:"kern",size:hn}),Me.push(ft(C,L,m)),Me.push(va),Me.push(ft(v,L,m));for(var $n=0;$n<Ge;$n++)Me.push(va),Me.push(ft(C,L,m))}Me.push({type:"kern",size:hn}),Me.push(ft(C,L,m)),Me.push(va),Me.push(ft(f,L,m));var vn=s.havingBaseStyle(be.TEXT),Tt=D.makeVList({positionType:"bottom",positionData:fn,children:Me},vn);return Gi(D.makeSpan(["delimsizing","mult"],[Tt],vn),be.TEXT,s,g)},Hi=80,Ui=.08,Ki=function(t,a,r,s,m){var g=hr(t,s,r),f=new Kn(t,g),v=new Un([f],{width:"400em",height:a+"em",viewBox:"0 0 400000 "+r,preserveAspectRatio:"xMinYMin slice"});return D.makeSvgSpan(["hide-tail"],[v],m)},xm=function(t,a){var r=a.havingBaseSizing(),s=jl("\\surd",t*r.sizeMultiplier,Il,r),m=r.sizeMultiplier,g=Math.max(0,a.minRuleThickness-a.fontMetrics().sqrtRuleThickness),f,v=0,C=0,P=0,L;return s.type==="small"?(P=1e3+1e3*g+Hi,t<1?m=1:t<1.4&&(m=.7),v=(1+g+Ui)/m,C=(1+g)/m,f=Ki("sqrtMain",v,P,g,a),f.style.minWidth="0.853em",L=.833/m):s.type==="large"?(P=(1e3+Hi)*Ir[s.size],C=(Ir[s.size]+g)/m,v=(Ir[s.size]+g+Ui)/m,f=Ki("sqrtSize"+s.size,v,P,g,a),f.style.minWidth="1.02em",L=1/m):(v=t+g+Ui,C=t+g,P=Math.floor(1e3*t+g)+Hi,f=Ki("sqrtTall",v,P,g,a),f.style.minWidth="0.742em",L=1.056),f.height=C,f.style.height=v+"em",{span:f,advanceWidth:L,ruleWidth:(a.fontMetrics().sqrtRuleThickness+g)*m}},Pl=["(","\\lparen",")","\\rparen","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","⌊","⌋","\\lceil","\\rceil","⌈","⌉","\\surd"],qm=["\\uparrow","\\downarrow","\\updownarrow","\\Uparrow","\\Downarrow","\\Updownarrow","|","\\|","\\vert","\\Vert","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","⟮","⟯","\\lmoustache","\\rmoustache","⎰","⎱"],Nl=["<",">","\\langle","\\rangle","/","\\backslash","\\lt","\\gt"],Ir=[0,1.2,1.8,2.4,3],Cm=function(t,a,r,s,m){if(t==="<"||t==="\\lt"||t==="⟨"?t="\\langle":(t===">"||t==="\\gt"||t==="⟩")&&(t="\\rangle"),A.contains(Pl,t)||A.contains(Nl,t))return Al(t,a,!1,r,s,m);if(A.contains(qm,t))return Sl(t,Ir[a],!1,r,s,m);throw new b("Illegal delimiter: '"+t+"'")},Tm=[{type:"small",style:be.SCRIPTSCRIPT},{type:"small",style:be.SCRIPT},{type:"small",style:be.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4}],Am=[{type:"small",style:be.SCRIPTSCRIPT},{type:"small",style:be.SCRIPT},{type:"small",style:be.TEXT},{type:"stack"}],Il=[{type:"small",style:be.SCRIPTSCRIPT},{type:"small",style:be.SCRIPT},{type:"small",style:be.TEXT},{type:"large",size:1},{type:"large",size:2},{type:"large",size:3},{type:"large",size:4},{type:"stack"}],Sm=function(t){if(t.type==="small")return"Main-Regular";if(t.type==="large")return"Size"+t.size+"-Regular";if(t.type==="stack")return"Size4-Regular";throw new Error("Add support for delim type '"+t.type+"' here.")},jl=function(t,a,r,s){for(var m=Math.min(2,3-s.style.size),g=m;g<r.length&&r[g].type!=="stack";g++){var f=fa(t,Sm(r[g]),"math"),v=f.height+f.depth;if(r[g].type==="small"){var C=s.havingBaseStyle(r[g].style);v*=C.sizeMultiplier}if(v>a)return r[g]}return r[r.length-1]},Ll=function(t,a,r,s,m,g){t==="<"||t==="\\lt"||t==="⟨"?t="\\langle":(t===">"||t==="\\gt"||t==="⟩")&&(t="\\rangle");var f;A.contains(Nl,t)?f=Tm:A.contains(Pl,t)?f=Il:f=Am;var v=jl(t,a,f,s);return v.type==="small"?vm(t,v.style,r,s,m,g):v.type==="large"?Al(t,v.size,r,s,m,g):Sl(t,a,r,s,m,g)},Pm=function(t,a,r,s,m,g){var f=s.fontMetrics().axisHeight*s.sizeMultiplier,v=901,C=5/s.fontMetrics().ptPerEm,P=Math.max(a-f,r+f),L=Math.max(P/500*v,2*P-C);return Ll(t,L,!0,s,m,g)},vt={sqrtImage:xm,sizedDelim:Cm,customSizedDelim:Ll,leftRightDelim:Pm},Rl={"\\bigl":{mclass:"mopen",size:1},"\\Bigl":{mclass:"mopen",size:2},"\\biggl":{mclass:"mopen",size:3},"\\Biggl":{mclass:"mopen",size:4},"\\bigr":{mclass:"mclose",size:1},"\\Bigr":{mclass:"mclose",size:2},"\\biggr":{mclass:"mclose",size:3},"\\Biggr":{mclass:"mclose",size:4},"\\bigm":{mclass:"mrel",size:1},"\\Bigm":{mclass:"mrel",size:2},"\\biggm":{mclass:"mrel",size:3},"\\Biggm":{mclass:"mrel",size:4},"\\big":{mclass:"mord",size:1},"\\Big":{mclass:"mord",size:2},"\\bigg":{mclass:"mord",size:3},"\\Bigg":{mclass:"mord",size:4}},Nm=["(","\\lparen",")","\\rparen","[","\\lbrack","]","\\rbrack","\\{","\\lbrace","\\}","\\rbrace","\\lfloor","\\rfloor","⌊","⌋","\\lceil","\\rceil","⌈","⌉","<",">","\\langle","⟨","\\rangle","⟩","\\lt","\\gt","\\lvert","\\rvert","\\lVert","\\rVert","\\lgroup","\\rgroup","⟮","⟯","\\lmoustache","\\rmoustache","⎰","⎱","/","\\backslash","|","\\vert","\\|","\\Vert","\\uparrow","\\Uparrow","\\downarrow","\\Downarrow","\\updownarrow","\\Updownarrow","."];function jr(h,t){var a=Tr(h);if(a&&A.contains(Nm,a.text))return a;throw new b("Invalid delimiter: '"+(a?a.text:JSON.stringify(h))+"' after '"+t.funcName+"'",h)}he({type:"delimsizing",names:["\\bigl","\\Bigl","\\biggl","\\Biggl","\\bigr","\\Bigr","\\biggr","\\Biggr","\\bigm","\\Bigm","\\biggm","\\Biggm","\\big","\\Big","\\bigg","\\Bigg"],props:{numArgs:1},handler:function(t,a){var r=jr(a[0],t);return{type:"delimsizing",mode:t.parser.mode,size:Rl[t.funcName].size,mclass:Rl[t.funcName].mclass,delim:r.text}},htmlBuilder:function(t,a){return t.delim==="."?D.makeSpan([t.mclass]):vt.sizedDelim(t.delim,t.size,a,t.mode,[t.mclass])},mathmlBuilder:function(t){var a=[];t.delim!=="."&&a.push(Dn(t.delim,t.mode));var r=new ne.MathNode("mo",a);return t.mclass==="mopen"||t.mclass==="mclose"?r.setAttribute("fence","true"):r.setAttribute("fence","false"),r}});function Fl(h){if(!h.body)throw new Error("Bug: The leftright ParseNode wasn't fully parsed.")}he({type:"leftright-right",names:["\\right"],props:{numArgs:1},handler:function(t,a){var r=t.parser.gullet.macros.get("\\current@color");if(r&&typeof r!="string")throw new b("\\current@color set to non-string in \\right");return{type:"leftright-right",mode:t.parser.mode,delim:jr(a[0],t).text,color:r}}}),he({type:"leftright",names:["\\left"],props:{numArgs:1},handler:function(t,a){var r=jr(a[0],t),s=t.parser;++s.leftrightDepth;var m=s.parseExpression(!1);--s.leftrightDepth,s.expect("\\right",!1);var g=Ce(s.parseFunction(),"leftright-right");return{type:"leftright",mode:s.mode,body:m,left:r.text,right:g.delim,rightColor:g.color}},htmlBuilder:function(t,a){Fl(t);for(var r=Tn(t.body,a,!0,["mopen","mclose"]),s=0,m=0,g=!1,f=0;f<r.length;f++)r[f].isMiddle?g=!0:(s=Math.max(r[f].height,s),m=Math.max(r[f].depth,m));s*=a.sizeMultiplier,m*=a.sizeMultiplier;var v;if(t.left==="."?v=ba(a,["mopen"]):v=vt.leftRightDelim(t.left,s,m,a,t.mode,["mopen"]),r.unshift(v),g)for(var C=1;C<r.length;C++){var P=r[C],L=P.isMiddle;L&&(r[C]=vt.leftRightDelim(L.delim,s,m,L.options,t.mode,[]))}var z;if(t.right===".")z=ba(a,["mclose"]);else{var X=t.rightColor?a.withColor(t.rightColor):a;z=vt.leftRightDelim(t.right,s,m,X,t.mode,["mclose"])}return r.push(z),D.makeSpan(["minner"],r,a)},mathmlBuilder:function(t,a){Fl(t);var r=Mn(t.body,a);if(t.left!=="."){var s=new ne.MathNode("mo",[Dn(t.left,t.mode)]);s.setAttribute("fence","true"),r.unshift(s)}if(t.right!=="."){var m=new ne.MathNode("mo",[Dn(t.right,t.mode)]);m.setAttribute("fence","true"),t.rightColor&&m.setAttribute("mathcolor",t.rightColor),r.push(m)}return Vi(r)}}),he({type:"middle",names:["\\middle"],props:{numArgs:1},handler:function(t,a){var r=jr(a[0],t);if(!t.parser.leftrightDepth)throw new b("\\middle without preceding \\left",r);return{type:"middle",mode:t.parser.mode,delim:r.text}},htmlBuilder:function(t,a){var r;if(t.delim===".")r=ba(a,[]);else{r=vt.sizedDelim(t.delim,1,a,t.mode,[]);var s={delim:t.delim,options:a};r.isMiddle=s}return r},mathmlBuilder:function(t,a){var r=t.delim==="\\vert"||t.delim==="|"?Dn("|","text"):Dn(t.delim,t.mode),s=new ne.MathNode("mo",[r]);return s.setAttribute("fence","true"),s.setAttribute("lspace","0.05em"),s.setAttribute("rspace","0.05em"),s}});var Xi=function(t,a){var r=D.wrapFragment(Re(t.body,a),a),s=t.label.substr(1),m=a.sizeMultiplier,g,f=0,v=A.isCharacterBox(t.body);if(s==="sout")g=D.makeSpan(["stretchy","sout"]),g.height=a.fontMetrics().defaultRuleThickness/m,f=-.5*a.fontMetrics().xHeight;else{/cancel/.test(s)?v||r.classes.push("cancel-pad"):r.classes.push("boxpad");var C=0,P=0;/box/.test(s)?(P=Math.max(a.fontMetrics().fboxrule,a.minRuleThickness),C=a.fontMetrics().fboxsep+(s==="colorbox"?0:P)):C=v?.2:0,g=it.encloseSpan(r,s,C,a),/fbox|boxed|fcolorbox/.test(s)&&(g.style.borderStyle="solid",g.style.borderWidth=P+"em"),f=r.depth+C,t.backgroundColor&&(g.style.backgroundColor=t.backgroundColor,t.borderColor&&(g.style.borderColor=t.borderColor))}var L;return t.backgroundColor?L=D.makeVList({positionType:"individualShift",children:[{type:"elem",elem:g,shift:f},{type:"elem",elem:r,shift:0}]},a):L=D.makeVList({positionType:"individualShift",children:[{type:"elem",elem:r,shift:0},{type:"elem",elem:g,shift:f,wrapperClasses:/cancel/.test(s)?["svg-align"]:[]}]},a),/cancel/.test(s)&&(L.height=r.height,L.depth=r.depth),/cancel/.test(s)&&!v?D.makeSpan(["mord","cancel-lap"],[L],a):D.makeSpan(["mord"],[L],a)},Yi=function(t,a){var r=0,s=new ne.MathNode(t.label.indexOf("colorbox")>-1?"mpadded":"menclose",[We(t.body,a)]);switch(t.label){case"\\cancel":s.setAttribute("notation","updiagonalstrike");break;case"\\bcancel":s.setAttribute("notation","downdiagonalstrike");break;case"\\sout":s.setAttribute("notation","horizontalstrike");break;case"\\fbox":s.setAttribute("notation","box");break;case"\\fcolorbox":case"\\colorbox":if(r=a.fontMetrics().fboxsep*a.fontMetrics().ptPerEm,s.setAttribute("width","+"+2*r+"pt"),s.setAttribute("height","+"+2*r+"pt"),s.setAttribute("lspace",r+"pt"),s.setAttribute("voffset",r+"pt"),t.label==="\\fcolorbox"){var m=Math.max(a.fontMetrics().fboxrule,a.minRuleThickness);s.setAttribute("style","border: "+m+"em solid "+String(t.borderColor))}break;case"\\xcancel":s.setAttribute("notation","updiagonalstrike downdiagonalstrike");break}return t.backgroundColor&&s.setAttribute("mathbackground",t.backgroundColor),s};he({type:"enclose",names:["\\colorbox"],props:{numArgs:2,allowedInText:!0,greediness:3,argTypes:["color","text"]},handler:function(t,a,r){var s=t.parser,m=t.funcName,g=Ce(a[0],"color-token").color,f=a[1];return{type:"enclose",mode:s.mode,label:m,backgroundColor:g,body:f}},htmlBuilder:Xi,mathmlBuilder:Yi}),he({type:"enclose",names:["\\fcolorbox"],props:{numArgs:3,allowedInText:!0,greediness:3,argTypes:["color","color","text"]},handler:function(t,a,r){var s=t.parser,m=t.funcName,g=Ce(a[0],"color-token").color,f=Ce(a[1],"color-token").color,v=a[2];return{type:"enclose",mode:s.mode,label:m,backgroundColor:f,borderColor:g,body:v}},htmlBuilder:Xi,mathmlBuilder:Yi}),he({type:"enclose",names:["\\fbox"],props:{numArgs:1,argTypes:["hbox"],allowedInText:!0},handler:function(t,a){var r=t.parser;return{type:"enclose",mode:r.mode,label:"\\fbox",body:a[0]}}}),he({type:"enclose",names:["\\cancel","\\bcancel","\\xcancel","\\sout"],props:{numArgs:1},handler:function(t,a,r){var s=t.parser,m=t.funcName,g=a[0];return{type:"enclose",mode:s.mode,label:m,body:g}},htmlBuilder:Xi,mathmlBuilder:Yi});var Ol={};function kt(h){for(var t=h.type,a=h.names,r=h.props,s=h.handler,m=h.htmlBuilder,g=h.mathmlBuilder,f={type:t,numArgs:r.numArgs||0,greediness:1,allowedInText:!1,numOptionalArgs:0,handler:s},v=0;v<a.length;++v)Ol[a[v]]=f;m&&(Ar[t]=m),g&&(Sr[t]=g)}function El(h){var t=[];h.consumeSpaces();for(var a=h.fetch().text;a==="\\hline"||a==="\\hdashline";)h.consume(),t.push(a==="\\hdashline"),h.consumeSpaces(),a=h.fetch().text;return t}function zt(h,t,a){var r=t.hskipBeforeAndAfter,s=t.addJot,m=t.cols,g=t.arraystretch,f=t.colSeparationType;if(h.gullet.beginGroup(),h.gullet.macros.set("\\\\","\\cr"),!g){var v=h.gullet.expandMacroAsText("\\arraystretch");if(v==null)g=1;else if(g=parseFloat(v),!g||g<0)throw new b("Invalid \\arraystretch: "+v)}h.gullet.beginGroup();var C=[],P=[C],L=[],z=[];for(z.push(El(h));;){var X=h.parseExpression(!1,"\\cr");h.gullet.endGroup(),h.gullet.beginGroup(),X={type:"ordgroup",mode:h.mode,body:X},a&&(X={type:"styling",mode:h.mode,style:a,body:[X]}),C.push(X);var ee=h.fetch().text;if(ee==="&")h.consume();else if(ee==="\\end"){C.length===1&&X.type==="styling"&&X.body[0].body.length===0&&P.pop(),z.length<P.length+1&&z.push([]);break}else if(ee==="\\cr"){var ae=Ce(h.parseFunction(),"cr");L.push(ae.size),z.push(El(h)),C=[],P.push(C)}else throw new b("Expected & or \\\\ or \\cr or \\end",h.nextToken)}return h.gullet.endGroup(),h.gullet.endGroup(),{type:"array",mode:h.mode,addJot:s,arraystretch:g,body:P,cols:m,rowGaps:L,hskipBeforeAndAfter:r,hLinesBeforeRow:z,colSeparationType:f}}function Ji(h){return h.substr(0,1)==="d"?"display":"text"}var xt=function(t,a){var r,s,m=t.body.length,g=t.hLinesBeforeRow,f=0,v=new Array(m),C=[],P=Math.max(a.fontMetrics().arrayRuleWidth,a.minRuleThickness),L=1/a.fontMetrics().ptPerEm,z=5*L;if(t.colSeparationType&&t.colSeparationType==="small"){var X=a.havingStyle(be.SCRIPT).sizeMultiplier;z=.2778*(X/a.sizeMultiplier)}var ee=12*L,ae=3*L,ce=t.arraystretch*ee,xe=.7*ce,qe=.3*ce,Te=0;function Ve(ks){for(var Or=0;Or<ks.length;++Or)Or>0&&(Te+=.25),C.push({pos:Te,isDashed:ks[Or]})}for(Ve(g[0]),r=0;r<t.body.length;++r){var De=t.body[r],Ge=xe,He=qe;f<De.length&&(f=De.length);var Je=new Array(De.length);for(s=0;s<De.length;++s){var fn=Re(De[s],a);He<fn.depth&&(He=fn.depth),Ge<fn.height&&(Ge=fn.height),Je[s]=fn}var hn=t.rowGaps[r],Me=0;hn&&(Me=on(hn,a),Me>0&&(Me+=qe,He<Me&&(He=Me),Me=0)),t.addJot&&(He+=ae),Je.height=Ge,Je.depth=He,Te+=Ge,Je.pos=Te,Te+=He+Me,v[r]=Je,Ve(g[r+1])}var zn=Te/2+a.fontMetrics().axisHeight,Ct=t.cols||[],$n=[],vn,Tt;for(s=0,Tt=0;s<f||Tt<Ct.length;++s,++Tt){for(var ot=Ct[Tt]||{},ws=!0;ot.type==="separator";){if(ws||(vn=D.makeSpan(["arraycolsep"],[]),vn.style.width=a.fontMetrics().doubleRuleSep+"em",$n.push(vn)),ot.separator==="|"||ot.separator===":"){var ec=ot.separator==="|"?"solid":"dashed",Zt=D.makeSpan(["vertical-separator"],[],a);Zt.style.height=Te+"em",Zt.style.borderRightWidth=P+"em",Zt.style.borderRightStyle=ec,Zt.style.margin="0 -"+P/2+"em",Zt.style.verticalAlign=-(Te-zn)+"em",$n.push(Zt)}else throw new b("Invalid separator type: "+ot.separator);Tt++,ot=Ct[Tt]||{},ws=!1}if(!(s>=f)){var Qt=void 0;(s>0||t.hskipBeforeAndAfter)&&(Qt=A.deflt(ot.pregap,z),Qt!==0&&(vn=D.makeSpan(["arraycolsep"],[]),vn.style.width=Qt+"em",$n.push(vn)));var ea=[];for(r=0;r<m;++r){var Rr=v[r],Fr=Rr[s];if(Fr){var nc=Rr.pos-zn;Fr.depth=Rr.depth,Fr.height=Rr.height,ea.push({type:"elem",elem:Fr,shift:nc})}}ea=D.makeVList({positionType:"individualShift",children:ea},a),ea=D.makeSpan(["col-align-"+(ot.align||"c")],[ea]),$n.push(ea),(s<f-1||t.hskipBeforeAndAfter)&&(Qt=A.deflt(ot.postgap,z),Qt!==0&&(vn=D.makeSpan(["arraycolsep"],[]),vn.style.width=Qt+"em",$n.push(vn)))}}if(v=D.makeSpan(["mtable"],$n),C.length>0){for(var tc=D.makeLineSpan("hline",a,P),ac=D.makeLineSpan("hdashline",a,P),co=[{type:"elem",elem:v,shift:0}];C.length>0;){var fs=C.pop(),vs=fs.pos-zn;fs.isDashed?co.push({type:"elem",elem:ac,shift:vs}):co.push({type:"elem",elem:tc,shift:vs})}v=D.makeVList({positionType:"individualShift",children:co},a)}return D.makeSpan(["mord"],[v],a)},Im={c:"center ",l:"left ",r:"right "},qt=function(t,a){var r=new ne.MathNode("mtable",t.body.map(function(Te){return new ne.MathNode("mtr",Te.map(function(Ve){return new ne.MathNode("mtd",[We(Ve,a)])}))})),s=t.arraystretch===.5?.1:.16+t.arraystretch-1+(t.addJot?.09:0);r.setAttribute("rowspacing",s+"em");var m="",g="";if(t.cols){var f=t.cols,v="",C=!1,P=0,L=f.length;f[0].type==="separator"&&(m+="top ",P=1),f[f.length-1].type==="separator"&&(m+="bottom ",L-=1);for(var z=P;z<L;z++)f[z].type==="align"?(g+=Im[f[z].align],C&&(v+="none "),C=!0):f[z].type==="separator"&&C&&(v+=f[z].separator==="|"?"solid ":"dashed ",C=!1);r.setAttribute("columnalign",g.trim()),/[sd]/.test(v)&&r.setAttribute("columnlines",v.trim())}if(t.colSeparationType==="align"){for(var X=t.cols||[],ee="",ae=1;ae<X.length;ae++)ee+=ae%2?"0em ":"1em ";r.setAttribute("columnspacing",ee.trim())}else t.colSeparationType==="alignat"?r.setAttribute("columnspacing","0em"):t.colSeparationType==="small"?r.setAttribute("columnspacing","0.2778em"):r.setAttribute("columnspacing","1em");var ce="",xe=t.hLinesBeforeRow;m+=xe[0].length>0?"left ":"",m+=xe[xe.length-1].length>0?"right ":"";for(var qe=1;qe<xe.length-1;qe++)ce+=xe[qe].length===0?"none ":xe[qe][0]?"dashed ":"solid ";return/[sd]/.test(ce)&&r.setAttribute("rowlines",ce.trim()),m!==""&&(r=new ne.MathNode("menclose",[r]),r.setAttribute("notation",m.trim())),t.arraystretch&&t.arraystretch<1&&(r=new ne.MathNode("mstyle",[r]),r.setAttribute("scriptlevel","1")),r},Dl=function(t,a){var r=[],s=zt(t.parser,{cols:r,addJot:!0},"display"),m,g=0,f={type:"ordgroup",mode:t.mode,body:[]},v=wn(a[0],"ordgroup");if(v){for(var C="",P=0;P<v.body.length;P++){var L=Ce(v.body[P],"textord");C+=L.text}m=Number(C),g=m*2}var z=!g;s.body.forEach(function(ce){for(var xe=1;xe<ce.length;xe+=2){var qe=Ce(ce[xe],"styling"),Te=Ce(qe.body[0],"ordgroup");Te.body.unshift(f)}if(z)g<ce.length&&(g=ce.length);else{var Ve=ce.length/2;if(m<Ve)throw new b("Too many math in a row: "+("expected "+m+", but got "+Ve),ce[0])}});for(var X=0;X<g;++X){var ee="r",ae=0;X%2===1?ee="l":X>0&&z&&(ae=1),r[X]={type:"align",align:ee,pregap:ae,postgap:0}}return s.colSeparationType=z?"align":"alignat",s};kt({type:"array",names:["array","darray"],props:{numArgs:1},handler:function(t,a){var r=Tr(a[0]),s=r?[a[0]]:Ce(a[0],"ordgroup").body,m=s.map(function(f){var v=hl(f),C=v.text;if("lcr".indexOf(C)!==-1)return{type:"align",align:C};if(C==="|")return{type:"separator",separator:"|"};if(C===":")return{type:"separator",separator:":"};throw new b("Unknown column alignment: "+C,f)}),g={cols:m,hskipBeforeAndAfter:!0};return zt(t.parser,g,Ji(t.envName))},htmlBuilder:xt,mathmlBuilder:qt}),kt({type:"array",names:["matrix","pmatrix","bmatrix","Bmatrix","vmatrix","Vmatrix"],props:{numArgs:0},handler:function(t){var a={matrix:null,pmatrix:["(",")"],bmatrix:["[","]"],Bmatrix:["\\{","\\}"],vmatrix:["|","|"],Vmatrix:["\\Vert","\\Vert"]}[t.envName],r={hskipBeforeAndAfter:!1},s=zt(t.parser,r,Ji(t.envName));return a?{type:"leftright",mode:t.mode,body:[s],left:a[0],right:a[1],rightColor:void 0}:s},htmlBuilder:xt,mathmlBuilder:qt}),kt({type:"array",names:["smallmatrix"],props:{numArgs:0},handler:function(t){var a={arraystretch:.5},r=zt(t.parser,a,"script");return r.colSeparationType="small",r},htmlBuilder:xt,mathmlBuilder:qt}),kt({type:"array",names:["subarray"],props:{numArgs:1},handler:function(t,a){var r=Tr(a[0]),s=r?[a[0]]:Ce(a[0],"ordgroup").body,m=s.map(function(f){var v=hl(f),C=v.text;if("lc".indexOf(C)!==-1)return{type:"align",align:C};throw new b("Unknown column alignment: "+C,f)});if(m.length>1)throw new b("{subarray} can contain only one column");var g={cols:m,hskipBeforeAndAfter:!1,arraystretch:.5};if(g=zt(t.parser,g,"script"),g.body[0].length>1)throw new b("{subarray} can contain only one column");return g},htmlBuilder:xt,mathmlBuilder:qt}),kt({type:"array",names:["cases","dcases"],props:{numArgs:0},handler:function(t){var a={arraystretch:1.2,cols:[{type:"align",align:"l",pregap:0,postgap:1},{type:"align",align:"l",pregap:0,postgap:0}]},r=zt(t.parser,a,Ji(t.envName));return{type:"leftright",mode:t.mode,body:[r],left:"\\{",right:".",rightColor:void 0}},htmlBuilder:xt,mathmlBuilder:qt}),kt({type:"array",names:["aligned"],props:{numArgs:0},handler:Dl,htmlBuilder:xt,mathmlBuilder:qt}),kt({type:"array",names:["gathered"],props:{numArgs:0},handler:function(t){var a={cols:[{type:"align",align:"c"}],addJot:!0};return zt(t.parser,a,"display")},htmlBuilder:xt,mathmlBuilder:qt}),kt({type:"array",names:["alignedat"],props:{numArgs:1},handler:Dl,htmlBuilder:xt,mathmlBuilder:qt}),he({type:"text",names:["\\hline","\\hdashline"],props:{numArgs:0,allowedInText:!0,allowedInMath:!0},handler:function(t,a){throw new b(t.funcName+" valid only within array environment")}});var jm=Ol,Ml=jm;he({type:"environment",names:["\\begin","\\end"],props:{numArgs:1,argTypes:["text"]},handler:function(t,a){var r=t.parser,s=t.funcName,m=a[0];if(m.type!=="ordgroup")throw new b("Invalid environment name",m);for(var g="",f=0;f<m.body.length;++f)g+=Ce(m.body[f],"textord").text;if(s==="\\begin"){if(!Ml.hasOwnProperty(g))throw new b("No such environment: "+g,m);var v=Ml[g],C=r.parseArguments("\\begin{"+g+"}",v),P=C.args,L=C.optArgs,z={mode:r.mode,envName:g,parser:r},X=v.handler(z,P,L);r.expect("\\end",!1);var ee=r.nextToken,ae=Ce(r.parseFunction(),"environment");if(ae.name!==g)throw new b("Mismatch: \\begin{"+g+"} matched by \\end{"+ae.name+"}",ee);return X}return{type:"environment",mode:r.mode,name:g,nameGroup:m}}});var Lm=D.makeSpan;function zl(h,t){var a=Tn(h.body,t,!0);return Lm([h.mclass],a,t)}function _l(h,t){var a,r=Mn(h.body,t);return h.mclass==="minner"?ne.newDocumentFragment(r):(h.mclass==="mord"?h.isCharacterBox?(a=r[0],a.type="mi"):a=new ne.MathNode("mi",r):(h.isCharacterBox?(a=r[0],a.type="mo"):a=new ne.MathNode("mo",r),h.mclass==="mbin"?(a.attributes.lspace="0.22em",a.attributes.rspace="0.22em"):h.mclass==="mpunct"?(a.attributes.lspace="0em",a.attributes.rspace="0.17em"):(h.mclass==="mopen"||h.mclass==="mclose")&&(a.attributes.lspace="0em",a.attributes.rspace="0em")),a)}he({type:"mclass",names:["\\mathord","\\mathbin","\\mathrel","\\mathopen","\\mathclose","\\mathpunct","\\mathinner"],props:{numArgs:1},handler:function(t,a){var r=t.parser,s=t.funcName,m=a[0];return{type:"mclass",mode:r.mode,mclass:"m"+s.substr(5),body:pn(m),isCharacterBox:A.isCharacterBox(m)}},htmlBuilder:zl,mathmlBuilder:_l});var Zi=function(t){var a=t.type==="ordgroup"&&t.body.length?t.body[0]:t;return a.type==="atom"&&(a.family==="bin"||a.family==="rel")?"m"+a.family:"mord"};he({type:"mclass",names:["\\@binrel"],props:{numArgs:2},handler:function(t,a){var r=t.parser;return{type:"mclass",mode:r.mode,mclass:Zi(a[0]),body:[a[1]],isCharacterBox:A.isCharacterBox(a[1])}}}),he({type:"mclass",names:["\\stackrel","\\overset","\\underset"],props:{numArgs:2},handler:function(t,a){var r=t.parser,s=t.funcName,m=a[1],g=a[0],f;s!=="\\stackrel"?f=Zi(m):f="mrel";var v={type:"op",mode:m.mode,limits:!0,alwaysHandleSupSub:!0,parentIsSupSub:!1,symbol:!1,suppressBaseShift:s!=="\\stackrel",body:pn(m)},C={type:"supsub",mode:g.mode,base:v,sup:s==="\\underset"?null:g,sub:s==="\\underset"?g:null};return{type:"mclass",mode:r.mode,mclass:f,body:[C],isCharacterBox:A.isCharacterBox(C)}},htmlBuilder:zl,mathmlBuilder:_l});var Bl=function(t,a){var r=t.font,s=a.withFont(r);return Re(t.body,s)},Vl=function(t,a){var r=t.font,s=a.withFont(r);return We(t.body,s)},$l={"\\Bbb":"\\mathbb","\\bold":"\\mathbf","\\frak":"\\mathfrak","\\bm":"\\boldsymbol"};he({type:"font",names:["\\mathrm","\\mathit","\\mathbf","\\mathnormal","\\mathbb","\\mathcal","\\mathfrak","\\mathscr","\\mathsf","\\mathtt","\\Bbb","\\bold","\\frak"],props:{numArgs:1,greediness:2},handler:function(t,a){var r=t.parser,s=t.funcName,m=a[0],g=s;return g in $l&&(g=$l[g]),{type:"font",mode:r.mode,font:g.slice(1),body:m}},htmlBuilder:Bl,mathmlBuilder:Vl}),he({type:"mclass",names:["\\boldsymbol","\\bm"],props:{numArgs:1,greediness:2},handler:function(t,a){var r=t.parser,s=a[0],m=A.isCharacterBox(s);return{type:"mclass",mode:r.mode,mclass:Zi(s),body:[{type:"font",mode:r.mode,font:"boldsymbol",body:s}],isCharacterBox:m}}}),he({type:"font",names:["\\rm","\\sf","\\tt","\\bf","\\it"],props:{numArgs:0,allowedInText:!0},handler:function(t,a){var r=t.parser,s=t.funcName,m=t.breakOnTokenText,g=r.mode,f=r.parseExpression(!0,m),v="math"+s.slice(1);return{type:"font",mode:g,font:v,body:{type:"ordgroup",mode:r.mode,body:f}}},htmlBuilder:Bl,mathmlBuilder:Vl});var Wl=function(t,a){var r=a;return t==="display"?r=r.id>=be.SCRIPT.id?r.text():be.DISPLAY:t==="text"&&r.size===be.DISPLAY.size?r=be.TEXT:t==="script"?r=be.SCRIPT:t==="scriptscript"&&(r=be.SCRIPTSCRIPT),r},Qi=function(t,a){var r=Wl(t.size,a.style),s=r.fracNum(),m=r.fracDen(),g;g=a.havingStyle(s);var f=Re(t.numer,g,a);if(t.continued){var v=8.5/a.fontMetrics().ptPerEm,C=3.5/a.fontMetrics().ptPerEm;f.height=f.height<v?v:f.height,f.depth=f.depth<C?C:f.depth}g=a.havingStyle(m);var P=Re(t.denom,g,a),L,z,X;t.hasBarLine?(t.barSize?(z=on(t.barSize,a),L=D.makeLineSpan("frac-line",a,z)):L=D.makeLineSpan("frac-line",a),z=L.height,X=L.height):(L=null,z=0,X=a.fontMetrics().defaultRuleThickness);var ee,ae,ce;r.size===be.DISPLAY.size||t.size==="display"?(ee=a.fontMetrics().num1,z>0?ae=3*X:ae=7*X,ce=a.fontMetrics().denom1):(z>0?(ee=a.fontMetrics().num2,ae=X):(ee=a.fontMetrics().num3,ae=3*X),ce=a.fontMetrics().denom2);var xe;if(L){var Te=a.fontMetrics().axisHeight;ee-f.depth-(Te+.5*z)<ae&&(ee+=ae-(ee-f.depth-(Te+.5*z))),Te-.5*z-(P.height-ce)<ae&&(ce+=ae-(Te-.5*z-(P.height-ce)));var Ve=-(Te-.5*z);xe=D.makeVList({positionType:"individualShift",children:[{type:"elem",elem:P,shift:ce},{type:"elem",elem:L,shift:Ve},{type:"elem",elem:f,shift:-ee}]},a)}else{var qe=ee-f.depth-(P.height-ce);qe<ae&&(ee+=.5*(ae-qe),ce+=.5*(ae-qe)),xe=D.makeVList({positionType:"individualShift",children:[{type:"elem",elem:P,shift:ce},{type:"elem",elem:f,shift:-ee}]},a)}g=a.havingStyle(r),xe.height*=g.sizeMultiplier/a.sizeMultiplier,xe.depth*=g.sizeMultiplier/a.sizeMultiplier;var De;r.size===be.DISPLAY.size?De=a.fontMetrics().delim1:De=a.fontMetrics().delim2;var Ge,He;return t.leftDelim==null?Ge=ba(a,["mopen"]):Ge=vt.customSizedDelim(t.leftDelim,De,!0,a.havingStyle(r),t.mode,["mopen"]),t.continued?He=D.makeSpan([]):t.rightDelim==null?He=ba(a,["mclose"]):He=vt.customSizedDelim(t.rightDelim,De,!0,a.havingStyle(r),t.mode,["mclose"]),D.makeSpan(["mord"].concat(g.sizingClasses(a)),[Ge,D.makeSpan(["mfrac"],[xe]),He],a)},eo=function(t,a){var r=new ne.MathNode("mfrac",[We(t.numer,a),We(t.denom,a)]);if(!t.hasBarLine)r.setAttribute("linethickness","0px");else if(t.barSize){var s=on(t.barSize,a);r.setAttribute("linethickness",s+"em")}var m=Wl(t.size,a.style);if(m.size!==a.style.size){r=new ne.MathNode("mstyle",[r]);var g=m.size===be.DISPLAY.size?"true":"false";r.setAttribute("displaystyle",g),r.setAttribute("scriptlevel","0")}if(t.leftDelim!=null||t.rightDelim!=null){var f=[];if(t.leftDelim!=null){var v=new ne.MathNode("mo",[new ne.TextNode(t.leftDelim.replace("\\",""))]);v.setAttribute("fence","true"),f.push(v)}if(f.push(r),t.rightDelim!=null){var C=new ne.MathNode("mo",[new ne.TextNode(t.rightDelim.replace("\\",""))]);C.setAttribute("fence","true"),f.push(C)}return Vi(f)}return r};he({type:"genfrac",names:["\\cfrac","\\dfrac","\\frac","\\tfrac","\\dbinom","\\binom","\\tbinom","\\\\atopfrac","\\\\bracefrac","\\\\brackfrac"],props:{numArgs:2,greediness:2},handler:function(t,a){var r=t.parser,s=t.funcName,m=a[0],g=a[1],f,v=null,C=null,P="auto";switch(s){case"\\cfrac":case"\\dfrac":case"\\frac":case"\\tfrac":f=!0;break;case"\\\\atopfrac":f=!1;break;case"\\dbinom":case"\\binom":case"\\tbinom":f=!1,v="(",C=")";break;case"\\\\bracefrac":f=!1,v="\\{",C="\\}";break;case"\\\\brackfrac":f=!1,v="[",C="]";break;default:throw new Error("Unrecognized genfrac command")}switch(s){case"\\cfrac":case"\\dfrac":case"\\dbinom":P="display";break;case"\\tfrac":case"\\tbinom":P="text";break}return{type:"genfrac",mode:r.mode,continued:s==="\\cfrac",numer:m,denom:g,hasBarLine:f,leftDelim:v,rightDelim:C,size:P,barSize:null}},htmlBuilder:Qi,mathmlBuilder:eo}),he({type:"infix",names:["\\over","\\choose","\\atop","\\brace","\\brack"],props:{numArgs:0,infix:!0},handler:function(t){var a=t.parser,r=t.funcName,s=t.token,m;switch(r){case"\\over":m="\\frac";break;case"\\choose":m="\\binom";break;case"\\atop":m="\\\\atopfrac";break;case"\\brace":m="\\\\bracefrac";break;case"\\brack":m="\\\\brackfrac";break;default:throw new Error("Unrecognized infix genfrac command")}return{type:"infix",mode:a.mode,replaceWith:m,token:s}}});var Gl=["display","text","script","scriptscript"],Hl=function(t){var a=null;return t.length>0&&(a=t,a=a==="."?null:a),a};he({type:"genfrac",names:["\\genfrac"],props:{numArgs:6,greediness:6,argTypes:["math","math","size","text","math","math"]},handler:function(t,a){var r=t.parser,s=a[4],m=a[5],g=wn(a[0],"atom");g&&(g=pl(a[0],"open"));var f=g?Hl(g.text):null,v=wn(a[1],"atom");v&&(v=pl(a[1],"close"));var C=v?Hl(v.text):null,P=Ce(a[2],"size"),L,z=null;P.isBlank?L=!0:(z=P.value,L=z.number>0);var X="auto",ee=wn(a[3],"ordgroup");if(ee){if(ee.body.length>0){var ae=Ce(ee.body[0],"textord");X=Gl[Number(ae.text)]}}else ee=Ce(a[3],"textord"),X=Gl[Number(ee.text)];return{type:"genfrac",mode:r.mode,numer:s,denom:m,continued:!1,hasBarLine:L,barSize:z,leftDelim:f,rightDelim:C,size:X}},htmlBuilder:Qi,mathmlBuilder:eo}),he({type:"infix",names:["\\above"],props:{numArgs:1,argTypes:["size"],infix:!0},handler:function(t,a){var r=t.parser;t.funcName;var s=t.token;return{type:"infix",mode:r.mode,replaceWith:"\\\\abovefrac",size:Ce(a[0],"size").value,token:s}}}),he({type:"genfrac",names:["\\\\abovefrac"],props:{numArgs:3,argTypes:["math","size","math"]},handler:function(t,a){var r=t.parser;t.funcName;var s=a[0],m=U(Ce(a[1],"infix").size),g=a[2],f=m.number>0;return{type:"genfrac",mode:r.mode,numer:s,denom:g,continued:!1,hasBarLine:f,barSize:m,leftDelim:null,rightDelim:null,size:"auto"}},htmlBuilder:Qi,mathmlBuilder:eo});var Ul=function(t,a){var r=a.style,s,m,g=wn(t,"supsub");g?(s=g.sup?Re(g.sup,a.havingStyle(r.sup()),a):Re(g.sub,a.havingStyle(r.sub()),a),m=Ce(g.base,"horizBrace")):m=Ce(t,"horizBrace");var f=Re(m.base,a.havingBaseStyle(be.DISPLAY)),v=it.svgSpan(m,a),C;if(m.isOver?(C=D.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:f},{type:"kern",size:.1},{type:"elem",elem:v}]},a),C.children[0].children[0].children[1].classes.push("svg-align")):(C=D.makeVList({positionType:"bottom",positionData:f.depth+.1+v.height,children:[{type:"elem",elem:v},{type:"kern",size:.1},{type:"elem",elem:f}]},a),C.children[0].children[0].children[0].classes.push("svg-align")),s){var P=D.makeSpan(["mord",m.isOver?"mover":"munder"],[C],a);m.isOver?C=D.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:P},{type:"kern",size:.2},{type:"elem",elem:s}]},a):C=D.makeVList({positionType:"bottom",positionData:P.depth+.2+s.height+s.depth,children:[{type:"elem",elem:s},{type:"kern",size:.2},{type:"elem",elem:P}]},a)}return D.makeSpan(["mord",m.isOver?"mover":"munder"],[C],a)},Rm=function(t,a){var r=it.mathMLnode(t.label);return new ne.MathNode(t.isOver?"mover":"munder",[We(t.base,a),r])};he({type:"horizBrace",names:["\\overbrace","\\underbrace"],props:{numArgs:1},handler:function(t,a){var r=t.parser,s=t.funcName;return{type:"horizBrace",mode:r.mode,label:s,isOver:/^\\over/.test(s),base:a[0]}},htmlBuilder:Ul,mathmlBuilder:Rm}),he({type:"href",names:["\\href"],props:{numArgs:2,argTypes:["url","original"],allowedInText:!0},handler:function(t,a){var r=t.parser,s=a[1],m=Ce(a[0],"url").url;return r.settings.isTrusted({command:"\\href",url:m})?{type:"href",mode:r.mode,href:m,body:pn(s)}:r.formatUnsupportedCmd("\\href")},htmlBuilder:function(t,a){var r=Tn(t.body,a,!1);return D.makeAnchor(t.href,[],r,a)},mathmlBuilder:function(t,a){var r=Mt(t.body,a);return r instanceof En||(r=new En("mrow",[r])),r.setAttribute("href",t.href),r}}),he({type:"href",names:["\\url"],props:{numArgs:1,argTypes:["url"],allowedInText:!0},handler:function(t,a){var r=t.parser,s=Ce(a[0],"url").url;if(!r.settings.isTrusted({command:"\\url",url:s}))return r.formatUnsupportedCmd("\\url");for(var m=[],g=0;g<s.length;g++){var f=s[g];f==="~"&&(f="\\textasciitilde"),m.push({type:"textord",mode:"text",text:f})}var v={type:"text",mode:r.mode,font:"\\texttt",body:m};return{type:"href",mode:r.mode,href:s,body:pn(v)}}}),he({type:"htmlmathml",names:["\\html@mathml"],props:{numArgs:2,allowedInText:!0},handler:function(t,a){var r=t.parser;return{type:"htmlmathml",mode:r.mode,html:pn(a[0]),mathml:pn(a[1])}},htmlBuilder:function(t,a){var r=Tn(t.html,a,!1);return D.makeFragment(r)},mathmlBuilder:function(t,a){return Mt(t.mathml,a)}});var no=function(t){if(/^[-+]? *(\d+(\.\d*)?|\.\d+)$/.test(t))return{number:+t,unit:"bp"};var a=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(t);if(!a)throw new b("Invalid size: '"+t+"' in \\includegraphics");var r={number:+(a[1]+a[2]),unit:a[3]};if(!sl(r))throw new b("Invalid unit: '"+r.unit+"' in \\includegraphics.");return r};he({type:"includegraphics",names:["\\includegraphics"],props:{numArgs:1,numOptionalArgs:1,argTypes:["raw","url"],allowedInText:!1},handler:function(t,a,r){var s=t.parser,m={number:0,unit:"em"},g={number:.9,unit:"em"},f={number:0,unit:"em"},v="";if(r[0])for(var C=Ce(r[0],"raw").string,P=C.split(","),L=0;L<P.length;L++){var z=P[L].split("=");if(z.length===2){var X=z[1].trim();switch(z[0].trim()){case"alt":v=X;break;case"width":m=no(X);break;case"height":g=no(X);break;case"totalheight":f=no(X);break;default:throw new b("Invalid key: '"+z[0]+"' in \\includegraphics.")}}}var ee=Ce(a[0],"url").url;return v===""&&(v=ee,v=v.replace(/^.*[\\/]/,""),v=v.substring(0,v.lastIndexOf("."))),s.settings.isTrusted({command:"\\includegraphics",url:ee})?{type:"includegraphics",mode:s.mode,alt:v,width:m,height:g,totalheight:f,src:ee}:s.formatUnsupportedCmd("\\includegraphics")},htmlBuilder:function(t,a){var r=on(t.height,a),s=0;t.totalheight.number>0&&(s=on(t.totalheight,a)-r,s=Number(s.toFixed(2)));var m=0;t.width.number>0&&(m=on(t.width,a));var g={height:r+s+"em"};m>0&&(g.width=m+"em"),s>0&&(g.verticalAlign=-s+"em");var f=new On(t.src,t.alt,g);return f.height=r,f.depth=s,f},mathmlBuilder:function(t,a){var r=new ne.MathNode("mglyph",[]);r.setAttribute("alt",t.alt);var s=on(t.height,a),m=0;if(t.totalheight.number>0&&(m=on(t.totalheight,a)-s,m=m.toFixed(2),r.setAttribute("valign","-"+m+"em")),r.setAttribute("height",s+m+"em"),t.width.number>0){var g=on(t.width,a);r.setAttribute("width",g+"em")}return r.setAttribute("src",t.src),r}}),he({type:"kern",names:["\\kern","\\mkern","\\hskip","\\mskip"],props:{numArgs:1,argTypes:["size"],allowedInText:!0},handler:function(t,a){var r=t.parser,s=t.funcName,m=Ce(a[0],"size");if(r.settings.strict){var g=s[1]==="m",f=m.value.unit==="mu";g?(f||r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+s+" supports only mu units, "+("not "+m.value.unit+" units")),r.mode!=="math"&&r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+s+" works only in math mode")):f&&r.settings.reportNonstrict("mathVsTextUnits","LaTeX's "+s+" doesn't support mu units")}return{type:"kern",mode:r.mode,dimension:m.value}},htmlBuilder:function(t,a){return D.makeGlue(t.dimension,a)},mathmlBuilder:function(t,a){var r=on(t.dimension,a);return new ne.SpaceNode(r)}}),he({type:"lap",names:["\\mathllap","\\mathrlap","\\mathclap"],props:{numArgs:1,allowedInText:!0},handler:function(t,a){var r=t.parser,s=t.funcName,m=a[0];return{type:"lap",mode:r.mode,alignment:s.slice(5),body:m}},htmlBuilder:function(t,a){var r;t.alignment==="clap"?(r=D.makeSpan([],[Re(t.body,a)]),r=D.makeSpan(["inner"],[r],a)):r=D.makeSpan(["inner"],[Re(t.body,a)]);var s=D.makeSpan(["fix"],[]),m=D.makeSpan([t.alignment],[r,s],a),g=D.makeSpan(["strut"]);return g.style.height=m.height+m.depth+"em",g.style.verticalAlign=-m.depth+"em",m.children.unshift(g),m=D.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:m}]},a),D.makeSpan(["mord"],[m],a)},mathmlBuilder:function(t,a){var r=new ne.MathNode("mpadded",[We(t.body,a)]);if(t.alignment!=="rlap"){var s=t.alignment==="llap"?"-1":"-0.5";r.setAttribute("lspace",s+"width")}return r.setAttribute("width","0px"),r}}),he({type:"styling",names:["\\(","$"],props:{numArgs:0,allowedInText:!0,allowedInMath:!1},handler:function(t,a){var r=t.funcName,s=t.parser,m=s.mode;s.switchMode("math");var g=r==="\\("?"\\)":"$",f=s.parseExpression(!1,g);return s.expect(g),s.switchMode(m),{type:"styling",mode:s.mode,style:"text",body:f}}}),he({type:"text",names:["\\)","\\]"],props:{numArgs:0,allowedInText:!0,allowedInMath:!1},handler:function(t,a){throw new b("Mismatched "+t.funcName)}});var Kl=function(t,a){switch(a.style.size){case be.DISPLAY.size:return t.display;case be.TEXT.size:return t.text;case be.SCRIPT.size:return t.script;case be.SCRIPTSCRIPT.size:return t.scriptscript;default:return t.text}};he({type:"mathchoice",names:["\\mathchoice"],props:{numArgs:4},handler:function(t,a){var r=t.parser;return{type:"mathchoice",mode:r.mode,display:pn(a[0]),text:pn(a[1]),script:pn(a[2]),scriptscript:pn(a[3])}},htmlBuilder:function(t,a){var r=Kl(t,a),s=Tn(r,a,!1);return D.makeFragment(s)},mathmlBuilder:function(t,a){var r=Kl(t,a);return Mt(r,a)}});var Xl=function(t,a,r,s,m,g,f){t=D.makeSpan([],[t]);var v,C;if(a){var P=Re(a,s.havingStyle(m.sup()),s);C={elem:P,kern:Math.max(s.fontMetrics().bigOpSpacing1,s.fontMetrics().bigOpSpacing3-P.depth)}}if(r){var L=Re(r,s.havingStyle(m.sub()),s);v={elem:L,kern:Math.max(s.fontMetrics().bigOpSpacing2,s.fontMetrics().bigOpSpacing4-L.height)}}var z;if(C&&v){var X=s.fontMetrics().bigOpSpacing5+v.elem.height+v.elem.depth+v.kern+t.depth+f;z=D.makeVList({positionType:"bottom",positionData:X,children:[{type:"kern",size:s.fontMetrics().bigOpSpacing5},{type:"elem",elem:v.elem,marginLeft:-g+"em"},{type:"kern",size:v.kern},{type:"elem",elem:t},{type:"kern",size:C.kern},{type:"elem",elem:C.elem,marginLeft:g+"em"},{type:"kern",size:s.fontMetrics().bigOpSpacing5}]},s)}else if(v){var ee=t.height-f;z=D.makeVList({positionType:"top",positionData:ee,children:[{type:"kern",size:s.fontMetrics().bigOpSpacing5},{type:"elem",elem:v.elem,marginLeft:-g+"em"},{type:"kern",size:v.kern},{type:"elem",elem:t}]},s)}else if(C){var ae=t.depth+f;z=D.makeVList({positionType:"bottom",positionData:ae,children:[{type:"elem",elem:t},{type:"kern",size:C.kern},{type:"elem",elem:C.elem,marginLeft:g+"em"},{type:"kern",size:s.fontMetrics().bigOpSpacing5}]},s)}else return t;return D.makeSpan(["mop","op-limits"],[z],s)},Yl=["\\smallint"],Jt=function(t,a){var r,s,m=!1,g,f=wn(t,"supsub");f?(r=f.sup,s=f.sub,g=Ce(f.base,"op"),m=!0):g=Ce(t,"op");var v=a.style,C=!1;v.size===be.DISPLAY.size&&g.symbol&&!A.contains(Yl,g.name)&&(C=!0);var P;if(g.symbol){var L=C?"Size2-Regular":"Size1-Regular",z="";if((g.name==="\\oiint"||g.name==="\\oiiint")&&(z=g.name.substr(1),g.name=z==="oiint"?"\\iint":"\\iiint"),P=D.makeSymbol(g.name,L,"math",a,["mop","op-symbol",C?"large-op":"small-op"]),z.length>0){var X=P.italic,ee=D.staticSvg(z+"Size"+(C?"2":"1"),a);P=D.makeVList({positionType:"individualShift",children:[{type:"elem",elem:P,shift:0},{type:"elem",elem:ee,shift:C?.08:0}]},a),g.name="\\"+z,P.classes.unshift("mop"),P.italic=X}}else if(g.body){var ae=Tn(g.body,a,!0);ae.length===1&&ae[0]instanceof un?(P=ae[0],P.classes[0]="mop"):P=D.makeSpan(["mop"],D.tryCombineChars(ae),a)}else{for(var ce=[],xe=1;xe<g.name.length;xe++)ce.push(D.mathsym(g.name[xe],g.mode,a));P=D.makeSpan(["mop"],ce,a)}var qe=0,Te=0;return(P instanceof un||g.name==="\\oiint"||g.name==="\\oiiint")&&!g.suppressBaseShift&&(qe=(P.height-P.depth)/2-a.fontMetrics().axisHeight,Te=P.italic),m?Xl(P,r,s,a,v,Te,qe):(qe&&(P.style.position="relative",P.style.top=qe+"em"),P)},ka=function(t,a){var r;if(t.symbol)r=new En("mo",[Dn(t.name,t.mode)]),A.contains(Yl,t.name)&&r.setAttribute("largeop","false");else if(t.body)r=new En("mo",Mn(t.body,a));else{r=new En("mi",[new wa(t.name.slice(1))]);var s=new En("mo",[Dn("⁡","text")]);t.parentIsSupSub?r=new En("mo",[r,s]):r=wl([r,s])}return r},Fm={"∏":"\\prod","∐":"\\coprod","∑":"\\sum","⋀":"\\bigwedge","⋁":"\\bigvee","⋂":"\\bigcap","⋃":"\\bigcup","⨀":"\\bigodot","⨁":"\\bigoplus","⨂":"\\bigotimes","⨄":"\\biguplus","⨆":"\\bigsqcup"};he({type:"op",names:["\\coprod","\\bigvee","\\bigwedge","\\biguplus","\\bigcap","\\bigcup","\\intop","\\prod","\\sum","\\bigotimes","\\bigoplus","\\bigodot","\\bigsqcup","\\smallint","∏","∐","∑","⋀","⋁","⋂","⋃","⨀","⨁","⨂","⨄","⨆"],props:{numArgs:0},handler:function(t,a){var r=t.parser,s=t.funcName,m=s;return m.length===1&&(m=Fm[m]),{type:"op",mode:r.mode,limits:!0,parentIsSupSub:!1,symbol:!0,name:m}},htmlBuilder:Jt,mathmlBuilder:ka}),he({type:"op",names:["\\mathop"],props:{numArgs:1},handler:function(t,a){var r=t.parser,s=a[0];return{type:"op",mode:r.mode,limits:!1,parentIsSupSub:!1,symbol:!1,body:pn(s)}},htmlBuilder:Jt,mathmlBuilder:ka});var Om={"∫":"\\int","∬":"\\iint","∭":"\\iiint","∮":"\\oint","∯":"\\oiint","∰":"\\oiiint"};he({type:"op",names:["\\arcsin","\\arccos","\\arctan","\\arctg","\\arcctg","\\arg","\\ch","\\cos","\\cosec","\\cosh","\\cot","\\cotg","\\coth","\\csc","\\ctg","\\cth","\\deg","\\dim","\\exp","\\hom","\\ker","\\lg","\\ln","\\log","\\sec","\\sin","\\sinh","\\sh","\\tan","\\tanh","\\tg","\\th"],props:{numArgs:0},handler:function(t){var a=t.parser,r=t.funcName;return{type:"op",mode:a.mode,limits:!1,parentIsSupSub:!1,symbol:!1,name:r}},htmlBuilder:Jt,mathmlBuilder:ka}),he({type:"op",names:["\\det","\\gcd","\\inf","\\lim","\\max","\\min","\\Pr","\\sup"],props:{numArgs:0},handler:function(t){var a=t.parser,r=t.funcName;return{type:"op",mode:a.mode,limits:!0,parentIsSupSub:!1,symbol:!1,name:r}},htmlBuilder:Jt,mathmlBuilder:ka}),he({type:"op",names:["\\int","\\iint","\\iiint","\\oint","\\oiint","\\oiiint","∫","∬","∭","∮","∯","∰"],props:{numArgs:0},handler:function(t){var a=t.parser,r=t.funcName,s=r;return s.length===1&&(s=Om[s]),{type:"op",mode:a.mode,limits:!1,parentIsSupSub:!1,symbol:!0,name:s}},htmlBuilder:Jt,mathmlBuilder:ka});var Jl=function(t,a){var r,s,m=!1,g,f=wn(t,"supsub");f?(r=f.sup,s=f.sub,g=Ce(f.base,"operatorname"),m=!0):g=Ce(t,"operatorname");var v;if(g.body.length>0){for(var C=g.body.map(function(X){var ee=X.text;return typeof ee=="string"?{type:"textord",mode:X.mode,text:ee}:X}),P=Tn(C,a.withFont("mathrm"),!0),L=0;L<P.length;L++){var z=P[L];z instanceof un&&(z.text=z.text.replace(/\u2212/,"-").replace(/\u2217/,"*"))}v=D.makeSpan(["mop"],P,a)}else v=D.makeSpan(["mop"],[],a);return m?Xl(v,r,s,a,a.style,0,0):v},Em=function(t,a){for(var r=Mn(t.body,a.withFont("mathrm")),s=!0,m=0;m<r.length;m++){var g=r[m];if(!(g instanceof ne.SpaceNode))if(g instanceof ne.MathNode)switch(g.type){case"mi":case"mn":case"ms":case"mspace":case"mtext":break;case"mo":{var f=g.children[0];g.children.length===1&&f instanceof ne.TextNode?f.text=f.text.replace(/\u2212/,"-").replace(/\u2217/,"*"):s=!1;break}default:s=!1}else s=!1}if(s){var v=r.map(function(L){return L.toText()}).join("");r=[new ne.TextNode(v)]}var C=new ne.MathNode("mi",r);C.setAttribute("mathvariant","normal");var P=new ne.MathNode("mo",[Dn("⁡","text")]);return t.parentIsSupSub?new ne.MathNode("mo",[C,P]):ne.newDocumentFragment([C,P])};he({type:"operatorname",names:["\\operatorname","\\operatorname*"],props:{numArgs:1},handler:function(t,a){var r=t.parser,s=t.funcName,m=a[0];return{type:"operatorname",mode:r.mode,body:pn(m),alwaysHandleSupSub:s==="\\operatorname*",limits:!1,parentIsSupSub:!1}},htmlBuilder:Jl,mathmlBuilder:Em}),Dt({type:"ordgroup",htmlBuilder:function(t,a){return t.semisimple?D.makeFragment(Tn(t.body,a,!1)):D.makeSpan(["mord"],Tn(t.body,a,!0),a)},mathmlBuilder:function(t,a){return Mt(t.body,a,!0)}}),he({type:"overline",names:["\\overline"],props:{numArgs:1},handler:function(t,a){var r=t.parser,s=a[0];return{type:"overline",mode:r.mode,body:s}},htmlBuilder:function(t,a){var r=Re(t.body,a.havingCrampedStyle()),s=D.makeLineSpan("overline-line",a),m=a.fontMetrics().defaultRuleThickness,g=D.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r},{type:"kern",size:3*m},{type:"elem",elem:s},{type:"kern",size:m}]},a);return D.makeSpan(["mord","overline"],[g],a)},mathmlBuilder:function(t,a){var r=new ne.MathNode("mo",[new ne.TextNode("‾")]);r.setAttribute("stretchy","true");var s=new ne.MathNode("mover",[We(t.body,a),r]);return s.setAttribute("accent","true"),s}}),he({type:"phantom",names:["\\phantom"],props:{numArgs:1,allowedInText:!0},handler:function(t,a){var r=t.parser,s=a[0];return{type:"phantom",mode:r.mode,body:pn(s)}},htmlBuilder:function(t,a){var r=Tn(t.body,a.withPhantom(),!1);return D.makeFragment(r)},mathmlBuilder:function(t,a){var r=Mn(t.body,a);return new ne.MathNode("mphantom",r)}}),he({type:"hphantom",names:["\\hphantom"],props:{numArgs:1,allowedInText:!0},handler:function(t,a){var r=t.parser,s=a[0];return{type:"hphantom",mode:r.mode,body:s}},htmlBuilder:function(t,a){var r=D.makeSpan([],[Re(t.body,a.withPhantom())]);if(r.height=0,r.depth=0,r.children)for(var s=0;s<r.children.length;s++)r.children[s].height=0,r.children[s].depth=0;return r=D.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r}]},a),D.makeSpan(["mord"],[r],a)},mathmlBuilder:function(t,a){var r=Mn(pn(t.body),a),s=new ne.MathNode("mphantom",r),m=new ne.MathNode("mpadded",[s]);return m.setAttribute("height","0px"),m.setAttribute("depth","0px"),m}}),he({type:"vphantom",names:["\\vphantom"],props:{numArgs:1,allowedInText:!0},handler:function(t,a){var r=t.parser,s=a[0];return{type:"vphantom",mode:r.mode,body:s}},htmlBuilder:function(t,a){var r=D.makeSpan(["inner"],[Re(t.body,a.withPhantom())]),s=D.makeSpan(["fix"],[]);return D.makeSpan(["mord","rlap"],[r,s],a)},mathmlBuilder:function(t,a){var r=Mn(pn(t.body),a),s=new ne.MathNode("mphantom",r),m=new ne.MathNode("mpadded",[s]);return m.setAttribute("width","0px"),m}}),he({type:"raisebox",names:["\\raisebox"],props:{numArgs:2,argTypes:["size","hbox"],allowedInText:!0},handler:function(t,a){var r=t.parser,s=Ce(a[0],"size").value,m=a[1];return{type:"raisebox",mode:r.mode,dy:s,body:m}},htmlBuilder:function(t,a){var r=Re(t.body,a),s=on(t.dy,a);return D.makeVList({positionType:"shift",positionData:-s,children:[{type:"elem",elem:r}]},a)},mathmlBuilder:function(t,a){var r=new ne.MathNode("mpadded",[We(t.body,a)]),s=t.dy.number+t.dy.unit;return r.setAttribute("voffset",s),r}}),he({type:"rule",names:["\\rule"],props:{numArgs:2,numOptionalArgs:1,argTypes:["size","size","size"]},handler:function(t,a,r){var s=t.parser,m=r[0],g=Ce(a[0],"size"),f=Ce(a[1],"size");return{type:"rule",mode:s.mode,shift:m&&Ce(m,"size").value,width:g.value,height:f.value}},htmlBuilder:function(t,a){var r=D.makeSpan(["mord","rule"],[],a),s=on(t.width,a),m=on(t.height,a),g=t.shift?on(t.shift,a):0;return r.style.borderRightWidth=s+"em",r.style.borderTopWidth=m+"em",r.style.bottom=g+"em",r.width=s,r.height=m+g,r.depth=-g,r.maxFontSize=m*1.125*a.sizeMultiplier,r},mathmlBuilder:function(t,a){var r=on(t.width,a),s=on(t.height,a),m=t.shift?on(t.shift,a):0,g=a.color&&a.getColor()||"black",f=new ne.MathNode("mspace");f.setAttribute("mathbackground",g),f.setAttribute("width",r+"em"),f.setAttribute("height",s+"em");var v=new ne.MathNode("mpadded",[f]);return m>=0?v.setAttribute("height","+"+m+"em"):(v.setAttribute("height",m+"em"),v.setAttribute("depth","+"+-m+"em")),v.setAttribute("voffset",m+"em"),v}});function Zl(h,t,a){for(var r=Tn(h,t,!1),s=t.sizeMultiplier/a.sizeMultiplier,m=0;m<r.length;m++){var g=r[m].classes.indexOf("sizing");g<0?Array.prototype.push.apply(r[m].classes,t.sizingClasses(a)):r[m].classes[g+1]==="reset-size"+t.size&&(r[m].classes[g+1]="reset-size"+a.size),r[m].height*=s,r[m].depth*=s}return D.makeFragment(r)}var Ql=["\\tiny","\\sixptsize","\\scriptsize","\\footnotesize","\\small","\\normalsize","\\large","\\Large","\\LARGE","\\huge","\\Huge"],Dm=function(t,a){var r=a.havingSize(t.size);return Zl(t.body,r,a)};he({type:"sizing",names:Ql,props:{numArgs:0,allowedInText:!0},handler:function(t,a){var r=t.breakOnTokenText,s=t.funcName,m=t.parser,g=m.parseExpression(!1,r);return{type:"sizing",mode:m.mode,size:Ql.indexOf(s)+1,body:g}},htmlBuilder:Dm,mathmlBuilder:function(t,a){var r=a.havingSize(t.size),s=Mn(t.body,r),m=new ne.MathNode("mstyle",s);return m.setAttribute("mathsize",r.sizeMultiplier+"em"),m}}),he({type:"smash",names:["\\smash"],props:{numArgs:1,numOptionalArgs:1,allowedInText:!0},handler:function(t,a,r){var s=t.parser,m=!1,g=!1,f=r[0]&&Ce(r[0],"ordgroup");if(f)for(var v="",C=0;C<f.body.length;++C){var P=f.body[C];if(v=P.text,v==="t")m=!0;else if(v==="b")g=!0;else{m=!1,g=!1;break}}else m=!0,g=!0;var L=a[0];return{type:"smash",mode:s.mode,body:L,smashHeight:m,smashDepth:g}},htmlBuilder:function(t,a){var r=D.makeSpan([],[Re(t.body,a)]);if(!t.smashHeight&&!t.smashDepth)return r;if(t.smashHeight&&(r.height=0,r.children))for(var s=0;s<r.children.length;s++)r.children[s].height=0;if(t.smashDepth&&(r.depth=0,r.children))for(var m=0;m<r.children.length;m++)r.children[m].depth=0;var g=D.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r}]},a);return D.makeSpan(["mord"],[g],a)},mathmlBuilder:function(t,a){var r=new ne.MathNode("mpadded",[We(t.body,a)]);return t.smashHeight&&r.setAttribute("height","0px"),t.smashDepth&&r.setAttribute("depth","0px"),r}}),he({type:"sqrt",names:["\\sqrt"],props:{numArgs:1,numOptionalArgs:1},handler:function(t,a,r){var s=t.parser,m=r[0],g=a[0];return{type:"sqrt",mode:s.mode,body:g,index:m}},htmlBuilder:function(t,a){var r=Re(t.body,a.havingCrampedStyle());r.height===0&&(r.height=a.fontMetrics().xHeight),r=D.wrapFragment(r,a);var s=a.fontMetrics(),m=s.defaultRuleThickness,g=m;a.style.id<be.TEXT.id&&(g=a.fontMetrics().xHeight);var f=m+g/4,v=r.height+r.depth+f+m,C=vt.sqrtImage(v,a),P=C.span,L=C.ruleWidth,z=C.advanceWidth,X=P.height-L;X>r.height+r.depth+f&&(f=(f+X-r.height-r.depth)/2);var ee=P.height-r.height-f-L;r.style.paddingLeft=z+"em";var ae=D.makeVList({positionType:"firstBaseline",children:[{type:"elem",elem:r,wrapperClasses:["svg-align"]},{type:"kern",size:-(r.height+ee)},{type:"elem",elem:P},{type:"kern",size:L}]},a);if(t.index){var ce=a.havingStyle(be.SCRIPTSCRIPT),xe=Re(t.index,ce,a),qe=.6*(ae.height-ae.depth),Te=D.makeVList({positionType:"shift",positionData:-qe,children:[{type:"elem",elem:xe}]},a),Ve=D.makeSpan(["root"],[Te]);return D.makeSpan(["mord","sqrt"],[Ve,ae],a)}else return D.makeSpan(["mord","sqrt"],[ae],a)},mathmlBuilder:function(t,a){var r=t.body,s=t.index;return s?new ne.MathNode("mroot",[We(r,a),We(s,a)]):new ne.MathNode("msqrt",[We(r,a)])}});var es={display:be.DISPLAY,text:be.TEXT,script:be.SCRIPT,scriptscript:be.SCRIPTSCRIPT};he({type:"styling",names:["\\displaystyle","\\textstyle","\\scriptstyle","\\scriptscriptstyle"],props:{numArgs:0,allowedInText:!0},handler:function(t,a){var r=t.breakOnTokenText,s=t.funcName,m=t.parser,g=m.parseExpression(!0,r),f=s.slice(1,s.length-5);return{type:"styling",mode:m.mode,style:f,body:g}},htmlBuilder:function(t,a){var r=es[t.style],s=a.havingStyle(r).withFont("");return Zl(t.body,s,a)},mathmlBuilder:function(t,a){var r=es[t.style],s=a.havingStyle(r),m=Mn(t.body,s),g=new ne.MathNode("mstyle",m),f={display:["0","true"],text:["0","false"],script:["1","false"],scriptscript:["2","false"]},v=f[t.style];return g.setAttribute("scriptlevel",v[0]),g.setAttribute("displaystyle",v[1]),g}});var Mm=function(t,a){var r=t.base;if(r)if(r.type==="op"){var s=r.limits&&(a.style.size===be.DISPLAY.size||r.alwaysHandleSupSub);return s?Jt:null}else if(r.type==="operatorname"){var m=r.alwaysHandleSupSub&&(a.style.size===be.DISPLAY.size||r.limits);return m?Jl:null}else{if(r.type==="accent")return A.isCharacterBox(r.base)?Wi:null;if(r.type==="horizBrace"){var g=!t.sub;return g===r.isOver?Ul:null}else return null}else return null};Dt({type:"supsub",htmlBuilder:function(t,a){var r=Mm(t,a);if(r)return r(t,a);var s=t.base,m=t.sup,g=t.sub,f=Re(s,a),v,C,P=a.fontMetrics(),L=0,z=0,X=s&&A.isCharacterBox(s);if(m){var ee=a.havingStyle(a.style.sup());v=Re(m,ee,a),X||(L=f.height-ee.fontMetrics().supDrop*ee.sizeMultiplier/a.sizeMultiplier)}if(g){var ae=a.havingStyle(a.style.sub());C=Re(g,ae,a),X||(z=f.depth+ae.fontMetrics().subDrop*ae.sizeMultiplier/a.sizeMultiplier)}var ce;a.style===be.DISPLAY?ce=P.sup1:a.style.cramped?ce=P.sup3:ce=P.sup2;var xe=a.sizeMultiplier,qe=.5/P.ptPerEm/xe+"em",Te=null;if(C){var Ve=t.base&&t.base.type==="op"&&t.base.name&&(t.base.name==="\\oiint"||t.base.name==="\\oiiint");(f instanceof un||Ve)&&(Te=-f.italic+"em")}var De;if(v&&C){L=Math.max(L,ce,v.depth+.25*P.xHeight),z=Math.max(z,P.sub2);var Ge=P.defaultRuleThickness,He=4*Ge;if(L-v.depth-(C.height-z)<He){z=He-(L-v.depth)+C.height;var Je=.8*P.xHeight-(L-v.depth);Je>0&&(L+=Je,z-=Je)}var fn=[{type:"elem",elem:C,shift:z,marginRight:qe,marginLeft:Te},{type:"elem",elem:v,shift:-L,marginRight:qe}];De=D.makeVList({positionType:"individualShift",children:fn},a)}else if(C){z=Math.max(z,P.sub1,C.height-.8*P.xHeight);var hn=[{type:"elem",elem:C,marginLeft:Te,marginRight:qe}];De=D.makeVList({positionType:"shift",positionData:z,children:hn},a)}else if(v)L=Math.max(L,ce,v.depth+.25*P.xHeight),De=D.makeVList({positionType:"shift",positionData:-L,children:[{type:"elem",elem:v,marginRight:qe}]},a);else throw new Error("supsub must have either sup or sub.");var Me=_i(f,"right")||"mord";return D.makeSpan([Me],[f,D.makeSpan(["msupsub"],[De])],a)},mathmlBuilder:function(t,a){var r=!1,s,m,g=wn(t.base,"horizBrace");g&&(m=!!t.sup,m===g.isOver&&(r=!0,s=g.isOver)),t.base&&(t.base.type==="op"||t.base.type==="operatorname")&&(t.base.parentIsSupSub=!0);var f=[We(t.base,a)];t.sub&&f.push(We(t.sub,a)),t.sup&&f.push(We(t.sup,a));var v;if(r)v=s?"mover":"munder";else if(t.sub)if(t.sup){var L=t.base;L&&L.type==="op"&&L.limits&&a.style===be.DISPLAY||L&&L.type==="operatorname"&&L.alwaysHandleSupSub&&(a.style===be.DISPLAY||L.limits)?v="munderover":v="msubsup"}else{var P=t.base;P&&P.type==="op"&&P.limits&&(a.style===be.DISPLAY||P.alwaysHandleSupSub)||P&&P.type==="operatorname"&&P.alwaysHandleSupSub&&(P.limits||a.style===be.DISPLAY)?v="munder":v="msub"}else{var C=t.base;C&&C.type==="op"&&C.limits&&(a.style===be.DISPLAY||C.alwaysHandleSupSub)||C&&C.type==="operatorname"&&C.alwaysHandleSupSub&&(C.limits||a.style===be.DISPLAY)?v="mover":v="msup"}var z=new ne.MathNode(v,f);return z}}),Dt({type:"atom",htmlBuilder:function(t,a){return D.mathsym(t.text,t.mode,a,["m"+t.family])},mathmlBuilder:function(t,a){var r=new ne.MathNode("mo",[Dn(t.text,t.mode)]);if(t.family==="bin"){var s=$i(t,a);s==="bold-italic"&&r.setAttribute("mathvariant",s)}else t.family==="punct"?r.setAttribute("separator","true"):(t.family==="open"||t.family==="close")&&r.setAttribute("stretchy","false");return r}});var ns={mi:"italic",mn:"normal",mtext:"normal"};Dt({type:"mathord",htmlBuilder:function(t,a){return D.makeOrd(t,a,"mathord")},mathmlBuilder:function(t,a){var r=new ne.MathNode("mi",[Dn(t.text,t.mode,a)]),s=$i(t,a)||"italic";return s!==ns[r.type]&&r.setAttribute("mathvariant",s),r}}),Dt({type:"textord",htmlBuilder:function(t,a){return D.makeOrd(t,a,"textord")},mathmlBuilder:function(t,a){var r=Dn(t.text,t.mode,a),s=$i(t,a)||"normal",m;return t.mode==="text"?m=new ne.MathNode("mtext",[r]):/[0-9]/.test(t.text)?m=new ne.MathNode("mn",[r]):t.text==="\\prime"?m=new ne.MathNode("mo",[r]):m=new ne.MathNode("mi",[r]),s!==ns[m.type]&&m.setAttribute("mathvariant",s),m}});var to={"\\nobreak":"nobreak","\\allowbreak":"allowbreak"},ao={" ":{},"\\ ":{},"~":{className:"nobreak"},"\\space":{},"\\nobreakspace":{className:"nobreak"}};Dt({type:"spacing",htmlBuilder:function(t,a){if(ao.hasOwnProperty(t.text)){var r=ao[t.text].className||"";if(t.mode==="text"){var s=D.makeOrd(t,a,"textord");return s.classes.push(r),s}else return D.makeSpan(["mspace",r],[D.mathsym(t.text,t.mode,a)],a)}else{if(to.hasOwnProperty(t.text))return D.makeSpan(["mspace",to[t.text]],[],a);throw new b('Unknown type of space "'+t.text+'"')}},mathmlBuilder:function(t,a){var r;if(ao.hasOwnProperty(t.text))r=new ne.MathNode("mtext",[new ne.TextNode(" ")]);else{if(to.hasOwnProperty(t.text))return new ne.MathNode("mspace");throw new b('Unknown type of space "'+t.text+'"')}return r}});var ts=function(){var t=new ne.MathNode("mtd",[]);return t.setAttribute("width","50%"),t};Dt({type:"tag",mathmlBuilder:function(t,a){var r=new ne.MathNode("mtable",[new ne.MathNode("mtr",[ts(),new ne.MathNode("mtd",[Mt(t.body,a)]),ts(),new ne.MathNode("mtd",[Mt(t.tag,a)])])]);return r.setAttribute("width","100%"),r}});var as={"\\text":void 0,"\\textrm":"textrm","\\textsf":"textsf","\\texttt":"texttt","\\textnormal":"textrm"},rs={"\\textbf":"textbf","\\textmd":"textmd"},zm={"\\textit":"textit","\\textup":"textup"},is=function(t,a){var r=t.font;return r?as[r]?a.withTextFontFamily(as[r]):rs[r]?a.withTextFontWeight(rs[r]):a.withTextFontShape(zm[r]):a};he({type:"text",names:["\\text","\\textrm","\\textsf","\\texttt","\\textnormal","\\textbf","\\textmd","\\textit","\\textup"],props:{numArgs:1,argTypes:["text"],greediness:2,allowedInText:!0},handler:function(t,a){var r=t.parser,s=t.funcName,m=a[0];return{type:"text",mode:r.mode,body:pn(m),font:s}},htmlBuilder:function(t,a){var r=is(t,a),s=Tn(t.body,r,!0);return D.makeSpan(["mord","text"],D.tryCombineChars(s),r)},mathmlBuilder:function(t,a){var r=is(t,a);return Mt(t.body,r)}}),he({type:"underline",names:["\\underline"],props:{numArgs:1,allowedInText:!0},handler:function(t,a){var r=t.parser;return{type:"underline",mode:r.mode,body:a[0]}},htmlBuilder:function(t,a){var r=Re(t.body,a),s=D.makeLineSpan("underline-line",a),m=a.fontMetrics().defaultRuleThickness,g=D.makeVList({positionType:"top",positionData:r.height,children:[{type:"kern",size:m},{type:"elem",elem:s},{type:"kern",size:3*m},{type:"elem",elem:r}]},a);return D.makeSpan(["mord","underline"],[g],a)},mathmlBuilder:function(t,a){var r=new ne.MathNode("mo",[new ne.TextNode("‾")]);r.setAttribute("stretchy","true");var s=new ne.MathNode("munder",[We(t.body,a),r]);return s.setAttribute("accentunder","true"),s}}),he({type:"verb",names:["\\verb"],props:{numArgs:0,allowedInText:!0},handler:function(t,a,r){throw new b("\\verb ended by end of line instead of matching delimiter")},htmlBuilder:function(t,a){for(var r=os(t),s=[],m=a.havingStyle(a.style.text()),g=0;g<r.length;g++){var f=r[g];f==="~"&&(f="\\textasciitilde"),s.push(D.makeSymbol(f,"Typewriter-Regular",t.mode,m,["mord","texttt"]))}return D.makeSpan(["mord","text"].concat(m.sizingClasses(a)),D.tryCombineChars(s),m)},mathmlBuilder:function(t,a){var r=new ne.TextNode(os(t)),s=new ne.MathNode("mtext",[r]);return s.setAttribute("mathvariant","monospace"),s}});var os=function(t){return t.body.replace(/ /g,t.star?"␣":" ")},_m=gl,xa=_m,ro=`[ \r
	]`,ls="\\\\[a-zA-Z@]+",Bm="\\\\[^\uD800-\uDFFF]",Vm=""+ls+ro+"*",$m=new RegExp("^("+ls+")"+ro+"*$"),io="[̀-ͯ]",Wm=new RegExp(io+"+$"),Gm="("+ro+"+)|([!-\\[\\]-‧‪-퟿豈-￿]"+(io+"*")+"|[\uD800-\uDBFF][\uDC00-\uDFFF]"+(io+"*")+"|\\\\verb\\*([^]).*?\\3|\\\\verb([^*a-zA-Z]).*?\\4|\\\\operatorname\\*"+("|"+Vm)+("|"+Bm+")"),ss=function(){function h(a,r){this.input=void 0,this.settings=void 0,this.tokenRegex=void 0,this.catcodes=void 0,this.input=a,this.settings=r,this.tokenRegex=new RegExp(Gm,"g"),this.catcodes={"%":14}}var t=h.prototype;return t.setCatcode=function(r,s){this.catcodes[r]=s},t.lex=function(){var r=this.input,s=this.tokenRegex.lastIndex;if(s===r.length)return new w("EOF",new p(this,s,s));var m=this.tokenRegex.exec(r);if(m===null||m.index!==s)throw new b("Unexpected character: '"+r[s]+"'",new w(r[s],new p(this,s,s+1)));var g=m[2]||" ";if(this.catcodes[g]===14){var f=r.indexOf(`
`,this.tokenRegex.lastIndex);return f===-1?(this.tokenRegex.lastIndex=r.length,this.settings.reportNonstrict("commentAtEnd","% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)")):this.tokenRegex.lastIndex=f+1,this.lex()}var v=g.match($m);return v&&(g=v[1]),new w(g,new p(this,s,this.tokenRegex.lastIndex))},h}(),Hm=function(){function h(a,r){a===void 0&&(a={}),r===void 0&&(r={}),this.current=void 0,this.builtins=void 0,this.undefStack=void 0,this.current=r,this.builtins=a,this.undefStack=[]}var t=h.prototype;return t.beginGroup=function(){this.undefStack.push({})},t.endGroup=function(){if(this.undefStack.length===0)throw new b("Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug");var r=this.undefStack.pop();for(var s in r)r.hasOwnProperty(s)&&(r[s]===void 0?delete this.current[s]:this.current[s]=r[s])},t.has=function(r){return this.current.hasOwnProperty(r)||this.builtins.hasOwnProperty(r)},t.get=function(r){return this.current.hasOwnProperty(r)?this.current[r]:this.builtins[r]},t.set=function(r,s,m){if(m===void 0&&(m=!1),m){for(var g=0;g<this.undefStack.length;g++)delete this.undefStack[g][r];this.undefStack.length>0&&(this.undefStack[this.undefStack.length-1][r]=s)}else{var f=this.undefStack[this.undefStack.length-1];f&&!f.hasOwnProperty(r)&&(f[r]=this.current[r])}this.current[r]=s},h}(),us={},Um=us;function q(h,t){us[h]=t}q("\\@firstoftwo",function(h){var t=h.consumeArgs(2);return{tokens:t[0],numArgs:0}}),q("\\@secondoftwo",function(h){var t=h.consumeArgs(2);return{tokens:t[1],numArgs:0}}),q("\\@ifnextchar",function(h){var t=h.consumeArgs(3),a=h.future();return t[0].length===1&&t[0][0].text===a.text?{tokens:t[1],numArgs:0}:{tokens:t[2],numArgs:0}}),q("\\@ifstar","\\@ifnextchar *{\\@firstoftwo{#1}}"),q("\\TextOrMath",function(h){var t=h.consumeArgs(2);return h.mode==="text"?{tokens:t[0],numArgs:0}:{tokens:t[1],numArgs:0}});var ds={0:0,1:1,2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,a:10,A:10,b:11,B:11,c:12,C:12,d:13,D:13,e:14,E:14,f:15,F:15};q("\\char",function(h){var t=h.popToken(),a,r="";if(t.text==="'")a=8,t=h.popToken();else if(t.text==='"')a=16,t=h.popToken();else if(t.text==="`")if(t=h.popToken(),t.text[0]==="\\")r=t.text.charCodeAt(1);else{if(t.text==="EOF")throw new b("\\char` missing argument");r=t.text.charCodeAt(0)}else a=10;if(a){if(r=ds[t.text],r==null||r>=a)throw new b("Invalid base-"+a+" digit "+t.text);for(var s;(s=ds[h.future().text])!=null&&s<a;)r*=a,r+=s,h.popToken()}return"\\@char{"+r+"}"});var oo=function(t,a){var r=t.consumeArgs(1)[0];if(r.length!==1)throw new b("\\gdef's first argument must be a macro name");var s=r[0].text,m=0;for(r=t.consumeArgs(1)[0];r.length===1&&r[0].text==="#";){if(r=t.consumeArgs(1)[0],r.length!==1)throw new b('Invalid argument number length "'+r.length+'"');if(!/^[1-9]$/.test(r[0].text))throw new b('Invalid argument number "'+r[0].text+'"');if(m++,parseInt(r[0].text)!==m)throw new b('Argument number "'+r[0].text+'" out of order');r=t.consumeArgs(1)[0]}return t.macros.set(s,{tokens:r,numArgs:m},a),""};q("\\gdef",function(h){return oo(h,!0)}),q("\\def",function(h){return oo(h,!1)}),q("\\global",function(h){var t=h.consumeArgs(1)[0];if(t.length!==1)throw new b("Invalid command after \\global");var a=t[0].text;if(a==="\\def")return oo(h,!0);throw new b("Invalid command '"+a+"' after \\global")});var lo=function(t,a,r){var s=t.consumeArgs(1)[0];if(s.length!==1)throw new b("\\newcommand's first argument must be a macro name");var m=s[0].text,g=t.isDefined(m);if(g&&!a)throw new b("\\newcommand{"+m+"} attempting to redefine "+(m+"; use \\renewcommand"));if(!g&&!r)throw new b("\\renewcommand{"+m+"} when command "+m+" does not yet exist; use \\newcommand");var f=0;if(s=t.consumeArgs(1)[0],s.length===1&&s[0].text==="["){for(var v="",C=t.expandNextToken();C.text!=="]"&&C.text!=="EOF";)v+=C.text,C=t.expandNextToken();if(!v.match(/^\s*[0-9]+\s*$/))throw new b("Invalid number of arguments: "+v);f=parseInt(v),s=t.consumeArgs(1)[0]}return t.macros.set(m,{tokens:s,numArgs:f}),""};q("\\newcommand",function(h){return lo(h,!1,!0)}),q("\\renewcommand",function(h){return lo(h,!0,!1)}),q("\\providecommand",function(h){return lo(h,!0,!0)}),q("\\bgroup","{"),q("\\egroup","}"),q("\\lq","`"),q("\\rq","'"),q("\\aa","\\r a"),q("\\AA","\\r A"),q("\\textcopyright","\\html@mathml{\\textcircled{c}}{\\char`©}"),q("\\copyright","\\TextOrMath{\\textcopyright}{\\text{\\textcopyright}}"),q("\\textregistered","\\html@mathml{\\textcircled{\\scriptsize R}}{\\char`®}"),q("ℬ","\\mathscr{B}"),q("ℰ","\\mathscr{E}"),q("ℱ","\\mathscr{F}"),q("ℋ","\\mathscr{H}"),q("ℐ","\\mathscr{I}"),q("ℒ","\\mathscr{L}"),q("ℳ","\\mathscr{M}"),q("ℛ","\\mathscr{R}"),q("ℭ","\\mathfrak{C}"),q("ℌ","\\mathfrak{H}"),q("ℨ","\\mathfrak{Z}"),q("\\Bbbk","\\Bbb{k}"),q("·","\\cdotp"),q("\\llap","\\mathllap{\\textrm{#1}}"),q("\\rlap","\\mathrlap{\\textrm{#1}}"),q("\\clap","\\mathclap{\\textrm{#1}}"),q("\\not",'\\html@mathml{\\mathrel{\\mathrlap\\@not}}{\\char"338}'),q("\\neq","\\html@mathml{\\mathrel{\\not=}}{\\mathrel{\\char`≠}}"),q("\\ne","\\neq"),q("≠","\\neq"),q("\\notin","\\html@mathml{\\mathrel{{\\in}\\mathllap{/\\mskip1mu}}}{\\mathrel{\\char`∉}}"),q("∉","\\notin"),q("≘","\\html@mathml{\\mathrel{=\\kern{-1em}\\raisebox{0.4em}{$\\scriptsize\\frown$}}}{\\mathrel{\\char`≘}}"),q("≙","\\html@mathml{\\stackrel{\\tiny\\wedge}{=}}{\\mathrel{\\char`≘}}"),q("≚","\\html@mathml{\\stackrel{\\tiny\\vee}{=}}{\\mathrel{\\char`≚}}"),q("≛","\\html@mathml{\\stackrel{\\scriptsize\\star}{=}}{\\mathrel{\\char`≛}}"),q("≝","\\html@mathml{\\stackrel{\\tiny\\mathrm{def}}{=}}{\\mathrel{\\char`≝}}"),q("≞","\\html@mathml{\\stackrel{\\tiny\\mathrm{m}}{=}}{\\mathrel{\\char`≞}}"),q("≟","\\html@mathml{\\stackrel{\\tiny?}{=}}{\\mathrel{\\char`≟}}"),q("⟂","\\perp"),q("‼","\\mathclose{!\\mkern-0.8mu!}"),q("∌","\\notni"),q("⌜","\\ulcorner"),q("⌝","\\urcorner"),q("⌞","\\llcorner"),q("⌟","\\lrcorner"),q("©","\\copyright"),q("®","\\textregistered"),q("️","\\textregistered"),q("\\vdots","\\mathord{\\varvdots\\rule{0pt}{15pt}}"),q("⋮","\\vdots"),q("\\varGamma","\\mathit{\\Gamma}"),q("\\varDelta","\\mathit{\\Delta}"),q("\\varTheta","\\mathit{\\Theta}"),q("\\varLambda","\\mathit{\\Lambda}"),q("\\varXi","\\mathit{\\Xi}"),q("\\varPi","\\mathit{\\Pi}"),q("\\varSigma","\\mathit{\\Sigma}"),q("\\varUpsilon","\\mathit{\\Upsilon}"),q("\\varPhi","\\mathit{\\Phi}"),q("\\varPsi","\\mathit{\\Psi}"),q("\\varOmega","\\mathit{\\Omega}"),q("\\substack","\\begin{subarray}{c}#1\\end{subarray}"),q("\\colon","\\nobreak\\mskip2mu\\mathpunct{}\\mathchoice{\\mkern-3mu}{\\mkern-3mu}{}{}{:}\\mskip6mu"),q("\\boxed","\\fbox{$\\displaystyle{#1}$}"),q("\\iff","\\DOTSB\\;\\Longleftrightarrow\\;"),q("\\implies","\\DOTSB\\;\\Longrightarrow\\;"),q("\\impliedby","\\DOTSB\\;\\Longleftarrow\\;");var ms={",":"\\dotsc","\\not":"\\dotsb","+":"\\dotsb","=":"\\dotsb","<":"\\dotsb",">":"\\dotsb","-":"\\dotsb","*":"\\dotsb",":":"\\dotsb","\\DOTSB":"\\dotsb","\\coprod":"\\dotsb","\\bigvee":"\\dotsb","\\bigwedge":"\\dotsb","\\biguplus":"\\dotsb","\\bigcap":"\\dotsb","\\bigcup":"\\dotsb","\\prod":"\\dotsb","\\sum":"\\dotsb","\\bigotimes":"\\dotsb","\\bigoplus":"\\dotsb","\\bigodot":"\\dotsb","\\bigsqcup":"\\dotsb","\\And":"\\dotsb","\\longrightarrow":"\\dotsb","\\Longrightarrow":"\\dotsb","\\longleftarrow":"\\dotsb","\\Longleftarrow":"\\dotsb","\\longleftrightarrow":"\\dotsb","\\Longleftrightarrow":"\\dotsb","\\mapsto":"\\dotsb","\\longmapsto":"\\dotsb","\\hookrightarrow":"\\dotsb","\\doteq":"\\dotsb","\\mathbin":"\\dotsb","\\mathrel":"\\dotsb","\\relbar":"\\dotsb","\\Relbar":"\\dotsb","\\xrightarrow":"\\dotsb","\\xleftarrow":"\\dotsb","\\DOTSI":"\\dotsi","\\int":"\\dotsi","\\oint":"\\dotsi","\\iint":"\\dotsi","\\iiint":"\\dotsi","\\iiiint":"\\dotsi","\\idotsint":"\\dotsi","\\DOTSX":"\\dotsx"};q("\\dots",function(h){var t="\\dotso",a=h.expandAfterFuture().text;return a in ms?t=ms[a]:(a.substr(0,4)==="\\not"||a in en.math&&A.contains(["bin","rel"],en.math[a].group))&&(t="\\dotsb"),t});var so={")":!0,"]":!0,"\\rbrack":!0,"\\}":!0,"\\rbrace":!0,"\\rangle":!0,"\\rceil":!0,"\\rfloor":!0,"\\rgroup":!0,"\\rmoustache":!0,"\\right":!0,"\\bigr":!0,"\\biggr":!0,"\\Bigr":!0,"\\Biggr":!0,$:!0,";":!0,".":!0,",":!0};q("\\dotso",function(h){var t=h.future().text;return t in so?"\\ldots\\,":"\\ldots"}),q("\\dotsc",function(h){var t=h.future().text;return t in so&&t!==","?"\\ldots\\,":"\\ldots"}),q("\\cdots",function(h){var t=h.future().text;return t in so?"\\@cdots\\,":"\\@cdots"}),q("\\dotsb","\\cdots"),q("\\dotsm","\\cdots"),q("\\dotsi","\\!\\cdots"),q("\\dotsx","\\ldots\\,"),q("\\DOTSI","\\relax"),q("\\DOTSB","\\relax"),q("\\DOTSX","\\relax"),q("\\tmspace","\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax"),q("\\,","\\tmspace+{3mu}{.1667em}"),q("\\thinspace","\\,"),q("\\>","\\mskip{4mu}"),q("\\:","\\tmspace+{4mu}{.2222em}"),q("\\medspace","\\:"),q("\\;","\\tmspace+{5mu}{.2777em}"),q("\\thickspace","\\;"),q("\\!","\\tmspace-{3mu}{.1667em}"),q("\\negthinspace","\\!"),q("\\negmedspace","\\tmspace-{4mu}{.2222em}"),q("\\negthickspace","\\tmspace-{5mu}{.277em}"),q("\\enspace","\\kern.5em "),q("\\enskip","\\hskip.5em\\relax"),q("\\quad","\\hskip1em\\relax"),q("\\qquad","\\hskip2em\\relax"),q("\\tag","\\@ifstar\\tag@literal\\tag@paren"),q("\\tag@paren","\\tag@literal{({#1})}"),q("\\tag@literal",function(h){if(h.macros.get("\\df@tag"))throw new b("Multiple \\tag");return"\\gdef\\df@tag{\\text{#1}}"}),q("\\bmod","\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}\\mathbin{\\rm mod}\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}"),q("\\pod","\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)"),q("\\pmod","\\pod{{\\rm mod}\\mkern6mu#1}"),q("\\mod","\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}{\\rm mod}\\,\\,#1"),q("\\pmb","\\html@mathml{\\@binrel{#1}{\\mathrlap{#1}\\kern0.5px#1}}{\\mathbf{#1}}"),q("\\\\","\\newline"),q("\\TeX","\\textrm{\\html@mathml{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}{TeX}}");var cs=Ft["Main-Regular"][84][1]-.7*Ft["Main-Regular"][65][1]+"em";q("\\LaTeX","\\textrm{\\html@mathml{"+("L\\kern-.36em\\raisebox{"+cs+"}{\\scriptstyle A}")+"\\kern-.15em\\TeX}{LaTeX}}"),q("\\KaTeX","\\textrm{\\html@mathml{"+("K\\kern-.17em\\raisebox{"+cs+"}{\\scriptstyle A}")+"\\kern-.15em\\TeX}{KaTeX}}"),q("\\hspace","\\@ifstar\\@hspacer\\@hspace"),q("\\@hspace","\\hskip #1\\relax"),q("\\@hspacer","\\rule{0pt}{0pt}\\hskip #1\\relax"),q("\\ordinarycolon",":"),q("\\vcentcolon","\\mathrel{\\mathop\\ordinarycolon}"),q("\\dblcolon",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}}{\\mathop{\\char"2237}}'),q("\\coloneqq",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2254}}'),q("\\Coloneqq",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2237\\char"3d}}'),q("\\coloneq",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"3a\\char"2212}}'),q("\\Coloneq",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"2237\\char"2212}}'),q("\\eqqcolon",'\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2255}}'),q("\\Eqqcolon",'\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"3d\\char"2237}}'),q("\\eqcolon",'\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2239}}'),q("\\Eqcolon",'\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"2212\\char"2237}}'),q("\\colonapprox",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"3a\\char"2248}}'),q("\\Colonapprox",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"2237\\char"2248}}'),q("\\colonsim",'\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"3a\\char"223c}}'),q("\\Colonsim",'\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"2237\\char"223c}}'),q("∷","\\dblcolon"),q("∹","\\eqcolon"),q("≔","\\coloneqq"),q("≕","\\eqqcolon"),q("⩴","\\Coloneqq"),q("\\ratio","\\vcentcolon"),q("\\coloncolon","\\dblcolon"),q("\\colonequals","\\coloneqq"),q("\\coloncolonequals","\\Coloneqq"),q("\\equalscolon","\\eqqcolon"),q("\\equalscoloncolon","\\Eqqcolon"),q("\\colonminus","\\coloneq"),q("\\coloncolonminus","\\Coloneq"),q("\\minuscolon","\\eqcolon"),q("\\minuscoloncolon","\\Eqcolon"),q("\\coloncolonapprox","\\Colonapprox"),q("\\coloncolonsim","\\Colonsim"),q("\\simcolon","\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon}"),q("\\simcoloncolon","\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon}"),q("\\approxcolon","\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon}"),q("\\approxcoloncolon","\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon}"),q("\\notni","\\html@mathml{\\not\\ni}{\\mathrel{\\char`∌}}"),q("\\limsup","\\DOTSB\\operatorname*{lim\\,sup}"),q("\\liminf","\\DOTSB\\operatorname*{lim\\,inf}"),q("\\gvertneqq","\\html@mathml{\\@gvertneqq}{≩}"),q("\\lvertneqq","\\html@mathml{\\@lvertneqq}{≨}"),q("\\ngeqq","\\html@mathml{\\@ngeqq}{≱}"),q("\\ngeqslant","\\html@mathml{\\@ngeqslant}{≱}"),q("\\nleqq","\\html@mathml{\\@nleqq}{≰}"),q("\\nleqslant","\\html@mathml{\\@nleqslant}{≰}"),q("\\nshortmid","\\html@mathml{\\@nshortmid}{∤}"),q("\\nshortparallel","\\html@mathml{\\@nshortparallel}{∦}"),q("\\nsubseteqq","\\html@mathml{\\@nsubseteqq}{⊈}"),q("\\nsupseteqq","\\html@mathml{\\@nsupseteqq}{⊉}"),q("\\varsubsetneq","\\html@mathml{\\@varsubsetneq}{⊊}"),q("\\varsubsetneqq","\\html@mathml{\\@varsubsetneqq}{⫋}"),q("\\varsupsetneq","\\html@mathml{\\@varsupsetneq}{⊋}"),q("\\varsupsetneqq","\\html@mathml{\\@varsupsetneqq}{⫌}"),q("\\llbracket","\\html@mathml{\\mathopen{[\\mkern-3.2mu[}}{\\mathopen{\\char`⟦}}"),q("\\rrbracket","\\html@mathml{\\mathclose{]\\mkern-3.2mu]}}{\\mathclose{\\char`⟧}}"),q("⟦","\\llbracket"),q("⟧","\\rrbracket"),q("\\lBrace","\\html@mathml{\\mathopen{\\{\\mkern-3.2mu[}}{\\mathopen{\\char`⦃}}"),q("\\rBrace","\\html@mathml{\\mathclose{]\\mkern-3.2mu\\}}}{\\mathclose{\\char`⦄}}"),q("⦃","\\lBrace"),q("⦄","\\rBrace"),q("\\darr","\\downarrow"),q("\\dArr","\\Downarrow"),q("\\Darr","\\Downarrow"),q("\\lang","\\langle"),q("\\rang","\\rangle"),q("\\uarr","\\uparrow"),q("\\uArr","\\Uparrow"),q("\\Uarr","\\Uparrow"),q("\\N","\\mathbb{N}"),q("\\R","\\mathbb{R}"),q("\\Z","\\mathbb{Z}"),q("\\alef","\\aleph"),q("\\alefsym","\\aleph"),q("\\Alpha","\\mathrm{A}"),q("\\Beta","\\mathrm{B}"),q("\\bull","\\bullet"),q("\\Chi","\\mathrm{X}"),q("\\clubs","\\clubsuit"),q("\\cnums","\\mathbb{C}"),q("\\Complex","\\mathbb{C}"),q("\\Dagger","\\ddagger"),q("\\diamonds","\\diamondsuit"),q("\\empty","\\emptyset"),q("\\Epsilon","\\mathrm{E}"),q("\\Eta","\\mathrm{H}"),q("\\exist","\\exists"),q("\\harr","\\leftrightarrow"),q("\\hArr","\\Leftrightarrow"),q("\\Harr","\\Leftrightarrow"),q("\\hearts","\\heartsuit"),q("\\image","\\Im"),q("\\infin","\\infty"),q("\\Iota","\\mathrm{I}"),q("\\isin","\\in"),q("\\Kappa","\\mathrm{K}"),q("\\larr","\\leftarrow"),q("\\lArr","\\Leftarrow"),q("\\Larr","\\Leftarrow"),q("\\lrarr","\\leftrightarrow"),q("\\lrArr","\\Leftrightarrow"),q("\\Lrarr","\\Leftrightarrow"),q("\\Mu","\\mathrm{M}"),q("\\natnums","\\mathbb{N}"),q("\\Nu","\\mathrm{N}"),q("\\Omicron","\\mathrm{O}"),q("\\plusmn","\\pm"),q("\\rarr","\\rightarrow"),q("\\rArr","\\Rightarrow"),q("\\Rarr","\\Rightarrow"),q("\\real","\\Re"),q("\\reals","\\mathbb{R}"),q("\\Reals","\\mathbb{R}"),q("\\Rho","\\mathrm{P}"),q("\\sdot","\\cdot"),q("\\sect","\\S"),q("\\spades","\\spadesuit"),q("\\sub","\\subset"),q("\\sube","\\subseteq"),q("\\supe","\\supseteq"),q("\\Tau","\\mathrm{T}"),q("\\thetasym","\\vartheta"),q("\\weierp","\\wp"),q("\\Zeta","\\mathrm{Z}"),q("\\argmin","\\DOTSB\\operatorname*{arg\\,min}"),q("\\argmax","\\DOTSB\\operatorname*{arg\\,max}"),q("\\plim","\\DOTSB\\mathop{\\operatorname{plim}}\\limits"),q("\\blue","\\textcolor{##6495ed}{#1}"),q("\\orange","\\textcolor{##ffa500}{#1}"),q("\\pink","\\textcolor{##ff00af}{#1}"),q("\\red","\\textcolor{##df0030}{#1}"),q("\\green","\\textcolor{##28ae7b}{#1}"),q("\\gray","\\textcolor{gray}{#1}"),q("\\purple","\\textcolor{##9d38bd}{#1}"),q("\\blueA","\\textcolor{##ccfaff}{#1}"),q("\\blueB","\\textcolor{##80f6ff}{#1}"),q("\\blueC","\\textcolor{##63d9ea}{#1}"),q("\\blueD","\\textcolor{##11accd}{#1}"),q("\\blueE","\\textcolor{##0c7f99}{#1}"),q("\\tealA","\\textcolor{##94fff5}{#1}"),q("\\tealB","\\textcolor{##26edd5}{#1}"),q("\\tealC","\\textcolor{##01d1c1}{#1}"),q("\\tealD","\\textcolor{##01a995}{#1}"),q("\\tealE","\\textcolor{##208170}{#1}"),q("\\greenA","\\textcolor{##b6ffb0}{#1}"),q("\\greenB","\\textcolor{##8af281}{#1}"),q("\\greenC","\\textcolor{##74cf70}{#1}"),q("\\greenD","\\textcolor{##1fab54}{#1}"),q("\\greenE","\\textcolor{##0d923f}{#1}"),q("\\goldA","\\textcolor{##ffd0a9}{#1}"),q("\\goldB","\\textcolor{##ffbb71}{#1}"),q("\\goldC","\\textcolor{##ff9c39}{#1}"),q("\\goldD","\\textcolor{##e07d10}{#1}"),q("\\goldE","\\textcolor{##a75a05}{#1}"),q("\\redA","\\textcolor{##fca9a9}{#1}"),q("\\redB","\\textcolor{##ff8482}{#1}"),q("\\redC","\\textcolor{##f9685d}{#1}"),q("\\redD","\\textcolor{##e84d39}{#1}"),q("\\redE","\\textcolor{##bc2612}{#1}"),q("\\maroonA","\\textcolor{##ffbde0}{#1}"),q("\\maroonB","\\textcolor{##ff92c6}{#1}"),q("\\maroonC","\\textcolor{##ed5fa6}{#1}"),q("\\maroonD","\\textcolor{##ca337c}{#1}"),q("\\maroonE","\\textcolor{##9e034e}{#1}"),q("\\purpleA","\\textcolor{##ddd7ff}{#1}"),q("\\purpleB","\\textcolor{##c6b9fc}{#1}"),q("\\purpleC","\\textcolor{##aa87ff}{#1}"),q("\\purpleD","\\textcolor{##7854ab}{#1}"),q("\\purpleE","\\textcolor{##543b78}{#1}"),q("\\mintA","\\textcolor{##f5f9e8}{#1}"),q("\\mintB","\\textcolor{##edf2df}{#1}"),q("\\mintC","\\textcolor{##e0e5cc}{#1}"),q("\\grayA","\\textcolor{##f6f7f7}{#1}"),q("\\grayB","\\textcolor{##f0f1f2}{#1}"),q("\\grayC","\\textcolor{##e3e5e6}{#1}"),q("\\grayD","\\textcolor{##d6d8da}{#1}"),q("\\grayE","\\textcolor{##babec2}{#1}"),q("\\grayF","\\textcolor{##888d93}{#1}"),q("\\grayG","\\textcolor{##626569}{#1}"),q("\\grayH","\\textcolor{##3b3e40}{#1}"),q("\\grayI","\\textcolor{##21242c}{#1}"),q("\\kaBlue","\\textcolor{##314453}{#1}"),q("\\kaGreen","\\textcolor{##71B307}{#1}");var ps={"\\relax":!0,"^":!0,_:!0,"\\limits":!0,"\\nolimits":!0},Km=function(){function h(a,r,s){this.settings=void 0,this.expansionCount=void 0,this.lexer=void 0,this.macros=void 0,this.stack=void 0,this.mode=void 0,this.settings=r,this.expansionCount=0,this.feed(a),this.macros=new Hm(Um,r.macros),this.mode=s,this.stack=[]}var t=h.prototype;return t.feed=function(r){this.lexer=new ss(r,this.settings)},t.switchMode=function(r){this.mode=r},t.beginGroup=function(){this.macros.beginGroup()},t.endGroup=function(){this.macros.endGroup()},t.future=function(){return this.stack.length===0&&this.pushToken(this.lexer.lex()),this.stack[this.stack.length-1]},t.popToken=function(){return this.future(),this.stack.pop()},t.pushToken=function(r){this.stack.push(r)},t.pushTokens=function(r){var s;(s=this.stack).push.apply(s,r)},t.consumeSpaces=function(){for(;;){var r=this.future();if(r.text===" ")this.stack.pop();else break}},t.consumeArgs=function(r){for(var s=[],m=0;m<r;++m){this.consumeSpaces();var g=this.popToken();if(g.text==="{"){for(var f=[],v=1;v!==0;){var C=this.popToken();if(f.push(C),C.text==="{")++v;else if(C.text==="}")--v;else if(C.text==="EOF")throw new b("End of input in macro argument",g)}f.pop(),f.reverse(),s[m]=f}else{if(g.text==="EOF")throw new b("End of input expecting macro argument");s[m]=[g]}}return s},t.expandOnce=function(){var r=this.popToken(),s=r.text,m=this._getExpansion(s);if(m==null)return this.pushToken(r),r;if(this.expansionCount++,this.expansionCount>this.settings.maxExpand)throw new b("Too many expansions: infinite loop or need to increase maxExpand setting");var g=m.tokens;if(m.numArgs){var f=this.consumeArgs(m.numArgs);g=g.slice();for(var v=g.length-1;v>=0;--v){var C=g[v];if(C.text==="#"){if(v===0)throw new b("Incomplete placeholder at end of macro body",C);if(C=g[--v],C.text==="#")g.splice(v+1,1);else if(/^[1-9]$/.test(C.text)){var P;(P=g).splice.apply(P,[v,2].concat(f[+C.text-1]))}else throw new b("Not a valid argument number",C)}}}return this.pushTokens(g),g},t.expandAfterFuture=function(){return this.expandOnce(),this.future()},t.expandNextToken=function(){for(;;){var r=this.expandOnce();if(r instanceof w)if(r.text==="\\relax")this.stack.pop();else return this.stack.pop()}throw new Error},t.expandMacro=function(r){if(this.macros.get(r)){var s=[],m=this.stack.length;for(this.pushToken(new w(r));this.stack.length>m;){var g=this.expandOnce();g instanceof w&&s.push(this.stack.pop())}return s}},t.expandMacroAsText=function(r){var s=this.expandMacro(r);return s&&s.map(function(m){return m.text}).join("")},t._getExpansion=function(r){var s=this.macros.get(r);if(s==null)return s;var m=typeof s=="function"?s(this):s;if(typeof m=="string"){var g=0;if(m.indexOf("#")!==-1)for(var f=m.replace(/##/g,"");f.indexOf("#"+(g+1))!==-1;)++g;for(var v=new ss(m,this.settings),C=[],P=v.lex();P.text!=="EOF";)C.push(P),P=v.lex();C.reverse();var L={tokens:C,numArgs:g};return L}return m},t.isDefined=function(r){return this.macros.has(r)||xa.hasOwnProperty(r)||en.math.hasOwnProperty(r)||en.text.hasOwnProperty(r)||ps.hasOwnProperty(r)},h}(),hs={"́":{text:"\\'",math:"\\acute"},"̀":{text:"\\`",math:"\\grave"},"̈":{text:'\\"',math:"\\ddot"},"̃":{text:"\\~",math:"\\tilde"},"̄":{text:"\\=",math:"\\bar"},"̆":{text:"\\u",math:"\\breve"},"̌":{text:"\\v",math:"\\check"},"̂":{text:"\\^",math:"\\hat"},"̇":{text:"\\.",math:"\\dot"},"̊":{text:"\\r",math:"\\mathring"},"̋":{text:"\\H"}},gs={á:"á",à:"à",ä:"ä",ǟ:"ǟ",ã:"ã",ā:"ā",ă:"ă",ắ:"ắ",ằ:"ằ",ẵ:"ẵ",ǎ:"ǎ",â:"â",ấ:"ấ",ầ:"ầ",ẫ:"ẫ",ȧ:"ȧ",ǡ:"ǡ",å:"å",ǻ:"ǻ",ḃ:"ḃ",ć:"ć",č:"č",ĉ:"ĉ",ċ:"ċ",ď:"ď",ḋ:"ḋ",é:"é",è:"è",ë:"ë",ẽ:"ẽ",ē:"ē",ḗ:"ḗ",ḕ:"ḕ",ĕ:"ĕ",ě:"ě",ê:"ê",ế:"ế",ề:"ề",ễ:"ễ",ė:"ė",ḟ:"ḟ",ǵ:"ǵ",ḡ:"ḡ",ğ:"ğ",ǧ:"ǧ",ĝ:"ĝ",ġ:"ġ",ḧ:"ḧ",ȟ:"ȟ",ĥ:"ĥ",ḣ:"ḣ",í:"í",ì:"ì",ï:"ï",ḯ:"ḯ",ĩ:"ĩ",ī:"ī",ĭ:"ĭ",ǐ:"ǐ",î:"î",ǰ:"ǰ",ĵ:"ĵ",ḱ:"ḱ",ǩ:"ǩ",ĺ:"ĺ",ľ:"ľ",ḿ:"ḿ",ṁ:"ṁ",ń:"ń",ǹ:"ǹ",ñ:"ñ",ň:"ň",ṅ:"ṅ",ó:"ó",ò:"ò",ö:"ö",ȫ:"ȫ",õ:"õ",ṍ:"ṍ",ṏ:"ṏ",ȭ:"ȭ",ō:"ō",ṓ:"ṓ",ṑ:"ṑ",ŏ:"ŏ",ǒ:"ǒ",ô:"ô",ố:"ố",ồ:"ồ",ỗ:"ỗ",ȯ:"ȯ",ȱ:"ȱ",ő:"ő",ṕ:"ṕ",ṗ:"ṗ",ŕ:"ŕ",ř:"ř",ṙ:"ṙ",ś:"ś",ṥ:"ṥ",š:"š",ṧ:"ṧ",ŝ:"ŝ",ṡ:"ṡ",ẗ:"ẗ",ť:"ť",ṫ:"ṫ",ú:"ú",ù:"ù",ü:"ü",ǘ:"ǘ",ǜ:"ǜ",ǖ:"ǖ",ǚ:"ǚ",ũ:"ũ",ṹ:"ṹ",ū:"ū",ṻ:"ṻ",ŭ:"ŭ",ǔ:"ǔ",û:"û",ů:"ů",ű:"ű",ṽ:"ṽ",ẃ:"ẃ",ẁ:"ẁ",ẅ:"ẅ",ŵ:"ŵ",ẇ:"ẇ",ẘ:"ẘ",ẍ:"ẍ",ẋ:"ẋ",ý:"ý",ỳ:"ỳ",ÿ:"ÿ",ỹ:"ỹ",ȳ:"ȳ",ŷ:"ŷ",ẏ:"ẏ",ẙ:"ẙ",ź:"ź",ž:"ž",ẑ:"ẑ",ż:"ż",Á:"Á",À:"À",Ä:"Ä",Ǟ:"Ǟ",Ã:"Ã",Ā:"Ā",Ă:"Ă",Ắ:"Ắ",Ằ:"Ằ",Ẵ:"Ẵ",Ǎ:"Ǎ",Â:"Â",Ấ:"Ấ",Ầ:"Ầ",Ẫ:"Ẫ",Ȧ:"Ȧ",Ǡ:"Ǡ",Å:"Å",Ǻ:"Ǻ",Ḃ:"Ḃ",Ć:"Ć",Č:"Č",Ĉ:"Ĉ",Ċ:"Ċ",Ď:"Ď",Ḋ:"Ḋ",É:"É",È:"È",Ë:"Ë",Ẽ:"Ẽ",Ē:"Ē",Ḗ:"Ḗ",Ḕ:"Ḕ",Ĕ:"Ĕ",Ě:"Ě",Ê:"Ê",Ế:"Ế",Ề:"Ề",Ễ:"Ễ",Ė:"Ė",Ḟ:"Ḟ",Ǵ:"Ǵ",Ḡ:"Ḡ",Ğ:"Ğ",Ǧ:"Ǧ",Ĝ:"Ĝ",Ġ:"Ġ",Ḧ:"Ḧ",Ȟ:"Ȟ",Ĥ:"Ĥ",Ḣ:"Ḣ",Í:"Í",Ì:"Ì",Ï:"Ï",Ḯ:"Ḯ",Ĩ:"Ĩ",Ī:"Ī",Ĭ:"Ĭ",Ǐ:"Ǐ",Î:"Î",İ:"İ",Ĵ:"Ĵ",Ḱ:"Ḱ",Ǩ:"Ǩ",Ĺ:"Ĺ",Ľ:"Ľ",Ḿ:"Ḿ",Ṁ:"Ṁ",Ń:"Ń",Ǹ:"Ǹ",Ñ:"Ñ",Ň:"Ň",Ṅ:"Ṅ",Ó:"Ó",Ò:"Ò",Ö:"Ö",Ȫ:"Ȫ",Õ:"Õ",Ṍ:"Ṍ",Ṏ:"Ṏ",Ȭ:"Ȭ",Ō:"Ō",Ṓ:"Ṓ",Ṑ:"Ṑ",Ŏ:"Ŏ",Ǒ:"Ǒ",Ô:"Ô",Ố:"Ố",Ồ:"Ồ",Ỗ:"Ỗ",Ȯ:"Ȯ",Ȱ:"Ȱ",Ő:"Ő",Ṕ:"Ṕ",Ṗ:"Ṗ",Ŕ:"Ŕ",Ř:"Ř",Ṙ:"Ṙ",Ś:"Ś",Ṥ:"Ṥ",Š:"Š",Ṧ:"Ṧ",Ŝ:"Ŝ",Ṡ:"Ṡ",Ť:"Ť",Ṫ:"Ṫ",Ú:"Ú",Ù:"Ù",Ü:"Ü",Ǘ:"Ǘ",Ǜ:"Ǜ",Ǖ:"Ǖ",Ǚ:"Ǚ",Ũ:"Ũ",Ṹ:"Ṹ",Ū:"Ū",Ṻ:"Ṻ",Ŭ:"Ŭ",Ǔ:"Ǔ",Û:"Û",Ů:"Ů",Ű:"Ű",Ṽ:"Ṽ",Ẃ:"Ẃ",Ẁ:"Ẁ",Ẅ:"Ẅ",Ŵ:"Ŵ",Ẇ:"Ẇ",Ẍ:"Ẍ",Ẋ:"Ẋ",Ý:"Ý",Ỳ:"Ỳ",Ÿ:"Ÿ",Ỹ:"Ỹ",Ȳ:"Ȳ",Ŷ:"Ŷ",Ẏ:"Ẏ",Ź:"Ź",Ž:"Ž",Ẑ:"Ẑ",Ż:"Ż",ά:"ά",ὰ:"ὰ",ᾱ:"ᾱ",ᾰ:"ᾰ",έ:"έ",ὲ:"ὲ",ή:"ή",ὴ:"ὴ",ί:"ί",ὶ:"ὶ",ϊ:"ϊ",ΐ:"ΐ",ῒ:"ῒ",ῑ:"ῑ",ῐ:"ῐ",ό:"ό",ὸ:"ὸ",ύ:"ύ",ὺ:"ὺ",ϋ:"ϋ",ΰ:"ΰ",ῢ:"ῢ",ῡ:"ῡ",ῠ:"ῠ",ώ:"ώ",ὼ:"ὼ",Ύ:"Ύ",Ὺ:"Ὺ",Ϋ:"Ϋ",Ῡ:"Ῡ",Ῠ:"Ῠ",Ώ:"Ώ",Ὼ:"Ὼ"},Lr=function(){function h(a,r){this.mode=void 0,this.gullet=void 0,this.settings=void 0,this.leftrightDepth=void 0,this.nextToken=void 0,this.mode="math",this.gullet=new Km(a,r,this.mode),this.settings=r,this.leftrightDepth=0}var t=h.prototype;return t.expect=function(r,s){if(s===void 0&&(s=!0),this.fetch().text!==r)throw new b("Expected '"+r+"', got '"+this.fetch().text+"'",this.fetch());s&&this.consume()},t.consume=function(){this.nextToken=null},t.fetch=function(){return this.nextToken==null&&(this.nextToken=this.gullet.expandNextToken()),this.nextToken},t.switchMode=function(r){this.mode=r,this.gullet.switchMode(r)},t.parse=function(){this.gullet.beginGroup(),this.settings.colorIsTextColor&&this.gullet.macros.set("\\color","\\textcolor");var r=this.parseExpression(!1);return this.expect("EOF"),this.gullet.endGroup(),r},t.parseExpression=function(r,s){for(var m=[];;){this.mode==="math"&&this.consumeSpaces();var g=this.fetch();if(h.endOfExpression.indexOf(g.text)!==-1||s&&g.text===s||r&&xa[g.text]&&xa[g.text].infix)break;var f=this.parseAtom(s);if(!f)break;m.push(f)}return this.mode==="text"&&this.formLigatures(m),this.handleInfixNodes(m)},t.handleInfixNodes=function(r){for(var s=-1,m,g=0;g<r.length;g++){var f=wn(r[g],"infix");if(f){if(s!==-1)throw new b("only one infix operator per group",f.token);s=g,m=f.replaceWith}}if(s!==-1&&m){var v,C,P=r.slice(0,s),L=r.slice(s+1);P.length===1&&P[0].type==="ordgroup"?v=P[0]:v={type:"ordgroup",mode:this.mode,body:P},L.length===1&&L[0].type==="ordgroup"?C=L[0]:C={type:"ordgroup",mode:this.mode,body:L};var z;return m==="\\\\abovefrac"?z=this.callFunction(m,[v,r[s],C],[]):z=this.callFunction(m,[v,C],[]),[z]}else return r},t.handleSupSubscript=function(r){var s=this.fetch(),m=s.text;this.consume();var g=this.parseGroup(r,!1,h.SUPSUB_GREEDINESS,void 0,void 0,!0);if(!g)throw new b("Expected group after '"+m+"'",s);return g},t.formatUnsupportedCmd=function(r){for(var s=[],m=0;m<r.length;m++)s.push({type:"textord",mode:"text",text:r[m]});var g={type:"text",mode:this.mode,body:s},f={type:"color",mode:this.mode,color:this.settings.errorColor,body:[g]};return f},t.parseAtom=function(r){var s=this.parseGroup("atom",!1,null,r);if(this.mode==="text")return s;for(var m,g;;){this.consumeSpaces();var f=this.fetch();if(f.text==="\\limits"||f.text==="\\nolimits"){var v=wn(s,"op");if(v){var C=f.text==="\\limits";v.limits=C,v.alwaysHandleSupSub=!0}else if(v=wn(s,"operatorname"),v&&v.alwaysHandleSupSub){var P=f.text==="\\limits";v.limits=P}else throw new b("Limit controls must follow a math operator",f);this.consume()}else if(f.text==="^"){if(m)throw new b("Double superscript",f);m=this.handleSupSubscript("superscript")}else if(f.text==="_"){if(g)throw new b("Double subscript",f);g=this.handleSupSubscript("subscript")}else if(f.text==="'"){if(m)throw new b("Double superscript",f);var L={type:"textord",mode:this.mode,text:"\\prime"},z=[L];for(this.consume();this.fetch().text==="'";)z.push(L),this.consume();this.fetch().text==="^"&&z.push(this.handleSupSubscript("superscript")),m={type:"ordgroup",mode:this.mode,body:z}}else break}return m||g?{type:"supsub",mode:this.mode,base:s,sup:m,sub:g}:s},t.parseFunction=function(r,s,m){var g=this.fetch(),f=g.text,v=xa[f];if(!v)return null;if(this.consume(),m!=null&&v.greediness<=m)throw new b("Got function '"+f+"' with no arguments"+(s?" as "+s:""),g);if(this.mode==="text"&&!v.allowedInText)throw new b("Can't use function '"+f+"' in text mode",g);if(this.mode==="math"&&v.allowedInMath===!1)throw new b("Can't use function '"+f+"' in math mode",g);var C=this.parseArguments(f,v),P=C.args,L=C.optArgs;return this.callFunction(f,P,L,g,r)},t.callFunction=function(r,s,m,g,f){var v={funcName:r,parser:this,token:g,breakOnTokenText:f},C=xa[r];if(C&&C.handler)return C.handler(v,s,m);throw new b("No function handler for "+r)},t.parseArguments=function(r,s){var m=s.numArgs+s.numOptionalArgs;if(m===0)return{args:[],optArgs:[]};for(var g=s.greediness,f=[],v=[],C=0;C<m;C++){var P=s.argTypes&&s.argTypes[C],L=C<s.numOptionalArgs,z=C>0&&!L||C===0&&!L&&this.mode==="math",X=this.parseGroupOfType("argument to '"+r+"'",P,L,g,z);if(!X){if(L){v.push(null);continue}throw new b("Expected group after '"+r+"'",this.fetch())}(L?v:f).push(X)}return{args:f,optArgs:v}},t.parseGroupOfType=function(r,s,m,g,f){switch(s){case"color":return f&&this.consumeSpaces(),this.parseColorGroup(m);case"size":return f&&this.consumeSpaces(),this.parseSizeGroup(m);case"url":return this.parseUrlGroup(m,f);case"math":case"text":return this.parseGroup(r,m,g,void 0,s,f);case"hbox":{var v=this.parseGroup(r,m,g,void 0,"text",f);if(!v)return v;var C={type:"styling",mode:v.mode,body:[v],style:"text"};return C}case"raw":{if(f&&this.consumeSpaces(),m&&this.fetch().text==="{")return null;var P=this.parseStringGroup("raw",m,!0);if(P)return{type:"raw",mode:"text",string:P.text};throw new b("Expected raw group",this.fetch())}case"original":case null:case void 0:return this.parseGroup(r,m,g,void 0,void 0,f);default:throw new b("Unknown group type as "+r,this.fetch())}},t.consumeSpaces=function(){for(;this.fetch().text===" ";)this.consume()},t.parseStringGroup=function(r,s,m){var g=s?"[":"{",f=s?"]":"}",v=this.fetch();if(v.text!==g){if(s)return null;if(m&&v.text!=="EOF"&&/[^{}[\]]/.test(v.text))return this.consume(),v}var C=this.mode;this.mode="text",this.expect(g);for(var P="",L=this.fetch(),z=0,X=L,ee;(ee=this.fetch()).text!==f||m&&z>0;){switch(ee.text){case"EOF":throw new b("Unexpected end of input in "+r,L.range(X,P));case g:z++;break;case f:z--;break}X=ee,P+=X.text,this.consume()}return this.expect(f),this.mode=C,L.range(X,P)},t.parseRegexGroup=function(r,s){var m=this.mode;this.mode="text";for(var g=this.fetch(),f=g,v="",C;(C=this.fetch()).text!=="EOF"&&r.test(v+C.text);)f=C,v+=f.text,this.consume();if(v==="")throw new b("Invalid "+s+": '"+g.text+"'",g);return this.mode=m,g.range(f,v)},t.parseColorGroup=function(r){var s=this.parseStringGroup("color",r);if(!s)return null;var m=/^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(s.text);if(!m)throw new b("Invalid color: '"+s.text+"'",s);var g=m[0];return/^[0-9a-f]{6}$/i.test(g)&&(g="#"+g),{type:"color-token",mode:this.mode,color:g}},t.parseSizeGroup=function(r){var s,m=!1;if(!r&&this.fetch().text!=="{"?s=this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/,"size"):s=this.parseStringGroup("size",r),!s)return null;!r&&s.text.length===0&&(s.text="0pt",m=!0);var g=/([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(s.text);if(!g)throw new b("Invalid size: '"+s.text+"'",s);var f={number:+(g[1]+g[2]),unit:g[3]};if(!sl(f))throw new b("Invalid unit: '"+f.unit+"'",s);return{type:"size",mode:this.mode,value:f,isBlank:m}},t.parseUrlGroup=function(r,s){this.gullet.lexer.setCatcode("%",13);var m=this.parseStringGroup("url",r,!0);if(this.gullet.lexer.setCatcode("%",14),!m)return null;var g=m.text.replace(/\\([#$%&~_^{}])/g,"$1");return{type:"url",mode:this.mode,url:g}},t.parseGroup=function(r,s,m,g,f,v){var C=this.mode;f&&this.switchMode(f),v&&this.consumeSpaces();var P=this.fetch(),L=P.text,z;if(s?L==="[":L==="{"||L==="\\begingroup"){this.consume();var X=h.endOfGroup[L];this.gullet.beginGroup();var ee=this.parseExpression(!1,X),ae=this.fetch();this.expect(X),this.gullet.endGroup(),z={type:"ordgroup",mode:this.mode,loc:p.range(P,ae),body:ee,semisimple:L==="\\begingroup"||void 0}}else if(s)z=null;else if(z=this.parseFunction(g,r,m)||this.parseSymbol(),z==null&&L[0]==="\\"&&!ps.hasOwnProperty(L)){if(this.settings.throwOnError)throw new b("Undefined control sequence: "+L,P);z=this.formatUnsupportedCmd(L),this.consume()}return f&&this.switchMode(C),z},t.formLigatures=function(r){for(var s=r.length-1,m=0;m<s;++m){var g=r[m],f=g.text;f==="-"&&r[m+1].text==="-"&&(m+1<s&&r[m+2].text==="-"?(r.splice(m,3,{type:"textord",mode:"text",loc:p.range(g,r[m+2]),text:"---"}),s-=2):(r.splice(m,2,{type:"textord",mode:"text",loc:p.range(g,r[m+1]),text:"--"}),s-=1)),(f==="'"||f==="`")&&r[m+1].text===f&&(r.splice(m,2,{type:"textord",mode:"text",loc:p.range(g,r[m+1]),text:f+f}),s-=1)}},t.parseSymbol=function(){var r=this.fetch(),s=r.text;if(/^\\verb[^a-zA-Z]/.test(s)){this.consume();var m=s.slice(5),g=m.charAt(0)==="*";if(g&&(m=m.slice(1)),m.length<2||m.charAt(0)!==m.slice(-1))throw new b(`\\verb assertion failed --
                    please report what input caused this bug`);return m=m.slice(1,-1),{type:"verb",mode:"text",body:m,star:g}}gs.hasOwnProperty(s[0])&&!en[this.mode][s[0]]&&(this.settings.strict&&this.mode==="math"&&this.settings.reportNonstrict("unicodeTextInMathMode",'Accented Unicode text character "'+s[0]+'" used in math mode',r),s=gs[s[0]]+s.substr(1));var f=Wm.exec(s);f&&(s=s.substring(0,f.index),s==="i"?s="ı":s==="j"&&(s="ȷ"));var v;if(en[this.mode][s]){this.settings.strict&&this.mode==="math"&&Oi.indexOf(s)>=0&&this.settings.reportNonstrict("unicodeTextInMathMode",'Latin-1/Unicode text character "'+s[0]+'" used in math mode',r);var C=en[this.mode][s].group,P=p.range(r),L;if(Ed.hasOwnProperty(C)){var z=C;L={type:"atom",mode:this.mode,family:z,loc:P,text:s}}else L={type:C,mode:this.mode,loc:P,text:s};v=L}else if(s.charCodeAt(0)>=128)this.settings.strict&&(mr(s.charCodeAt(0))?this.mode==="math"&&this.settings.reportNonstrict("unicodeTextInMathMode",'Unicode text character "'+s[0]+'" used in math mode',r):this.settings.reportNonstrict("unknownSymbol",'Unrecognized Unicode character "'+s[0]+'"'+(" ("+s.charCodeAt(0)+")"),r)),v={type:"textord",mode:"text",loc:p.range(r),text:s};else return null;if(this.consume(),f)for(var X=0;X<f[0].length;X++){var ee=f[0][X];if(!hs[ee])throw new b("Unknown accent ' "+ee+"'",r);var ae=hs[ee][this.mode];if(!ae)throw new b("Accent "+ee+" unsupported in "+this.mode+" mode",r);v={type:"accent",mode:this.mode,loc:p.range(r),label:ae,isStretchy:!1,isShifty:!0,base:v}}return v},h}();Lr.endOfExpression=["}","\\endgroup","\\end","\\right","&"],Lr.endOfGroup={"[":"]","{":"}","\\begingroup":"\\endgroup"},Lr.SUPSUB_GREEDINESS=1;var Xm=function(t,a){if(!(typeof t=="string"||t instanceof String))throw new TypeError("KaTeX can only parse string typed expression");var r=new Lr(t,a);delete r.gullet.macros.current["\\df@tag"];var s=r.parse();if(r.gullet.macros.get("\\df@tag")){if(!a.displayMode)throw new b("\\tag works only in display equations");r.gullet.feed("\\df@tag"),s=[{type:"tag",mode:"text",body:s,tag:r.parse()}]}return s},uo=Xm,ys=function(t,a,r){a.textContent="";var s=mo(t,r).toNode();a.appendChild(s)};typeof document<"u"&&document.compatMode!=="CSS1Compat"&&(typeof console<"u"&&console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype."),ys=function(){throw new b("KaTeX doesn't work in quirks mode.")});var Ym=function(t,a){var r=mo(t,a).toMarkup();return r},Jm=function(t,a){var r=new $(a);return uo(t,r)},bs=function(t,a,r){if(r.throwOnError||!(t instanceof b))throw t;var s=D.makeSpan(["katex-error"],[new un(a)]);return s.setAttribute("title",t.toString()),s.setAttribute("style","color:"+r.errorColor),s},mo=function(t,a){var r=new $(a);try{var s=uo(t,r);return mm(s,t,r)}catch(m){return bs(m,t,r)}},Zm=function(t,a){var r=new $(a);try{var s=uo(t,r);return cm(s,t,r)}catch(m){return bs(m,t,r)}},Qm={version:"0.11.1",render:ys,renderToString:Ym,ParseError:b,__parse:Jm,__renderToDomTree:mo,__renderToHTMLTree:Zm,__setFontMetrics:Fd,__defineSymbol:d,__defineMacro:q,__domTree:{Span:Pe,Anchor:bn,SymbolNode:un,SvgNode:Un,PathNode:Kn,LineNode:Ni}};i.default=Qm}]).default})})(Mu);var Wp=Mu.exports;const bi=dc(Wp),zu=function(o,l){let n="",i=o[o.length-1].loc.start;for(let p=o.length-1;p>=0;p--)o[p].loc.start>i&&(n+=" ",i=o[p].loc.start),n+=o[p].text,i+=o[p].text.length;return _e.go(H.go(n,l))};var H={go:function(o,l){if(!o)return[];l===void 0&&(l="ce");let n="0";const i={};i.parenthesisLevel=0,o=o.replace(/\n/g," "),o=o.replace(/[\u2212\u2013\u2014\u2010]/g,"-"),o=o.replace(/[\u2026]/g,"...");let u,p=10;const w=[];for(;;){u!==o?(p=10,u=o):p--;const b=H.stateMachines[l],N=b.transitions[n]||b.transitions["*"];e:for(let O=0;O<N.length;O++){const B=H.patterns.match_(N[O].pattern,o);if(B){const V=N[O].task;for(let G=0;G<V.action_.length;G++){var k;if(b.actions[V.action_[G].type_])k=b.actions[V.action_[G].type_](i,B.match_,V.action_[G].option);else if(H.actions[V.action_[G].type_])k=H.actions[V.action_[G].type_](i,B.match_,V.action_[G].option);else throw["MhchemBugA","mhchem bug A. Please report. ("+V.action_[G].type_+")"];H.concatArray(w,k)}if(n=V.nextState||n,o.length>0){if(V.revisit||(o=B.remainder),!V.toContinue)break e}else return w}}if(p<=0)throw["MhchemBugU","mhchem bug U. Please report."]}},concatArray:function(o,l){if(l)if(Array.isArray(l))for(let n=0;n<l.length;n++)o.push(l[n]);else o.push(l)},patterns:{patterns:{empty:/^$/,else:/^./,else2:/^./,space:/^\s/,"space A":/^\s(?=[A-Z\\$])/,space$:/^\s$/,"a-z":/^[a-z]/,x:/^x/,x$:/^x$/,i$:/^i$/,letters:/^(?:[a-zA-Z\u03B1-\u03C9\u0391-\u03A9?@]|(?:\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))))+/,"\\greek":/^\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega|Gamma|Delta|Theta|Lambda|Xi|Pi|Sigma|Upsilon|Phi|Psi|Omega)(?:\s+|\{\}|(?![a-zA-Z]))/,"one lowercase latin letter $":/^(?:([a-z])(?:$|[^a-zA-Z]))$/,"$one lowercase latin letter$ $":/^\$(?:([a-z])(?:$|[^a-zA-Z]))\$$/,"one lowercase greek letter $":/^(?:\$?[\u03B1-\u03C9]\$?|\$?\\(?:alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)\s*\$?)(?:\s+|\{\}|(?![a-zA-Z]))$/,digits:/^[0-9]+/,"-9.,9":/^[+\-]?(?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))/,"-9.,9 no missing 0":/^[+\-]?[0-9]+(?:[.,][0-9]+)?/,"(-)(9.,9)(e)(99)":function(o){const l=o.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))?(\((?:[0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+))\))?(?:([eE]|\s*(\*|x|\\times|\u00D7)\s*10\^)([+\-]?[0-9]+|\{[+\-]?[0-9]+\}))?/);return l&&l[0]?{match_:l.splice(1),remainder:o.substr(l[0].length)}:null},"(-)(9)^(-9)":function(o){const l=o.match(/^(\+\-|\+\/\-|\+|\-|\\pm\s?)?([0-9]+(?:[,.][0-9]+)?|[0-9]*(?:\.[0-9]+)?)\^([+\-]?[0-9]+|\{[+\-]?[0-9]+\})/);return l&&l[0]?{match_:l.splice(1),remainder:o.substr(l[0].length)}:null},"state of aggregation $":function(o){const l=H.patterns.findObserveGroups(o,"",/^\([a-z]{1,3}(?=[\),])/,")","");if(l&&l.remainder.match(/^($|[\s,;\)\]\}])/))return l;const n=o.match(/^(?:\((?:\\ca\s?)?\$[amothc]\$\))/);return n?{match_:n[0],remainder:o.substr(n[0].length)}:null},"_{(state of aggregation)}$":/^_\{(\([a-z]{1,3}\))\}/,"{[(":/^(?:\\\{|\[|\()/,")]}":/^(?:\)|\]|\\\})/,", ":/^[,;]\s*/,",":/^[,;]/,".":/^[.]/,". ":/^([.\u22C5\u00B7\u2022])\s*/,"...":/^\.\.\.(?=$|[^.])/,"* ":/^([*])\s*/,"^{(...)}":function(o){return H.patterns.findObserveGroups(o,"^{","","","}")},"^($...$)":function(o){return H.patterns.findObserveGroups(o,"^","$","$","")},"^a":/^\^([0-9]+|[^\\_])/,"^\\x{}{}":function(o){return H.patterns.findObserveGroups(o,"^",/^\\[a-zA-Z]+\{/,"}","","","{","}","",!0)},"^\\x{}":function(o){return H.patterns.findObserveGroups(o,"^",/^\\[a-zA-Z]+\{/,"}","")},"^\\x":/^\^(\\[a-zA-Z]+)\s*/,"^(-1)":/^\^(-?\d+)/,"'":/^'/,"_{(...)}":function(o){return H.patterns.findObserveGroups(o,"_{","","","}")},"_($...$)":function(o){return H.patterns.findObserveGroups(o,"_","$","$","")},_9:/^_([+\-]?[0-9]+|[^\\])/,"_\\x{}{}":function(o){return H.patterns.findObserveGroups(o,"_",/^\\[a-zA-Z]+\{/,"}","","","{","}","",!0)},"_\\x{}":function(o){return H.patterns.findObserveGroups(o,"_",/^\\[a-zA-Z]+\{/,"}","")},"_\\x":/^_(\\[a-zA-Z]+)\s*/,"^_":/^(?:\^(?=_)|\_(?=\^)|[\^_]$)/,"{}":/^\{\}/,"{...}":function(o){return H.patterns.findObserveGroups(o,"","{","}","")},"{(...)}":function(o){return H.patterns.findObserveGroups(o,"{","","","}")},"$...$":function(o){return H.patterns.findObserveGroups(o,"","$","$","")},"${(...)}$":function(o){return H.patterns.findObserveGroups(o,"${","","","}$")},"$(...)$":function(o){return H.patterns.findObserveGroups(o,"$","","","$")},"=<>":/^[=<>]/,"#":/^[#\u2261]/,"+":/^\+/,"-$":/^-(?=[\s_},;\]/]|$|\([a-z]+\))/,"-9":/^-(?=[0-9])/,"- orbital overlap":/^-(?=(?:[spd]|sp)(?:$|[\s,;\)\]\}]))/,"-":/^-/,"pm-operator":/^(?:\\pm|\$\\pm\$|\+-|\+\/-)/,operator:/^(?:\+|(?:[\-=<>]|<<|>>|\\approx|\$\\approx\$)(?=\s|$|-?[0-9]))/,arrowUpDown:/^(?:v|\(v\)|\^|\(\^\))(?=$|[\s,;\)\]\}])/,"\\bond{(...)}":function(o){return H.patterns.findObserveGroups(o,"\\bond{","","","}")},"->":/^(?:<->|<-->|->|<-|<=>>|<<=>|<=>|[\u2192\u27F6\u21CC])/,CMT:/^[CMT](?=\[)/,"[(...)]":function(o){return H.patterns.findObserveGroups(o,"[","","","]")},"1st-level escape":/^(&|\\\\|\\hline)\s*/,"\\,":/^(?:\\[,\ ;:])/,"\\x{}{}":function(o){return H.patterns.findObserveGroups(o,"",/^\\[a-zA-Z]+\{/,"}","","","{","}","",!0)},"\\x{}":function(o){return H.patterns.findObserveGroups(o,"",/^\\[a-zA-Z]+\{/,"}","")},"\\ca":/^\\ca(?:\s+|(?![a-zA-Z]))/,"\\x":/^(?:\\[a-zA-Z]+\s*|\\[_&{}%])/,orbital:/^(?:[0-9]{1,2}[spdfgh]|[0-9]{0,2}sp)(?=$|[^a-zA-Z])/,others:/^[\/~|]/,"\\frac{(...)}":function(o){return H.patterns.findObserveGroups(o,"\\frac{","","","}","{","","","}")},"\\overset{(...)}":function(o){return H.patterns.findObserveGroups(o,"\\overset{","","","}","{","","","}")},"\\underset{(...)}":function(o){return H.patterns.findObserveGroups(o,"\\underset{","","","}","{","","","}")},"\\underbrace{(...)}":function(o){return H.patterns.findObserveGroups(o,"\\underbrace{","","","}_","{","","","}")},"\\color{(...)}0":function(o){return H.patterns.findObserveGroups(o,"\\color{","","","}")},"\\color{(...)}{(...)}1":function(o){return H.patterns.findObserveGroups(o,"\\color{","","","}","{","","","}")},"\\color(...){(...)}2":function(o){return H.patterns.findObserveGroups(o,"\\color","\\","",/^(?=\{)/,"{","","","}")},"\\ce{(...)}":function(o){return H.patterns.findObserveGroups(o,"\\ce{","","","}")},oxidation$:/^(?:[+-][IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/,"d-oxidation$":/^(?:[+-]?\s?[IVX]+|\\pm\s*0|\$\\pm\$\s*0)$/,"roman numeral":/^[IVX]+/,"1/2$":/^[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+(?:\$[a-z]\$|[a-z])?$/,amount:function(o){let l;if(l=o.match(/^(?:(?:(?:\([+\-]?[0-9]+\/[0-9]+\)|[+\-]?(?:[0-9]+|\$[a-z]\$|[a-z])\/[0-9]+|[+\-]?[0-9]+[.,][0-9]+|[+\-]?\.[0-9]+|[+\-]?[0-9]+)(?:[a-z](?=\s*[A-Z]))?)|[+\-]?[a-z](?=\s*[A-Z])|\+(?!\s))/),l)return{match_:l[0],remainder:o.substr(l[0].length)};const n=H.patterns.findObserveGroups(o,"","$","$","");return n&&(l=n.match_.match(/^\$(?:\(?[+\-]?(?:[0-9]*[a-z]?[+\-])?[0-9]*[a-z](?:[+\-][0-9]*[a-z]?)?\)?|\+|-)\$$/),l)?{match_:l[0],remainder:o.substr(l[0].length)}:null},amount2:function(o){return this.amount(o)},"(KV letters),":/^(?:[A-Z][a-z]{0,2}|i)(?=,)/,formula$:function(o){if(o.match(/^\([a-z]+\)$/))return null;const l=o.match(/^(?:[a-z]|(?:[0-9\ \+\-\,\.\(\)]+[a-z])+[0-9\ \+\-\,\.\(\)]*|(?:[a-z][0-9\ \+\-\,\.\(\)]+)+[a-z]?)$/);return l?{match_:l[0],remainder:o.substr(l[0].length)}:null},uprightEntities:/^(?:pH|pOH|pC|pK|iPr|iBu)(?=$|[^a-zA-Z])/,"/":/^\s*(\/)\s*/,"//":/^\s*(\/\/)\s*/,"*":/^\s*[*.]\s*/},findObserveGroups:function(o,l,n,i,u,p,w,k,b,N){const O=function(W,U){if(typeof U=="string")return W.indexOf(U)!==0?null:U;const E=W.match(U);return E?E[0]:null},B=function(W,U,E){let A=0;for(;U<W.length;){const $=W.charAt(U),J=O(W.substr(U),E);if(J!==null&&A===0)return{endMatchBegin:U,endMatchEnd:U+J.length};if($==="{")A++;else if($==="}"){if(A===0)throw["ExtraCloseMissingOpen","Extra close brace or missing open brace"];A--}U++}return A>0,null};let V=O(o,l);if(V===null||(o=o.substr(V.length),V=O(o,n),V===null))return null;const G=B(o,V.length,i||u);if(G===null)return null;const _=o.substring(0,i?G.endMatchEnd:G.endMatchBegin);if(!(p||w))return{match_:_,remainder:o.substr(G.endMatchEnd)};const M=this.findObserveGroups(o.substr(G.endMatchEnd),p,w,k,b);if(M===null)return null;const oe=[_,M.match_];return{match_:N?oe.join(""):oe,remainder:M.remainder}},match_:function(o,l){const n=H.patterns.patterns[o];if(n===void 0)throw["MhchemBugP","mhchem bug P. Please report. ("+o+")"];if(typeof n=="function")return H.patterns.patterns[o](l);{const i=l.match(n);if(i){let u;return i[2]?u=[i[1],i[2]]:i[1]?u=i[1]:u=i[0],{match_:u,remainder:l.substr(i[0].length)}}return null}}},actions:{"a=":function(o,l){o.a=(o.a||"")+l},"b=":function(o,l){o.b=(o.b||"")+l},"p=":function(o,l){o.p=(o.p||"")+l},"o=":function(o,l){o.o=(o.o||"")+l},"q=":function(o,l){o.q=(o.q||"")+l},"d=":function(o,l){o.d=(o.d||"")+l},"rm=":function(o,l){o.rm=(o.rm||"")+l},"text=":function(o,l){o.text_=(o.text_||"")+l},insert:function(o,l,n){return{type_:n}},"insert+p1":function(o,l,n){return{type_:n,p1:l}},"insert+p1+p2":function(o,l,n){return{type_:n,p1:l[0],p2:l[1]}},copy:function(o,l){return l},rm:function(o,l){return{type_:"rm",p1:l||""}},text:function(o,l){return H.go(l,"text")},"{text}":function(o,l){const n=["{"];return H.concatArray(n,H.go(l,"text")),n.push("}"),n},"tex-math":function(o,l){return H.go(l,"tex-math")},"tex-math tight":function(o,l){return H.go(l,"tex-math tight")},bond:function(o,l,n){return{type_:"bond",kind_:n||l}},"color0-output":function(o,l){return{type_:"color0",color:l[0]}},ce:function(o,l){return H.go(l)},"1/2":function(o,l){const n=[];l.match(/^[+\-]/)&&(n.push(l.substr(0,1)),l=l.substr(1));const i=l.match(/^([0-9]+|\$[a-z]\$|[a-z])\/([0-9]+)(\$[a-z]\$|[a-z])?$/);return i[1]=i[1].replace(/\$/g,""),n.push({type_:"frac",p1:i[1],p2:i[2]}),i[3]&&(i[3]=i[3].replace(/\$/g,""),n.push({type_:"tex-math",p1:i[3]})),n},"9,9":function(o,l){return H.go(l,"9,9")}},createTransitions:function(o){let l,n,i,u;const p={};for(l in o)for(n in o[l])for(i=n.split("|"),o[l][n].stateArray=i,u=0;u<i.length;u++)p[i[u]]=[];for(l in o)for(n in o[l])for(i=o[l][n].stateArray||[],u=0;u<i.length;u++){const w=o[l][n];if(w.action_){w.action_=[].concat(w.action_);for(let b=0;b<w.action_.length;b++)typeof w.action_[b]=="string"&&(w.action_[b]={type_:w.action_[b]})}else w.action_=[];const k=l.split("|");for(let b=0;b<k.length;b++)if(i[u]==="*")for(const N in p)p[N].push({pattern:k[b],task:w});else p[i[u]].push({pattern:k[b],task:w})}return p},stateMachines:{}};H.stateMachines={ce:{transitions:H.createTransitions({empty:{"*":{action_:"output"}},else:{"0|1|2":{action_:"beginsWithBond=false",revisit:!0,toContinue:!0}},oxidation$:{0:{action_:"oxidation-output"}},CMT:{r:{action_:"rdt=",nextState:"rt"},rd:{action_:"rqt=",nextState:"rdt"}},arrowUpDown:{"0|1|2|as":{action_:["sb=false","output","operator"],nextState:"1"}},uprightEntities:{"0|1|2":{action_:["o=","output"],nextState:"1"}},orbital:{"0|1|2|3":{action_:"o=",nextState:"o"}},"->":{"0|1|2|3":{action_:"r=",nextState:"r"},"a|as":{action_:["output","r="],nextState:"r"},"*":{action_:["output","r="],nextState:"r"}},"+":{o:{action_:"d= kv",nextState:"d"},"d|D":{action_:"d=",nextState:"d"},q:{action_:"d=",nextState:"qd"},"qd|qD":{action_:"d=",nextState:"qd"},dq:{action_:["output","d="],nextState:"d"},3:{action_:["sb=false","output","operator"],nextState:"0"}},amount:{"0|2":{action_:"a=",nextState:"a"}},"pm-operator":{"0|1|2|a|as":{action_:["sb=false","output",{type_:"operator",option:"\\pm"}],nextState:"0"}},operator:{"0|1|2|a|as":{action_:["sb=false","output","operator"],nextState:"0"}},"-$":{"o|q":{action_:["charge or bond","output"],nextState:"qd"},d:{action_:"d=",nextState:"d"},D:{action_:["output",{type_:"bond",option:"-"}],nextState:"3"},q:{action_:"d=",nextState:"qd"},qd:{action_:"d=",nextState:"qd"},"qD|dq":{action_:["output",{type_:"bond",option:"-"}],nextState:"3"}},"-9":{"3|o":{action_:["output",{type_:"insert",option:"hyphen"}],nextState:"3"}},"- orbital overlap":{o:{action_:["output",{type_:"insert",option:"hyphen"}],nextState:"2"},d:{action_:["output",{type_:"insert",option:"hyphen"}],nextState:"2"}},"-":{"0|1|2":{action_:[{type_:"output",option:1},"beginsWithBond=true",{type_:"bond",option:"-"}],nextState:"3"},3:{action_:{type_:"bond",option:"-"}},a:{action_:["output",{type_:"insert",option:"hyphen"}],nextState:"2"},as:{action_:[{type_:"output",option:2},{type_:"bond",option:"-"}],nextState:"3"},b:{action_:"b="},o:{action_:{type_:"- after o/d",option:!1},nextState:"2"},q:{action_:{type_:"- after o/d",option:!1},nextState:"2"},"d|qd|dq":{action_:{type_:"- after o/d",option:!0},nextState:"2"},"D|qD|p":{action_:["output",{type_:"bond",option:"-"}],nextState:"3"}},amount2:{"1|3":{action_:"a=",nextState:"a"}},letters:{"0|1|2|3|a|as|b|p|bp|o":{action_:"o=",nextState:"o"},"q|dq":{action_:["output","o="],nextState:"o"},"d|D|qd|qD":{action_:"o after d",nextState:"o"}},digits:{o:{action_:"q=",nextState:"q"},"d|D":{action_:"q=",nextState:"dq"},q:{action_:["output","o="],nextState:"o"},a:{action_:"o=",nextState:"o"}},"space A":{"b|p|bp":{}},space:{a:{nextState:"as"},0:{action_:"sb=false"},"1|2":{action_:"sb=true"},"r|rt|rd|rdt|rdq":{action_:"output",nextState:"0"},"*":{action_:["output","sb=true"],nextState:"1"}},"1st-level escape":{"1|2":{action_:["output",{type_:"insert+p1",option:"1st-level escape"}]},"*":{action_:["output",{type_:"insert+p1",option:"1st-level escape"}],nextState:"0"}},"[(...)]":{"r|rt":{action_:"rd=",nextState:"rd"},"rd|rdt":{action_:"rq=",nextState:"rdq"}},"...":{"o|d|D|dq|qd|qD":{action_:["output",{type_:"bond",option:"..."}],nextState:"3"},"*":{action_:[{type_:"output",option:1},{type_:"insert",option:"ellipsis"}],nextState:"1"}},". |* ":{"*":{action_:["output",{type_:"insert",option:"addition compound"}],nextState:"1"}},"state of aggregation $":{"*":{action_:["output","state of aggregation"],nextState:"1"}},"{[(":{"a|as|o":{action_:["o=","output","parenthesisLevel++"],nextState:"2"},"0|1|2|3":{action_:["o=","output","parenthesisLevel++"],nextState:"2"},"*":{action_:["output","o=","output","parenthesisLevel++"],nextState:"2"}},")]}":{"0|1|2|3|b|p|bp|o":{action_:["o=","parenthesisLevel--"],nextState:"o"},"a|as|d|D|q|qd|qD|dq":{action_:["output","o=","parenthesisLevel--"],nextState:"o"}},", ":{"*":{action_:["output","comma"],nextState:"0"}},"^_":{"*":{}},"^{(...)}|^($...$)":{"0|1|2|as":{action_:"b=",nextState:"b"},p:{action_:"b=",nextState:"bp"},"3|o":{action_:"d= kv",nextState:"D"},q:{action_:"d=",nextState:"qD"},"d|D|qd|qD|dq":{action_:["output","d="],nextState:"D"}},"^a|^\\x{}{}|^\\x{}|^\\x|'":{"0|1|2|as":{action_:"b=",nextState:"b"},p:{action_:"b=",nextState:"bp"},"3|o":{action_:"d= kv",nextState:"d"},q:{action_:"d=",nextState:"qd"},"d|qd|D|qD":{action_:"d="},dq:{action_:["output","d="],nextState:"d"}},"_{(state of aggregation)}$":{"d|D|q|qd|qD|dq":{action_:["output","q="],nextState:"q"}},"_{(...)}|_($...$)|_9|_\\x{}{}|_\\x{}|_\\x":{"0|1|2|as":{action_:"p=",nextState:"p"},b:{action_:"p=",nextState:"bp"},"3|o":{action_:"q=",nextState:"q"},"d|D":{action_:"q=",nextState:"dq"},"q|qd|qD|dq":{action_:["output","q="],nextState:"q"}},"=<>":{"0|1|2|3|a|as|o|q|d|D|qd|qD|dq":{action_:[{type_:"output",option:2},"bond"],nextState:"3"}},"#":{"0|1|2|3|a|as|o":{action_:[{type_:"output",option:2},{type_:"bond",option:"#"}],nextState:"3"}},"{}":{"*":{action_:{type_:"output",option:1},nextState:"1"}},"{...}":{"0|1|2|3|a|as|b|p|bp":{action_:"o=",nextState:"o"},"o|d|D|q|qd|qD|dq":{action_:["output","o="],nextState:"o"}},"$...$":{a:{action_:"a="},"0|1|2|3|as|b|p|bp|o":{action_:"o=",nextState:"o"},"as|o":{action_:"o="},"q|d|D|qd|qD|dq":{action_:["output","o="],nextState:"o"}},"\\bond{(...)}":{"*":{action_:[{type_:"output",option:2},"bond"],nextState:"3"}},"\\frac{(...)}":{"*":{action_:[{type_:"output",option:1},"frac-output"],nextState:"3"}},"\\overset{(...)}":{"*":{action_:[{type_:"output",option:2},"overset-output"],nextState:"3"}},"\\underset{(...)}":{"*":{action_:[{type_:"output",option:2},"underset-output"],nextState:"3"}},"\\underbrace{(...)}":{"*":{action_:[{type_:"output",option:2},"underbrace-output"],nextState:"3"}},"\\color{(...)}{(...)}1|\\color(...){(...)}2":{"*":{action_:[{type_:"output",option:2},"color-output"],nextState:"3"}},"\\color{(...)}0":{"*":{action_:[{type_:"output",option:2},"color0-output"]}},"\\ce{(...)}":{"*":{action_:[{type_:"output",option:2},"ce"],nextState:"3"}},"\\,":{"*":{action_:[{type_:"output",option:1},"copy"],nextState:"1"}},"\\x{}{}|\\x{}|\\x":{"0|1|2|3|a|as|b|p|bp|o|c0":{action_:["o=","output"],nextState:"3"},"*":{action_:["output","o=","output"],nextState:"3"}},others:{"*":{action_:[{type_:"output",option:1},"copy"],nextState:"3"}},else2:{a:{action_:"a to o",nextState:"o",revisit:!0},as:{action_:["output","sb=true"],nextState:"1",revisit:!0},"r|rt|rd|rdt|rdq":{action_:["output"],nextState:"0",revisit:!0},"*":{action_:["output","copy"],nextState:"3"}}}),actions:{"o after d":function(o,l){let n;if((o.d||"").match(/^[0-9]+$/)){const i=o.d;o.d=void 0,n=this.output(o),o.b=i}else n=this.output(o);return H.actions["o="](o,l),n},"d= kv":function(o,l){o.d=l,o.dType="kv"},"charge or bond":function(o,l){if(o.beginsWithBond){const n=[];return H.concatArray(n,this.output(o)),H.concatArray(n,H.actions.bond(o,l,"-")),n}o.d=l},"- after o/d":function(o,l,n){let i=H.patterns.match_("orbital",o.o||"");const u=H.patterns.match_("one lowercase greek letter $",o.o||""),p=H.patterns.match_("one lowercase latin letter $",o.o||""),w=H.patterns.match_("$one lowercase latin letter$ $",o.o||""),k=l==="-"&&(i&&i.remainder===""||u||p||w);k&&!o.a&&!o.b&&!o.p&&!o.d&&!o.q&&!i&&p&&(o.o="$"+o.o+"$");const b=[];return k?(H.concatArray(b,this.output(o)),b.push({type_:"hyphen"})):(i=H.patterns.match_("digits",o.d||""),n&&i&&i.remainder===""?(H.concatArray(b,H.actions["d="](o,l)),H.concatArray(b,this.output(o))):(H.concatArray(b,this.output(o)),H.concatArray(b,H.actions.bond(o,l,"-")))),b},"a to o":function(o){o.o=o.a,o.a=void 0},"sb=true":function(o){o.sb=!0},"sb=false":function(o){o.sb=!1},"beginsWithBond=true":function(o){o.beginsWithBond=!0},"beginsWithBond=false":function(o){o.beginsWithBond=!1},"parenthesisLevel++":function(o){o.parenthesisLevel++},"parenthesisLevel--":function(o){o.parenthesisLevel--},"state of aggregation":function(o,l){return{type_:"state of aggregation",p1:H.go(l,"o")}},comma:function(o,l){const n=l.replace(/\s*$/,"");return n!==l&&o.parenthesisLevel===0?{type_:"comma enumeration L",p1:n}:{type_:"comma enumeration M",p1:n}},output:function(o,l,n){let i;if(!o.r)i=[],!o.a&&!o.b&&!o.p&&!o.o&&!o.q&&!o.d&&!n||(o.sb&&i.push({type_:"entitySkip"}),!o.o&&!o.q&&!o.d&&!o.b&&!o.p&&n!==2?(o.o=o.a,o.a=void 0):!o.o&&!o.q&&!o.d&&(o.b||o.p)?(o.o=o.a,o.d=o.b,o.q=o.p,o.a=o.b=o.p=void 0):o.o&&o.dType==="kv"&&H.patterns.match_("d-oxidation$",o.d||"")?o.dType="oxidation":o.o&&o.dType==="kv"&&!o.q&&(o.dType=void 0),i.push({type_:"chemfive",a:H.go(o.a,"a"),b:H.go(o.b,"bd"),p:H.go(o.p,"pq"),o:H.go(o.o,"o"),q:H.go(o.q,"pq"),d:H.go(o.d,o.dType==="oxidation"?"oxidation":"bd"),dType:o.dType}));else{let u;o.rdt==="M"?u=H.go(o.rd,"tex-math"):o.rdt==="T"?u=[{type_:"text",p1:o.rd||""}]:u=H.go(o.rd);let p;o.rqt==="M"?p=H.go(o.rq,"tex-math"):o.rqt==="T"?p=[{type_:"text",p1:o.rq||""}]:p=H.go(o.rq),i={type_:"arrow",r:o.r,rd:u,rq:p}}for(const u in o)u!=="parenthesisLevel"&&u!=="beginsWithBond"&&delete o[u];return i},"oxidation-output":function(o,l){const n=["{"];return H.concatArray(n,H.go(l,"oxidation")),n.push("}"),n},"frac-output":function(o,l){return{type_:"frac-ce",p1:H.go(l[0]),p2:H.go(l[1])}},"overset-output":function(o,l){return{type_:"overset",p1:H.go(l[0]),p2:H.go(l[1])}},"underset-output":function(o,l){return{type_:"underset",p1:H.go(l[0]),p2:H.go(l[1])}},"underbrace-output":function(o,l){return{type_:"underbrace",p1:H.go(l[0]),p2:H.go(l[1])}},"color-output":function(o,l){return{type_:"color",color1:l[0],color2:H.go(l[1])}},"r=":function(o,l){o.r=l},"rdt=":function(o,l){o.rdt=l},"rd=":function(o,l){o.rd=l},"rqt=":function(o,l){o.rqt=l},"rq=":function(o,l){o.rq=l},operator:function(o,l,n){return{type_:"operator",kind_:n||l}}}},a:{transitions:H.createTransitions({empty:{"*":{}},"1/2$":{0:{action_:"1/2"}},else:{0:{nextState:"1",revisit:!0}},"$(...)$":{"*":{action_:"tex-math tight",nextState:"1"}},",":{"*":{action_:{type_:"insert",option:"commaDecimal"}}},else2:{"*":{action_:"copy"}}}),actions:{}},o:{transitions:H.createTransitions({empty:{"*":{}},"1/2$":{0:{action_:"1/2"}},else:{0:{nextState:"1",revisit:!0}},letters:{"*":{action_:"rm"}},"\\ca":{"*":{action_:{type_:"insert",option:"circa"}}},"\\x{}{}|\\x{}|\\x":{"*":{action_:"copy"}},"${(...)}$|$(...)$":{"*":{action_:"tex-math"}},"{(...)}":{"*":{action_:"{text}"}},else2:{"*":{action_:"copy"}}}),actions:{}},text:{transitions:H.createTransitions({empty:{"*":{action_:"output"}},"{...}":{"*":{action_:"text="}},"${(...)}$|$(...)$":{"*":{action_:"tex-math"}},"\\greek":{"*":{action_:["output","rm"]}},"\\,|\\x{}{}|\\x{}|\\x":{"*":{action_:["output","copy"]}},else:{"*":{action_:"text="}}}),actions:{output:function(o){if(o.text_){const l={type_:"text",p1:o.text_};for(const n in o)delete o[n];return l}}}},pq:{transitions:H.createTransitions({empty:{"*":{}},"state of aggregation $":{"*":{action_:"state of aggregation"}},i$:{0:{nextState:"!f",revisit:!0}},"(KV letters),":{0:{action_:"rm",nextState:"0"}},formula$:{0:{nextState:"f",revisit:!0}},"1/2$":{0:{action_:"1/2"}},else:{0:{nextState:"!f",revisit:!0}},"${(...)}$|$(...)$":{"*":{action_:"tex-math"}},"{(...)}":{"*":{action_:"text"}},"a-z":{f:{action_:"tex-math"}},letters:{"*":{action_:"rm"}},"-9.,9":{"*":{action_:"9,9"}},",":{"*":{action_:{type_:"insert+p1",option:"comma enumeration S"}}},"\\color{(...)}{(...)}1|\\color(...){(...)}2":{"*":{action_:"color-output"}},"\\color{(...)}0":{"*":{action_:"color0-output"}},"\\ce{(...)}":{"*":{action_:"ce"}},"\\,|\\x{}{}|\\x{}|\\x":{"*":{action_:"copy"}},else2:{"*":{action_:"copy"}}}),actions:{"state of aggregation":function(o,l){return{type_:"state of aggregation subscript",p1:H.go(l,"o")}},"color-output":function(o,l){return{type_:"color",color1:l[0],color2:H.go(l[1],"pq")}}}},bd:{transitions:H.createTransitions({empty:{"*":{}},x$:{0:{nextState:"!f",revisit:!0}},formula$:{0:{nextState:"f",revisit:!0}},else:{0:{nextState:"!f",revisit:!0}},"-9.,9 no missing 0":{"*":{action_:"9,9"}},".":{"*":{action_:{type_:"insert",option:"electron dot"}}},"a-z":{f:{action_:"tex-math"}},x:{"*":{action_:{type_:"insert",option:"KV x"}}},letters:{"*":{action_:"rm"}},"'":{"*":{action_:{type_:"insert",option:"prime"}}},"${(...)}$|$(...)$":{"*":{action_:"tex-math"}},"{(...)}":{"*":{action_:"text"}},"\\color{(...)}{(...)}1|\\color(...){(...)}2":{"*":{action_:"color-output"}},"\\color{(...)}0":{"*":{action_:"color0-output"}},"\\ce{(...)}":{"*":{action_:"ce"}},"\\,|\\x{}{}|\\x{}|\\x":{"*":{action_:"copy"}},else2:{"*":{action_:"copy"}}}),actions:{"color-output":function(o,l){return{type_:"color",color1:l[0],color2:H.go(l[1],"bd")}}}},oxidation:{transitions:H.createTransitions({empty:{"*":{}},"roman numeral":{"*":{action_:"roman-numeral"}},"${(...)}$|$(...)$":{"*":{action_:"tex-math"}},else:{"*":{action_:"copy"}}}),actions:{"roman-numeral":function(o,l){return{type_:"roman numeral",p1:l||""}}}},"tex-math":{transitions:H.createTransitions({empty:{"*":{action_:"output"}},"\\ce{(...)}":{"*":{action_:["output","ce"]}},"{...}|\\,|\\x{}{}|\\x{}|\\x":{"*":{action_:"o="}},else:{"*":{action_:"o="}}}),actions:{output:function(o){if(o.o){const l={type_:"tex-math",p1:o.o};for(const n in o)delete o[n];return l}}}},"tex-math tight":{transitions:H.createTransitions({empty:{"*":{action_:"output"}},"\\ce{(...)}":{"*":{action_:["output","ce"]}},"{...}|\\,|\\x{}{}|\\x{}|\\x":{"*":{action_:"o="}},"-|+":{"*":{action_:"tight operator"}},else:{"*":{action_:"o="}}}),actions:{"tight operator":function(o,l){o.o=(o.o||"")+"{"+l+"}"},output:function(o){if(o.o){const l={type_:"tex-math",p1:o.o};for(const n in o)delete o[n];return l}}}},"9,9":{transitions:H.createTransitions({empty:{"*":{}},",":{"*":{action_:"comma"}},else:{"*":{action_:"copy"}}}),actions:{comma:function(){return{type_:"commaDecimal"}}}},pu:{transitions:H.createTransitions({empty:{"*":{action_:"output"}},space$:{"*":{action_:["output","space"]}},"{[(|)]}":{"0|a":{action_:"copy"}},"(-)(9)^(-9)":{0:{action_:"number^",nextState:"a"}},"(-)(9.,9)(e)(99)":{0:{action_:"enumber",nextState:"a"}},space:{"0|a":{}},"pm-operator":{"0|a":{action_:{type_:"operator",option:"\\pm"},nextState:"0"}},operator:{"0|a":{action_:"copy",nextState:"0"}},"//":{d:{action_:"o=",nextState:"/"}},"/":{d:{action_:"o=",nextState:"/"}},"{...}|else":{"0|d":{action_:"d=",nextState:"d"},a:{action_:["space","d="],nextState:"d"},"/|q":{action_:"q=",nextState:"q"}}}),actions:{enumber:function(o,l){const n=[];return l[0]==="+-"||l[0]==="+/-"?n.push("\\pm "):l[0]&&n.push(l[0]),l[1]&&(H.concatArray(n,H.go(l[1],"pu-9,9")),l[2]&&(l[2].match(/[,.]/)?H.concatArray(n,H.go(l[2],"pu-9,9")):n.push(l[2])),l[3]=l[4]||l[3],l[3]&&(l[3]=l[3].trim(),l[3]==="e"||l[3].substr(0,1)==="*"?n.push({type_:"cdot"}):n.push({type_:"times"}))),l[3]&&n.push("10^{"+l[5]+"}"),n},"number^":function(o,l){const n=[];return l[0]==="+-"||l[0]==="+/-"?n.push("\\pm "):l[0]&&n.push(l[0]),H.concatArray(n,H.go(l[1],"pu-9,9")),n.push("^{"+l[2]+"}"),n},operator:function(o,l,n){return{type_:"operator",kind_:n||l}},space:function(){return{type_:"pu-space-1"}},output:function(o){let l;const n=H.patterns.match_("{(...)}",o.d||"");n&&n.remainder===""&&(o.d=n.match_);const i=H.patterns.match_("{(...)}",o.q||"");if(i&&i.remainder===""&&(o.q=i.match_),o.d&&(o.d=o.d.replace(/\u00B0C|\^oC|\^{o}C/g,"{}^{\\circ}C"),o.d=o.d.replace(/\u00B0F|\^oF|\^{o}F/g,"{}^{\\circ}F")),o.q){o.q=o.q.replace(/\u00B0C|\^oC|\^{o}C/g,"{}^{\\circ}C"),o.q=o.q.replace(/\u00B0F|\^oF|\^{o}F/g,"{}^{\\circ}F");const u={d:H.go(o.d,"pu"),q:H.go(o.q,"pu")};o.o==="//"?l={type_:"pu-frac",p1:u.d,p2:u.q}:(l=u.d,u.d.length>1||u.q.length>1?l.push({type_:" / "}):l.push({type_:"/"}),H.concatArray(l,u.q))}else l=H.go(o.d,"pu-2");for(const u in o)delete o[u];return l}}},"pu-2":{transitions:H.createTransitions({empty:{"*":{action_:"output"}},"*":{"*":{action_:["output","cdot"],nextState:"0"}},"\\x":{"*":{action_:"rm="}},space:{"*":{action_:["output","space"],nextState:"0"}},"^{(...)}|^(-1)":{1:{action_:"^(-1)"}},"-9.,9":{0:{action_:"rm=",nextState:"0"},1:{action_:"^(-1)",nextState:"0"}},"{...}|else":{"*":{action_:"rm=",nextState:"1"}}}),actions:{cdot:function(){return{type_:"tight cdot"}},"^(-1)":function(o,l){o.rm+="^{"+l+"}"},space:function(){return{type_:"pu-space-2"}},output:function(o){let l=[];if(o.rm){const n=H.patterns.match_("{(...)}",o.rm||"");n&&n.remainder===""?l=H.go(n.match_,"pu"):l={type_:"rm",p1:o.rm}}for(const n in o)delete o[n];return l}}},"pu-9,9":{transitions:H.createTransitions({empty:{0:{action_:"output-0"},o:{action_:"output-o"}},",":{0:{action_:["output-0","comma"],nextState:"o"}},".":{0:{action_:["output-0","copy"],nextState:"o"}},else:{"*":{action_:"text="}}}),actions:{comma:function(){return{type_:"commaDecimal"}},"output-0":function(o){const l=[];if(o.text_=o.text_||"",o.text_.length>4){let n=o.text_.length%3;n===0&&(n=3);for(let i=o.text_.length-3;i>0;i-=3)l.push(o.text_.substr(i,3)),l.push({type_:"1000 separator"});l.push(o.text_.substr(0,n)),l.reverse()}else l.push(o.text_);for(const n in o)delete o[n];return l},"output-o":function(o){const l=[];if(o.text_=o.text_||"",o.text_.length>4){const i=o.text_.length-3;for(var n=0;n<i;n+=3)l.push(o.text_.substr(n,3)),l.push({type_:"1000 separator"});l.push(o.text_.substr(n))}else l.push(o.text_);for(const i in o)delete o[i];return l}}}};var _e={go:function(o,l){if(!o)return"";let n="",i=!1;for(let u=0;u<o.length;u++){const p=o[u];typeof p=="string"?n+=p:(n+=_e._go2(p),p.type_==="1st-level escape"&&(i=!0))}return!l&&!i&&n&&(n="{"+n+"}"),n},_goInner:function(o){return o&&_e.go(o,!0)},_go2:function(o){let l;switch(o.type_){case"chemfive":l="";var n={a:_e._goInner(o.a),b:_e._goInner(o.b),p:_e._goInner(o.p),o:_e._goInner(o.o),q:_e._goInner(o.q),d:_e._goInner(o.d)};n.a&&(n.a.match(/^[+\-]/)&&(n.a="{"+n.a+"}"),l+=n.a+"\\,"),(n.b||n.p)&&(l+="{\\vphantom{X}}",l+="^{\\hphantom{"+(n.b||"")+"}}_{\\hphantom{"+(n.p||"")+"}}",l+="{\\vphantom{X}}",l+="^{\\smash[t]{\\vphantom{2}}\\mathllap{"+(n.b||"")+"}}",l+="_{\\vphantom{2}\\mathllap{\\smash[t]{"+(n.p||"")+"}}}"),n.o&&(n.o.match(/^[+\-]/)&&(n.o="{"+n.o+"}"),l+=n.o),o.dType==="kv"?((n.d||n.q)&&(l+="{\\vphantom{X}}"),n.d&&(l+="^{"+n.d+"}"),n.q&&(l+="_{\\smash[t]{"+n.q+"}}")):o.dType==="oxidation"?(n.d&&(l+="{\\vphantom{X}}",l+="^{"+n.d+"}"),n.q&&(l+="{\\vphantom{X}}",l+="_{\\smash[t]{"+n.q+"}}")):(n.q&&(l+="{\\vphantom{X}}",l+="_{\\smash[t]{"+n.q+"}}"),n.d&&(l+="{\\vphantom{X}}",l+="^{"+n.d+"}"));break;case"rm":l="\\mathrm{"+o.p1+"}";break;case"text":o.p1.match(/[\^_]/)?(o.p1=o.p1.replace(" ","~").replace("-","\\text{-}"),l="\\mathrm{"+o.p1+"}"):l="\\text{"+o.p1+"}";break;case"roman numeral":l="\\mathrm{"+o.p1+"}";break;case"state of aggregation":l="\\mskip2mu "+_e._goInner(o.p1);break;case"state of aggregation subscript":l="\\mskip1mu "+_e._goInner(o.p1);break;case"bond":if(l=_e._getBond(o.kind_),!l)throw["MhchemErrorBond","mhchem Error. Unknown bond type ("+o.kind_+")"];break;case"frac":var i="\\frac{"+o.p1+"}{"+o.p2+"}";l="\\mathchoice{\\textstyle"+i+"}{"+i+"}{"+i+"}{"+i+"}";break;case"pu-frac":var u="\\frac{"+_e._goInner(o.p1)+"}{"+_e._goInner(o.p2)+"}";l="\\mathchoice{\\textstyle"+u+"}{"+u+"}{"+u+"}{"+u+"}";break;case"tex-math":l=o.p1+" ";break;case"frac-ce":l="\\frac{"+_e._goInner(o.p1)+"}{"+_e._goInner(o.p2)+"}";break;case"overset":l="\\overset{"+_e._goInner(o.p1)+"}{"+_e._goInner(o.p2)+"}";break;case"underset":l="\\underset{"+_e._goInner(o.p1)+"}{"+_e._goInner(o.p2)+"}";break;case"underbrace":l="\\underbrace{"+_e._goInner(o.p1)+"}_{"+_e._goInner(o.p2)+"}";break;case"color":l="{\\color{"+o.color1+"}{"+_e._goInner(o.color2)+"}}";break;case"color0":l="\\color{"+o.color+"}";break;case"arrow":var p={rd:_e._goInner(o.rd),rq:_e._goInner(o.rq)},w="\\x"+_e._getArrow(o.r);p.rq&&(w+="[{"+p.rq+"}]"),p.rd?w+="{"+p.rd+"}":w+="{}",l=w;break;case"operator":l=_e._getOperator(o.kind_);break;case"1st-level escape":l=o.p1+" ";break;case"space":l=" ";break;case"entitySkip":l="~";break;case"pu-space-1":l="~";break;case"pu-space-2":l="\\mkern3mu ";break;case"1000 separator":l="\\mkern2mu ";break;case"commaDecimal":l="{,}";break;case"comma enumeration L":l="{"+o.p1+"}\\mkern6mu ";break;case"comma enumeration M":l="{"+o.p1+"}\\mkern3mu ";break;case"comma enumeration S":l="{"+o.p1+"}\\mkern1mu ";break;case"hyphen":l="\\text{-}";break;case"addition compound":l="\\,{\\cdot}\\,";break;case"electron dot":l="\\mkern1mu \\bullet\\mkern1mu ";break;case"KV x":l="{\\times}";break;case"prime":l="\\prime ";break;case"cdot":l="\\cdot ";break;case"tight cdot":l="\\mkern1mu{\\cdot}\\mkern1mu ";break;case"times":l="\\times ";break;case"circa":l="{\\sim}";break;case"^":l="uparrow";break;case"v":l="downarrow";break;case"ellipsis":l="\\ldots ";break;case"/":l="/";break;case" / ":l="\\,/\\,";break;default:throw["MhchemBugT","mhchem bug T. Please report."]}return l},_getArrow:function(o){switch(o){case"->":return"rightarrow";case"→":return"rightarrow";case"⟶":return"rightarrow";case"<-":return"leftarrow";case"<->":return"leftrightarrow";case"<-->":return"rightleftarrows";case"<=>":return"rightleftharpoons";case"⇌":return"rightleftharpoons";case"<=>>":return"rightequilibrium";case"<<=>":return"leftequilibrium";default:throw["MhchemBugT","mhchem bug T. Please report."]}},_getBond:function(o){switch(o){case"-":return"{-}";case"1":return"{-}";case"=":return"{=}";case"2":return"{=}";case"#":return"{\\equiv}";case"3":return"{\\equiv}";case"~":return"{\\tripledash}";case"~-":return"{\\mathrlap{\\raisebox{-.1em}{$-$}}\\raisebox{.1em}{$\\tripledash$}}";case"~=":return"{\\mathrlap{\\raisebox{-.2em}{$-$}}\\mathrlap{\\raisebox{.2em}{$\\tripledash$}}-}";case"~--":return"{\\mathrlap{\\raisebox{-.2em}{$-$}}\\mathrlap{\\raisebox{.2em}{$\\tripledash$}}-}";case"-~-":return"{\\mathrlap{\\raisebox{-.2em}{$-$}}\\mathrlap{\\raisebox{.2em}{$-$}}\\tripledash}";case"...":return"{{\\cdot}{\\cdot}{\\cdot}}";case"....":return"{{\\cdot}{\\cdot}{\\cdot}{\\cdot}}";case"->":return"{\\rightarrow}";case"<-":return"{\\leftarrow}";case"<":return"{<}";case">":return"{>}";default:throw["MhchemBugT","mhchem bug T. Please report."]}},_getOperator:function(o){switch(o){case"+":return" {}+{} ";case"-":return" {}-{} ";case"=":return" {}={} ";case"<":return" {}<{} ";case">":return" {}>{} ";case"<<":return" {}\\ll{} ";case">>":return" {}\\gg{} ";case"\\pm":return" {}\\pm{} ";case"\\approx":return" {}\\approx{} ";case"$\\approx$":return" {}\\approx{} ";case"v":return" \\downarrow{} ";case"(v)":return" \\downarrow{} ";case"^":return" \\uparrow{} ";case"(^)":return" \\uparrow{} ";default:throw["MhchemBugT","mhchem bug T. Please report."]}}};bi.__defineMacro("\\ce",function(o){return zu(o.consumeArgs(1)[0],"ce")});bi.__defineMacro("\\pu",function(o){return zu(o.consumeArgs(1)[0],"pu")});bi.__defineMacro("\\tripledash","{\\vphantom{-}\\raisebox{2.56mu}{$\\mkern2mu\\tiny\\text{-}\\mkern1mu\\text{-}\\mkern1mu\\text{-}\\mkern2mu$}}");class Ho extends F.Component{constructor(l){super(l),this.state={dragHover:!1},this.handleDrop=this.handleDrop.bind(this),this.handleDragEnd=this.handleDragEnd.bind(this),this.handleDragOver=this.handleDragOver.bind(this),this.handleDragLeave=this.handleDragLeave.bind(this),this.handleDragEnter=this.handleDragEnter.bind(this)}handleDrop(l){l.stopPropagation(),l.preventDefault(),this.setState({dragHover:!1}),this.props.onDrop(l)}handleDragEnd(){this.setState({dragHover:!1})}handleDragOver(l){l.preventDefault()}handleDragLeave(){this.setState({dragHover:!1})}handleDragEnter(l){this.setState({dragHover:this.props.shouldDragHighlight(l)})}render(){const l=this.state.dragHover?{opacity:.3}:{},{component:n,shouldDragHighlight:i,...u}=this.props;return e.jsx(n,{...u,style:Object.assign({},this.props.style,l),onDrop:this.handleDrop,onDragEnd:this.handleDragEnd,onDragOver:this.handleDragOver,onDragEnter:this.handleDragEnter,onDragLeave:this.handleDragLeave})}}x(Ho,"defaultProps",{component:"div",shouldDragHighlight:()=>!0});Ho.__docgenInfo={description:"",methods:[{name:"handleDrop",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"DragEvent",alias:"DragEvent"}}],returns:null},{name:"handleDragEnd",docblock:null,modifiers:[],params:[],returns:null},{name:"handleDragOver",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"handleDragLeave",docblock:null,modifiers:[],params:[],returns:null},{name:"handleDragEnter",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null}],displayName:"DragTarget",props:{onDrop:{required:!0,tsType:{name:"signature",type:"function",raw:"(e: DragEvent) => void",signature:{arguments:[{type:{name:"DragEvent"},name:"e"}],return:{name:"void"}}},description:""},component:{required:!1,tsType:{name:"any"},description:"",defaultValue:{value:'"div"',computed:!1}},shouldDragHighlight:{required:!1,tsType:{name:"signature",type:"function",raw:"(any) => boolean",signature:{arguments:[{name:"any"}],return:{name:"boolean"}}},description:"",defaultValue:{value:"() => true",computed:!1}},style:{required:!1,tsType:{name:"any"},description:""},children:{required:!1,tsType:{name:"any"},description:""},className:{required:!1,tsType:{name:"string"},description:""}}};const Ts=o=>{const l=hc(o);return gc(l)};class _u extends F.Component{constructor(n){super(n);x(this,"widget");x(this,"_toggleWidget",n=>{n.preventDefault(),this.setState({showWidget:!this.state.showWidget})});x(this,"_handleWidgetChange",(n,i,u)=>{var w;const p={...this.state.widgetInfo,options:{...this.state.widgetInfo.options,...((w=this.widget.current)==null?void 0:w.serialize())??{},...n}};this.props.onChange(p,i,u)});x(this,"_setStatic",n=>{const i={...this.state.widgetInfo,static:n};this.props.onChange(i)});x(this,"_handleAlignmentChange",n=>{const i=n.currentTarget.value,u=Object.assign({},this.state.widgetInfo);u.alignment=i,this.props.onChange(u)});x(this,"getSaveWarnings",()=>{var i;const n=(i=this.widget.current)==null?void 0:i.getSaveWarnings;return n?n():[]});x(this,"serialize",()=>{const n=this.state.widgetInfo;return{type:n.type,alignment:n.alignment,static:n.static,graded:n.graded,options:this.widget.current.serialize(),version:n.version}});this.state={showWidget:n.widgetIsOpen??!0,widgetInfo:Ts(n)},this.widget=F.createRef()}UNSAFE_componentWillReceiveProps(n){this.setState({widgetInfo:Ts(n)}),n.widgetIsOpen!=null&&n.widgetIsOpen!==this.props.widgetIsOpen&&this.setState({showWidget:n.widgetIsOpen})}render(){const n=this.state.widgetInfo,i=Po(n.type);let u;this.props.apiOptions.showAlignmentOptions?u=cc(n.type):u=["default"];const p=pc(n.type);return e.jsxs("div",{className:"perseus-widget-editor",children:[e.jsxs("div",{className:"perseus-widget-editor-title "+(this.state.showWidget?"open":"closed"),children:[e.jsx("div",{className:"perseus-widget-editor-title-id",children:e.jsxs(Y,{style:{display:"flex",flexDirection:"row",alignItems:"center",gap:"0.25em"},onClick:this._toggleWidget,children:[e.jsx(Ou,{isExpanded:this.state.showWidget}),e.jsx("span",{children:this.props.id})]})}),p&&e.jsx(Gp,{label:"Static",checked:!!n.static,onChange:this._setStatic}),u.length>1&&e.jsx("select",{className:"alignment",value:n.alignment,onChange:this._handleAlignmentChange,children:u.map(w=>e.jsx("option",{children:w},w))}),e.jsx(Du,{icon:pi,onClick:()=>{this.props.onRemove()},title:"Remove image widget"})]}),e.jsx("div",{className:"perseus-widget-editor-content "+(this.state.showWidget?"enter":"leave"),children:i&&e.jsx(i,{ref:this.widget,onChange:this._handleWidgetChange,static:n.static,apiOptions:this.props.apiOptions,...n.options})})]})}}function Gp(o){const{label:l,...n}=o,i=F.useId();return e.jsxs(e.Fragment,{children:[e.jsx("label",{htmlFor:i,children:l}),e.jsx(re,{size:j.xxSmall_6}),e.jsx(Mo,{id:i,...n})]})}_u.__docgenInfo={description:"",methods:[{name:"_toggleWidget",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent",alias:"React.SyntheticEvent"}}],returns:null},{name:"_handleWidgetChange",docblock:null,modifiers:[],params:[{name:"newProps",optional:!1,type:{name:"intersection",raw:`{
    // Unserialized props
    id: string;
    onChange: (
        widgetInfo: PerseusWidget,
        cb?: () => unknown,
        silent?: boolean,
    ) => unknown;
    onRemove: () => unknown;
    apiOptions: APIOptions;
    widgetIsOpen?: boolean;
} & Omit<PerseusWidget, "key">`,elements:[{name:"signature",type:"object",raw:`{
    // Unserialized props
    id: string;
    onChange: (
        widgetInfo: PerseusWidget,
        cb?: () => unknown,
        silent?: boolean,
    ) => unknown;
    onRemove: () => unknown;
    apiOptions: APIOptions;
    widgetIsOpen?: boolean;
}`,signature:{properties:[{key:"id",value:{name:"string",required:!0}},{key:"onChange",value:{name:"signature",type:"function",raw:`(
    widgetInfo: PerseusWidget,
    cb?: () => unknown,
    silent?: boolean,
) => unknown`,signature:{arguments:[{type:{name:"PerseusWidgetTypes[PerseusWidgetTypes]",raw:"PerseusWidgetTypes[keyof PerseusWidgetTypes]"},name:"widgetInfo"},{type:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}}},name:"cb"},{type:{name:"boolean"},name:"silent"}],return:{name:"unknown"}},required:!0}},{key:"onRemove",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!0}},{key:"apiOptions",value:{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`,required:!0}},{key:"widgetIsOpen",value:{name:"boolean",required:!1}}]}},{name:"Omit",elements:[{name:"PerseusWidgetTypes[PerseusWidgetTypes]",raw:"PerseusWidgetTypes[keyof PerseusWidgetTypes]"},{name:"literal",value:'"key"'}],raw:'Omit<PerseusWidget, "key">'}],alias:"WidgetEditorProps"}},{name:"cb",optional:!1,type:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}}}},{name:"silent",optional:!1,type:{name:"boolean"}}],returns:null},{name:"_setStatic",docblock:null,modifiers:[],params:[{name:"value",optional:!1,type:{name:"boolean"}}],returns:null},{name:"_handleAlignmentChange",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent<HTMLSelectElement>",elements:[{name:"HTMLSelectElement"}],alias:"React.SyntheticEvent"}}],returns:null},{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"WidgetEditor",props:{id:{required:!0,tsType:{name:"string"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:`(
    widgetInfo: PerseusWidget,
    cb?: () => unknown,
    silent?: boolean,
) => unknown`,signature:{arguments:[{type:{name:"PerseusWidgetTypes[PerseusWidgetTypes]",raw:"PerseusWidgetTypes[keyof PerseusWidgetTypes]"},name:"widgetInfo"},{type:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}}},name:"cb"},{type:{name:"boolean"},name:"silent"}],return:{name:"unknown"}}},description:""},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}}},description:""},apiOptions:{required:!0,tsType:{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},description:""},widgetIsOpen:{required:!1,tsType:{name:"boolean"},description:""}}};class Bu extends F.Component{constructor(){super(...arguments);x(this,"handleChange",n=>{const i=n.currentTarget.value;i!==""&&this.props.onChange&&this.props.onChange(i)})}shouldComponentUpdate(){return!1}render(){const n=yc(),i=R.sortBy(R.keys(n),p=>n[p].displayName);return e.jsxs("select",{value:"",onChange:this.handleChange,"data-testid":"editor__widget-select",children:[e.jsx("option",{value:"",children:"Add a widget…"}),e.jsx("option",{disabled:!0,children:"--"}),i.map(p=>e.jsx("option",{value:p,children:n[p].displayName},p))]})}}Bu.__docgenInfo={description:"",methods:[{name:"handleChange",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent<HTMLSelectElement>",elements:[{name:"HTMLSelectElement"}],alias:"React.SyntheticEvent"}}],returns:null}],displayName:"WidgetSelect",props:{onChange:{required:!1,tsType:{name:"signature",type:"function",raw:"(widgetType: string) => unknown",signature:{arguments:[{type:{name:"string"},name:"widgetType"}],return:{name:"unknown"}}},description:""}}};const Hp="[[☃ {id}]]",Vu="(\\[\\[☃ {id}\\]\\])",Er=new RegExp(Vu.replace("{id}","[a-z-]+ [0-9]+"),"g"),Up=/^\[\[([a-z-]+)$/,Kp=/(?:\n{2,}|^\n*)$/,Xp=/(\n*)$/,Yp=/^(\n*)/,ho=o=>{let l=o.toString();return l.length>=5&&(l=l.replace(/(\d)(?=(\d{3})+$)/g,"$1{,}")),l},Jp=o=>{if(!Kp.test(o)){const l=Xp.exec(o);if(l){const n=l[1];return o+`

`.slice(0,2-n.length)}}return o},Zp=o=>{const l=Yp.exec(o);if(!l)return o;const n=l[1];return`

`.slice(0,2-n.length)+o},Qp=/!\[[^\]]*\]\(([^\s)]+)[^)]*\)/g,eh=function(o,l){const n=[];for(;;){const i=o.exec(l);if(!i)break;n.push(i)}return n},nh=function(o){return eh(Qp,o).map(l=>l[1])};class Pn extends F.Component{constructor(){super(...arguments);x(this,"lastUserValue");x(this,"deferredChange");x(this,"widgetIds");x(this,"underlay",F.createRef());x(this,"textarea",F.createRef());x(this,"state",{textAreaValue:this.props.content});x(this,"_handleWidgetEditorChange",(n,i,u,p)=>{const w=Object.assign({},this.props.widgets);w[n]=Object.assign({},w[n],i),this.props.onChange({widgets:w},u,p)});x(this,"_handleWidgetEditorRemove",n=>{if(!confirm("Are you sure you want to delete this item?"))return;const i=this.textarea.current,u=new RegExp(Vu.replace("{id}",n),"gm");this.props.onChange({content:i==null?void 0:i.value.replace(u,"")})});x(this,"_sizeImages",n=>{const i=nh(n.content),u=R.pick(n.images,i),p=R.filter(i,w=>!u[w]);R.each(p,w=>{Fe.getImageSize(w,(k,b)=>{u[w]={width:k,height:b},n.onChange({images:R.clone(u)},null,!0)})})});x(this,"handleDrop",n=>{const{imageUploader:i}=this.props;let u=this.state.textAreaValue||"";const p=n.dataTransfer;if(!p||!i)return;const w=p.files;if(w.length===0){const b=p.getData("URL");if(b){const N=u+`

![](`+b+")";this.lastUserValue=this.props.content,this.props.onChange({content:N})}return}const k=this.state.textAreaValue;R(w).chain().map(function(b){if(!b.type.match("image.*"))return null;const N="☃ "+R.uniqueId("image_");return u+=`

![](`+N+")",{file:b,sentinel:N}}).reject(R.isNull).tap(()=>{this.lastUserValue=k,this.props.onChange({content:u})}).each(b=>{i(b.file,N=>{this.lastUserValue=k,this.props.onChange({content:this.state.textAreaValue.replace(b.sentinel,N)})})})});x(this,"handleChange",n=>{clearTimeout(this.deferredChange),this.setState({textAreaValue:n.currentTarget.value}),this.deferredChange=setTimeout(()=>{this.state.textAreaValue!==this.props.content&&this.props.onChange({content:this.state.textAreaValue})},this.props.apiOptions.editorChangeDelay)});x(this,"_handleKeyDown",n=>{if(n.stopPropagation(),n.key==="Tab"){const i=this.textarea.current,u=Fe.textarea.getWordBeforeCursor(i),p=u.string.toLowerCase().match(Up);if(p!=null){const w=p[1],b=xs().filter(N=>N.substring(0,w.length)===w);if(b.length===1){const N=b[0];this._addWidgetToContent(this.props.content,[u.pos.start,u.pos.end+1],N)}n.preventDefault()}}});x(this,"_maybeCopyWidgets",n=>{const i=n.currentTarget,u=i.value.substring(i.selectionStart,i.selectionEnd),p=R.map(u.match(Er),k=>Fe.rWidgetParts.exec(k)[1]),w=R.pick(this.serialize().widgets,p);localStorage.perseusLastCopiedText=u,localStorage.perseusLastCopiedWidgets=JSON.stringify(w),zo.log(`Widgets copied: ${localStorage.perseusLastCopiedWidgets}`)});x(this,"_maybePasteWidgets",n=>{const i=localStorage.perseusLastCopiedWidgets,u=localStorage.perseusLastCopiedText,p=n.originalEvent.clipboardData.getData("text");if(i&&u===p){n.preventDefault();const w=JSON.parse(i),k=this._safeWidgetNameMapping(w),b={};for(const[_,M]of Object.entries(w))b[k[_]]=M;const N=R.extend(b,this.props.widgets),O=u.replace(Er,_=>{const M=Fe.rWidgetParts.exec(_),oe=M[0],W=M[1];return oe.replace(W,k[W])}),B=n.currentTarget,V=B.selectionStart,G=this.state.textAreaValue.substr(0,V)+O+this.state.textAreaValue.substr(B.selectionEnd);this.lastUserValue=this.state.textAreaValue,this.props.onChange({content:G,widgets:N},()=>{const _=V+O.length;Fe.textarea.moveCursor(B,_)})}});x(this,"_safeWidgetNameMapping",n=>{const i=R.keys(n).map(b=>b.split(" ")),u=R.uniq(i.map(b=>b[0])),p=R.keys(this.props.widgets).map(b=>b.split(" ")),w={};R.each(u,b=>{w[b]=R.chain(p).filter(N=>N[0]===b).map(N=>+N[1]+1).max().value(),w[b]=Math.max(w[b],1)});const k={};return R.each(i,b=>{const N=b.join(" "),O=b[0];k[N]=`${O} ${w[O]}`,w[O]++}),k});x(this,"_addWidgetToContent",(n,i,u)=>{var oe;const p=R.map(n.match(Er),W=>{const U=Fe.rWidgetParts.exec(W),E=U[2],A=+U[3];return[E,A]}),w=R.reduce(p,(W,U)=>{const[E,A]=U;return E===u?Math.max(A+1,W):W},1),k=u+" "+w,b=Hp.replace("{id}",k),N=bc(u)==="block",O=n.slice(0,i[0]),B=n.slice(i[1]),V=N?Jp(O):O,G=N?Zp(B):B,_=V+b+G,M={...this.props.widgets};M[k]={options:(oe=Po(u))==null?void 0:oe.defaultProps,type:u,version:wc(u)},this.lastUserValue=this.props.content,this.props.onChange({content:_,widgets:M},()=>{this.textarea.current&&Fe.textarea.moveCursor(this.textarea.current,_.length-B.length)})});x(this,"_addWidget",n=>{const i=this.textarea.current;i&&(this._addWidgetToContent(this.props.content,[i.selectionStart,i.selectionEnd],n),i.focus())});x(this,"addTemplate",n=>{const i=n.currentTarget.value;if(i==="")return;n.currentTarget.value="";let u=this.props.content;u=u.replace(/\n*$/,`

`);let p;if(i==="table")p=`header 1 | header 2 | header 3
- | - | -
data 1 | data 2 | data 3
data 4 | data 5 | data 6
data 7 | data 8 | data 9`;else if(i==="titledTable")p=`|| **Table title** ||
header 1 | header 2 | header 3
- | - | -
data 1 | data 2 | data 3
data 4 | data 5 | data 6
data 7 | data 8 | data 9`;else if(i==="alignment")p=`$\\begin{align} 
\\\\\\\\
\\end{align}$`;else if(i==="piecewise")p=`$f(x) = \\begin{cases}
7 & \\text{if }x=1 \\\\
f(x-1)+5 & \\text{if }x > 1
\\end{cases}$`;else if(i==="allWidgets")p=xs().map(k=>`[[${Fe.snowman} ${k} 1]]`).join(`

`);else if(i in this.props.additionalTemplates)p=this.props.additionalTemplates[i];else throw new fc("Invalid template type: "+i,hu.InvalidInput,{metadata:{templateType:i}});const w=u+p;this.lastUserValue=this.props.content,this.props.onChange({content:w},this.focusAndMoveToEnd)});x(this,"getSaveWarnings",()=>{const n=R.intersection(this.widgetIds,R.keys(this.refs));return R(n).chain().map(u=>{const p=this.refs[u].getSaveWarnings,w=p?p():[];return R.map(w,k=>u+": "+k)}).flatten(!0).value()});x(this,"focus",()=>{const n=this.textarea.current;n&&n.focus()});x(this,"focusAndMoveToEnd",()=>{this.focus();const n=this.textarea.current;n&&(n.selectionStart=n.value.length,n.selectionEnd=n.value.length)});x(this,"serialize",n=>{const i={},u=R.intersection(this.widgetIds,R.keys(this.refs));return R.each(u,p=>{i[p]=this.refs[p].serialize()}),n&&n.keepDeletedWidgets&&R.chain(this.props.widgets).keys().reject(p=>R.contains(u,p)).each(p=>{i[p]=this.props.widgets[p]}),{replace:this.props.replace,content:this.props.content,images:this.props.images,widgets:i}})}componentDidMount(){this.lastUserValue=null,this._sizeImages(this.props),pu(this.textarea.current).on("copy cut",this._maybeCopyWidgets).on("paste",this._maybePasteWidgets)}UNSAFE_componentWillReceiveProps(n){this.props.content!==n.content&&this.setState({textAreaValue:n.content})}componentDidUpdate(n){const i=this.textarea.current;this.lastUserValue!=null&&i&&(i.focus(),i.value=this.lastUserValue,i.selectionStart=0,i.setSelectionRange(0,n.content.length),document.execCommand("insertText",!1,this.props.content)===!1&&(i.value=this.props.content),this.lastUserValue=null),this.props.content!==n.content&&this._sizeImages(this.props)}componentWillUnmount(){clearTimeout(this.deferredChange)}getWidgetEditor(n,i){if(Po(i))return F.createElement(_u,{...this.props.widgets[n],ref:n,id:n,key:n,onChange:this._handleWidgetEditorChange.bind(this,n),onRemove:this._handleWidgetEditorRemove.bind(this,n),apiOptions:this.props.apiOptions,widgetIsOpen:this.props.widgetIsOpen})}render(){let n,i,u,p,w,k,b;const N=[];if(this.props.showWordCount){const oe=La.characterCount(this.props.content),W=Math.floor(oe/6);b=e.jsx("span",{className:"perseus-editor-word-count",title:"~"+ho(W)+" words ("+ho(oe)+" characters)",children:ho(W)})}if(this.props.widgetEnabled){n=Fe.split(this.props.content,Er),i={},u=[];for(let W=0;W<n.length;W++)if(W%2===0){u.push(n[W]);const U=La.parse(n[W]);La.traverseContent(U,E=>{if(E.type==="math"||E.type==="blockMath"){const A=vc(E.content);try{bi.renderToString(A,{colorIsTextColor:!0})}catch($){N.push({math:A,message:$.message})}}})}else{const U=Fe.rWidgetParts.exec(n[W]);if(U!=null){const E=U[1],A=U[2],$=E in i;i[E]=this.getWidgetEditor(E,A);const J=$||!i[E]?"error ":"",Z=$?W:E;u.push(e.jsx("b",{className:J,children:n[W]},Z))}}if(this.widgetIds=R.keys(i),p=e.jsx(Bu,{onChange:this._addWidget}),w=e.jsxs("select",{onChange:this.addTemplate,"data-testid":"editor__template-select",children:[e.jsx("option",{value:"",children:"Insert template…"}),e.jsx("option",{disabled:!0,children:"--"}),e.jsx("option",{value:"table",children:"Table"}),e.jsx("option",{value:"titledTable",children:"Titled table"}),e.jsx("option",{value:"alignment",children:"Aligned equations"}),e.jsx("option",{value:"piecewise",children:"Piecewise function"}),Object.keys(this.props.additionalTemplates).length>0&&e.jsx("option",{disabled:!0,children:"--"}),Object.entries(this.props.additionalTemplates).map(([W])=>e.jsx("option",{value:W,children:W},W)),e.jsx("option",{disabled:!0,children:"--"}),e.jsx("option",{value:"allWidgets",children:"All widgets (for testing)"})]}),!this.props.immutableWidgets){const W=Object.values(i);k=e.jsxs("div",{className:"perseus-editor-widgets",children:[e.jsxs("div",{className:"perseus-editor-widgets-selectors",children:[p,w,b]}),W]}),b=null}}else u=[this.props.content];u.push(e.jsx("br",{},"end"));const O=[e.jsx("div",{className:"perseus-textarea-underlay",ref:this.underlay,children:u},"underlay"),e.jsx("textarea",{ref:this.textarea,onChange:this.handleChange,onKeyDown:this._handleKeyDown,placeholder:this.props.placeholder,disabled:this.props.disabled,value:this.state.textAreaValue},"textarea")];let B;this.props.imageUploader?B=e.jsx(Ho,{onDrop:this.handleDrop,className:"perseus-textarea-pair",children:O}):B=e.jsx("div",{className:"perseus-textarea-pair",children:O});const G=this.props.content.replace(/\[\[\u2603 (([a-z-]+) ([0-9]+))\]\]/g,"").trim().length===0,_=!/\[\[\u2603 (([a-z-]+) ([0-9]+))\]\]/g.test(this.props.content),M={borderTop:"none",padding:4,backgroundColor:"pink"};return e.jsxs("div",{className:"perseus-single-editor "+(this.props.className||""),children:[B,N.length>0&&e.jsx(Ap,{errorList:N}),this.props.warnNoPrompt&&G&&e.jsx("div",{style:M,children:"Graded Groups should contain a prompt"}),this.props.warnNoWidgets&&_&&e.jsx("div",{style:M,children:"Graded Groups should contain at least one widget"}),b,k]})}}x(Pn,"defaultProps",{content:"",placeholder:"",widgets:{},images:{},disabled:!1,widgetEnabled:!0,immutableWidgets:!1,showWordCount:!1,warnNoPrompt:!1,warnNoWidgets:!1,additionalTemplates:{}});Pn.__docgenInfo={description:"",methods:[{name:"getWidgetEditor",docblock:null,modifiers:[],params:[{name:"id",optional:!1,type:{name:"string"}},{name:"type",optional:!1,type:{name:'PerseusWidgetTypes[PerseusWidgetTypes]["type"]',raw:'PerseusWidget["type"]'}}],returns:{type:{name:"union",raw:"undefined | React.ReactNode",elements:[{name:"undefined"},{name:"ReactReactNode",raw:"React.ReactNode"}]}}},{name:"_handleWidgetEditorChange",docblock:null,modifiers:[],params:[{name:"id",optional:!1,type:{name:"string"}},{name:"newWidgetInfo",optional:!1,type:{name:"PerseusWidgetTypes[PerseusWidgetTypes]",raw:"PerseusWidgetTypes[keyof PerseusWidgetTypes]",alias:"PerseusWidget"}},{name:"cb",optional:!0,type:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}}}},{name:"silent",optional:!0,type:{name:"boolean"}}],returns:null},{name:"_handleWidgetEditorRemove",docblock:null,modifiers:[],params:[{name:"id",optional:!1,type:{name:"string"}}],returns:null},{name:"_sizeImages",docblock:`Calculate the size of all the images in props.content, and send
those sizes to this.props.images using props.onChange.`,modifiers:[],params:[{name:"props",optional:!1,type:{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    additionalTemplates: Record<string, string>;
    apiOptions: any;
    className?: string;
    content: string;
    replace?: any;
    placeholder: string;
    widgets: PerseusWidgetsMap;
    images: any;
    disabled: boolean;
    widgetEnabled: boolean;
    immutableWidgets: boolean;
    showWordCount: boolean;
    warnNoPrompt: boolean;
    warnNoWidgets: boolean;
    widgetIsOpen?: boolean;
    imageUploader?: ImageUploader;
    // eslint-disable-next-line import/no-deprecated
    onChange: ChangeHandler;
}`,signature:{properties:[{key:"additionalTemplates",value:{name:"Record",elements:[{name:"string"},{name:"string"}],raw:"Record<string, string>",required:!0}},{key:"apiOptions",value:{name:"any",required:!0}},{key:"className",value:{name:"string",required:!1}},{key:"content",value:{name:"string",required:!0}},{key:"replace",value:{name:"any",required:!1}},{key:"placeholder",value:{name:"string",required:!0}},{key:"widgets",value:{name:"signature",type:"object",raw:"{\n    [Property in keyof TRegistry as `${Property & string} ${number}`]: TRegistry[Property];\n}",signature:{properties:[{key:{name:"PerseusWidgetTypes",required:!0},value:{name:"PerseusWidgetTypes[Property]",raw:"TRegistry[Property]"}}]},required:!1}},{key:"images",value:{name:"any",required:!0}},{key:"disabled",value:{name:"boolean",required:!0}},{key:"widgetEnabled",value:{name:"boolean",required:!0}},{key:"immutableWidgets",value:{name:"boolean",required:!0}},{key:"showWordCount",value:{name:"boolean",required:!0}},{key:"warnNoPrompt",value:{name:"boolean",required:!0}},{key:"warnNoWidgets",value:{name:"boolean",required:!0}},{key:"widgetIsOpen",value:{name:"boolean",required:!1}},{key:"imageUploader",value:{name:"signature",type:"function",raw:`(
    file: File,
    callback: (url: string) => unknown,
) => unknown`,signature:{arguments:[{type:{name:"File"},name:"file"},{type:{name:"signature",type:"function",raw:"(url: string) => unknown",signature:{arguments:[{type:{name:"string"},name:"url"}],return:{name:"unknown"}}},name:"callback"}],return:{name:"unknown"}},required:!1}},{key:"onChange",value:{name:"signature",type:"function",raw:`(
    arg1: {
        hints?: ReadonlyArray<Hint>;
        replace?: boolean;
        content?: string;
        widgets?: PerseusWidgetsMap;
        images?: ImageDict;
        // used only in EditorPage
        question?: any;
        answerArea?: PerseusAnswerArea | null;
        editorMode?: EditorMode;
        jsonMode?: boolean;
        // widgets/radio/widget.jsx
        choiceStates?: ReadonlyArray<ChoiceState>;
        // widgets/number-line.tsx
        divisionRange?: number[];
        // widgets/label-image.tsx
        markers?: Array<LabelImageMarkerPublicData | PerseusLabelImageMarker>;
    },
    callback?: () => void,
    silent?: boolean,
) => unknown`,signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    hints?: ReadonlyArray<Hint>;
    replace?: boolean;
    content?: string;
    widgets?: PerseusWidgetsMap;
    images?: ImageDict;
    // used only in EditorPage
    question?: any;
    answerArea?: PerseusAnswerArea | null;
    editorMode?: EditorMode;
    jsonMode?: boolean;
    // widgets/radio/widget.jsx
    choiceStates?: ReadonlyArray<ChoiceState>;
    // widgets/number-line.tsx
    divisionRange?: number[];
    // widgets/label-image.tsx
    markers?: Array<LabelImageMarkerPublicData | PerseusLabelImageMarker>;
}`,signature:{properties:[{key:"hints",value:{name:"ReadonlyArray",elements:[{name:"intersection",raw:`PerseusRenderer & {
    /**
     * When \`true\`, causes the previous hint to be replaced with this hint when
     * displayed. When \`false\`, the previous hint remains visible when this one
     * is displayed. This allows for hints that build upon each other.
     */
    replace?: boolean;
}`,elements:[{name:"signature",type:"object",raw:`{
    /**
     * Translatable Markdown content to be rendered.  May include references to
     * widgets (as [[☃ widgetName]]) or images (as ![image text](imageUrl)).
     * For each image found in this content, there can be an entry in the
     * \`images\` dict (below) with the key being the image's url which defines
     * additional attributes for the image.
     */
    content: string;
    /**
     * A dictionary of {[widgetName]: Widget} to be referenced from the content
     * field.
     */
    widgets: PerseusWidgetsMap;
    /**
     * Formerly used in the PerseusGradedGroup widget.  A list of "tags" that
     * are keys that represent other content in the system.  Not rendered to
     * the user. NOTE: perseus_data.go says this is required even though it
     * isn't necessary.
     * @deprecated
     */
    metadata?: any;
    /**
     * A dictionary of {[imageUrl]: PerseusImageDetail}.
     */
    images: {
        [imageUrl: string]: PerseusImageDetail;
    };
}`,signature:{properties:[{key:"content",value:{name:"string",required:!0},description:`Translatable Markdown content to be rendered.  May include references to
widgets (as [[☃ widgetName]]) or images (as ![image text](imageUrl)).
For each image found in this content, there can be an entry in the
\`images\` dict (below) with the key being the image's url which defines
additional attributes for the image.`},{key:"widgets",value:{name:"signature",type:"object",raw:"{\n    [Property in keyof TRegistry as `${Property & string} ${number}`]: TRegistry[Property];\n}",signature:{properties:[{key:{name:"PerseusWidgetTypes",required:!0},value:{name:"PerseusWidgetTypes[Property]",raw:"TRegistry[Property]"}}]},required:!1},description:`A dictionary of {[widgetName]: Widget} to be referenced from the content
field.`},{key:"metadata",value:{name:"any",required:!1},description:`Formerly used in the PerseusGradedGroup widget.  A list of "tags" that
are keys that represent other content in the system.  Not rendered to
the user. NOTE: perseus_data.go says this is required even though it
isn't necessary.
@deprecated`},{key:"images",value:{name:"signature",type:"object",raw:`{
    [imageUrl: string]: PerseusImageDetail;
}`,signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:`{
    // The width of the image
    width: number;
    // the height of the image
    height: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!0}},{key:"height",value:{name:"number",required:!0}}]},required:!0}}]},required:!0},description:"A dictionary of {[imageUrl]: PerseusImageDetail}."}]}},{name:"signature",type:"object",raw:`{
    /**
     * When \`true\`, causes the previous hint to be replaced with this hint when
     * displayed. When \`false\`, the previous hint remains visible when this one
     * is displayed. This allows for hints that build upon each other.
     */
    replace?: boolean;
}`,signature:{properties:[{key:"replace",value:{name:"boolean",required:!1},description:"When `true`, causes the previous hint to be replaced with this hint when\ndisplayed. When `false`, the previous hint remains visible when this one\nis displayed. This allows for hints that build upon each other."}]}}]}],raw:"ReadonlyArray<Hint>",required:!1}},{key:"replace",value:{name:"boolean",required:!1}},{key:"content",value:{name:"string",required:!1}},{key:"widgets",value:{name:"signature",type:"object",raw:"{\n    [Property in keyof TRegistry as `${Property & string} ${number}`]: TRegistry[Property];\n}",signature:{properties:[{key:{name:"PerseusWidgetTypes",required:!0},value:{name:"PerseusWidgetTypes[Property]",raw:"TRegistry[Property]"}}]},required:!1}},{key:"images",value:{name:"signature",type:"object",raw:`{
    [url: string]: Dimensions;
}`,signature:{properties:[{key:{name:"string"},value:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]},required:!0}}]},required:!1}},{key:"question",value:{name:"any",required:!1}},{key:"answerArea",value:{name:"union",raw:"PerseusAnswerArea | null",elements:[{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof ItemExtras)[number]"},{name:"boolean"}],raw:"Record<(typeof ItemExtras)[number], boolean>"},{name:"null"}],required:!1}},{key:"editorMode",value:{name:"union",raw:'"edit" | "preview" | "json"',elements:[{name:"literal",value:'"edit"'},{name:"literal",value:'"preview"'},{name:"literal",value:'"json"'}],required:!1}},{key:"jsonMode",value:{name:"boolean",required:!1}},{key:"choiceStates",value:{name:"ReadonlyArray",elements:[{name:"signature",type:"object",raw:`{
    selected: boolean;
    // Deprecated; never implemented
    // TODO(third): Remove this field when we remove the old Radio files (LEMS-2994)
    highlighted: boolean;
    rationaleShown: boolean;
    correctnessShown: boolean;
    previouslyAnswered: boolean;
    readOnly: boolean;
}`,signature:{properties:[{key:"selected",value:{name:"boolean",required:!0}},{key:"highlighted",value:{name:"boolean",required:!0}},{key:"rationaleShown",value:{name:"boolean",required:!0}},{key:"correctnessShown",value:{name:"boolean",required:!0}},{key:"previouslyAnswered",value:{name:"boolean",required:!0}},{key:"readOnly",value:{name:"boolean",required:!0}}]}}],raw:"ReadonlyArray<ChoiceState>",required:!1}},{key:"divisionRange",value:{name:"Array",elements:[{name:"number"}],raw:"number[]",required:!1}},{key:"markers",value:{name:"Array",elements:[{name:"union",raw:"LabelImageMarkerPublicData | PerseusLabelImageMarker",elements:[{name:"Pick",elements:[{name:"signature",type:"object",raw:`{
    // A list of correct answers for this marker.  Often only one but can have multiple
    answers: string[];
    // Translatable Text; The text to show for the marker. Not displayed directly to the user
    label: string;
    // X Coordiate location of the marker on the image
    x: number;
    // Y Coordinate location of the marker on the image
    y: number;
}`,signature:{properties:[{key:"answers",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"x",value:{name:"number",required:!0}},{key:"y",value:{name:"number",required:!0}}]}},{name:"union",raw:'"x" | "y" | "label"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'},{name:"literal",value:'"label"'}]}],raw:`Pick<
    PerseusLabelImageMarker,
    "x" | "y" | "label"
>`},{name:"signature",type:"object",raw:`{
    // A list of correct answers for this marker.  Often only one but can have multiple
    answers: string[];
    // Translatable Text; The text to show for the marker. Not displayed directly to the user
    label: string;
    // X Coordiate location of the marker on the image
    x: number;
    // Y Coordinate location of the marker on the image
    y: number;
}`,signature:{properties:[{key:"answers",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"label",value:{name:"string",required:!0}},{key:"x",value:{name:"number",required:!0}},{key:"y",value:{name:"number",required:!0}}]}}]}],raw:"Array<LabelImageMarkerPublicData | PerseusLabelImageMarker>",required:!1}}]}},name:"arg1"},{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"callback"},{type:{name:"boolean"},name:"silent"}],return:{name:"unknown"}},required:!0}}]}}],raw:`Readonly<{
    additionalTemplates: Record<string, string>;
    apiOptions: any;
    className?: string;
    content: string;
    replace?: any;
    placeholder: string;
    widgets: PerseusWidgetsMap;
    images: any;
    disabled: boolean;
    widgetEnabled: boolean;
    immutableWidgets: boolean;
    showWordCount: boolean;
    warnNoPrompt: boolean;
    warnNoWidgets: boolean;
    widgetIsOpen?: boolean;
    imageUploader?: ImageUploader;
    // eslint-disable-next-line import/no-deprecated
    onChange: ChangeHandler;
}>`,alias:"Props"}}],returns:null,description:`Calculate the size of all the images in props.content, and send
those sizes to this.props.images using props.onChange.`},{name:"handleDrop",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"DragEvent",alias:"DragEvent"}}],returns:null},{name:"handleChange",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}],alias:"React.SyntheticEvent"}}],returns:null},{name:"_handleKeyDown",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactKeyboardEvent",raw:"React.KeyboardEvent<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}],alias:"React.KeyboardEvent"}}],returns:null},{name:"_maybeCopyWidgets",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}],alias:"React.SyntheticEvent"}}],returns:null},{name:"_maybePasteWidgets",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent<HTMLTextAreaElement>",elements:[{name:"HTMLTextAreaElement"}],alias:"React.SyntheticEvent"}}],returns:null},{name:"_safeWidgetNameMapping",docblock:null,modifiers:[],params:[{name:"widgetData",optional:!1,type:{name:"signature",type:"object",raw:"{[name: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}}}],returns:null},{name:"_addWidgetToContent",docblock:null,modifiers:[],params:[{name:"oldContent",optional:!1,type:{name:"string"}},{name:"cursorRange",optional:!1,type:{name:"ReadonlyArray",elements:[{name:"number"}],raw:"ReadonlyArray<number>",alias:"ReadonlyArray"}},{name:"widgetType",optional:!1,type:{name:'PerseusWidgetTypes[PerseusWidgetTypes]["type"]',raw:'PerseusWidget["type"]'}}],returns:null},{name:"_addWidget",docblock:null,modifiers:[],params:[{name:"widgetType",optional:!1,type:{name:"string"}}],returns:null},{name:"addTemplate",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent<HTMLSelectElement>",elements:[{name:"HTMLSelectElement"}],alias:"React.SyntheticEvent"}}],returns:null},{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:null},{name:"focus",docblock:null,modifiers:[],params:[],returns:null},{name:"focusAndMoveToEnd",docblock:null,modifiers:[],params:[],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[{name:"options",optional:!1,type:{name:"any"}}],returns:null}],displayName:"Editor",props:{content:{defaultValue:{value:'""',computed:!1},required:!1},placeholder:{defaultValue:{value:'""',computed:!1},required:!1},widgets:{defaultValue:{value:"{}",computed:!1},required:!1},images:{defaultValue:{value:"{}",computed:!1},required:!1},disabled:{defaultValue:{value:"false",computed:!1},required:!1},widgetEnabled:{defaultValue:{value:"true",computed:!1},required:!1},immutableWidgets:{defaultValue:{value:"false",computed:!1},required:!1},showWordCount:{defaultValue:{value:"false",computed:!1},required:!1},warnNoPrompt:{defaultValue:{value:"false",computed:!1},required:!1},warnNoWidgets:{defaultValue:{value:"false",computed:!1},required:!1},additionalTemplates:{defaultValue:{value:"{}",computed:!1},required:!1}}};let As=0;const jo={},Lo={};window.iframeDataStore={};window.addEventListener("message",o=>{if(typeof o.data=="string"){const l=jo[o.data];l&&l()}else o.data.id&&(o.data.height!==void 0?Lo[o.data.id](o.data.height):o.data.lintWarnings&&zo.log("LINTER REPORT",{lintWarnings:JSON.stringify(o.data.lintWarnings)}))});class th extends F.Component{constructor(){super(...arguments);x(this,"_frame");x(this,"container",F.createRef());x(this,"_isMounted");x(this,"_lastData");x(this,"_lastHeight");x(this,"iframeID")}componentDidMount(){this._isMounted=!0,this.iframeID=As,As++,this._prepareFrame(),jo[this.iframeID]=()=>{this.sendNewData(this._lastData)},Lo[this.iframeID]=n=>{this._lastHeight=n,this._isMounted&&this.props.seamless&&this.container.current&&(this.container.current.style.height=n+"px")}}shouldComponentUpdate(n){return n.datasetValue!==this.props.datasetValue||n.seamless!==this.props.seamless}componentDidUpdate(n){this.container.current&&(this.props.seamless?this.container.current.style.height=this._lastHeight+"px":this.container.current.style.height="100%"),n.datasetValue!==this.props.datasetValue&&this._prepareFrame()}componentWillUnmount(){jo[this.iframeID]=null,Lo[this.iframeID]=null,this._isMounted=!1}_prepareFrame(){var i,u;this._frame&&((i=this.container.current)==null||i.removeChild(this._frame));const n=document.createElement("iframe");n.style.width="100%",n.style.height="100%",n.src=this.props.url,this.props.datasetKey&&(n.dataset[this.props.datasetKey]=this.props.datasetValue),n.dataset.id=String(this.iframeID),this.props.seamless&&(n.dataset.lintGutter="true"),(u=this.container.current)==null||u.appendChild(n),this._frame=n}sendNewData(n){const i=this._frame;this._isMounted&&n&&(i!=null&&i.contentWindow)&&(this._lastData=n,window.iframeDataStore[this.iframeID]=n,i.contentWindow.postMessage(this.iframeID,"*"))}render(){return e.jsx("div",{ref:this.container,style:{width:"100%",height:"100%"}})}}th.__docgenInfo={description:"",methods:[{name:"_prepareFrame",docblock:null,modifiers:[],params:[],returns:null},{name:"sendNewData",docblock:null,modifiers:[],params:[{name:"data",optional:!1,type:{name:"any"}}],returns:null}],displayName:"IframeContentRenderer",props:{url:{required:!0,tsType:{name:"string"},description:""},datasetKey:{required:!0,tsType:{name:"string"},description:""},datasetValue:{required:!0,tsType:{name:"any"},description:""},seamless:{required:!0,tsType:{name:"boolean"},description:""}}};const{TextListEditor:Ss}=Ae,ah=xc.widget;class Ra extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const n={items:this.props.items,categories:this.props.categories,userInput:{values:this.props.values},handleUserInput:i=>{this.props.onChange({values:i.values})},apiOptions:this.props.apiOptions,trackInteraction:function(){}};return e.jsxs("div",{children:[e.jsx("div",{className:"perseus-widget-row",children:e.jsx(Ze,{label:"Randomize item order",checked:this.props.randomizeItems,onChange:i=>{this.props.onChange({randomizeItems:i})}})}),"Categories:",e.jsx(Ss,{options:this.props.categories,onChange:i=>{this.change("categories",i)},layout:"horizontal"}),"Items:",e.jsx(Ss,{options:this.props.items,onChange:i=>{this.change({items:i,values:R.first(this.props.values,i.length)})},layout:"vertical"}),e.jsx(ah,{...n})]})}}x(Ra,"propTypes",{...mn,apiOptions:hi.propTypes,items:te.arrayOf(te.string),categories:te.arrayOf(te.string),values:te.arrayOf(te.number),randomizeItems:te.bool}),x(Ra,"widgetName","categorizer"),x(Ra,"defaultProps",kc.defaultWidgetOptions);Ra.__docgenInfo={description:"An editor for adding a categorizer widget that allows users to sort items into categories.",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"CategorizerEditor",props:{items:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"string"}},required:!1},categories:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"string"}},required:!1},values:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"number"}},required:!1},randomizeItems:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},apiOptions:{description:"",type:{name:"shape",value:{isArticle:{name:"bool",required:!0},onFocusChange:{name:"func",required:!0},GroupMetadataEditor:{name:"func",required:!0},showAlignmentOptions:{name:"bool",required:!0},readOnly:{name:"bool",required:!0},answerableCallback:{name:"func",required:!1},getAnotherHint:{name:"func",required:!1},interactionCallback:{name:"func",required:!1},groupAnnotator:{name:"func",required:!0},imagePlaceholder:{name:"node",required:!1},widgetPlaceholder:{name:"node",required:!1},baseElements:{name:"shape",value:{Link:{name:"func",required:!1}},required:!1},imagePreloader:{name:"func",required:!1},trackInteraction:{name:"func",required:!1},customKeypad:{name:"bool",required:!1},nativeKeypadProxy:{name:"func",required:!1},isMobile:{name:"bool",required:!1},isMobileApp:{name:"bool",required:!1},setDrawingAreaAvailable:{name:"func",required:!1},hintProgressColor:{name:"string",required:!1},canScrollPage:{name:"bool",required:!1},editorChangeDelay:{name:"number",required:!1}}},required:!0}},composes:["@khanacademy/perseus"]};const{InfoTip:Ps}=Ae,rh=400,ih=400;var Xr;let oh=(Xr=class extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){return e.jsxs("fieldset",{className:"pair-editor",children:[e.jsxs("label",{children:["Name:"," ",e.jsx(et,{value:this.props.name,onChange:this.change("name")})]}),e.jsxs("label",{children:[" ","Value:"," ",e.jsx(et,{value:this.props.value,onChange:this.change("value")})]})]})}},x(Xr,"propTypes",{...mn,name:te.string,value:te.string}),x(Xr,"defaultProps",{name:"",value:""}),Xr);var So;let lh=(So=class extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"handlePairChange",(n,i)=>{const u=this.props.pairs.slice();u[n]=i;const p=u[u.length-1];p.name&&p.value&&u.push({name:"",value:""}),this.change("pairs",u)});x(this,"serialize",()=>Ee.serialize.call(this))}render(){const n=R.map(this.props.pairs,(i,u)=>e.jsx(oh,{name:i.name,value:i.value,onChange:this.handlePairChange.bind(this,u)},u));return e.jsx("div",{children:n})}},x(So,"propTypes",{...mn,pairs:te.arrayOf(te.shape({name:te.string,value:te.string})).isRequired}),So);const sh=/khanacademy\.org\/computer-programming\/[^\/]+\/(\d+)/;function uh(o){const l=sh.exec(o);return l&&(o=l[1]),o}class Fa extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"_handleSettingsChange",n=>{this.change({settings:n.pairs})});x(this,"_handleProgramIDChange",n=>{n=uh(n);const{isDevServer:i,InitialRequestUrl:u}=_o(),w=`${i?u.origin:"https://www.khanacademy.org"}/api/internal/scratchpads/${n}`;pu.getJSON(w).done(k=>{const b=k.userAuthoredContentType;this.change({width:k.width,height:k.height,programID:n,programType:b})}).fail((k,b,N)=>{zo.error("Error retrieving scratchpad info for program ID ",hu.TransientService,{cause:N,loggedMetadata:{textStatus:b,programID:n}}),this.change({width:rh,height:ih,programID:n,programType:null})})});x(this,"serialize",()=>Ee.serialize.call(this))}render(){return e.jsxs("div",{children:[e.jsxs("label",{children:["Url or Program ID:"," ",e.jsx(et,{value:this.props.programID,onChange:this._handleProgramIDChange})]}),e.jsx("br",{}),e.jsx(Ze,{label:"Show Editor",checked:this.props.showEditor,onChange:n=>{this.props.onChange({showEditor:n})}}),e.jsx(Ps,{children:'If you show the editor, you should use the "full-width" alignment to make room for the width of the editor.'}),e.jsx("br",{}),e.jsx(Ze,{label:"Show Buttons",checked:this.props.showButtons,onChange:n=>{this.props.onChange({showButtons:n})}}),e.jsx("br",{}),e.jsxs("label",{children:["Settings:",e.jsx(lh,{name:"settings",pairs:this.props.settings,onChange:this._handleSettingsChange}),e.jsxs(Ps,{children:["Settings that you add here are available to the program as an object returned by ",e.jsx("code",{children:"Program.settings()"})]})]})]})}}x(Fa,"propTypes",{...mn}),x(Fa,"widgetName","cs-program"),x(Fa,"defaultProps",qc.defaultWidgetOptions);Fa.__docgenInfo={description:"This is the main editor for this widget, to specify all the options.",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"_handleSettingsChange",docblock:null,modifiers:[],params:[{name:"settings",optional:!1,type:null}],returns:null},{name:"_handleProgramIDChange",docblock:null,modifiers:[],params:[{name:"programID",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"CSProgramEditor",props:{programID:{defaultValue:{value:'""',computed:!1},required:!1},programType:{defaultValue:{value:"null",computed:!1},required:!1},settings:{defaultValue:{value:'[{name: "", value: ""}]',computed:!1},required:!1},showEditor:{defaultValue:{value:"false",computed:!1},required:!1},showButtons:{defaultValue:{value:"false",computed:!1},required:!1},height:{defaultValue:{value:"400",computed:!1},required:!1}},composes:["@khanacademy/perseus"]};const{TextInput:dh}=Ae;class Oa extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){return e.jsxs("div",{className:"perseus-widget-definition-editor",children:[e.jsx("a",{href:"https://docs.google.com/document/d/1udaPef4imOfTMhmLDlWq4SM0mxL0r3YHFZE-5J1uGfo",target:"_blank",rel:"noreferrer",children:"Definition style guide"}),e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("label",{children:["Word to be defined:"," ",e.jsx(dh,{value:this.props.togglePrompt,onChange:this.change("togglePrompt"),placeholder:"define me"})]})}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(Pn,{apiOptions:this.props.apiOptions,content:this.props.definition,widgetEnabled:!1,placeholder:"definition goes here",onChange:n=>{const i={};R.has(n,"content")&&(i.definition=n.content),this.change(i)}})})]})}}x(Oa,"propTypes",{...mn,togglePrompt:te.string,definition:te.string,apiOptions:te.any}),x(Oa,"widgetName","definition"),x(Oa,"defaultProps",Cc.defaultWidgetOptions);Oa.__docgenInfo={description:`An editor for adding an interactive definition widget that allows content
editors to embed clickable terms with expandable explanations within content.`,methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"DefinitionEditor",props:{togglePrompt:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},definition:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},apiOptions:{description:"",type:{name:"any"},required:!1}},composes:["@khanacademy/perseus"]};class Uo extends F.Component{serialize(){return Ee.serialize.call(this)}render(){return e.jsxs("div",{children:[e.jsx("p",{children:"This widget has been deprecated and removed"}),e.jsx("p",{children:"Learners will see a message and they will not be graded on this part. Please replace this widget with a supported one."})]})}}x(Uo,"widgetName","deprecated-standin");Uo.__docgenInfo={description:"",methods:[{name:"serialize",docblock:null,modifiers:[],params:[],returns:{type:{name:"any"}}}],displayName:"DeprecatedStandinEditor",props:{onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(options: any) => void",signature:{arguments:[{type:{name:"any"},name:"options"}],return:{name:"void"}}},description:""}}};const{InfoTip:Dr,InlineIcon:Ns}=Ae;class Ea extends F.Component{constructor(){super(...arguments);x(this,"onVisibleLabelChange",n=>{this.props.onChange({visibleLabel:n})});x(this,"onAriaLabelChange",n=>{this.props.onChange({ariaLabel:n})});x(this,"onPlaceholderChange",n=>{this.props.onChange({placeholder:n})});x(this,"onCorrectChange",n=>{const i=R.map(this.props.choices,function(u,p){return R.extend({},u,{correct:p===n})});this.props.onChange({choices:i})});x(this,"onContentChange",(n,i)=>{const u=this.props.choices.slice(),p=R.clone(u[n]);p.content=i.target.value,u[n]=p,this.props.onChange({choices:u})});x(this,"addChoice",n=>{n.preventDefault();const i=this.props.choices,u={content:"",correct:!1};this.props.onChange({choices:i.concat([u])},this.focus.bind(this,i.length))});x(this,"removeChoice",(n,i)=>{i.preventDefault();const u=R(this.props.choices).clone();u.splice(n,1),this.props.onChange({choices:u})});x(this,"focus",n=>(gu.findDOMNode(this.refs["editor"+n]).focus(),!0));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const n=R.uniqueId("perseus_dropdown_");return e.jsxs("div",{className:"perseus-widget-dropdown",children:[e.jsxs("div",{className:"dropdown-info",children:[e.jsx(Ne,{children:"Dropdown"}),e.jsx(Dr,{children:e.jsxs("p",{children:["The drop down is useful for making inequalities in a custom format. We normally use the symbols ","<",","," ",">",', ≤, ≥ (in that order) which you can copy into the choices. When possible, use the "multiple choice" answer type instead.']})})]}),e.jsxs("div",{className:"dropdown-field",children:[e.jsxs(je,{children:["Visible label",e.jsx(lt,{value:this.props.visibleLabel,onChange:this.onVisibleLabelChange})]}),e.jsx(Dr,{children:e.jsx("p",{children:"Optional visible label"})})]}),e.jsxs("div",{className:"dropdown-field",children:[e.jsxs(je,{children:["Aria label",e.jsx(lt,{value:this.props.ariaLabel,onChange:this.onAriaLabelChange,type:"text"})]}),e.jsx(Dr,{children:e.jsxs("p",{children:["Label text that's read by screen readers. Highly recommend adding a label here to ensure your exercise is accessible. For more information on writing accessible labels, please see"," ",e.jsx("a",{href:"https://www.w3.org/WAI/tips/designing/#ensure-that-form-elements-include-clearly-associated-labels",target:"_blank",rel:"noreferrer",children:"this article."})," ",'If left blank, the value will default to "Select an answer".']})})]}),e.jsxs("div",{className:"dropdown-field",children:[e.jsxs(je,{children:["Placeholder",e.jsx(lt,{value:this.props.placeholder,onChange:this.onPlaceholderChange,placeholder:"Placeholder value"})]}),e.jsx(Dr,{children:e.jsx("p",{children:"This value will appear as the drop down default. It should give the user some indication of the values available in the drop down itself, e.g., Yes/No/Maybe."})})]}),e.jsx("div",{className:"clearfix"}),e.jsx(je,{children:"Choices"}),e.jsx("ul",{className:"dropdown-choices",children:this.props.choices.map(function(i,u){const p=i.correct?"correct":"incorrect";return e.jsx("li",{children:e.jsxs("div",{children:[e.jsx("input",{ref:"radio"+u,type:"radio",name:n,checked:i.correct?"checked":"",onChange:this.onCorrectChange.bind(this,u),value:u}),e.jsx("input",{type:"text",ref:"editor"+u,onChange:this.onContentChange.bind(this,u),className:p,value:i.content}),e.jsx("a",{href:"#",className:"simple-button orange","aria-label":"Delete choice",onClick:this.removeChoice.bind(this,u),children:e.jsx("span",{className:"remove-choice",children:e.jsx(Ns,{...pi})})})]})},""+u)},this)}),e.jsx("div",{className:"add-choice-container",children:e.jsxs("a",{href:"#",className:"simple-button orange",onClick:this.addChoice,children:[e.jsx(Ns,{...Eu})," Add a choice"," "]})})]})}}x(Ea,"propTypes",{choices:te.arrayOf(te.shape({content:te.string,correct:te.bool})),placeholder:te.string}),x(Ea,"widgetName","dropdown"),x(Ea,"defaultProps",Tc.defaultWidgetOptions);Ea.__docgenInfo={description:"An editor for adding a dropdown widget that allows users to select an option from a predefined list.",methods:[{name:"onVisibleLabelChange",docblock:null,modifiers:[],params:[{name:"visibleLabel",optional:!1,type:null}],returns:null},{name:"onAriaLabelChange",docblock:null,modifiers:[],params:[{name:"ariaLabel",optional:!1,type:null}],returns:null},{name:"onPlaceholderChange",docblock:null,modifiers:[],params:[{name:"placeholder",optional:!1,type:null}],returns:null},{name:"onCorrectChange",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null}],returns:null},{name:"onContentChange",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null},{name:"e",optional:!1,type:null}],returns:null},{name:"addChoice",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"removeChoice",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null},{name:"e",optional:!1,type:null}],returns:null},{name:"focus",docblock:null,modifiers:[],params:[{name:"i",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"DropdownEditor",props:{placeholder:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},choices:{defaultValue:{value:`[
    {
        content: "",
        correct: false,
    },
]`,computed:!1},description:"",type:{name:"arrayOf",value:{name:"shape",value:{content:{name:"string",required:!1},correct:{name:"bool",required:!1}}}},required:!1}}};const{TextInput:Is}=Ae;class Da extends F.Component{constructor(){super(...arguments);x(this,"state",{});x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){return e.jsxs("div",{className:"perseus-widget-explanation-editor",children:[e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("label",{children:["Prompt to show explanation:"," ",e.jsx(Is,{value:this.props.showPrompt,onChange:this.change("showPrompt")})]})}),e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("label",{children:["Prompt to hide explanation:"," ",e.jsx(Is,{value:this.props.hidePrompt,onChange:this.change("hidePrompt")})]})}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(Pn,{apiOptions:this.props.apiOptions,content:this.props.explanation,widgets:this.props.widgets,widgetEnabled:!0,immutableWidgets:!1,onChange:n=>{const i={};R.has(n,"content")&&(i.explanation=n.content),R.has(n,"widgets")&&(i.widgets=n.widgets),this.change(i)}})})]})}}x(Da,"propTypes",{...mn,showPrompt:te.string,hidePrompt:te.string,explanation:te.string,widgets:te.object,apiOptions:te.any}),x(Da,"widgetName","explanation"),x(Da,"defaultProps",Ac.defaultWidgetOptions);Da.__docgenInfo={description:"An editor for adding an explanation widget that provides supplementary information to users.",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"ExplanationEditor",props:{showPrompt:{defaultValue:{value:'"Explain"',computed:!1},description:"",type:{name:"string"},required:!1},hidePrompt:{defaultValue:{value:'"Hide explanation"',computed:!1},description:"",type:{name:"string"},required:!1},explanation:{defaultValue:{value:'"explanation goes here\\n\\nmore explanation"',computed:!1},description:"",type:{name:"string"},required:!1},widgets:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},apiOptions:{description:"",type:{name:"any"},required:!1}},composes:["@khanacademy/perseus"]};const{ButtonGroup:mh,InfoTip:ia}=Ae,js=["basic","trig","prealgebra","logarithms","scientific","basic relations","advanced relations"];class Jr extends F.Component{constructor(n){super(n);x(this,"getSaveWarnings",()=>{const n=[];return this.props.answerForms.length===0?n.push("No answers specified"):(this.props.answerForms.some(u=>u.considered==="correct")||n.push("No correct answer specified"),R(this.props.answerForms).each((u,p)=>{if(this.props.value==="")n.push(`Answer ${p+1} is empty`);else{const w=Pc(u.value,{functions:this.props.functions});w.parsed?u.simplify&&!w.expr.isSimplified()&&n.push(`${u.value} isn't simplified, but is required" +
                            " to be`):n.push(`Couldn't parse ${u.value}`)}})),n});x(this,"newAnswer",()=>{const n=this.props.answerForms.slice(),u={considered:"correct",form:!1,key:`${crypto.randomUUID()}`,simplify:!1,value:""};n.push(u),this.props.onChange({answerForms:n})});x(this,"handleRemoveForm",n=>{const i=this.props.answerForms.slice();i.splice(n,1),this.props.onChange({answerForms:i})});x(this,"handleButtonSet",n=>{const u=js.filter(p=>this.props.buttonSets.includes(p)!==(p===n));this.props.onChange({buttonSets:u})});x(this,"handleToggleDiv",()=>{let n,i;this.props.buttonSets.includes("basic+div")?(n="basic",i="basic+div"):(n="basic+div",i="basic");const u=this.props.buttonSets.filter(p=>p!==i).concat(n);this.props.onChange({buttonSets:u})});x(this,"handleTexInsert",n=>{this.refs.expression.insert(n)});x(this,"handleFunctions",n=>{this.setState({functionsInternal:n});const i={};i.functions=n.split(/[ ,]+/).filter(Nc),this.props.onChange(i)});x(this,"handleVisibleLabel",n=>{this.props.onChange({visibleLabel:n})});x(this,"handleAriaLabel",n=>{this.props.onChange({ariaLabel:n})});x(this,"changeExpressionWidget",(n,i)=>{const u={...this.props.answerForms[n],value:i};this.updateAnswerForm(n,u)});this.state={functionsInternal:this.props.functions.join(" ")}}serialize(){const{answerForms:n,buttonSets:i,functions:u,times:p,visibleLabel:w,ariaLabel:k}=this.props;return{answerForms:n,buttonSets:i,functions:u,times:p,visibleLabel:w,ariaLabel:k,extraKeys:qs(this.props)}}updateAnswerForm(n,i){const u=this.props.answerForms.slice();u[n]=i;const{extraKeys:p,...w}=this.props,k=qs({...w,answerForms:u});this.props.onChange({answerForms:u,extraKeys:k})}changeSimplify(n,i){const u={...this.props.answerForms[n],simplify:i};this.updateAnswerForm(n,u)}changeForm(n,i){const u={...this.props.answerForms[n],form:i};this.updateAnswerForm(n,u)}changeConsidered(n,i){const u={...this.props.answerForms[n],considered:i};this.updateAnswerForm(n,u)}changeTimes(n){this.props.onChange({times:n})}render(){const n=this.props.answerForms.map((u,p)=>{const w={times:this.props.times,functions:this.props.functions,buttonSets:this.props.buttonSets,buttonsVisible:"focused",userInput:u.value,handleUserInput:k=>this.changeExpressionWidget(p,k),trackInteraction:()=>{},widgetId:this.props.widgetId+"-"+u.key,visibleLabel:this.props.visibleLabel,ariaLabel:this.props.ariaLabel};return e.jsx(ph,{considered:u.considered,expressionProps:w,form:u.form,simplify:u.simplify,onDelete:()=>this.handleRemoveForm(p),onChangeSimplify:k=>this.changeSimplify(p,k),onChangeForm:k=>this.changeForm(p,k),onChangeConsidered:k=>this.changeConsidered(p,k)},u.key)}),i=js.map(u=>{const p=u==="basic",w=this.props.buttonSets.includes(u)||p;return e.jsx(Ze,{label:u,checked:w,disabled:p,onChange:()=>this.handleButtonSet(u)},u)});return i.unshift(e.jsx(Ze,{label:"show ÷ button",checked:this.props.buttonSets.includes("basic+div"),onChange:this.handleToggleDiv},"show ÷ button")),e.jsxs(Y,{children:[e.jsx(No,{children:"Global Options"}),e.jsx("div",{className:ie.css(yn.paddedY),children:e.jsx(po,{label:e.jsxs(e.Fragment,{children:["Visible label",e.jsx(ia,{children:"Optional visible text; strongly encouraged to help learners using dictation software, but can be omitted if the surrounding content provides enough context."})]}),value:this.props.visibleLabel||"",onChange:this.handleVisibleLabel})}),e.jsx("div",{className:ie.css(yn.paddedY),children:e.jsx(po,{label:e.jsxs(e.Fragment,{children:["Aria label",e.jsxs(ia,{children:["Label text that's read by screen readers. Highly recommend adding a label here to ensure your exercise is accessible. For more information on writting accessible labels, please see"," ",e.jsx("a",{href:"https://www.w3.org/WAI/tips/designing/#ensure-that-form-elements-include-clearly-associated-labels",target:"_blank",rel:"noreferrer",children:"this article."})]})]}),value:this.props.ariaLabel||"",onChange:this.handleAriaLabel})}),e.jsx("div",{className:ie.css(yn.paddedY),children:e.jsx(po,{label:e.jsxs(e.Fragment,{children:["Function variables",e.jsx(ia,{children:'Single-letter variables listed here will be interpreted as functions. This let us know that f(x) means "f of x" and not "f times x".'})]}),value:this.state.functionsInternal,onChange:this.handleFunctions})}),e.jsx("div",{className:ie.css(yn.paddedY),children:e.jsx(Ze,{label:e.jsxs(e.Fragment,{children:["Use × instead of ⋅ for multiplication",e.jsx(ia,{children:"For pre-algebra problems this option displays multiplication as \\times instead of \\cdot in both the rendered output and the acceptable formats examples."})]}),checked:this.props.times,onChange:u=>{this.changeTimes(u)}})}),e.jsxs("div",{className:ie.css(yn.paddedY),children:[e.jsx(Wt,{children:"Button Sets"}),i]}),e.jsx(No,{children:"Answers"}),e.jsx(Ic,{style:yn.answersSubtitle,children:"student responses area matched against these from top to bottom"}),e.jsx(Y,{style:{gap:j.xSmall_8},children:n}),e.jsx(re,{size:j.small_12}),e.jsx(Ue,{size:"small",onClick:this.newAnswer,children:"Add new answer"})]})}}x(Jr,"widgetName","expression"),x(Jr,"defaultProps",Sc.defaultWidgetOptions);const ch=function(o,l){let n=o.indexOf(l);return n=(n+1)%o.length,o[n]};class ph extends F.Component{constructor(){super(...arguments);x(this,"state",{deleteFocused:!1});x(this,"handleImSure",()=>{this.props.onDelete(),this.handleCancelDelete()});x(this,"handleCancelDelete",()=>{this.setState({deleteFocused:!1})});x(this,"handleDelete",()=>{this.setState({deleteFocused:!0})});x(this,"toggleConsidered",()=>{const n=ch(Cs,this.props.considered);this.props.onChangeConsidered(n)})}render(){const n=this.state.deleteFocused?e.jsxs(e.Fragment,{children:[e.jsx(Ue,{size:"small",onClick:this.handleImSure,actionType:"destructive",children:"I'm sure!"}),e.jsx(re,{size:j.small_12}),e.jsx(Ue,{size:"small",onClick:this.handleCancelDelete,kind:"secondary",children:"Cancel"})]}):e.jsx(Ue,{size:"small",onClick:this.handleDelete,actionType:"destructive",kind:"tertiary",style:yn.deleteButton,children:"Delete"});return e.jsxs("div",{className:ie.css(yn.answerOption),children:[e.jsx(mh,{onChange:this.toggleConsidered,allowEmpty:!1,value:this.props.considered,selectedButtonStyle:hh[this.props.considered],buttons:Cs.map(i=>({value:i,content:i,title:`This answer will be considered ${i}`}))}),e.jsx(jc,{...this.props.expressionProps}),e.jsx("div",{className:ie.css(yn.paddedY,yn.paddedX),children:e.jsx(Ze,{label:e.jsxs(e.Fragment,{children:["Answer expression must have the same form.",e.jsx(ia,{children:"The student's answer must be in the same form. Commutativity and excess negative signs are ignored."})]}),checked:this.props.form,onChange:this.props.onChangeForm})}),e.jsx("div",{className:ie.css(yn.paddedY,yn.paddedX),children:e.jsx(Ze,{label:e.jsxs(e.Fragment,{children:["Answer expression must be fully expanded and simplified.",e.jsx(ia,{children:`The student's answer must be fully expanded and simplified. Answering this equation (x^2+2x+1) with this factored equation (x+1)^2 will render this response "Your answer is not fully expanded and simplified."`})]}),checked:this.props.simplify,onChange:this.props.onChangeSimplify})}),e.jsx("div",{className:ie.css(yn.buttonRow,yn.paddedY),children:n})]})}}const yn=ie.StyleSheet.create({paddedX:{paddingLeft:j.xSmall_8,paddingRight:j.xSmall_8},paddedY:{paddingTop:j.xxSmall_6,paddingBottom:j.xxSmall_6},answersSubtitle:{fontStyle:"italic"},answerOption:{border:"1px solid #ddd",borderRadius:"3px",display:"flex",flexDirection:"column"},answerStatusWrong:{backgroundColor:me.fadedRed16},answerStatusCorrect:{backgroundColor:me.fadedGreen16},answerStatusUngraded:{backgroundColor:me.fadedBlue16},buttonRow:{display:"flex"},deleteButton:{paddingInline:Q.size_160}}),hh={wrong:yn.answerStatusWrong,correct:yn.answerStatusCorrect,ungraded:yn.answerStatusUngraded};Jr.__docgenInfo={description:"An editor for adding an expression widget that allows users to enter mathematical expressions.",methods:[{name:"serialize",docblock:null,modifiers:[],params:[],returns:{type:{name:"signature",type:"object",raw:`{
    // The expression forms the answer may come in
    answerForms: PerseusExpressionAnswerForm[];
    buttonSets: LegacyButtonSets;
    // Variables that can be used as functions.  Default: ["f", "g", "h"]
    functions: string[];
    // Use x for rendering multiplication instead of a center dot.
    times: boolean;
    // What extra keys need to be displayed on the keypad so that the
    // question can be answerable without a keyboard (ie mobile)
    // TODO: this is really Key[]
    extraKeys?: KeypadKey[];
    // visible label associated with the MathQuill field
    visibleLabel?: string;
    // aria label for screen readers attached to MathQuill field
    ariaLabel?: string;
    // Controls when buttons for special characters are visible when using a
    // desktop browser.  Defaults to "focused".
    // NOTE: This isn't listed in perseus-format.js or perseus_data.go, but
    // appears in item data in the datastore.
    buttonsVisible?: "always" | "never" | "focused";
}`,signature:{properties:[{key:"answerForms",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    // The TeX form of the expression.  e.g. "x\\\\cdot3=y"
    value: string;
    // The Answer expression must have the same form
    form: boolean;
    // The answer expression must be fully expanded and simplified
    simplify: boolean;
    // Whether the form is considered "correct", "wrong", or "ungraded"
    considered: (typeof PerseusExpressionAnswerFormConsidered)[number];
    // A key to identify the answer form in a list
    // NOTE: perseus-format.js says this is required even though it isn't necessary.
    key?: string;
}`,signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"form",value:{name:"boolean",required:!0}},{key:"simplify",value:{name:"boolean",required:!0}},{key:"considered",value:{name:"unknown[number]",raw:"(typeof PerseusExpressionAnswerFormConsidered)[number]",required:!0}},{key:"key",value:{name:"string",required:!1}}]}}],raw:"PerseusExpressionAnswerForm[]",required:!0}},{key:"buttonSets",value:{name:"Array",elements:[{name:"union",raw:`| "basic"
| "basic+div"
| "trig"
| "prealgebra"
| "logarithms"
| "basic relations"
| "advanced relations"
| "scientific"`,elements:[{name:"literal",value:'"basic"'},{name:"literal",value:'"basic+div"'},{name:"literal",value:'"trig"'},{name:"literal",value:'"prealgebra"'},{name:"literal",value:'"logarithms"'},{name:"literal",value:'"basic relations"'},{name:"literal",value:'"advanced relations"'},{name:"literal",value:'"scientific"'}]}],raw:`Array<
    | "basic"
    | "basic+div"
    | "trig"
    | "prealgebra"
    | "logarithms"
    | "basic relations"
    | "advanced relations"
    | "scientific"
>`,required:!0}},{key:"functions",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"times",value:{name:"boolean",required:!0}},{key:"extraKeys",value:{name:"Array",elements:[{name:"unknown[number]",raw:"(typeof KeypadKeys)[number]"}],raw:"KeypadKey[]",required:!1}},{key:"visibleLabel",value:{name:"string",required:!1}},{key:"ariaLabel",value:{name:"string",required:!1}},{key:"buttonsVisible",value:{name:"union",raw:'"always" | "never" | "focused"',elements:[{name:"literal",value:'"always"'},{name:"literal",value:'"never"'},{name:"literal",value:'"focused"'}],required:!1}}]}}}},{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:null},{name:"newAnswer",docblock:null,modifiers:[],params:[],returns:null},{name:"handleRemoveForm",docblock:null,modifiers:[],params:[{name:"i",optional:!1,type:null}],returns:null},{name:"updateAnswerForm",docblock:null,modifiers:[],params:[{name:"index",optional:!1,type:{name:"number"}},{name:"answerFormProps",optional:!1,type:{name:"Array[number]",raw:'PerseusExpressionWidgetOptions["answerForms"][number]',alias:"AnswerForm"}}],returns:null},{name:"handleButtonSet",docblock:null,modifiers:[],params:[{name:"changingName",optional:!1,type:null}],returns:null},{name:"handleToggleDiv",docblock:null,modifiers:[],params:[],returns:null},{name:"handleTexInsert",docblock:null,modifiers:[],params:[{name:"str",optional:!1,type:null}],returns:null},{name:"handleFunctions",docblock:null,modifiers:[],params:[{name:"value",optional:!1,type:null}],returns:null},{name:"handleVisibleLabel",docblock:null,modifiers:[],params:[{name:"visibleLabel",optional:!1,type:null}],returns:null},{name:"handleAriaLabel",docblock:null,modifiers:[],params:[{name:"ariaLabel",optional:!1,type:null}],returns:null},{name:"changeSimplify",docblock:null,modifiers:[],params:[{name:"index",optional:!1,type:{name:"number"}},{name:"simplify",optional:!1,type:{name:"boolean"}}],returns:null},{name:"changeForm",docblock:null,modifiers:[],params:[{name:"index",optional:!1,type:{name:"number"}},{name:"form",optional:!1,type:{name:"boolean"}}],returns:null},{name:"changeConsidered",docblock:null,modifiers:[],params:[{name:"index",optional:!1,type:{name:"number"}},{name:"considered",optional:!1,type:{name:"unknown[number]",raw:"(typeof PerseusExpressionAnswerFormConsidered)[number]"}}],returns:null},{name:"changeTimes",docblock:null,modifiers:[],params:[{name:"times",optional:!1,type:{name:"boolean"}}],returns:null},{name:"changeExpressionWidget",docblock:null,modifiers:[],params:[{name:"index",optional:!1,type:null},{name:"input",optional:!1,type:null}],returns:null}],displayName:"ExpressionEditor",props:{widgetId:{required:!1,tsType:{name:"string"},description:""},value:{required:!1,tsType:{name:"string"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newValues: Partial<PerseusExpressionWidgetOptions>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    // The expression forms the answer may come in
    answerForms: PerseusExpressionAnswerForm[];
    buttonSets: LegacyButtonSets;
    // Variables that can be used as functions.  Default: ["f", "g", "h"]
    functions: string[];
    // Use x for rendering multiplication instead of a center dot.
    times: boolean;
    // What extra keys need to be displayed on the keypad so that the
    // question can be answerable without a keyboard (ie mobile)
    // TODO: this is really Key[]
    extraKeys?: KeypadKey[];
    // visible label associated with the MathQuill field
    visibleLabel?: string;
    // aria label for screen readers attached to MathQuill field
    ariaLabel?: string;
    // Controls when buttons for special characters are visible when using a
    // desktop browser.  Defaults to "focused".
    // NOTE: This isn't listed in perseus-format.js or perseus_data.go, but
    // appears in item data in the datastore.
    buttonsVisible?: "always" | "never" | "focused";
}`,signature:{properties:[{key:"answerForms",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    // The TeX form of the expression.  e.g. "x\\\\cdot3=y"
    value: string;
    // The Answer expression must have the same form
    form: boolean;
    // The answer expression must be fully expanded and simplified
    simplify: boolean;
    // Whether the form is considered "correct", "wrong", or "ungraded"
    considered: (typeof PerseusExpressionAnswerFormConsidered)[number];
    // A key to identify the answer form in a list
    // NOTE: perseus-format.js says this is required even though it isn't necessary.
    key?: string;
}`,signature:{properties:[{key:"value",value:{name:"string",required:!0}},{key:"form",value:{name:"boolean",required:!0}},{key:"simplify",value:{name:"boolean",required:!0}},{key:"considered",value:{name:"unknown[number]",raw:"(typeof PerseusExpressionAnswerFormConsidered)[number]",required:!0}},{key:"key",value:{name:"string",required:!1}}]}}],raw:"PerseusExpressionAnswerForm[]",required:!0}},{key:"buttonSets",value:{name:"Array",elements:[{name:"union",raw:`| "basic"
| "basic+div"
| "trig"
| "prealgebra"
| "logarithms"
| "basic relations"
| "advanced relations"
| "scientific"`,elements:[{name:"literal",value:'"basic"'},{name:"literal",value:'"basic+div"'},{name:"literal",value:'"trig"'},{name:"literal",value:'"prealgebra"'},{name:"literal",value:'"logarithms"'},{name:"literal",value:'"basic relations"'},{name:"literal",value:'"advanced relations"'},{name:"literal",value:'"scientific"'}]}],raw:`Array<
    | "basic"
    | "basic+div"
    | "trig"
    | "prealgebra"
    | "logarithms"
    | "basic relations"
    | "advanced relations"
    | "scientific"
>`,required:!0}},{key:"functions",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!0}},{key:"times",value:{name:"boolean",required:!0}},{key:"extraKeys",value:{name:"Array",elements:[{name:"unknown[number]",raw:"(typeof KeypadKeys)[number]"}],raw:"KeypadKey[]",required:!1}},{key:"visibleLabel",value:{name:"string",required:!1}},{key:"ariaLabel",value:{name:"string",required:!1}},{key:"buttonsVisible",value:{name:"union",raw:'"always" | "never" | "focused"',elements:[{name:"literal",value:'"always"'},{name:"literal",value:'"never"'},{name:"literal",value:'"focused"'}],required:!1}}]}}],raw:"Partial<PerseusExpressionWidgetOptions>"},name:"newValues"}],return:{name:"void"}}},description:""},answerForms:{defaultValue:{value:"[]",computed:!1},required:!1},times:{defaultValue:{value:"false",computed:!1},required:!1},buttonSets:{defaultValue:{value:'["basic"]',computed:!1},required:!1},functions:{defaultValue:{value:'["f", "g", "h"]',computed:!1},required:!1}}};const{InlineIcon:Ls,TextInput:gh}=Ae;class Vt extends F.Component{constructor(){super(...arguments);x(this,"editor",F.createRef());x(this,"hintEditor",F.createRef());x(this,"change",(...n)=>Le.apply(this,n));x(this,"handleAddHint",()=>{const n={content:"",images:{},widgets:{}};this.props.onChange({hint:n},()=>{var i;(i=this.hintEditor.current)==null||i.focus()})});x(this,"handleRemoveHint",n=>{this.props.onChange({hint:null})});x(this,"getSaveWarnings",()=>{var n;return(n=this.editor.current)==null?void 0:n.getSaveWarnings()});x(this,"serialize",()=>{var n,i;return{title:this.props.title,...(n=this.editor.current)==null?void 0:n.serialize(),hint:(i=this.hintEditor.current)==null?void 0:i.serialize()}})}render(){return e.jsxs("div",{className:"perseus-group-editor",children:[e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("label",{className:ie.css(go.title),children:["Title:"," ",e.jsx(gh,{value:this.props.title,className:ie.css(go.input),onChange:this.change("title")})]})}),e.jsx(Pn,{ref:this.editor,content:this.props.content,widgets:this.props.widgets,apiOptions:this.props.apiOptions,images:this.props.images,widgetEnabled:!0,immutableWidgets:!1,onChange:this.props.onChange,warnNoPrompt:!0,warnNoWidgets:!0}),!this.props.hint&&e.jsxs("button",{type:"button",style:{marginTop:10},className:"add-hint simple-button orange",onClick:this.handleAddHint,children:[e.jsx(Ls,{...Eu})," Add a hint"]}),this.props.hint&&e.jsxs("div",{className:"perseus-hint-editor",children:[e.jsx("div",{className:ie.css(go.hintsTitle),children:"Hint"}),e.jsx(Pn,{ref:this.hintEditor,content:this.props.hint?this.props.hint.content:"",widgets:this.props.hint?this.props.hint.widgets:{},apiOptions:this.props.apiOptions,images:this.props.hint&&this.props.hint.images,widgetEnabled:!0,immutableWidgets:!1,onChange:n=>{this.change("hint",Object.assign({},this.props.hint,n))}}),e.jsxs("button",{type:"button",className:"remove-hint simple-button orange",onClick:this.handleRemoveHint,children:[e.jsx(Ls,{...pi})," Remove this hint"]})]})]})}}x(Vt,"propTypes",{...mn,title:te.string,content:te.string,widgets:te.object,images:te.object,apiOptions:hi.propTypes}),x(Vt,"widgetName","graded-group"),x(Vt,"defaultProps",Lc.defaultWidgetOptions);const go=ie.StyleSheet.create({title:{fontSize:18,fontWeight:"bold"},input:{fontSize:18},hintsTitle:{marginTop:10,fontSize:"110%",fontWeight:"bold"}});Vt.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"handleAddHint",docblock:null,modifiers:[],params:[],returns:null},{name:"handleRemoveHint",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"GradedGroupEditor",props:{title:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},content:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},widgets:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},images:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},hint:{defaultValue:{value:"null",computed:!1},required:!1},apiOptions:{description:"",type:{name:"shape",value:{isArticle:{name:"bool",required:!0},onFocusChange:{name:"func",required:!0},GroupMetadataEditor:{name:"func",required:!0},showAlignmentOptions:{name:"bool",required:!0},readOnly:{name:"bool",required:!0},answerableCallback:{name:"func",required:!1},getAnotherHint:{name:"func",required:!1},interactionCallback:{name:"func",required:!1},groupAnnotator:{name:"func",required:!0},imagePlaceholder:{name:"node",required:!1},widgetPlaceholder:{name:"node",required:!1},baseElements:{name:"shape",value:{Link:{name:"func",required:!1}},required:!1},imagePreloader:{name:"func",required:!1},trackInteraction:{name:"func",required:!1},customKeypad:{name:"bool",required:!1},nativeKeypadProxy:{name:"func",required:!1},isMobile:{name:"bool",required:!1},isMobileApp:{name:"bool",required:!1},setDrawingAreaAvailable:{name:"func",required:!1},hintProgressColor:{name:"string",required:!1},canScrollPage:{name:"bool",required:!1},editorChangeDelay:{name:"number",required:!1}}},required:!0}},composes:["@khanacademy/perseus"]};class Ma extends F.Component{constructor(){super(...arguments);x(this,"_editors");x(this,"change",(...n)=>Le.apply(this,n));x(this,"getSaveWarnings",()=>[].concat(...this._editors.map(n=>n?n.getSaveWarnings():[])));x(this,"serialize",()=>({gradedGroups:this.props.gradedGroups}));x(this,"renderGroups",()=>this.props.gradedGroups?this.props.gradedGroups.map((n,i)=>e.jsx(Vt,{ref:u=>this._editors[i]=u,...n,apiOptions:this.props.apiOptions,widgetEnabled:!0,immutableWidgets:!1,onChange:u=>this.change("gradedGroups",yh(this.props.gradedGroups,i,{...this.props.gradedGroups[i],...u}))},i)):null);x(this,"addGroup",()=>{const n=this.props.gradedGroups||[];this.change("gradedGroups",n.concat([Vt.defaultProps]))})}UNSAFE_componentWillMount(){this._editors=[]}render(){return e.jsxs("div",{className:"perseus-group-editor",children:[this.renderGroups(),e.jsx("button",{onClick:this.addGroup,children:"Add group"})]})}}x(Ma,"propTypes",{...mn,apiOptions:hi.propTypes,gradedGroups:te.array,onChange:te.func.isRequired}),x(Ma,"widgetName","graded-group-set"),x(Ma,"defaultProps",Rc.defaultWidgetOptions);const yh=(o,l,n)=>[...o.slice(0,l),n,...o.slice(l+1)];Ma.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null},{name:"renderGroups",docblock:null,modifiers:[],params:[],returns:null},{name:"addGroup",docblock:null,modifiers:[],params:[],returns:null}],displayName:"GradedGroupSetEditor",props:{gradedGroups:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"array"},required:!1},apiOptions:{description:"",type:{name:"shape",value:{isArticle:{name:"bool",required:!0},onFocusChange:{name:"func",required:!0},GroupMetadataEditor:{name:"func",required:!0},showAlignmentOptions:{name:"bool",required:!0},readOnly:{name:"bool",required:!0},answerableCallback:{name:"func",required:!1},getAnotherHint:{name:"func",required:!1},interactionCallback:{name:"func",required:!1},groupAnnotator:{name:"func",required:!0},imagePlaceholder:{name:"node",required:!1},widgetPlaceholder:{name:"node",required:!1},baseElements:{name:"shape",value:{Link:{name:"func",required:!1}},required:!1},imagePreloader:{name:"func",required:!1},trackInteraction:{name:"func",required:!1},customKeypad:{name:"bool",required:!1},nativeKeypadProxy:{name:"func",required:!1},isMobile:{name:"bool",required:!1},isMobileApp:{name:"bool",required:!1},setDrawingAreaAvailable:{name:"func",required:!1},hintProgressColor:{name:"string",required:!1},canScrollPage:{name:"bool",required:!1},editorChangeDelay:{name:"number",required:!1}}},required:!0},onChange:{description:"",type:{name:"func"},required:!0}},composes:["@khanacademy/perseus"]};const{ButtonGroup:bh,InfoTip:wh,RangeInput:ta}=Ae,fh={url:null,width:0,height:0};function vh(o,l){return Math.floor((o[1]-o[0])/l)}class tr extends F.Component{constructor(n){super(n);x(this,"_isMounted",!1);this.state=this.getInitialState(),this.change=this.change.bind(this),this.changeBackgroundUrl=this.changeBackgroundUrl.bind(this),this.changeGraph=this.changeGraph.bind(this),this.changeGridStep=this.changeGridStep.bind(this),this.changeLabel=this.changeLabel.bind(this),this.changeRange=this.changeRange.bind(this),this.changeRulerLabel=this.changeRulerLabel.bind(this),this.changeRulerTicks=this.changeRulerTicks.bind(this),this.changeSnapStep=this.changeSnapStep.bind(this),this.changeStep=this.changeStep.bind(this)}getInitialState(){return this.stateFromProps(this.props)}componentDidMount(){this._isMounted=!0,this.changeGraph=R.debounce(this.changeGraph,300)}UNSAFE_componentWillReceiveProps(n){(!R.isEqual(this.props.labels,n.labels)||!R.isEqual(this.props.gridStep,n.gridStep)||!R.isEqual(this.props.snapStep,n.snapStep)||!R.isEqual(this.props.step,n.step)||!R.isEqual(this.props.range,n.range)||!R.isEqual(this.props.backgroundImage,n.backgroundImage))&&this.setState(this.stateFromProps(n))}componentWillUnmount(){this._isMounted=!1}stateFromProps(n){return{labelsTextbox:n.labels,gridStepTextbox:n.gridStep,snapStepTextbox:n.snapStep,stepTextbox:n.step,rangeTextbox:n.range,backgroundImage:R.clone(n.backgroundImage)}}change(...n){return Le.apply(this,n)}changeRulerLabel(n){this.change({rulerLabel:n.target.value})}changeRulerTicks(n){this.change({rulerTicks:+n.target.value})}changeBackgroundUrl(n){if(n.type==="keypress"&&n.key!=="Enter")return;const i=(p,w,k)=>{const b=R.clone(this.props.backgroundImage);b.url=p,b.width=w,b.height=k,this.setState({backgroundImage:b},this.changeGraph)},u=gu.findDOMNode(this.refs["bg-url"]).value;u?Fe.getImageSize(u,(p,w)=>{this._isMounted&&i(u,p,w)}):i(null,0,0)}renderLabelChoices(n){return R.map(n,function([i,u]){return e.jsx("option",{value:u,children:i},u)})}validRange(n){return R.every(n,function(u){return R.isFinite(u)})?n[0]>=n[1]?"Range must have a higher number on the right":!0:"Range must be a valid number"}validateStepValue(n){const{step:i,range:u,name:p,minTicks:w,maxTicks:k}=n;if(!R.isFinite(i))return p+" must be a valid number";const b=vh(u,i);return b<w?p+" is too large, there must be at least "+w+" ticks.":b>k?p+" is too small, there can be at most "+k+" ticks.":!0}validSnapStep(n,i){return this.validateStepValue({step:n,range:i,name:"Snap step",minTicks:5,maxTicks:60})}validGridStep(n,i){return this.validateStepValue({step:n,range:i,name:"Grid step",minTicks:3,maxTicks:60})}validStep(n,i){return this.validateStepValue({step:n,range:i,name:"Step",minTicks:3,maxTicks:20})}validBackgroundImageSize(n){return n.url?n.width<=450&&n.height<=450?!0:"Image must be smaller than 450px x 450px.":!0}validateGraphSettings(n,i,u,p,w){const k=this;let b;if(!R.every(n,function(_){return b=k.validRange(_),b===!0})||!R.every(i,function(_,M){return b=k.validStep(_,n[M]),b===!0})||!R.every(u,function(_,M){return b=k.validGridStep(_,n[M]),b===!0})||!R.every(p,function(_,M){return b=k.validSnapStep(_,n[M]),b===!0}))return b;const G=this.validBackgroundImageSize(w);return G!==!0?(b=G,b):!0}changeLabel(n,i){const u=i.target.value,p=this.state.labelsTextbox.slice();p[n]=u,this.setState({labelsTextbox:p},this.changeGraph)}changeRange(n,i){const u=this.state.rangeTextbox.slice();u[n]=i;const p=this.state.stepTextbox.slice(),w=this.state.gridStepTextbox.slice(),k=this.state.snapStepTextbox.slice(),b=Fe.scaleFromExtent(u[n],this.props.box[n]);this.validRange(u[n])===!0&&(p[n]=Fe.tickStepFromExtent(u[n],this.props.box[n]),w[n]=Fe.gridStepFromTickStep(p[n],b),k[n]=w[n]/2),this.setState({stepTextbox:p,gridStepTextbox:w,snapStepTextbox:k,rangeTextbox:u},this.changeGraph)}changeStep(n){this.setState({stepTextbox:n},this.changeGraph)}changeSnapStep(n){this.setState({snapStepTextbox:n},this.changeGraph)}changeGridStep(n){this.setState({gridStepTextbox:n,snapStepTextbox:R.map(n,function(i){return i/2})},this.changeGraph)}changeGraph(){const n=this.state.labelsTextbox,i=R.map(this.state.rangeTextbox,function(N){return R.map(N,Number)}),u=R.map(this.state.stepTextbox,Number),p=this.state.gridStepTextbox,w=this.state.snapStepTextbox,k=this.state.backgroundImage,b=this.validateGraphSettings(i,u,p,w,k);b===!0?this.change({valid:!0,labels:n,range:i,step:u,gridStep:p,snapStep:w,backgroundImage:k}):this.change({valid:b})}render(){const n=[Yr.roundTo(2,Fe.scaleFromExtent(this.props.range[0],this.props.box[0])),Yr.roundTo(2,Fe.scaleFromExtent(this.props.range[1],this.props.box[1]))],{TeX:i}=_o();return e.jsxs("div",{children:[R.contains(this.props.editableSettings,"canvas")&&e.jsxs("div",{className:"graph-settings",children:[e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx("label",{htmlFor:"canvas-size",children:"Canvas size (x,y pixels)"}),e.jsx(ta,{id:"canvas-size",value:this.props.box,onChange:u=>{this.change({box:u})}})]}),e.jsxs("div",{className:"perseus-widget-row",children:["Scale (px per div):"," ",e.jsx(i,{children:"("+n[0]+", "+n[1]+")"})]})]}),R.contains(this.props.editableSettings,"graph")&&e.jsxs("div",{className:"graph-settings",children:[e.jsxs("div",{className:"perseus-widget-row",children:[e.jsxs("div",{className:"perseus-widget-left-col",children:[e.jsx("label",{htmlFor:"labels-x",children:"x Label"}),e.jsx("input",{id:"labels-x",type:"text",className:"graph-settings-axis-label",ref:"labels-0",onChange:u=>this.changeLabel(0,u),value:this.state.labelsTextbox[0]||""})]}),e.jsxs("div",{className:"perseus-widget-right-col",children:[e.jsx("label",{htmlFor:"labels-y",children:"y Label"}),e.jsx("input",{id:"labels-y",type:"text",className:"graph-settings-axis-label",ref:"labels-1",onChange:u=>this.changeLabel(1,u),value:this.state.labelsTextbox[1]||""})]})]}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsxs("div",{className:"perseus-widget-left-col",children:[e.jsx("label",{htmlFor:"range-x",children:"x Range"}),e.jsx(ta,{id:"range-x",value:this.state.rangeTextbox[0],onChange:u=>this.changeRange(0,u)})]}),e.jsxs("div",{className:"perseus-widget-right-col",children:[e.jsx("label",{htmlFor:"range-y",children:"y Range"}),e.jsx(ta,{id:"range-y",value:this.state.rangeTextbox[1],onChange:u=>this.changeRange(1,u)})]})]}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsxs("div",{className:"perseus-widget-left-col",children:[e.jsx("label",{htmlFor:"tick-step",children:"Tick Step"}),e.jsx(ta,{id:"tick-step",value:this.state.stepTextbox,onChange:this.changeStep})]}),e.jsxs("div",{className:"perseus-widget-right-col",children:[e.jsx("label",{htmlFor:"grid-step",children:"Grid Step"}),e.jsx(ta,{id:"grid-step",value:this.state.gridStepTextbox,onChange:this.changeGridStep})]})]}),R.contains(this.props.editableSettings,"snap")&&e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("div",{className:"perseus-widget-left-col",children:[e.jsx("label",{htmlFor:"snap-step",children:"Snap Step"}),e.jsx(ta,{id:"snap-step",value:this.state.snapStepTextbox,onChange:this.changeSnapStep})]})}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx("label",{children:"Markings: "}),e.jsx(bh,{value:this.props.markings,allowEmpty:!1,buttons:[{value:"graph",content:"Graph"},{value:"grid",content:"Grid"},{value:"none",content:"None"}],onChange:this.change("markings")})]}),e.jsx("div",{className:"perseus-widget-left-col",children:e.jsx(Ze,{label:"Show tooltips",checked:this.props.showTooltips,onChange:u=>{this.change({showTooltips:u})}})})]}),R.contains(this.props.editableSettings,"image")&&e.jsxs("div",{className:"image-settings",children:[e.jsx("div",{children:"Background image:"}),e.jsxs("div",{children:[e.jsx("label",{htmlFor:"bg-url",children:"Url:"}),e.jsx("input",{id:"bg-url",type:"text",className:"graph-settings-background-url",ref:"bg-url",value:this.state.backgroundImage.url||"",onChange:u=>{const p=R.clone(this.props.backgroundImage);p.url=u.target.value,this.setState({backgroundImage:p})},onKeyPress:this.changeBackgroundUrl,onBlur:this.changeBackgroundUrl}),e.jsx(wh,{children:e.jsx("p",{children:'Create an image in graphie, or use the "Add image" function to create a background.'})})]})]}),R.contains(this.props.editableSettings,"measure")&&e.jsxs("div",{className:"misc-settings",children:[e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx("div",{className:"perseus-widget-left-col",children:e.jsx(Ze,{label:"Show ruler",checked:this.props.showRuler,onChange:u=>{this.change({showRuler:u})}})}),e.jsx("div",{className:"perseus-widget-right-col",children:e.jsx(Ze,{label:"Show protractor",checked:this.props.showProtractor,onChange:u=>{this.change({showProtractor:u})}})})]}),this.props.showRuler&&e.jsxs("div",{children:[e.jsx("div",{children:e.jsxs("label",{children:[" ","Ruler label:"," ",e.jsxs("select",{onChange:this.changeRulerLabel,value:this.props.rulerLabel,children:[e.jsx("option",{value:"",children:"None"}),e.jsx("optgroup",{label:"Metric",children:this.renderLabelChoices([["milimeters","mm"],["centimeters","cm"],["meters","m"],["kilometers","km"]])}),e.jsx("optgroup",{label:"Imperial",children:this.renderLabelChoices([["inches","in"],["feet","ft"],["yards","yd"],["miles","mi"]])})]})]})}),e.jsx("div",{children:e.jsxs("label",{children:[" ","Ruler ticks:"," ",e.jsx("select",{onChange:this.changeRulerTicks,value:this.props.rulerTicks,children:R.map([1,2,4,8,10,16],function(u){return e.jsx("option",{value:u,children:u},u)})})]})})]})]})]})}}x(tr,"displayName"),x(tr,"defaultProps",{editableSettings:["graph","snap","image","measure"],box:[er.defaultBoxSizeSmall,er.defaultBoxSizeSmall],labels:["x","y"],range:[[-10,10],[-10,10]],step:[1,1],gridStep:[1,1],snapStep:[1,1],valid:!0,backgroundImage:fh,markings:"graph",rulerLabel:"",rulerTicks:10,showProtractor:!1,showRuler:!1,showTooltips:!1});tr.__docgenInfo={description:"",methods:[{name:"stateFromProps",docblock:null,modifiers:[],params:[{name:"props",optional:!1,type:null}],returns:null},{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"changeRulerLabel",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"changeRulerTicks",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"changeBackgroundUrl",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"renderLabelChoices",docblock:null,modifiers:[],params:[{name:"choices",optional:!1,type:null}],returns:null},{name:"validRange",docblock:null,modifiers:[],params:[{name:"range",optional:!1,type:null}],returns:null},{name:"validateStepValue",docblock:null,modifiers:[],params:[{name:"settings",optional:!1,type:null}],returns:null},{name:"validSnapStep",docblock:null,modifiers:[],params:[{name:"step",optional:!1,type:null},{name:"range",optional:!1,type:null}],returns:null},{name:"validGridStep",docblock:null,modifiers:[],params:[{name:"step",optional:!1,type:null},{name:"range",optional:!1,type:null}],returns:null},{name:"validStep",docblock:null,modifiers:[],params:[{name:"step",optional:!1,type:null},{name:"range",optional:!1,type:null}],returns:null},{name:"validBackgroundImageSize",docblock:null,modifiers:[],params:[{name:"image",optional:!1,type:null}],returns:null},{name:"validateGraphSettings",docblock:null,modifiers:[],params:[{name:"range",optional:!1,type:null},{name:"step",optional:!1,type:null},{name:"gridStep",optional:!1,type:null},{name:"snapStep",optional:!1,type:null},{name:"image",optional:!1,type:null}],returns:null},{name:"changeLabel",docblock:null,modifiers:[],params:[{name:"i",optional:!1,type:null},{name:"e",optional:!1,type:null}],returns:null},{name:"changeRange",docblock:null,modifiers:[],params:[{name:"i",optional:!1,type:null},{name:"values",optional:!1,type:null}],returns:null},{name:"changeStep",docblock:null,modifiers:[],params:[{name:"step",optional:!1,type:null}],returns:null},{name:"changeSnapStep",docblock:null,modifiers:[],params:[{name:"snapStep",optional:!1,type:null}],returns:null},{name:"changeGridStep",docblock:null,modifiers:[],params:[{name:"gridStep",optional:!1,type:null}],returns:null},{name:"changeGraph",docblock:null,modifiers:[],params:[],returns:null}],props:{editableSettings:{required:!1,tsType:{name:"ReadonlyArray",elements:[{name:"union",raw:'"canvas" | "graph" | "snap" | "image" | "measure"',elements:[{name:"literal",value:'"canvas"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"snap"'},{name:"literal",value:'"image"'},{name:"literal",value:'"measure"'}]}],raw:`ReadonlyArray<
    "canvas" | "graph" | "snap" | "image" | "measure"
>`},description:"",defaultValue:{value:'["graph", "snap", "image", "measure"]',computed:!1}},box:{required:!1,tsType:{name:"unknown"},description:"",defaultValue:{value:`[
    interactiveSizes.defaultBoxSizeSmall,
    interactiveSizes.defaultBoxSizeSmall,
]`,computed:!1}},labels:{required:!1,tsType:{name:"unknown"},description:"",defaultValue:{value:'["x", "y"]',computed:!1}},range:{required:!1,tsType:{name:"tuple",raw:"[Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}]},description:"",defaultValue:{value:`[
    [-10, 10],
    [-10, 10],
]`,computed:!1}},step:{required:!1,tsType:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},description:"",defaultValue:{value:"[1, 1]",computed:!1}},gridStep:{required:!1,tsType:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},description:"",defaultValue:{value:"[1, 1]",computed:!1}},snapStep:{required:!1,tsType:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},description:"",defaultValue:{value:"[1, 1]",computed:!1}},valid:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"true",computed:!1}},backgroundImage:{required:!1,tsType:{name:"any"},description:"",defaultValue:{value:`{
    url: null,
    width: 0,
    height: 0,
}`,computed:!1}},markings:{required:!1,tsType:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}]},description:"",defaultValue:{value:'"graph"',computed:!1}},showProtractor:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},showRuler:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},showTooltips:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},rulerLabel:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},rulerTicks:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"10",computed:!1}}}};const{InfoTip:kh,MultiButtonGroup:xh}=Ae,qh=Fc.widget,{chooseType:Ch,defaultPlotProps:Th,getEquationString:Ah,typeToButton:Sh}=Bp;class za extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"handleAvailableTypesChange",n=>{let i=this.props.correct;if(!R.contains(n,this.props.correct.type)){const u=this.props.graph,p=Ch(n);i=Th(p,u)}this.props.onChange({availableTypes:n,correct:i})});x(this,"serialize",()=>R.chain(this.props).pick("correct","availableTypes").extend({graph:R.omit(this.props.graph,"box")}).value())}render(){const n=bu.SMALL;let i,u;if(this.props.graph.valid===!0){const p={apiOptions:this.props.apiOptions,containerSizeClass:n,graph:this.props.graph,userInput:this.props.correct,handleUserInput:(w,k)=>{let b=this.props.correct;b.type===(w==null?void 0:w.type)?b=R.extend({},b,w):b=w,this.props.onChange({correct:b},k)},availableTypes:this.props.availableTypes,trackInteraction:function(){}};u=e.jsx(qh,{...p}),i=Ah(p.userInput)}else u=e.jsx("div",{className:"perseus-error",children:this.props.graph.valid});return e.jsxs("div",{children:[e.jsxs("div",{children:["Correct answer"," ",e.jsx(kh,{children:e.jsx("p",{children:"Graph the correct answer in the graph below and ensure the equation or point coordinates displayed represent the correct answer."})})," ",": ",i]}),e.jsx(tr,{editableSettings:["graph","snap","image"],box:yu(n),range:this.props.graph.range,labels:this.props.graph.labels,step:this.props.graph.step,gridStep:this.props.graph.gridStep,snapStep:this.props.graph.snapStep,valid:this.props.graph.valid,backgroundImage:this.props.graph.backgroundImage,markings:this.props.graph.markings,rulerLabel:this.props.graph.rulerLabel,rulerTicks:this.props.graph.rulerTicks,showTooltips:this.props.graph.showTooltips,onChange:this.change("graph")}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx("label",{children:"Available functions: "}),e.jsx(xh,{allowEmpty:!1,values:this.props.availableTypes,buttons:R.map(Ec,Sh),onChange:this.handleAvailableTypesChange})]}),u]})}}x(za,"propTypes",{...mn}),x(za,"widgetName","grapher"),x(za,"defaultProps",Oc.defaultWidgetOptions);za.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"handleAvailableTypesChange",docblock:null,modifiers:[],params:[{name:"newAvailableTypes",optional:!1,type:{name:"Array",elements:[{name:"any"}],raw:"Array<any>",alias:"Array"}}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"GrapherEditor",props:{graph:{defaultValue:{value:`{
    labels: ["x", "y"],
    range: [
        [-10, 10],
        [-10, 10],
    ],
    step: [1, 1],
    backgroundImage: {
        url: null,
    },
    markings: "graph",
    rulerLabel: "",
    rulerTicks: 10,
    valid: true,
    showTooltips: false,
}`,computed:!1},required:!1},correct:{defaultValue:{value:`{
    type: "linear",
    coords: null,
}`,computed:!1},required:!1},availableTypes:{defaultValue:{value:'["linear"]',computed:!1},required:!1}},composes:["@khanacademy/perseus"]};class _a extends F.Component{constructor(){super(...arguments);x(this,"editor",F.createRef());x(this,"getSaveWarnings",()=>{var n;return(n=this.editor.current)==null?void 0:n.getSaveWarnings()});x(this,"serialize",()=>{var n;return R.extend({},(n=this.editor.current)==null?void 0:n.serialize())})}render(){return e.jsx("div",{className:"perseus-group-editor",children:e.jsx(Pn,{ref:this.editor,content:this.props.content,widgets:this.props.widgets,apiOptions:this.props.apiOptions,images:this.props.images,widgetEnabled:!0,immutableWidgets:!1,onChange:this.props.onChange})})}}x(_a,"propTypes",{content:te.string,widgets:te.object,images:te.object,apiOptions:hi.propTypes}),x(_a,"widgetName","group"),x(_a,"defaultProps",Dc.defaultWidgetOptions);_a.__docgenInfo={description:"",methods:[{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"GroupEditor",props:{content:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},widgets:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},images:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},apiOptions:{description:"",type:{name:"shape",value:{isArticle:{name:"bool",required:!0},onFocusChange:{name:"func",required:!0},GroupMetadataEditor:{name:"func",required:!0},showAlignmentOptions:{name:"bool",required:!0},readOnly:{name:"bool",required:!0},answerableCallback:{name:"func",required:!1},getAnotherHint:{name:"func",required:!1},interactionCallback:{name:"func",required:!1},groupAnnotator:{name:"func",required:!0},imagePlaceholder:{name:"node",required:!1},widgetPlaceholder:{name:"node",required:!1},baseElements:{name:"shape",value:{Link:{name:"func",required:!1}},required:!1},imagePreloader:{name:"func",required:!1},trackInteraction:{name:"func",required:!1},customKeypad:{name:"bool",required:!1},nativeKeypadProxy:{name:"func",required:!1},isMobile:{name:"bool",required:!1},isMobileApp:{name:"bool",required:!1},setDrawingAreaAvailable:{name:"func",required:!1},hintProgressColor:{name:"string",required:!1},canScrollPage:{name:"bool",required:!1},editorChangeDelay:{name:"number",required:!1}}},required:!0}}};class Ro extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){return e.jsxs("fieldset",{children:[e.jsxs("label",{children:["Name:",e.jsx(et,{value:this.props.name,onChange:this.change("name")})]}),e.jsxs("label",{children:["Value:",e.jsx(et,{value:this.props.value,onChange:this.change("value")})]})]})}}x(Ro,"propTypes",{...mn,name:te.string,value:te.string}),x(Ro,"defaultProps",{name:"",value:""});class $u extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"handlePairChange",(n,i)=>{const u=this.props.pairs.slice();u[n]=i;const p=u[u.length-1];p.name&&p.value&&u.push({name:"",value:""}),this.change("pairs",u)});x(this,"serialize",()=>Ee.serialize.call(this))}render(){const n=R.map(this.props.pairs,(i,u)=>e.jsx(Ro,{name:i.name,value:i.value,onChange:this.handlePairChange.bind(this,u)},u));return e.jsx("div",{children:n})}}x($u,"propTypes",{...mn,pairs:te.arrayOf(te.shape({name:te.string,value:te.string})).isRequired});class Ba extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"handleSettingsChange",n=>{this.change({settings:n.pairs})});x(this,"serialize",()=>Ee.serialize.call(this))}render(){return e.jsxs("div",{children:[e.jsxs("div",{style:{fontWeight:"bold",textAlign:"center"},children:["This widget is deprecated! ",e.jsx("br",{}),"Try using the Video or CS Program widgets instead."]}),e.jsxs("label",{children:["Url or Program ID:",e.jsx(et,{value:this.props.url,onChange:this.change("url")})]}),e.jsx("br",{}),e.jsxs("label",{children:["Settings:",e.jsx($u,{name:"settings",pairs:this.props.settings,onChange:this.handleSettingsChange})]}),e.jsx("br",{}),e.jsxs("label",{children:["Width:",e.jsx(et,{value:this.props.width,onChange:this.change("width")})]}),e.jsxs("label",{children:["Height:",e.jsx(et,{value:this.props.height,onChange:this.change("height")})]}),e.jsx(Ze,{label:"Allow full screen",checked:this.props.allowFullScreen,onChange:n=>{this.props.onChange({allowFullScreen:n})}}),e.jsx("br",{}),e.jsx(Ze,{label:"Allow iframe content to redirect the page",checked:this.props.allowTopNavigation,onChange:n=>{this.props.onChange({allowTopNavigation:n})}})]})}}x(Ba,"propTypes",{...mn}),x(Ba,"widgetName","iframe"),x(Ba,"defaultProps",Mc.defaultWidgetOptions);Ba.__docgenInfo={description:"This is the main editor for this widget, to specify all the options.",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"handleSettingsChange",docblock:null,modifiers:[],params:[{name:"settings",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"IframeEditor",props:{url:{defaultValue:{value:'""',computed:!1},required:!1},settings:{defaultValue:{value:'[{name: "", value: ""}]',computed:!1},required:!1},width:{defaultValue:{value:'"400"',computed:!1},required:!1},height:{defaultValue:{value:'"400"',computed:!1},required:!1},allowFullScreen:{defaultValue:{value:"false",computed:!1},required:!1},allowTopNavigation:{defaultValue:{value:"false",computed:!1},required:!1}},composes:["@khanacademy/perseus"]};const{InfoTip:Ph}=Ae;function Wu({apiOptions:o,alt:l,backgroundImage:n,caption:i,onChange:u}){return n.url?e.jsxs("div",{className:"image-settings",children:[!Fe.isLabeledSVG(n.url)&&e.jsx("div",{children:e.jsxs("label",{children:[e.jsx("div",{children:"Preview:"}),e.jsx("img",{alt:"Editor preview of image",src:n.url,style:{width:"100%"}})]})}),e.jsx("div",{children:e.jsxs("label",{children:[e.jsx("div",{children:"Dimensions:"}),e.jsxs("p",{children:[n.width,"x",n.height]})]})}),e.jsx("div",{children:e.jsxs("label",{children:[e.jsxs("div",{children:["Alt text:",e.jsx(Ph,{children:"This is important for screenreaders. The content of this alt text will be formatted as markdown (tables, emphasis, etc. are supported)."})]}),e.jsx(Pn,{apiOptions:o,content:l,onChange:p=>{p.content!=null&&u({alt:p.content})},widgetEnabled:!1})]})}),e.jsx("div",{children:e.jsxs("label",{children:[e.jsx("div",{children:"Caption:"}),e.jsx(Pn,{apiOptions:o,content:i,onChange:p=>{p.content!=null&&u({caption:p.content})},widgetEnabled:!1})]})})]}):null}Wu.__docgenInfo={description:"",methods:[],displayName:"ImageSettings",props:{title:{required:!1,tsType:{name:"string"},description:""},caption:{required:!1,tsType:{name:"string"},description:""},alt:{required:!1,tsType:{name:"string"},description:""},backgroundImage:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]}},description:""},static:{required:!1,tsType:{name:"boolean"},description:""},labels:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    // Translatable Text; The content of the label to display
    content: string;
    // The visual alignment of the label. default: "center"
    alignment: string;
    // The point on the image to display the label
    coordinates: number[];
}`,signature:{properties:[{key:"content",value:{name:"string",required:!0}},{key:"alignment",value:{name:"string",required:!0}},{key:"coordinates",value:{name:"Array",elements:[{name:"number"}],raw:"number[]",required:!0}}]}}],raw:"Array<PerseusImageLabel>"},description:"@deprecated - labels were removed from the image widget in 2017"},range:{required:!1,tsType:{name:"tuple",raw:"[Interval, Interval]",elements:[{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}]}]},description:"@deprecated - range for labels was removed from the image widget in 2017"},box:{required:!1,tsType:{name:"tuple",raw:"[width: number, height: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:"@deprecated - box for labels was removed from the image widget in 2017"},apiOptions:{required:!0,tsType:{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newValues: Partial<PerseusImageWidgetOptions>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    // Translatable Markdown; Text to be shown for the title of the image
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    title?: string;
    // Translatable Markdown; Text to be shown in the caption section of an image
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    caption?: string;
    // Translatable Text; The alt text to be shown in the img.alt attribute
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    alt?: string;
    // The image details for the image to be displayed
    backgroundImage: PerseusImageBackground;
    // Always false.  Not used for this widget
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    static?: boolean;
    // A list of labels to display on the image
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    /** @deprecated - labels were removed from the image widget in 2017 */
    labels?: Array<PerseusImageLabel>;
    // The range on the image render for labels
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    /** @deprecated - range for labels was removed from the image widget in 2017 */
    range?: [Interval, Interval];
    // The box on the image render for labels. The same as backgroundImage.width and backgroundImage.height
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    /** @deprecated - box for labels was removed from the image widget in 2017 */
    box?: Size;
}`,signature:{properties:[{key:"title",value:{name:"string",required:!1}},{key:"caption",value:{name:"string",required:!1}},{key:"alt",value:{name:"string",required:!1}},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!0}},{key:"static",value:{name:"boolean",required:!1}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    // Translatable Text; The content of the label to display
    content: string;
    // The visual alignment of the label. default: "center"
    alignment: string;
    // The point on the image to display the label
    coordinates: number[];
}`,signature:{properties:[{key:"content",value:{name:"string",required:!0}},{key:"alignment",value:{name:"string",required:!0}},{key:"coordinates",value:{name:"Array",elements:[{name:"number"}],raw:"number[]",required:!0}}]}}],raw:"Array<PerseusImageLabel>",required:!1},description:"@deprecated - labels were removed from the image widget in 2017"},{key:"range",value:{name:"tuple",raw:"[Interval, Interval]",elements:[{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}]}],required:!1},description:"@deprecated - range for labels was removed from the image widget in 2017"},{key:"box",value:{name:"tuple",raw:"[width: number, height: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},description:"@deprecated - box for labels was removed from the image widget in 2017"}]}}],raw:"Partial<PerseusImageWidgetOptions>"},name:"newValues"}],return:{name:"void"}}},description:""}}};const{InfoTip:Nh}=Ae,Ih="(ka-.*.s3.amazonaws.com|(fastly|cdn).kastatic.org|khanacademy.org|kasandbox.org)",jh=new RegExp("^(https?|web\\+graphie)://[^/]*"+Ih);class Va extends F.Component{constructor(){super(...arguments);x(this,"_isMounted",!1);x(this,"state",{backgroundImageError:""})}componentDidMount(){this._isMounted=!0}componentWillUnmount(){this._isMounted=!1}setUrl(n,i,u,p){if(!this._isMounted)return;const w=R.clone(this.props.backgroundImage);w.url=n,w.width=i,w.height=u;const k=[w.width,w.height];this.props.onChange({backgroundImage:w,box:k})}async onUrlChange(n,i){if(!n){this.setUrl(n,0,0,i);return}if(!jh.test(n)){this.setState({backgroundImageError:"Images must be from sites hosted by Khan Academy. Please input a Khan Academy-owned address, or use the Add Image tool to rehost an existing image"});return}this.setState({backgroundImageError:""});try{const u=await Fe.getImageSizeModern(n);this.setUrl(n,u[0],u[1],!0)}catch(u){this.setState({backgroundImageError:`There was an error loading the image URL: ${JSON.stringify(u,null,2)}`})}}serialize(){return Ee.serialize.call(this)}render(){const n=this.props.backgroundImage,i=e.jsx("div",{className:"renderer-widget-error",children:this.state.backgroundImageError});return e.jsxs("div",{className:"perseus-image-editor",children:[e.jsxs("label",{children:["Image url:",e.jsx(Nh,{children:"Paste an image or graphie image URL."}),this.state.backgroundImageError&&i,e.jsx(et,{value:n.url||"",style:{width:332},onChange:u=>this.onUrlChange(u,!1)})]}),n.url&&e.jsx(Wu,{apiOptions:this.props.apiOptions,backgroundImage:n,alt:this.props.alt,caption:this.props.caption,onChange:this.props.onChange})]})}}x(Va,"displayName","ImageEditor"),x(Va,"widgetName","image"),x(Va,"defaultProps",zc.defaultWidgetOptions);Va.__docgenInfo={description:"An editor for adding an image widget that allows users to display and configure images within content.",methods:[{name:"setUrl",docblock:null,modifiers:[],params:[{name:"url",optional:!1,type:null},{name:"width",optional:!1,type:null},{name:"height",optional:!1,type:null},{name:"silent",optional:!1,type:null}],returns:null},{name:"onUrlChange",docblock:null,modifiers:["async"],params:[{name:"url",optional:!1,type:{name:"union",raw:"string | undefined | null",elements:[{name:"string"},{name:"undefined"},{name:"null"}]}},{name:"silent",optional:!1,type:{name:"boolean"}}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"ImageEditor",props:{apiOptions:{required:!0,tsType:{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},description:""},title:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},range:{required:!1,tsType:{name:"tuple",raw:"[Readonly<Range>, Readonly<Range>]",elements:[{name:"Readonly",elements:[{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}]}],raw:"Readonly<Range>"},{name:"Readonly",elements:[{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}]}],raw:"Readonly<Range>"}]},description:"",defaultValue:{value:`[
    [0, 10],
    [0, 10],
]`,computed:!1}},box:{required:!1,tsType:{name:"tuple",raw:"[width: number, height: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:"",defaultValue:{value:"[400, 400]",computed:!1}},backgroundImage:{required:!1,tsType:{name:"any"},description:"",defaultValue:{value:`{
    url: null,
    width: 0,
    height: 0,
}`,computed:!1}},labels:{required:!1,tsType:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},description:"",defaultValue:{value:"[]",computed:!1}},alt:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},caption:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newValues: Partial<PerseusImageWidgetOptions>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    // Translatable Markdown; Text to be shown for the title of the image
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    title?: string;
    // Translatable Markdown; Text to be shown in the caption section of an image
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    caption?: string;
    // Translatable Text; The alt text to be shown in the img.alt attribute
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    alt?: string;
    // The image details for the image to be displayed
    backgroundImage: PerseusImageBackground;
    // Always false.  Not used for this widget
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    static?: boolean;
    // A list of labels to display on the image
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    /** @deprecated - labels were removed from the image widget in 2017 */
    labels?: Array<PerseusImageLabel>;
    // The range on the image render for labels
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    /** @deprecated - range for labels was removed from the image widget in 2017 */
    range?: [Interval, Interval];
    // The box on the image render for labels. The same as backgroundImage.width and backgroundImage.height
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    /** @deprecated - box for labels was removed from the image widget in 2017 */
    box?: Size;
}`,signature:{properties:[{key:"title",value:{name:"string",required:!1}},{key:"caption",value:{name:"string",required:!1}},{key:"alt",value:{name:"string",required:!1}},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!0}},{key:"static",value:{name:"boolean",required:!1}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    // Translatable Text; The content of the label to display
    content: string;
    // The visual alignment of the label. default: "center"
    alignment: string;
    // The point on the image to display the label
    coordinates: number[];
}`,signature:{properties:[{key:"content",value:{name:"string",required:!0}},{key:"alignment",value:{name:"string",required:!0}},{key:"coordinates",value:{name:"Array",elements:[{name:"number"}],raw:"number[]",required:!0}}]}}],raw:"Array<PerseusImageLabel>",required:!1},description:"@deprecated - labels were removed from the image widget in 2017"},{key:"range",value:{name:"tuple",raw:"[Interval, Interval]",elements:[{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}]}],required:!1},description:"@deprecated - range for labels was removed from the image widget in 2017"},{key:"box",value:{name:"tuple",raw:"[width: number, height: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},description:"@deprecated - box for labels was removed from the image widget in 2017"}]}}],raw:"Partial<PerseusImageWidgetOptions>"},name:"newValues"}],return:{name:"void"}}},description:""}}};const{InlineIcon:qa}=Ae;class Wn extends F.Component{constructor(n){super(n);x(this,"toggle",n=>{n.preventDefault(),this.setState({show:!this.state.show})});this.state={show:n.initiallyVisible}}render(){return e.jsxs("div",{className:"perseus-interaction-element",children:[e.jsxs("a",{href:"#",className:"perseus-interaction-element-title "+(this.state.show?"open":"closed"),onClick:this.toggle,children:[this.state.show?e.jsx(qa,{..._c}):e.jsx(qa,{...Sp}),this.props.title]}),e.jsxs("div",{className:"perseus-interaction-element-content "+(this.state.show?"enter":"leave"),children:[this.props.children,(this.props.onUp!=null||this.props.onDown!=null||this.props.onDelete!=null)&&e.jsxs("div",{className:"edit-controls",children:[this.props.onUp!=null&&e.jsx("button",{onClick:this.props.onUp,children:e.jsx(qa,{...Pp})}),this.props.onDown!=null&&e.jsx("button",{onClick:this.props.onDown,children:e.jsx(qa,{...Np})}),this.props.onDelete!=null&&e.jsx("button",{onClick:this.props.onDelete,children:e.jsx(qa,{...pi})})]})]})]})}}x(Wn,"defaultProps",{initiallyVisible:!1,title:"More"});Wn.__docgenInfo={description:"",methods:[{name:"toggle",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent",alias:"React.SyntheticEvent"}}],returns:null}],displayName:"ElementContainer",props:{children:{required:!0,tsType:{name:"union",raw:"React.ReactElement<any> | ReadonlyArray<React.ReactElement<any>>",elements:[{name:"ReactReactElement",raw:"React.ReactElement<any>",elements:[{name:"any"}]},{name:"ReadonlyArray",elements:[{name:"ReactReactElement",raw:"React.ReactElement<any>",elements:[{name:"any"}]}],raw:"ReadonlyArray<React.ReactElement<any>>"}]},description:""},initiallyVisible:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onDelete:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void | null | undefined",signature:{arguments:[],return:{name:"union",raw:"void | null | undefined",elements:[{name:"void"},{name:"null"},{name:"undefined"}]}}},description:""},onDown:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void | null | undefined",signature:{arguments:[],return:{name:"union",raw:"void | null | undefined",elements:[{name:"void"},{name:"null"},{name:"undefined"}]}}},description:""},onUp:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void | null | undefined",signature:{arguments:[],return:{name:"union",raw:"void | null | undefined",elements:[{name:"void"},{name:"null"},{name:"undefined"}]}}},description:""},title:{required:!1,tsType:{name:"union",raw:"string | React.ReactElement<any>",elements:[{name:"string"},{name:"ReactReactElement",raw:"React.ReactElement<any>",elements:[{name:"any"}]}]},description:"",defaultValue:{value:'"More"',computed:!1}}}};const{ButtonGroup:Lh}=Ae,Rh=[sn.BLACK,sn.BLUE,sn.GREEN,sn.PINK,sn.PURPLE,sn.RED,sn.GRAY],Fh=[sn.LIGHT_BLUE,sn.LIGHT_ORANGE,sn.LIGHT_PINK,sn.LIGHT_GREEN,sn.LIGHT_PURPLE,sn.LIGHT_RED,"#fff"];class It extends F.Component{render(){const l=this.props.lightColors?Fh:Rh;return e.jsx(Lh,{value:this.props.value,allowEmpty:!1,buttons:R.map(l,n=>({value:n,content:e.jsxs("span",{children:[e.jsx("span",{className:"colorpicker-circle",style:{background:n}})," "]})})),onChange:this.props.onChange})}}x(It,"defaultProps",{value:sn.BLACK,lightColors:!1});It.__docgenInfo={description:"",methods:[],displayName:"ColorPicker",props:{lightColors:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},value:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"black"',computed:!1}}}};const{ButtonGroup:Oh}=Ae;class or extends F.Component{render(){return e.jsx(Oh,{value:this.props.value,allowEmpty:!1,buttons:[{value:"",content:e.jsx("span",{children:"—"})},{value:"-",content:e.jsx("span",{children:"–––"})},{value:"- ",content:e.jsx("span",{children:"–  –"})},{value:".",content:e.jsx("span",{children:"····"})},{value:". ",content:e.jsx("span",{children:"· · ·"})}],onChange:this.props.onChange})}}x(or,"defaultProps",{value:""});or.__docgenInfo={description:"",methods:[],displayName:"DashPicker",props:{value:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}}}};function Ie(o){const l=F.useRef(null),n=F.useRef(),{locale:i,strings:u}=Bc();return F.useEffect(()=>{l.current&&!n.current&&(n.current=Vc(l.current,i,u,p=>({...p,handlers:{edit:w=>{let k=w.latex();k=k.replace(/<>/g,"\\ne"),o.value!==k&&o.onChange(k)},upOutOf:w=>{w.typedText("^")}}})))}),e.jsx(Y,{style:Eh.outerWrapper,children:e.jsx("span",{ref:l,className:"perseus-math-input mq-editable-field mq-math-mode"})})}const Eh=ie.StyleSheet.create({outerWrapper:{display:"inline-block",borderStyle:"solid",borderWidth:1,borderColor:me.offBlack50,borderRadius:3,background:me.white}});Ie.__docgenInfo={description:`A simple Mathquill MathField input for the InteractionEditor.
Unlike our other uses of Mathquill, we're not using a keypad here;
it's just the input itself for use writing TeX.`,methods:[],displayName:"MathquillInput",props:{value:{required:!0,tsType:{name:"string"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string) => void",signature:{arguments:[{type:{name:"string"},name:"value"}],return:{name:"void"}}},description:""}}};const{NumberInput:Dh}=Ae,{getDependencies:Mh}=ct;class Zr extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const{TeX:n}=Mh();return e.jsxs("div",{className:"graph-settings",children:[e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx(n,{children:this.props.funcName+"(x)="})," ",e.jsx(Ie,{value:this.props.value,onChange:this.change("value")})]}),e.jsxs("div",{className:"perseus-widget-row",children:["Range: ",e.jsx(n,{children:"\\Large("}),e.jsx(Ie,{value:this.props.rangeMin,onChange:this.change("rangeMin")}),e.jsx(n,{children:","})," ",e.jsx(Ie,{value:this.props.rangeMax,onChange:this.change("rangeMax")}),e.jsx(n,{children:"\\Large)"})]}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(It,{value:this.props.color,onChange:this.change("color")})}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(or,{value:this.props.strokeDasharray,onChange:this.change("strokeDasharray")})}),e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("div",{className:"perseus-widget-left-col",children:["Width:"," ",e.jsx(Dh,{value:this.props.strokeWidth,placeholder:2,onChange:this.change("strokeWidth")})]})})]})}}x(Zr,"defaultProps",{value:"x",rangeMin:"-10",rangeMax:"10",color:sn.BLUE,strokeDasharray:"",strokeWidth:2});Zr.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"FunctionEditor",props:{value:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"x"',computed:!1}},rangeMin:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"-10"',computed:!1}},rangeMax:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"10"',computed:!1}},color:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"color.blue",computed:!0}},strokeDasharray:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},strokeWidth:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"2",computed:!1}}}};const{TextInput:zh}=Ae,{getDependencies:_h}=ct;class Qr extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const{TeX:n}=_h();return e.jsxs("div",{className:"graph-settings",children:[e.jsx("div",{className:"perseus-widget-row",children:e.jsx(zh,{value:this.props.label,onChange:this.change("label"),style:{width:"100%"}})}),e.jsxs("div",{className:"perseus-widget-row",children:["Location: ",e.jsx(n,{children:"\\Large("}),e.jsx(Ie,{value:this.props.coordX,onChange:this.change("coordX")}),e.jsx(n,{children:","})," ",e.jsx(Ie,{value:this.props.coordY,onChange:this.change("coordY")}),e.jsx(n,{children:"\\Large)"})]}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(It,{value:this.props.color,onChange:this.change("color")})})]})}}x(Qr,"defaultProps",{coordX:"0",coordY:"0",color:sn.BLACK,label:"\\phi"});Qr.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"LabelEditor",props:{color:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"black"',computed:!1}},coordX:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"0"',computed:!1}},coordY:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"0"',computed:!1}},label:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"\\\\phi"',computed:!1}}}};const{ButtonGroup:Bh}=Ae;class Ko extends F.Component{render(){return e.jsx(Bh,{value:this.props.value,allowEmpty:!1,buttons:[{value:"",content:e.jsx("span",{children:"—"})},{value:"->",content:e.jsx("span",{children:"→"})}],onChange:this.props.onChange})}}x(Ko,"defaultProps",{value:""});Ko.__docgenInfo={description:"",methods:[],displayName:"ArrowPicker",props:{value:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}}}};const{NumberInput:Vh}=Ae,{getDependencies:$h}=ct;class ei extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const{TeX:n}=$h();return e.jsxs("div",{className:"graph-settings",children:[e.jsxs("div",{className:"perseus-widget-row",children:["Start: ",e.jsx(n,{children:"\\Large("}),e.jsx(Ie,{value:this.props.startX,onChange:this.change("startX")}),e.jsx(n,{children:","})," ",e.jsx(Ie,{value:this.props.startY,onChange:this.change("startY")}),e.jsx(n,{children:"\\Large)"})]}),e.jsxs("div",{className:"perseus-widget-row",children:["End: ",e.jsx(n,{children:"\\Large("}),e.jsx(Ie,{value:this.props.endX,onChange:this.change("endX")}),e.jsx(n,{children:","})," ",e.jsx(Ie,{value:this.props.endY,onChange:this.change("endY")}),e.jsx(n,{children:"\\Large)"})]}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(It,{value:this.props.color,onChange:this.change("color")})}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx(or,{value:this.props.strokeDasharray,onChange:this.change("strokeDasharray")}),"   ",e.jsx(Ko,{value:this.props.arrows,onChange:this.change("arrows")})]}),e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("div",{className:"perseus-widget-left-col",children:["Width:"," ",e.jsx(Vh,{value:this.props.strokeWidth,placeholder:2,onChange:this.change("strokeWidth")})]})})]})}}x(ei,"defaultProps",{startX:"-5",startY:"5",endX:"5",endY:"5",color:sn.BLACK,strokeDasharray:"",arrows:"",strokeWidth:2});ei.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"LineEditor",props:{startX:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"-5"',computed:!1}},startY:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"5"',computed:!1}},endX:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"5"',computed:!1}},endY:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"5"',computed:!1}},color:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"black"',computed:!1}},strokeDasharray:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},arrows:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},strokeWidth:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"2",computed:!1}}}};const{ButtonGroup:Wh,NumberInput:Gh}=Ae;class wi extends F.Component{constructor(){super(...arguments);x(this,"change",n=>Le.call(this,n))}render(){const{TeX:n}=_o();return e.jsxs("div",{children:[e.jsxs("div",{className:"perseus-widget-row",children:["Constraint:"," ",e.jsx(Wh,{value:this.props.constraint,allowEmpty:!1,buttons:[{value:"none",content:"None"},{value:"snap",content:"Snap"},{value:"x",content:"x="},{value:"y",content:"y="}],onChange:this.change("constraint")})]}),this.props.constraint==="snap"&&e.jsxs("div",{className:"perseus-widget-row",children:["Snap:"," ",e.jsx(Gh,{value:this.props.snap,placeholder:0,onChange:this.change("snap")})]}),this.props.constraint==="x"&&e.jsx("div",{className:"graph-settings",children:e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx(n,{children:"x="})," ",e.jsx(Ie,{value:this.props.constraintFn,onChange:this.change("constraintFn")})]})}),this.props.constraint==="y"&&e.jsx("div",{className:"graph-settings",children:e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx(n,{children:"y="})," ",e.jsx(Ie,{value:this.props.constraintFn,onChange:this.change("constraintFn")})]})}),"Ensure these are set so nothing can be dragged off the canvas:",e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx(n,{children:"x \\in \\Large["})," ",e.jsx(Ie,{value:this.props.constraintXMin,onChange:this.change("constraintXMin")}),e.jsx(n,{children:", "})," ",e.jsx(Ie,{value:this.props.constraintXMax,onChange:this.change("constraintXMax")})," ",e.jsx(n,{children:"\\Large]"})]})}),e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx(n,{children:"y \\in \\Large["})," ",e.jsx(Ie,{value:this.props.constraintYMin,onChange:this.change("constraintYMin")}),e.jsx(n,{children:", "})," ",e.jsx(Ie,{value:this.props.constraintYMax,onChange:this.change("constraintYMax")})," ",e.jsx(n,{children:"\\Large]"})]})})]})}}x(wi,"defaultProps",{constraint:"none",snap:.5,constraintFn:"0",constraintXMin:"-10",constraintXMax:"10",constraintYMin:"-10",constraintYMax:"10"});wi.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"propName",optional:!1,type:{name:"string"}}],returns:{type:{name:"unknown"}}}],displayName:"ConstraintEditor",props:{constraint:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"none"',computed:!1}},constraintFn:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"0"',computed:!1}},constraintXMax:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"10"',computed:!1}},constraintXMin:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"-10"',computed:!1}},constraintYMax:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"10"',computed:!1}},constraintYMin:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"-10"',computed:!1}},snap:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0.5",computed:!1}}}};const{NumberInput:Rs}=Ae,{getDependencies:Hh}=ct;class ni extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const{TeX:n}=Hh();return e.jsxs("div",{className:"graph-settings",children:["Initial position:",e.jsxs("div",{className:"perseus-widget-row",children:["Start: ",e.jsx(n,{children:"\\Large("}),e.jsx(Ie,{value:this.props.startX,onChange:this.change("startX")}),e.jsx(n,{children:","})," ",e.jsx(Ie,{value:this.props.startY,onChange:this.change("startY")}),e.jsx(n,{children:"\\Large)"})]}),e.jsxs("div",{className:"perseus-widget-row",children:["End: ",e.jsx(n,{children:"\\Large("}),e.jsx(Ie,{value:this.props.endX,onChange:this.change("endX")}),e.jsx(n,{children:","})," ",e.jsx(Ie,{value:this.props.endY,onChange:this.change("endY")}),e.jsx(n,{children:"\\Large)"})]}),e.jsxs("div",{className:"perseus-widget-row",children:["Start updates ",e.jsx(n,{children:"(x_n, y_n)"})," for ",e.jsx(n,{children:"n ="}),e.jsx(Rs,{value:this.props.startSubscript,placeholder:0,onChange:this.change("startSubscript")})]}),e.jsxs("div",{className:"perseus-widget-row",children:["End updates ",e.jsx(n,{children:"(x_m, y_m)"})," for ",e.jsx(n,{children:"m ="}),e.jsx(Rs,{value:this.props.endSubscript,placeholder:0,onChange:this.change("endSubscript")})]}),e.jsx("div",{className:"perseus-widget-row",children:"All constraints are applied to the start point."}),e.jsx(wi,{...this.props})]})}}x(ni,"defaultProps",{startX:"-5",startY:"5",endX:"5",endY:"5",constraint:"none",snap:.5,constraintFn:"0",constraintXMin:"-10",constraintXMax:"10",constraintYMin:"-10",constraintYMax:"10"});ni.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"MovableLineEditor",props:{startX:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"-5"',computed:!1}},startY:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"5"',computed:!1}},endX:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"5"',computed:!1}},endY:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"5"',computed:!1}},constraint:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"none"',computed:!1}},snap:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0.5",computed:!1}},constraintFn:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"0"',computed:!1}},startSubscript:{required:!0,tsType:{name:"number"},description:""},endSubscript:{required:!0,tsType:{name:"number"},description:""},constraintXMin:{defaultValue:{value:'"-10"',computed:!1},required:!1},constraintXMax:{defaultValue:{value:'"10"',computed:!1},required:!1},constraintYMin:{defaultValue:{value:'"-10"',computed:!1},required:!1},constraintYMax:{defaultValue:{value:'"10"',computed:!1},required:!1}}};const{NumberInput:Uh}=Ae,{getDependencies:Kh}=ct;class ti extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const{TeX:n}=Kh();return e.jsxs("div",{className:"graph-settings",children:[e.jsxs("div",{className:"perseus-widget-row",children:["Start: ",e.jsx(n,{children:"\\Large("}),e.jsx(Ie,{value:this.props.startX,onChange:this.change("startX")}),e.jsx(n,{children:","})," ",e.jsx(Ie,{value:this.props.startY,onChange:this.change("startY")}),e.jsx(n,{children:"\\Large)"})]}),e.jsxs("div",{className:"perseus-widget-row",children:["Update ",e.jsx(n,{children:"(x_n, y_n)"})," for ",e.jsx(n,{children:"n ="})," ",e.jsx(Uh,{value:this.props.varSubscript,placeholder:0,onChange:this.change("varSubscript")})]}),e.jsx(wi,{...this.props})]})}}x(ti,"defaultProps",{startX:"0",startY:"0",constraint:"none",snap:.5,constraintFn:"0",constraintXMin:"-10",constraintXMax:"10",constraintYMin:"-10",constraintYMax:"10"});ti.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"MovablePointEditor",props:{startX:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"0"',computed:!1}},startY:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"0"',computed:!1}},constraint:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"none"',computed:!1}},snap:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0.5",computed:!1}},constraintFn:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"0"',computed:!1}},varSubscript:{required:!0,tsType:{name:"number"},description:""},constraintXMin:{defaultValue:{value:'"-10"',computed:!1},required:!1},constraintXMax:{defaultValue:{value:'"10"',computed:!1},required:!1},constraintYMin:{defaultValue:{value:'"-10"',computed:!1},required:!1},constraintYMax:{defaultValue:{value:'"10"',computed:!1},required:!1}}};const{NumberInput:Xh}=Ae,{getDependencies:Yh}=ct;class ai extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const{TeX:n}=Yh();return e.jsxs("div",{className:"graph-settings",children:[e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx(n,{children:"X(t) ="})," ",e.jsx(Ie,{value:this.props.x,onChange:this.change("x")})]}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx(n,{children:"Y(t) ="})," ",e.jsx(Ie,{value:this.props.y,onChange:this.change("y")})]}),e.jsxs("div",{className:"perseus-widget-row",children:["Range: ",e.jsx(n,{children:"\\Large("}),e.jsx(Ie,{value:this.props.rangeMin,onChange:this.change("rangeMin")}),e.jsx(n,{children:","})," ",e.jsx(Ie,{value:this.props.rangeMax,onChange:this.change("rangeMax")}),e.jsx(n,{children:"\\Large)"})]}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(It,{value:this.props.color,onChange:this.change("color")})}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(or,{value:this.props.strokeDasharray,onChange:this.change("strokeDasharray")})}),e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("div",{className:"perseus-widget-left-col",children:["Width:"," ",e.jsx(Xh,{value:this.props.strokeWidth,placeholder:2,onChange:this.change("strokeWidth")})]})})]})}}x(ai,"defaultProps",{x:"cos(t)",y:"sin(t)",rangeMin:"0",rangeMax:"2\\pi",color:sn.BLUE,strokeDasharray:"",strokeWidth:2});ai.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"ParametricEditor",props:{x:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"cos(t)"',computed:!1}},y:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"sin(t)"',computed:!1}},rangeMin:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"0"',computed:!1}},rangeMax:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"2\\\\pi"',computed:!1}},color:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:"color.blue",computed:!0}},strokeDasharray:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}},strokeWidth:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"2",computed:!1}}}};const{getDependencies:Jh}=ct;class ri extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const{TeX:n}=Jh();return e.jsxs("div",{className:"graph-settings",children:[e.jsxs("div",{className:"perseus-widget-row",children:["Coordinate: ",e.jsx(n,{children:"\\Large("}),e.jsx(Ie,{value:this.props.coordX,onChange:this.change("coordX")}),e.jsx(n,{children:","})," ",e.jsx(Ie,{value:this.props.coordY,onChange:this.change("coordY")}),e.jsx(n,{children:"\\Large)"})]}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(It,{value:this.props.color,onChange:this.change("color")})})]})}}x(ri,"defaultProps",{coordX:"0",coordY:"0",color:sn.BLACK});ri.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"PointEditor",props:{coordX:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"0"',computed:!1}},coordY:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"0"',computed:!1}},color:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"black"',computed:!1}}}};const{getDependencies:Zh}=ct;class ii extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const{TeX:n}=Zh();return e.jsxs("div",{className:"graph-settings",children:[e.jsxs("div",{className:"perseus-widget-row",children:["Bottom left: ",e.jsx(n,{children:"\\Large("}),e.jsx(Ie,{value:this.props.coordX,onChange:this.change("coordX")}),e.jsx(n,{children:","})," ",e.jsx(Ie,{value:this.props.coordY,onChange:this.change("coordY")}),e.jsx(n,{children:"\\Large)"})]}),e.jsxs("div",{className:"perseus-widget-row",children:["Width:"," ",e.jsx(Ie,{value:this.props.width,onChange:this.change("width")})]}),e.jsxs("div",{className:"perseus-widget-row",children:["Height:"," ",e.jsx(Ie,{value:this.props.height,onChange:this.change("height")})]}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(It,{value:this.props.color,lightColors:!0,onChange:this.change("color")})}),e.jsx("div",{className:"perseus-widget-row",children:"You want a border? Sorry, draw your own."})]})}}x(ii,"defaultProps",{coordX:"-5",coordY:"5",width:"2",height:"3",color:sn.LIGHT_BLUE});ii.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"RectangleEditor",props:{color:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"#9AB8ED"',computed:!1}},coordX:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"-5"',computed:!1}},coordY:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"5"',computed:!1}},height:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"3"',computed:!1}},width:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"2"',computed:!1}}}};const{getDependencies:Qh}=ct,{unescapeMathMode:e0}=Fe;class oi extends F.Component{constructor(){super(...arguments);x(this,"state",{usedVarSubscripts:this._getAllVarSubscripts(this.props.elements),usedFunctionNames:this._getAllFunctionNames(this.props.elements)});x(this,"_updateGraphProps",n=>{this.change({graph:R.extend(R.omit(n,"step"),{tickStep:n.step})})});x(this,"_addNewElement",n=>{const i=n.target.value;if(i==="")return;n.target.value="";const u={type:i,key:i+"-"+(Math.random()*16777215<<0).toString(16),options:i==="point"?R.clone(ri.defaultProps):i==="line"?R.clone(ei.defaultProps):i==="movable-point"?R.clone(ti.defaultProps):i==="movable-line"?R.clone(ni.defaultProps):i==="function"?R.clone(Zr.defaultProps):i==="parametric"?R.clone(ai.defaultProps):i==="label"?R.clone(Qr.defaultProps):i==="rectangle"?R.clone(ii.defaultProps):{}};let p;if(i==="movable-point")p=R.max([R.max(this.state.usedVarSubscripts),-1])+1,u.options.varSubscript=p;else if(i==="movable-line")p=R.max([R.max(this.state.usedVarSubscripts),-1])+1,u.options.startSubscript=p,u.options.endSubscript=p+1;else if(i==="function"){const w=String.fromCharCode(R.max([R.max(R.map(this.state.usedFunctionNames,function(k){return k.charCodeAt(0)})),101])+1);u.options.funcName=w}this.change({elements:this.props.elements.concat(u)})});x(this,"_deleteElement",n=>{const i=this.props.elements[n];this.change({elements:R.without(this.props.elements,i)})});x(this,"_moveElementUp",n=>{const i=this.props.elements[n],u=R.without(this.props.elements,i);u.splice(n-1,0,i),this.change({elements:u})});x(this,"_moveElementDown",n=>{const i=this.props.elements[n],u=R.without(this.props.elements,i);u.splice(n+1,0,i),this.change({elements:u})});x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}UNSAFE_componentWillReceiveProps(n){this.setState({usedVarSubscripts:this._getAllVarSubscripts(n.elements),usedFunctionNames:this._getAllFunctionNames(n.elements)})}_getAllVarSubscripts(n){return R.map(R.where(n,{type:"movable-point"}),i=>i.options.varSubscript).concat(R.map(R.where(n,{type:"movable-line"}),i=>i.options.startSubscript)).concat(R.map(R.where(n,{type:"movable-line"}),i=>i.options.endSubscript))}_getAllFunctionNames(n){return R.map(R.where(n,{type:"function"}),i=>i.options.funcName)}render(){const{TeX:n}=Qh();return e.jsxs("div",{className:"perseus-widget-interaction-editor",children:[e.jsxs(Wn,{title:"Grid settings",children:[e.jsx(tr,{editableSettings:["canvas","graph"],box:this.props.graph.box,labels:this.props.graph.labels,range:this.props.graph.range,step:this.props.graph.tickStep,gridStep:this.props.graph.gridStep,markings:this.props.graph.markings,onChange:this._updateGraphProps}),e.jsx(e.Fragment,{children:this.props.graph.valid!==!0&&e.jsx("div",{children:this.props.graph.valid})})]}),R.map(this.props.elements,function(i,u){if(i.type==="movable-point")return e.jsx(Wn,{title:e.jsxs("span",{children:["Movable point"," ",e.jsx(n,{children:"(x_{"+i.options.varSubscript+"}, y_{"+i.options.varSubscript+"})"})]}),onUp:u===0?null:this._moveElementUp.bind(this,u),onDown:u===this.props.elements.length-1?null:this._moveElementDown.bind(this,u),onDelete:this._deleteElement.bind(this,u),children:e.jsx(ti,{...i.options,onChange:p=>{const w=JSON.parse(JSON.stringify(this.props.elements));R.extend(w[u].options,p),this.change({elements:w})}})},i.key);if(i.type==="movable-line")return e.jsx(Wn,{title:e.jsxs("span",{children:["Movable line"," ",e.jsx(n,{children:"(x_{"+i.options.startSubscript+"}, y_{"+i.options.startSubscript+"})"})," ","to"," ",e.jsx(n,{children:"(x_{"+i.options.endSubscript+"}, y_{"+i.options.endSubscript+"})"})]}),onUp:u===0?null:this._moveElementUp.bind(this,u),onDown:u===this.props.elements.length-1?null:this._moveElementDown.bind(this,u),onDelete:this._deleteElement.bind(this,u),children:e.jsx(ni,{...i.options,onChange:p=>{const w=JSON.parse(JSON.stringify(this.props.elements));R.extend(w[u].options,p),this.change({elements:w})}})},i.key);if(i.type==="point")return e.jsx(Wn,{title:e.jsxs("span",{children:["Point"," ",e.jsx(n,{children:"("+i.options.coordX+", "+i.options.coordY+")"})]}),onUp:u===0?null:this._moveElementUp.bind(this,u),onDown:u===this.props.elements.length-1?null:this._moveElementDown.bind(this,u),onDelete:this._deleteElement.bind(this,u),children:e.jsx(ri,{...i.options,onChange:p=>{const w=JSON.parse(JSON.stringify(this.props.elements));R.extend(w[u].options,p),this.change({elements:w})}})},i.key);if(i.type==="line")return e.jsx(Wn,{title:e.jsxs("span",{children:["Line"," ",e.jsx(n,{children:"("+i.options.startX+", "+i.options.startY+")"})," ","to"," ",e.jsx(n,{children:"("+i.options.endX+", "+i.options.endY+")"})]}),onUp:u===0?null:this._moveElementUp.bind(this,u),onDown:u===this.props.elements.length-1?null:this._moveElementDown.bind(this,u),onDelete:this._deleteElement.bind(this,u),children:e.jsx(ei,{...i.options,onChange:p=>{const w=JSON.parse(JSON.stringify(this.props.elements));R.extend(w[u].options,p),this.change({elements:w})}})},i.key);if(i.type==="function")return e.jsx(Wn,{title:e.jsxs("span",{children:["Function"," ",e.jsx(n,{children:i.options.funcName+"(x) = "+i.options.value})]}),onUp:u===0?null:this._moveElementUp.bind(this,u),onDown:u===this.props.elements.length-1?null:this._moveElementDown.bind(this,u),onDelete:this._deleteElement,children:e.jsx(Zr,{...i.options,onChange:p=>{const w=JSON.parse(JSON.stringify(this.props.elements));R.extend(w[u].options,p),this.change({elements:w})}})},i.key);if(i.type==="parametric")return e.jsx(Wn,{title:e.jsx("span",{children:"Parametric"}),onUp:u===0?null:this._moveElementUp.bind(this,u),onDown:u===this.props.elements.length-1?null:this._moveElementDown.bind(this,u),onDelete:this._deleteElement,children:e.jsx(ai,{...i.options,onChange:p=>{const w=JSON.parse(JSON.stringify(this.props.elements));R.extend(w[u].options,p),this.change({elements:w})}})},i.key);if(i.type==="label")return e.jsx(Wn,{title:e.jsxs("span",{children:["Label"," ",e.jsx(n,{children:e0(i.options.label)})," "]}),onUp:u===0?null:this._moveElementUp.bind(this,u),onDown:u===this.props.elements.length-1?null:this._moveElementDown.bind(this,u),onDelete:this._deleteElement,children:e.jsx(Qr,{...i.options,onChange:p=>{const w=JSON.parse(JSON.stringify(this.props.elements));R.extend(w[u].options,p),this.change({elements:w})}})},i.key);if(i.type==="rectangle")return e.jsx(Wn,{title:e.jsxs("span",{children:["Rectangle"," ",e.jsx(n,{children:"("+i.options.coordX+", "+i.options.coordY+")"})," — ",e.jsx(n,{children:i.options.width+" \\times "+i.options.height})]}),onUp:u===0?null:this._moveElementUp.bind(this,u),onDown:u===this.props.elements.length-1?null:this._moveElementDown.bind(this,u),onDelete:this._deleteElement,children:e.jsx(ii,{...i.options,onChange:p=>{const w=JSON.parse(JSON.stringify(this.props.elements));R.extend(w[u].options,p),this.change({elements:w})}})},i.key)},this),e.jsx("div",{className:"perseus-widget-interaction-editor-select-element",children:e.jsxs("select",{onChange:this._addNewElement,children:[e.jsxs("option",{value:"",children:["Add an element","…"]}),e.jsx("option",{disabled:!0,children:"--"}),e.jsx("option",{value:"point",children:"Point"}),e.jsx("option",{value:"line",children:"Line segment"}),e.jsx("option",{value:"function",children:"Function plot"}),e.jsx("option",{value:"parametric",children:"Parametric plot"}),e.jsx("option",{value:"label",children:"Label"}),e.jsx("option",{value:"rectangle",children:"Rectangle"}),e.jsx("option",{value:"movable-point",children:"★ Movable point"}),e.jsx("option",{value:"movable-line",children:"★ Movable line segment"})]})})]})}}x(oi,"widgetName","interaction"),x(oi,"defaultProps",$c.defaultWidgetOptions);oi.__docgenInfo={description:`An editor for the interaction widget that allows users to engage with interactive content.

The interaction widget provides a dynamic graph interface with various interactive elements
including points, lines, movable points, movable lines, functions, parametric curves,
labels, and rectangles. This editor allows content creators to configure those elements
and their properties.`,methods:[{name:"_getAllVarSubscripts",docblock:null,modifiers:[],params:[{name:"elements",optional:!1,type:{name:"ReadonlyArray",elements:[{name:"any"}],raw:"ReadonlyArray<any>",alias:"ReadonlyArray"}}],returns:{type:{name:"ReadonlyArray",elements:[{name:"any"}],raw:"ReadonlyArray<any>"}}},{name:"_getAllFunctionNames",docblock:null,modifiers:[],params:[{name:"elements",optional:!1,type:{name:"ReadonlyArray",elements:[{name:"any"}],raw:"ReadonlyArray<any>",alias:"ReadonlyArray"}}],returns:{type:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"}}},{name:"_updateGraphProps",docblock:null,modifiers:[],params:[{name:"newProps",optional:!1,type:null}],returns:null},{name:"_addNewElement",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"_deleteElement",docblock:null,modifiers:[],params:[{name:"index",optional:!1,type:null}],returns:null},{name:"_moveElementUp",docblock:null,modifiers:[],params:[{name:"index",optional:!1,type:null}],returns:null},{name:"_moveElementDown",docblock:null,modifiers:[],params:[{name:"index",optional:!1,type:null}],returns:null},{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"InteractionEditor",props:{elements:{required:!1,tsType:{name:"ReadonlyArray",elements:[{name:"any"}],raw:"ReadonlyArray<any>"},description:"",defaultValue:{value:"[]",computed:!1}},graph:{required:!1,tsType:{name:"signature",type:"object",raw:`{
    box: ReadonlyArray<number>;
    labels: ReadonlyArray<string>;
    range: Coords;
    tickStep: [number, number];
    gridStep: [number, number];
    markings: MarkingsType;
    valid?: boolean;
}`,signature:{properties:[{key:"box",value:{name:"ReadonlyArray",elements:[{name:"number"}],raw:"ReadonlyArray<number>",required:!0}},{key:"labels",value:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",required:!0}},{key:"range",value:{name:"tuple",raw:"[Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],required:!0}},{key:"tickStep",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"gridStep",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"markings",value:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}],required:!0}},{key:"valid",value:{name:"boolean",required:!1}}]}},description:"",defaultValue:{value:`{
    box: [400, 400],
    labels: ["x", "y"],
    range: [
        [-10, 10],
        [-10, 10],
    ],
    tickStep: [1, 1],
    gridStep: [1, 1],
    markings: "graph",
}`,computed:!1}}}};const n0={marginBlock:Q.size_080},t0={minHeight:100},la=40,Gu=9,Hu=9,Qn={clearSearch:"Clear search",filter:"Filter",noResults:"No results",someSelected:o=>o===1?"1 item":`${o} items`};var a0={listbox:{border:{radius:ke.radius.radius_040},layout:{padding:{inline:Q.size_0,block:Q.size_040}},shadow:{default:`0 ${Q.size_080} ${Q.size_080} 0 ${pe.core.shadow.transparent}`}},opener:{border:{width:{error:ke.width.thin},radius:{rest:ke.radius.radius_040}},color:{icon:pe.core.foreground.neutral.default},layout:{padding:{inline:Q.size_160,inlineStart:Q.size_160,inlineEnd:Q.size_120}}},item:{border:{radius:{default:ke.radius.radius_040,press:ke.radius.radius_040}},layout:{padding:{block:Q.size_100,inlineStart:Q.size_080,inlineEnd:Q.size_160}},font:{weight:Pt.weight.regular}}},$e=vu(a0,"--wb-c-dropdown-");class ar extends F.Component{static isClassOf(l){return l&&l.type&&l.type.__IS_ACTION_ITEM__}render(){const{disabled:l,horizontalRule:n,href:i,target:u,indent:p,label:w,lang:k,leftAccessory:b,rightAccessory:N,onClick:O,role:B,style:V,subtitle1:G,subtitle2:_,testId:M,active:oe}=this.props,W=[Ca.wrapper,V],U=typeof w=="string"?e.jsx(sa,{tag:"div",lang:k,style:Ca.label,children:w}):F.cloneElement(w,{lang:k,style:Ca.label,...w.props});return e.jsx(fu,{disabled:l,horizontalRule:n,leftAccessory:b,rightAccessory:N,style:[W,Ca.shared,p&&Ca.indent],role:B,testId:M,subtitle1:G,title:U,subtitle2:_,href:i,target:u,onClick:O,active:oe})}}ar.defaultProps={disabled:!1,horizontalRule:"none",indent:!1,role:"menuitem"};ar.__IS_ACTION_ITEM__=!0;const Ca=ie.StyleSheet.create({wrapper:{minHeight:la,touchAction:"manipulation",":focus":{borderRadius:$e.item.border.radius.default,outline:Fn.focus[":focus-visible"].outline,outlineOffset:`calc(${ke.width.medium} * -1)`,boxShadow:`inset 0 0 0 calc(${ke.width.medium}*2) ${pe.focus.inner}`,":after":{content:"unset"}}},shared:{minHeight:la,paddingBlock:$e.item.layout.padding.block},label:{fontWeight:$e.item.font.weight,lineHeight:Q.size_200,whiteSpace:"nowrap",userSelect:"none"},indent:{paddingInlineStart:Q.size_320}}),r0=function(o){const{selected:l,disabled:n}=o,i=n?pe.core.foreground.disabled.strong:pe.core.foreground.instructive.default;return e.jsx(nt,{color:i,icon:Bo,size:"small",style:[Fs.bounds,!l&&Fs.hide]})},Fs=ie.StyleSheet.create({bounds:{alignSelf:"center",height:Q.size_160,minHeight:Q.size_160,minWidth:Q.size_160},hide:{visibility:"hidden"}}),i0=function(o){const{disabled:l,selected:n}=o;return e.jsx(Y,{className:"checkbox",style:[Mr.checkbox,n&&!l&&Mr.selected,l&&Mr.disabledCheckbox],children:n&&e.jsx(nt,{icon:Bo,size:"small",className:"check",style:[{width:Q.size_120,height:Q.size_120,margin:Q.size_020},l&&n&&Mr.disabledCheckFormatting]})})},aa={color:{default:{border:pe.input.default.border,background:pe.input.default.background},disabled:{border:pe.input.disabled.border,background:pe.input.disabled.background},selected:{background:pe.input.checked.background,foreground:pe.input.checked.foreground}}},Mr=ie.StyleSheet.create({checkbox:{alignSelf:"center",minHeight:Q.size_160,minWidth:Q.size_160,height:Q.size_160,background:aa.color.default.background,borderRadius:3,borderWidth:ke.width.thin,borderStyle:"solid",borderColor:aa.color.default.border},selected:{borderWidth:0,background:aa.color.selected.background,color:aa.color.selected.foreground},disabledCheckbox:{borderColor:aa.color.disabled.border,backgroundColor:aa.color.disabled.background},disabledCheckFormatting:{position:"absolute",top:-1,left:-1}});class we extends F.Component{static isClassOf(l){return l&&l.type&&l.type.__IS_OPTION_ITEM__}getCheckComponent(){return this.props.variant==="check"?r0:i0}render(){const{disabled:l,focused:n,label:i,selected:u,testId:p,leftAccessory:w,horizontalRule:k,parentComponent:b,rightAccessory:N,style:O,subtitle1:B,subtitle2:V,value:G,onClick:_,onToggle:M,variant:oe,role:W,...U}=this.props,E=this.getCheckComponent(),A=[Ta.optionItem,O],$=[Ta.listboxOptionItem,n&&Ta.listboxOptionItemFocused],J=[Ta.selectOptionItem];return e.jsx(fu,{disabled:l,horizontalRule:k,style:[A,b==="listbox"?$:J],"aria-selected":u?"true":"false",role:W,testId:p,leftAccessory:e.jsx(e.Fragment,{children:w?e.jsxs(Y,{style:{flexDirection:"row",gap:Q.size_080},children:[e.jsx(E,{disabled:l,selected:u}),w]}):e.jsx(E,{disabled:l,selected:u})}),rightAccessory:N,subtitle1:B,title:e.jsx(sa,{tag:"div",style:Ta.label,children:i}),subtitle2:V,onClick:this.handleClick,tabIndex:b==="listbox"?-1:void 0,...U})}constructor(...l){super(...l),this.handleClick=()=>{const{onClick:n,onToggle:i,value:u}=this.props;i(u),n&&n()}}}we.defaultProps={disabled:!1,focused:!1,horizontalRule:"none",onToggle:()=>{},role:"option",selected:!1};we.__IS_OPTION_ITEM__=!0;const yo={borderRadius:$e.item.border.radius.default,outline:Fn.focus[":focus-visible"].outline,outlineOffset:`calc(${ke.width.medium} * -1)`,boxShadow:`inset 0 0 0 calc(${ke.width.medium}*2) ${pe.focus.inner}`},Os={outline:"none",boxShadow:"none"},Ta=ie.StyleSheet.create({optionItem:{paddingBlock:$e.item.layout.padding.block,paddingInlineStart:$e.item.layout.padding.inlineStart,paddingInlineEnd:$e.item.layout.padding.inlineEnd,whiteSpace:"nowrap",minHeight:Q.size_400,":active":{borderRadius:$e.item.border.radius.press},":is([aria-disabled=true])":{":focus":Os}},listboxOptionItem:{":focus-visible":Os},listboxOptionItemFocused:{...yo,":focus-visible":yo},selectOptionItem:{":focus":yo},label:{fontWeight:$e.item.font.weight,lineHeight:Q.size_200,whiteSpace:"nowrap",userSelect:"none",overflow:"hidden",textOverflow:"ellipsis"},hide:{visibility:"hidden"}});class $t extends F.Component{static isClassOf(l){return l&&l.type&&l.type.__IS_SEPARATOR_ITEM__}render(){return e.jsx(Y,{style:[o0.separator,this.props.style],"aria-hidden":"true"})}}$t.__IS_SEPARATOR_ITEM__=!0;const o0=ie.StyleSheet.create({separator:{borderTop:`${ke.width.thin} solid ${pe.core.border.neutral.subtle}`,height:1,minHeight:1,marginBlock:Q.size_040}});class Xo extends F.Component{renderAnchorChildren(l,n){const{disabled:i,testId:u,text:p,opened:w,"aria-controls":k,"aria-haspopup":b,"aria-required":N,id:O,role:B,onBlur:V}=this.props,G=this.props.children({...l,text:p,opened:w}),_=G.props,M=this.getTestIdFromProps(_),oe=_["aria-label"]??this.props["aria-label"];return F.cloneElement(G,{...n,"aria-label":oe??void 0,"aria-invalid":this.props.error,disabled:i,"aria-controls":k,role:B,id:O,"aria-expanded":w?"true":"false","aria-haspopup":b,"aria-required":N,onClick:_.onClick?W=>{_.onClick(W),n.onClick(W)}:n.onClick,"data-testid":M||u,onBlur:V})}render(){return e.jsx(Uc,{onClick:this.props.onClick,disabled:this.props.disabled,tabIndex:0,children:(l,n)=>this.renderAnchorChildren(l,n)})}constructor(...l){super(...l),this.getTestIdFromProps=n=>n.testId||n["data-testid"]}}Xo.defaultProps={disabled:!1};class l0 extends F.Component{render(){const{data:l,index:n,style:i}=this.props,u=l[n];if($t.isClassOf(u.component))return F.cloneElement(u.component,{style:i});{const{component:p,populatedProps:w,onClick:k,role:b,ref:N}=u;return F.cloneElement(p,{style:i,...w,key:n,onClick:k,ref:u.focusable&&N,role:b})}}}function Es(o,l=0){return o.slice(0,Gu).reduce((n,i)=>$t.isClassOf(i.component)?n+Hu:n+la,l)}class s0 extends F.Component{componentDidMount(){const{schedule:l}=this.props;l.animationFrame(()=>{this.setWidth()})}componentDidUpdate(l){const{data:n,listRef:i}=this.props;l.data.length!==n.length&&(this.setHeight(),i&&i.current&&i.current.resetAfterIndex(1))}setWidth(){const l=oa.findDOMNode(this),n=l==null?void 0:l.parentElement;if(n){const i=n.getBoundingClientRect().width;this.setState({width:i})}}setHeight(){const l=Es(this.props.data);this.setState({height:l})}renderInitialItems(){const{data:l}=this.props,n=l.map(u=>u.component);return F.Children.toArray(n).filter(Boolean).sort((u,p)=>p.props.label&&u.props.label?p.props.label.length-u.props.label.length:-1).slice(0,Gu).map(u=>F.cloneElement(u,{style:{visibility:"hidden"}}))}renderVirtualizedList(l,n){const{data:i,listRef:u}=this.props;return e.jsx(Xc,{height:n,itemCount:i.length,itemSize:this.getItemSize,itemData:i,style:{overflowX:"hidden"},width:l,overscanCount:5,ref:u,children:l0})}render(){const{width:l,height:n}=this.state;return l==null?this.renderInitialItems():this.renderVirtualizedList(l,n)}constructor(l){super(l),this.getItemSize=n=>{const i=this.props.data[n];return $t.isClassOf(i.component)?Hu:la},this.state={height:Es(l.data),width:l.width}}}var u0=wu(s0);function d0({state:o,options:l}){const n=Rp(o,l),{y:i}=o.modifiersData.preventOverflow||{y:0},{height:u}=o.rects.popper,[p]=o.placement.split("-"),k=u-n[p==="top"?"top":"bottom"]-i;o.styles.popper={...o.styles.popper,maxHeight:`${k}px`,"--popper-max-height":`${k}px`}}const m0={name:"maxHeight",enabled:!0,phase:"main",options:{padding:la},requiresIfExists:["offset","preventOverflow","flip"],fn:d0},c0=[{name:"preventOverflow",options:{rootBoundary:"viewport",altAxis:!0,tether:!1}},m0],p0=function({children:o,alignment:l="left",onPopperElement:n,referenceElement:i}){const u=Kc(i)||document.querySelector("body");return u?oa.createPortal(e.jsx(Lp,{innerRef:p=>{p&&n&&n(p)},referenceElement:i,strategy:"fixed",placement:l==="left"?"bottom-start":"bottom-end",modifiers:c0,children:({placement:p,ref:w,style:k,hasPopperEscaped:b,isReferenceHidden:N})=>{const O=!!(b||N);return e.jsx("div",{ref:w,style:k,"data-testid":"dropdown-popper","data-placement":p,children:o(O)})}}),u):null};function h0(o){return o.length===1||!/^[A-Z]/i.test(o)?o:""}function g0(o,l){let n;return function(...u){const p=()=>{clearTimeout(n),o(...u)};clearTimeout(n),n=setTimeout(p,l)}}function Ds(o){return typeof o=="string"}function li(o){return Ds(o.label)?o.label:Ds(o.labelAsText)?o.labelAsText:""}function y0(o,l){return o?li(l):l.label}const b0=125;class fi extends F.Component{static sameItemsFocusable(l,n){if(l.length!==n.length)return!1;for(let i=0;i<l.length;i++)if(l[i].focusable!==n[i].focusable)return!1;return!0}static getDerivedStateFromProps(l,n){if(n.itemRefs.length===0&&l.open||!fi.sameItemsFocusable(n.prevItems,l.items)){const i=[];for(let u=0;u<l.items.length;u++)if(l.items[u].focusable){const p=F.createRef();i.push({ref:p,originalIndex:u})}return{itemRefs:i,prevItems:l.items,sameItemsFocusable:!1}}else return{prevItems:l.items,sameItemsFocusable:!0}}componentDidMount(){this.updateEventListeners(),this.maybeFocusInitialItem()}componentDidUpdate(l){const{open:n,searchText:i}=this.props;if(l.open!==n)this.updateEventListeners(),this.maybeFocusInitialItem();else if(n){const{itemRefs:u,sameItemsFocusable:p}=this.state;if(p||l.searchText!==i)return;{const w=u.findIndex(k=>k.originalIndex===this.focusedOriginalIndex);w===-1?(this.focusedIndex=0,this.itemsClicked=!1,this.scheduleToFocusCurrentItem()):this.focusedIndex=w}this.props.labels!==l.labels&&this.setState({labels:{...this.state.labels,...this.props.labels}})}}componentWillUnmount(){this.removeEventListeners()}resetFocusedIndex(){const{initialFocusedIndex:l}=this.props;if(typeof l<"u")this.focusedIndex=l;else{if(this.hasSearchField()&&!this.isSearchFieldFocused())return this.focusSearchField();this.focusedIndex=0}}maybeFocusInitialItem(){const{autoFocus:l,open:n}=this.props;l&&(n?(this.resetFocusedIndex(),this.scheduleToFocusCurrentItem()):n||(this.itemsClicked=!1))}updateEventListeners(){this.props.open?this.addEventListeners():this.removeEventListeners()}addEventListeners(){document.addEventListener("mouseup",this.handleInteract),document.addEventListener("touchend",this.handleInteract)}removeEventListeners(){document.removeEventListener("mouseup",this.handleInteract),document.removeEventListener("touchend",this.handleInteract)}scheduleToFocusCurrentItem(l){this.shouldVirtualizeList()?this.props.schedule.animationFrame(()=>{this.focusCurrentItem(l)}):this.focusCurrentItem(l)}focusCurrentItem(l){const n=this.state.itemRefs[this.focusedIndex];if(!n)return;const{current:i}=this.virtualizedListRef;i&&i.scrollToItem(n.originalIndex);const u=()=>{if(!this.props.open)return;const p=this.state.itemRefs[this.focusedIndex],w=oa.findDOMNode(p.ref.current);if(!w&&this.shouldVirtualizeList()){this.props.schedule.animationFrame(u);return}w&&(w.focus(),this.focusedOriginalIndex=p.originalIndex,l&&l(w))};this.shouldVirtualizeList()?this.props.schedule.animationFrame(u):u()}focusSearchField(){this.searchFieldRef.current&&this.searchFieldRef.current.focus()}hasSearchField(){return!!this.props.isFilterable}isSearchFieldFocused(){return this.hasSearchField()&&document.activeElement===this.searchFieldRef.current}focusPreviousItem(){if(this.focusedIndex===0||this.isSearchFieldFocused()&&!this.props.enableTypeAhead){if(this.hasSearchField()&&!this.isSearchFieldFocused())return this.focusSearchField();this.focusedIndex=this.state.itemRefs.length-1}else this.isSearchFieldFocused()||(this.focusedIndex-=1);this.scheduleToFocusCurrentItem()}focusNextItem(){if(this.focusedIndex===this.state.itemRefs.length-1||this.isSearchFieldFocused()&&!this.props.enableTypeAhead){if(this.hasSearchField()&&!this.isSearchFieldFocused())return this.focusSearchField();this.focusedIndex=0}else this.isSearchFieldFocused()||(this.focusedIndex+=1);this.scheduleToFocusCurrentItem()}restoreTabOrder(){this.props.openerElement&&this.props.openerElement.focus()}getItemRole(){const{role:l}=this.props;switch(l){case"listbox":return"option";case"menu":return"menuitem";default:throw new Error(`Expected "listbox" or "menu" for role, but receieved "${l}" instead.`)}}maybeRenderNoResults(){const{items:l,labels:{noResults:n}}=this.props;return l.length===0?e.jsx(sa,{style:ra.noResult,testId:"dropdown-core-no-results",children:n}):null}shouldVirtualizeList(){return this.props.items.length>b0}renderList(){let l=0;const n=this.getItemRole();return this.props.items.map((i,u)=>{if($t.isClassOf(i.component))return i.component;const{component:p,focusable:w,populatedProps:k}=i;w&&(l+=1);const b=l-1,N=this.state.itemRefs[b]?this.state.itemRefs[b].ref:null;return F.cloneElement(p,{...k,key:u,onClick:()=>{this.handleItemClick(b,i)},ref:w?N:null,role:k.role||n})})}parseVirtualizedItems(){let l=0;const n=this.getItemRole();return this.props.items.map((i,u)=>{const{populatedProps:p}=i;!$t.isClassOf(i.component)&&i.focusable&&(l+=1);const w=l-1;return{...i,role:p.role||n,ref:i.focusable&&this.state.itemRefs[w]?this.state.itemRefs[w].ref:null,onClick:()=>{this.handleItemClick(w,i)}}})}renderVirtualizedList(){const l=this.parseVirtualizedItems();return e.jsx(u0,{data:l,listRef:this.virtualizedListRef})}renderSearchField(){const{searchText:l}=this.props,{labels:n}=this.state;return e.jsx(Hc,{clearAriaLabel:n.clearSearch,onChange:this.handleSearchTextChanged,placeholder:n.filter,ref:this.searchFieldRef,style:ra.searchInputStyle,value:l||""})}renderDropdownMenu(l,n){const{"aria-invalid":i,"aria-required":u,dropdownStyle:p,isFilterable:w,openerElement:k,role:b,id:N}=this.props,O=k&&window.getComputedStyle(k),B=O?O.getPropertyValue("width"):0;return e.jsxs(Y,{onMouseUp:this.handleDropdownMouseUp,style:[ra.dropdown,n&&ra.hidden,p],testId:"dropdown-core-container",children:[w&&this.renderSearchField(),e.jsx(Y,{id:N,role:b,style:[ra.listboxOrMenu,{minWidth:B}],"aria-invalid":b==="listbox"?i:void 0,"aria-required":b==="listbox"?u:void 0,children:l}),this.maybeRenderNoResults()]})}renderDropdown(){const{alignment:l,openerElement:n}=this.props,i=this.shouldVirtualizeList()?this.renderVirtualizedList():this.renderList();return e.jsx(p0,{alignment:l,onPopperElement:u=>{this.popperElement=u},referenceElement:n,children:u=>this.renderDropdownMenu(i,u)})}render(){const{open:l,opener:n,style:i,className:u,disabled:p}=this.props;return e.jsxs(Y,{onKeyDown:p?void 0:this.handleKeyDown,onKeyUp:p?void 0:this.handleKeyUp,style:[ra.menuWrapper,i],className:u,children:[n,l&&this.renderDropdown()]})}constructor(l){super(l),this.focusedIndex=-1,this.focusedOriginalIndex=-1,this.itemsClicked=!1,this.searchFieldRef=F.createRef(),this.handleInteract=n=>{const{open:i,onOpenChanged:u}=this.props,p=n.target,w=oa.findDOMNode(this);i&&w&&!w.contains(p)&&this.popperElement&&!this.popperElement.contains(p)&&u(!1)},this.handleKeyDown=n=>{const{enableTypeAhead:i,onOpenChanged:u,open:p,searchText:w}=this.props,k=n.key;if(i&&h0(k)&&(n.stopPropagation(),this.textSuggestion+=k,this.handleKeyDownDebounced(this.textSuggestion)),!p){if(k===Gn.down){n.preventDefault(),u(!0);return}return}switch(k){case Gn.tab:if(this.isSearchFieldFocused()&&w)return;this.restoreTabOrder(),u(!1);return;case Gn.space:if(this.isSearchFieldFocused())return;n.preventDefault();return;case Gn.up:n.preventDefault(),this.focusPreviousItem();return;case Gn.down:n.preventDefault(),this.focusNextItem();return}},this.handleKeyUp=n=>{const{onOpenChanged:i,open:u}=this.props;switch(n.key){case Gn.space:if(this.isSearchFieldFocused())return;n.preventDefault();return;case Gn.escape:u&&(n.stopPropagation(),this.restoreTabOrder(),i(!1));return}},this.handleKeyDownDebounceResult=n=>{const i=this.props.items.filter(u=>u.focusable).findIndex(({component:u})=>{if($t.isClassOf(u))return!1;if(we.isClassOf(u)){const p=u.props;return li(p).toLowerCase().startsWith(n.toLowerCase())}return!1});if(i>=0){const u=!this.props.open;u&&this.props.onOpenChanged(!0),this.focusedIndex=i,this.scheduleToFocusCurrentItem(p=>{this.props.selectionType==="single"&&u&&p&&(p.click(),this.props.onOpenChanged(!1))})}this.textSuggestion=""},this.handleClickFocus=n=>{this.itemsClicked=!0,this.focusedIndex=n,this.focusedOriginalIndex=this.state.itemRefs[this.focusedIndex].originalIndex},this.handleDropdownMouseUp=n=>{n.nativeEvent.stopImmediatePropagation?n.nativeEvent.stopImmediatePropagation():n.stopPropagation()},this.handleItemClick=(n,i)=>{this.handleClickFocus(n),i.component.props.onClick&&i.component.props.onClick(),i.populatedProps.onClick&&i.populatedProps.onClick()},this.handleSearchTextChanged=n=>{const{onSearchTextChanged:i}=this.props;i&&i(n)},this.resetFocusedIndex(),this.state={prevItems:this.props.items,itemRefs:[],sameItemsFocusable:!1,labels:{noResults:Qn.noResults,someResults:Qn.someSelected,...l.labels}},this.virtualizedListRef=F.createRef(),this.handleKeyDownDebounced=g0(this.handleKeyDownDebounceResult,500),this.textSuggestion=""}}fi.defaultProps={alignment:"left",autoFocus:!0,enableTypeAhead:!0,labels:{clearSearch:Qn.clearSearch,filter:Qn.filter,noResults:Qn.noResults,someResults:Qn.someSelected},selectionType:"single"};const ra=ie.StyleSheet.create({menuWrapper:{width:"fit-content"},dropdown:{backgroundColor:pe.surface.primary,borderRadius:$e.listbox.border.radius,paddingBlock:$e.listbox.layout.padding.block,paddingInline:$e.listbox.layout.padding.inline,border:`solid ${ke.width.thin} ${pe.core.border.neutral.subtle}`,boxShadow:$e.listbox.shadow.default,maxHeight:"var(--popper-max-height)"},listboxOrMenu:{overflowY:"auto"},hidden:{pointerEvents:"none",visibility:"hidden"},noResult:{color:pe.core.foreground.neutral.default,alignSelf:"center",marginBlockStart:Q.size_060},searchInputStyle:{margin:Q.size_080,marginBlockStart:Q.size_040,minHeight:"auto",position:"sticky"},srOnly:{border:0,clip:"rect(0,0,0,0)",height:1,margin:-1,overflow:"hidden",padding:0,position:"absolute",width:1}});var Uu=wu(fi);const w0=Q.size_040,f0={root:{border:{width:{primary:{default:ke.width.none,hover:ke.width.medium,press:ke.width.medium},secondary:{default:ke.width.thin,hover:ke.width.thin,press:ke.width.thin},tertiary:{default:ke.width.none,hover:ke.width.none,press:ke.width.none}},offset:{primary:ke.width.medium,secondary:0,tertiary:0},radius:{default:ke.radius.radius_040,hover:ke.radius.radius_040,press:ke.radius.radius_040}},sizing:{height:{small:Q.size_320,medium:Q.size_400,large:Q.size_560},underline:{hover:Q.size_020,press:Q.size_010}},layout:{padding:{inline:{primary:{small:Q.size_160,medium:Q.size_160,large:Q.size_320},secondary:{small:Q.size_120,medium:Q.size_160,large:Q.size_180},tertiary:{small:Q.size_0,medium:Q.size_0,large:Q.size_0}}}},font:{size:{large:"1.8rem"},lineHeight:{small:Pt.lineHeight.xMedium,default:Pt.lineHeight.large,large:"2.6rem"},weight:{default:Pt.weight.bold},decoration:{hover:"underline",press:"underline"},offset:{default:w0}}},icon:{margin:{inline:{inner:Q.size_060,outer:`calc(-1 * ${ke.width.medium})`}},padding:Q.size_020,sizing:{small:Q.size_160,medium:Q.size_240,large:Q.size_240}}};var Oe=vu(f0,"--wb-c-button-");function Ms({icon:o,size:l,style:n,testId:i}){const u={width:Oe.icon.sizing[l],height:Oe.icon.sizing[l]},p={"aria-hidden":!0,color:"currentColor",style:[n,u],testId:i};switch(l){case"small":return e.jsx(nt,{...p,size:"small",icon:o});case"medium":default:return e.jsx(nt,{...p,size:"medium",icon:o})}}const v0=Ut("a"),k0=Ut("button"),x0=Ut(Zc),Ku=F.forwardRef(function(l,n){const{children:i,disabled:u,href:p,id:w,skipClientNav:k,style:b,testId:N,type:O,...B}=l,V={"data-testid":N,id:w,role:"button",style:[q0.reset,b],...B},G=Vo();return p&&!u?G&&!k&&Jc(p)?e.jsx(x0,{...V,to:p,ref:n,children:i}):e.jsx(v0,{...V,href:p,ref:n,children:i}):e.jsx(k0,{type:O||"button",...V,"aria-disabled":u,ref:n,children:i})}),q0=ie.StyleSheet.create({reset:{position:"relative",display:"inline-flex",alignItems:"center",justifyContent:"center",margin:0,padding:0,border:"none",cursor:"pointer",outline:"none",textDecoration:"none",boxSizing:"border-box",touchAction:"manipulation",userSelect:"none",":focus":{WebkitTapHighlightColor:"rgba(0,0,0,0)"}}}),C0=F.forwardRef(function(l,n){const{children:i,skipClientNav:u,actionType:p,disabled:w,focused:k,hovered:b,href:N=void 0,kind:O="primary",labelStyle:B,pressed:V,size:G="medium",style:_,testId:M,type:oe=void 0,spinner:W,startIcon:U,endIcon:E,id:A,waiting:$,...J}=l,Z=T0(p,O,G),ue=W||w,de=[gn.shared,U&&gn.withStartIcon,E&&gn.withEndIcon,Z.default,ue&&Z.disabled,!ue&&V&&Z.pressed,G==="small"&&gn.small,G==="large"&&gn.large],Se=e.jsx(sa,{size:G==="small"?"small":void 0,weight:G==="large"?"bold":void 0,tag:"span",style:[gn.text,G==="small"&&gn.smallText,G==="large"&&gn.largeText,B,W&&gn.hiddenText],testId:M?`${M}-inner-label`:void 0,children:i}),Be={medium:"small",small:"xsmall",large:"medium"},le=G==="small"?"small":"medium",fe=e.jsxs(F.Fragment,{children:[U&&e.jsx(Y,{style:gn.iconWrapper,children:e.jsx(Ms,{size:le,icon:U,style:[gn.startIcon,O==="tertiary"&&gn.tertiaryStartIcon],testId:M?`${M}-start-icon`:void 0})}),Se,W&&e.jsx(Yc,{style:gn.spinner,size:Be[G],light:O==="primary",testId:`${M||"button"}-spinner`}),E&&e.jsx(Y,{testId:M?`${M}-end-icon-wrapper`:void 0,style:[gn.endIcon,gn.iconWrapper,gn.endIconWrapper,O==="tertiary"&&gn.endIconWrapperTertiary],children:e.jsx(Ms,{size:le,icon:E,testId:M?`${M}-end-icon`:void 0})})]});return e.jsx(Ku,{...J,disabled:ue,href:N,id:A,ref:n,skipClientNav:u,style:[de,_],testId:M,tabIndex:l.tabIndex,type:oe,children:fe})}),gn=ie.StyleSheet.create({shared:{height:Oe.root.sizing.height.medium,paddingBlock:0},small:{height:Oe.root.sizing.height.small},large:{height:Oe.root.sizing.height.large},text:{alignItems:"center",fontWeight:Oe.root.font.weight.default,whiteSpace:"nowrap",overflow:"hidden",lineHeight:Oe.root.font.lineHeight.default,textOverflow:"ellipsis",display:"inline-block",pointerEvents:"none"},smallText:{lineHeight:Oe.root.font.lineHeight.small},largeText:{fontSize:Oe.root.font.size.large,lineHeight:Oe.root.font.lineHeight.large},hiddenText:{visibility:"hidden"},spinner:{position:"absolute"},startIcon:{marginInlineStart:Oe.icon.margin.inline.outer,marginInlineEnd:Oe.icon.margin.inline.inner},tertiaryStartIcon:{marginInlineStart:0},endIcon:{marginInlineStart:Oe.icon.margin.inline.inner},iconWrapper:{padding:Oe.icon.padding,minWidth:"auto"},endIconWrapper:{marginInlineStart:Oe.icon.margin.inline.inner,marginInlineEnd:Oe.icon.margin.inline.outer},endIconWrapperTertiary:{marginInlineEnd:0}}),zr={},T0=(o="progressive",l,n)=>{const i=`${o}-${l}-${n}`;if(zr[i])return zr[i];const u=Oe.root.layout.padding.inline[l][n],p=Oe.root.border.width[l],w=Oe.root.border.offset[l],k=pe.action[l][o],b=pe.action[l].disabled,N={borderColor:b.border,borderWidth:p.default,borderRadius:Oe.root.border.radius.default,background:b.background,color:b.foreground},O={...N,outline:"none",boxShadow:"none",textDecoration:"none",textDecorationThickness:"unset",textUnderlineOffset:"unset"},B={background:k.press.background,borderRadius:Oe.root.border.radius.press,color:k.press.foreground,...l==="primary"?{outline:`${p.press} solid ${k.press.border}`,outlineOffset:w}:void 0,...l!=="primary"?{borderColor:k.press.border,boxShadow:`inset 0 0 0 ${p.press} ${k.press.border}`}:void 0,...l==="tertiary"?{textUnderlineOffset:Oe.root.font.offset.default,textDecoration:`${Oe.root.font.decoration.press} ${Oe.root.sizing.underline.press}`}:void 0},V={default:{borderRadius:Oe.root.border.radius.default,paddingInline:u,borderStyle:"solid",borderWidth:p.default,borderColor:k.default.border,background:k.default.background,color:k.default.foreground,transition:"border-radius 0.1s ease-in-out","@media (hover: hover)":{":hover":{background:k.hover.background,borderRadius:Oe.root.border.radius.hover,color:k.hover.foreground,...l==="primary"?{outline:`${p.hover} solid ${k.hover.border}`,outlineOffset:w}:void 0,...l!=="primary"?{borderColor:k.hover.border,boxShadow:`inset 0 0 0 ${p.hover} ${k.hover.border}`}:void 0,...l==="tertiary"?{textUnderlineOffset:Oe.root.font.offset.default,textDecoration:`${Oe.root.font.decoration.hover} ${Oe.root.sizing.underline.hover}`}:void 0}},":active":B,...Fn.focus,...l==="secondary"?{":focus-visible:hover":{...Fn.focus[":focus-visible"],boxShadow:`inset 0 0 0 ${p.hover} ${k.hover.border}, ${Fn.focus[":focus-visible"].boxShadow}`},":focus-visible:active":{...Fn.focus[":focus-visible"],boxShadow:`inset 0 0 0 ${p.press} ${k.press.border}, ${Fn.focus[":focus-visible"].boxShadow}`}}:{}},pressed:B,disabled:{cursor:"not-allowed",...N,":hover":O,":active":O,":focus-visible":N}};return zr[i]=ie.StyleSheet.create(V),zr[i]},A0=F.forwardRef(function(l,n){const{href:i=void 0,type:u=void 0,children:p,skipClientNav:w,onClick:k,beforeNav:b=void 0,safeWithNav:N=void 0,tabIndex:O,target:B,rel:V,actionType:G="progressive",kind:_="primary",size:M="medium",disabled:oe=!1,spinner:W=!1,role:U,...E}=l,A=Vo(),$=ku(i,w,A),J=b?{beforeNav:b}:{target:B},Z=i?"link":"button",ue=U==="link"||U==="button"?void 0:U;return e.jsx($,{disabled:W||oe,href:i,role:Z,type:u,onClick:k,safeWithNav:N,rel:V,...J,children:(de,Se)=>e.jsx(C0,{...E,...de,...Se,disabled:oe,spinner:W||de.waiting,actionType:G,kind:_,size:M,skipClientNav:w,href:i,role:ue,target:B,type:u,tabIndex:O,ref:n,children:p})})}),S0=F.forwardRef(function(l,n){const{children:i,disabled:u=!1,kind:p="primary",focused:w,pressed:k,styles:b,type:N=void 0,startIcon:O,endIcon:B,hovered:V,waiting:G,..._}=l,M=P0("progressive",u,p),oe=[M.button,u&&M.disabled,!u&&k&&M.pressed,!u&&!k&&w&&M.focused,b==null?void 0:b.root],W=[M.chonky,u&&M.chonkyDisabled,!u&&k&&M.chonkyPressed,b==null?void 0:b.box];return e.jsx(Ku,{..._,disabled:u,ref:n,style:oe,type:N,children:e.jsx(e.Fragment,{children:e.jsxs(Y,{style:W,className:"chonky",children:[O&&e.jsx(nt,{size:"medium",color:"currentColor",icon:O,style:[bo.icon,b==null?void 0:b.startIcon],"aria-hidden":"true"}),e.jsx(sa,{tag:"span",size:"medium",weight:"semi",style:[bo.label,b==null?void 0:b.label],children:i}),B&&e.jsx(nt,{size:"medium",color:"currentColor",icon:B,style:[bo.icon,b==null?void 0:b.endIcon],"aria-hidden":"true"})]})})})});F.forwardRef(function(l,n){const{href:i=void 0,type:u=void 0,children:p,skipClientNav:w,onClick:k,beforeNav:b=void 0,safeWithNav:N=void 0,tabIndex:O,target:B,rel:V,kind:G="primary",disabled:_=!1,role:M,...oe}=l,W=Vo(),U=ku(i,w,W),E=b?{beforeNav:b}:{target:B},A=i?"link":"button",$=M==="link"||M==="button"?void 0:M;return e.jsx(U,{disabled:_,href:i,role:A,type:u,onClick:k,safeWithNav:N,rel:V,...E,children:(J,Z)=>e.jsx(S0,{...oe,...J,...Z,disabled:_,kind:G,skipClientNav:w,href:i,role:$,target:B,type:u,tabIndex:O,ref:n,children:p})})});const ln={root:{border:{width:{primary:{rest:ke.width.thin,hover:ke.width.thin,press:ke.width.thin},secondary:{rest:ke.width.thin,hover:ke.width.thin,press:ke.width.thin},tertiary:{rest:ke.width.thin,hover:ke.width.thin,press:ke.width.thin}},radius:ke.radius.radius_120},layout:{padding:{block:Q.size_140,inline:Q.size_480}},shadow:{y:{rest:"6px",hover:"8px",press:Q.size_0}}},label:{color:{progressive:pe.core.foreground.instructive.default,neutral:pe.core.foreground.neutral.default,disabled:pe.core.foreground.disabled.default},font:{lineHeight:Q.size_140},layout:{padding:{blockStart:Q.size_040,blockEnd:Q.size_060},width:Q.size_640}},icon:{sizing:{height:Q.size_200,width:Q.size_200}}},bo={icon:{alignSelf:"center",width:ln.icon.sizing.width,height:ln.icon.sizing.height},label:{lineHeight:ln.label.font.lineHeight,paddingBlockStart:ln.label.layout.padding.blockStart,paddingBlockEnd:ln.label.layout.padding.blockEnd}},_r={},P0=(o="progressive",l,n)=>{const i=`${o}-d_${l}-${n}`;if(_r[i])return _r[i];const u=ln.root.border.width[n],p=pe.chonky[o],w=pe.chonky.disabled,k={outline:"none",transform:"none"},b={background:w.background[n],borderWidth:u.rest,borderColor:w.border[n],color:w.foreground[n],boxShadow:`0 ${ln.root.shadow.y.rest} 0 0 ${w.shadow[n]}`,transform:"none"},N={background:p.background[n].press,border:`${u.press} solid ${p.border[n].press}`,boxShadow:`0 ${ln.root.shadow.y.press} 0 0 ${p.shadow[n].press}`,color:p.foreground[n].press,transform:`translateY(${ln.root.shadow.y.rest})`},O={button:{background:"transparent",borderRadius:ln.root.border.radius,color:ln.label.color[o],height:"auto",flexDirection:"column",gap:Q.size_020,alignSelf:"flex-start",justifySelf:"center",":is(:hover) .chonky":{background:p.background[n].hover,border:`${u.hover} solid ${p.border[n].hover}`,boxShadow:`0 ${ln.root.shadow.y.hover} 0 0 ${p.shadow[n].hover}`,color:p.foreground[n].hover,transform:`translateY(calc((${ln.root.shadow.y.hover} - ${ln.root.shadow.y.rest}) * -1))`},":is(:active) .chonky":N,...Fn.focus},focused:Fn.focus[":focus-visible"],disabled:{cursor:"not-allowed",color:ln.label.color.disabled,...k,":hover":k,":active":k,":focus-visible":{transform:"none"},":is(:hover) .chonky":k,":is(:hover) .chonky":b,":is(:active) .chonky":b},pressed:{".chonky":N},chonky:{flexDirection:"row",gap:Q.size_080,borderRadius:ln.root.border.radius,marginBlockEnd:ln.root.shadow.y.rest,maxWidth:"100%",paddingBlock:ln.root.layout.padding.block,paddingInline:ln.root.layout.padding.inline,background:p.background[n].rest,border:`${u.rest} solid ${p.border[n].rest}`,color:p.foreground[n].rest,boxShadow:`0 ${ln.root.shadow.y.rest} 0 0 ${p.shadow[n].rest}`,transition:"all 0.12s ease-out","@media not (hover: hover)":{transition:"none"}},chonkyPressed:N,chonkyDisabled:b};return _r[i]=ie.StyleSheet.create(O),_r[i]};class N0 extends F.Component{render(){const{children:l,disabled:n,waiting:i,testId:u,opened:p,"aria-label":w,...k}=this.props;return e.jsx(A0,{"aria-expanded":p?"true":"false","aria-haspopup":"menu",kind:"tertiary","aria-label":w,disabled:n,...k,testId:u,endIcon:ir,children:l})}}class Xu extends F.Component{static getDerivedStateFromProps(l,n){return{opened:typeof l.opened=="boolean"?l.opened:n.opened}}getMenuItems(){const{children:l,selectedValues:n}=this.props,i=F.Children.toArray(l).filter(Boolean),u=i.some(p=>we.isClassOf(p));return i.map(p=>{const{value:w,disabled:k}=p.props,b={component:p,focusable:ar.isClassOf(p)||we.isClassOf(p)?!k:!1,populatedProps:{}};if(ar.isClassOf(p))return{...b,populatedProps:{indent:u,onClick:this.handleItemSelected}};if(we.isClassOf(p)){const N=n?n.includes(w):!1;return{...b,populatedProps:{onToggle:this.handleOptionSelected,selected:N,variant:"check",role:"menuitemcheckbox","aria-checked":N,"aria-selected":void 0}}}else return b})}renderOpener(l,n){const{disabled:i,menuText:u,opener:p,testId:w,id:k}=this.props;return e.jsx(nr,{id:k,children:b=>e.jsx(Xo,{id:b,"aria-controls":n,"aria-haspopup":"menu",onClick:this.handleClick,disabled:l===0||i,text:u,ref:this.handleOpenerRef,testId:p?void 0:w,opened:this.state.opened,role:"button",children:p||(N=>{const{text:O,opened:B,...V}=N;return e.jsx(N0,{...V,disabled:i,opened:!!B,testId:w,children:u})})})})}render(){const{alignment:l,dropdownStyle:n,style:i,className:u,dropdownId:p}=this.props,w=this.getMenuItems();return e.jsx(nr,{id:p,children:k=>e.jsx(Uu,{id:k,role:"menu",style:i,className:u,opener:this.renderOpener(w.length,k),alignment:l,open:this.state.opened,items:w,openerElement:this.openerElement,onOpenChanged:this.handleOpenChanged,dropdownStyle:[I0.menuTopSpace,n]})})}constructor(...l){super(...l),this.state={opened:!1},this.handleItemSelected=()=>{this.handleOpenChanged(!1),this.openerElement&&this.openerElement.focus()},this.handleOpenChanged=n=>{this.setState({opened:n}),this.props.onToggle&&this.props.onToggle(n)},this.handleOptionSelected=n=>{const{onChange:i,selectedValues:u}=this.props;if(!(!i||!u)){if(u.includes(n)){const p=u.indexOf(n),w=[...u.slice(0,p),...u.slice(p+1)];i(w)}else i([...u,n]);this.handleItemSelected()}},this.handleOpenerRef=n=>{this.openerElement=oa.findDOMNode(n)},this.handleClick=n=>{this.handleOpenChanged(!this.state.opened)}}}Xu.defaultProps={alignment:"left",disabled:!1};const I0=ie.StyleSheet.create({caret:{marginInlineStart:Q.size_040},opener:{whiteSpace:"nowrap",userSelect:"none",overflow:"hidden",textOverflow:"ellipsis"},menuTopSpace:{top:`calc(-1 * ${Q.size_040})`}}),j0=Ut("button");class Yu extends F.Component{render(){const{children:l,disabled:n,error:i,id:u,isPlaceholder:p,open:w,testId:k,"aria-label":b,"aria-required":N,"aria-controls":O,onBlur:B,onOpenChanged:V,...G}=this.props,_=n?pe.core.foreground.disabled.default:$e.opener.color.icon,M=[At.shared,At.default,n&&At.disabled,i&&At.error,p&&At.placeholder,!n&&this.state.pressed&&At.press];return e.jsxs(j0,{...G,"aria-disabled":n,"aria-expanded":w?"true":"false","aria-invalid":i,"aria-label":b??void 0,"aria-required":N,"aria-haspopup":"listbox","aria-controls":O,"data-testid":k,id:u,role:"combobox",type:"button",style:M,onClick:n?void 0:this.handleClick,onKeyDown:n?void 0:this.handleKeyDown,onKeyUp:n?void 0:this.handleKeyUp,onBlur:B,children:[e.jsx(sa,{tag:"span",style:At.text,children:l||e.jsx("span",{"aria-hidden":"true",children:" "})}),e.jsx(nt,{icon:ir,color:_,size:"small",style:At.caret,"aria-hidden":"true"})]})}constructor(l){super(l),this.handleClick=n=>{const{open:i}=this.props;this.props.onOpenChanged(!i)},this.handleKeyDown=n=>{const i=n.key;(i===Gn.enter||i===Gn.space)&&(this.setState({pressed:!0}),n.preventDefault())},this.handleKeyUp=n=>{const i=n.key;(i===Gn.enter||i===Gn.space)&&(this.setState({pressed:!1}),this.handleClick(n))},this.state={pressed:!1}}}Yu.defaultProps={disabled:!1,error:!1,isPlaceholder:!1};const wo=`0 0 0 ${ke.width.thin} ${pe.input.default.border}`,At=ie.StyleSheet.create({shared:{position:"relative",display:"inline-flex",alignItems:"center",justifyContent:"space-between",color:pe.core.foreground.neutral.strong,height:la,paddingInlineStart:$e.opener.layout.padding.inlineStart,paddingInlineEnd:$e.opener.layout.padding.inlineEnd,borderWidth:0,borderRadius:$e.opener.border.radius.rest,borderStyle:"solid",outline:"none",textDecoration:"none",boxSizing:"border-box",whiteSpace:"nowrap",touchAction:"manipulation"},text:{marginInlineEnd:Q.size_080,whiteSpace:"nowrap",userSelect:"none",overflow:"hidden",textOverflow:"ellipsis"},caret:{minWidth:Q.size_160},default:{background:pe.input.default.background,border:`${ke.width.thin} solid ${pe.input.default.border}`,color:pe.input.default.foreground,cursor:"pointer",...Fn.focus,":active":{boxShadow:wo}},error:{background:pe.input.error.background,border:`${$e.opener.border.width.error} solid ${pe.input.error.border}`,color:pe.input.error.foreground},disabled:{background:pe.input.disabled.background,border:`${ke.width.thin} solid ${pe.input.disabled.border}`,color:pe.input.disabled.foreground,cursor:"not-allowed",":active":{boxShadow:"none"}},press:{boxShadow:wo,":focus-visible":{boxShadow:`${wo}, ${Fn.focus[":focus-visible"].boxShadow}`}},placeholder:{color:pe.input.default.placeholder}}),L0="This field is required.";function Aa(o){return o?o.length>0:!1}function R0({value:o,disabled:l=!1,validate:n,onValidate:i,required:u,open:p}){const[w,k]=F.useState(()=>n&&Aa(o)&&!l&&n(o)||null),b=F.useCallback(G=>{if(!l){if(n){const _=G!==void 0&&n(G)||null;if(k(_),i&&i(_),_)return}if(u){const _=typeof u=="string"?u:L0,M=Aa(G)?null:_;k(M),i&&i(M)}}},[l,n,k,i,u]);Wc(()=>{Aa(o)&&b(o)});function N(){!p&&u&&!Aa(o)&&b(o)}return{errorMessage:w,onOpenerBlurValidation:N,onDropdownClosedValidation:()=>{u&&!Aa(o)&&b(o)},onSelectionValidation:G=>{b(G)},onSelectedValuesChangeValidation:()=>{k(null),i&&i(null)}}}const qn=o=>{const l=F.useRef(0),{children:n,error:i=!1,id:u,opener:p,placeholder:w,selectedValue:k,testId:b,alignment:N="left",autoFocus:O=!0,dropdownStyle:B,enableTypeAhead:V=!0,isFilterable:G,labels:_={clearSearch:Qn.clearSearch,filter:Qn.filter,noResults:Qn.noResults,someResults:Qn.someSelected},onChange:M,onToggle:oe,opened:W,style:U,className:E,"aria-label":A,"aria-invalid":$,"aria-required":J,disabled:Z=!1,dropdownId:ue,validate:de,onValidate:Se,required:Be,showOpenerLabelAsText:le=!0,...fe}=o,[ge,Ke]=F.useState(!1),[tt,sr]=F.useState(""),[pa,qi]=F.useState(),{errorMessage:Ci,onOpenerBlurValidation:ur,onDropdownClosedValidation:be,onSelectionValidation:ha}=R0({value:k,disabled:Z,validate:de,onValidate:Se,required:Be,open:ge}),dr=i||!!Ci;F.useEffect(()=>{Z?Ke(!1):typeof W=="boolean"&&Ke(W)},[Z,W]);const at=Pe=>{Ke(Pe),sr(""),oe&&oe(Pe),Pe||be()},mr=Pe=>{Pe!==k&&M(Pe),ge&&pa&&pa.focus(),Ke(!1),oe&&oe(!1),ha(Pe)},pt=Pe=>{let bn=0;return l.current=0,Pe.map(On=>{const{disabled:yt,value:un}=On.props,Un=k===un;return Un&&(l.current=bn),yt||(bn+=1),{component:On,focusable:!yt,populatedProps:{onToggle:mr,selected:Un,variant:"check"}}})},Ti=Pe=>{const bn=tt.toLowerCase();return Pe.filter(({props:On})=>!tt||li(On).toLowerCase().indexOf(bn)>-1)},Ai=Pe=>pt(G?Ti(Pe):Pe),Si=Pe=>{sr(Pe)},cr=Pe=>{const bn=oa.findDOMNode(Pe);qi(bn)},Pi=Pe=>{at(!ge)},pr=Pe=>{Gc({message:Pe})};F.useEffect(()=>{const bn=F.Children.toArray(n).find(On=>On.props.value===k);if(bn){const On=li(bn.props);On&&pr(On)}},[k,n]);const hr=J??!!Be,gr=(Pe,bn)=>{const yt=F.Children.toArray(n).find(Kn=>Kn.props.value===k);let un;return yt?un=y0(le,yt.props):un=w,e.jsx(nr,{id:u,children:Kn=>p?e.jsx(Xo,{id:Kn,"aria-label":A,"aria-controls":bn,"aria-required":hr,"aria-haspopup":"listbox",onClick:Pi,disabled:Pe,ref:cr,role:"combobox",text:un,opened:ge,error:dr,onBlur:ur,children:p}):e.jsx(Yu,{...fe,"aria-label":A,"aria-controls":bn,"aria-required":hr,disabled:Pe,id:Kn,error:dr,isPlaceholder:!yt,onOpenChanged:at,open:ge,ref:cr,testId:b,onBlur:ur,children:un})})},ht=F.Children.toArray(n).filter(Boolean),gt=ht.filter(Pe=>!Pe.props.disabled).length,Xt=Ai(ht),ga=gt===0||Z,{someResults:ya}=_;return F.useEffect(()=>{ge&&pr(ya(Xt.length))},[Xt.length,ya,ge]),e.jsx(nr,{id:ue,children:Pe=>e.jsx(Uu,{id:Pe,role:"listbox",selectionType:"single",alignment:N,autoFocus:O,enableTypeAhead:V,dropdownStyle:[G&&t0,n0,B],initialFocusedIndex:l.current,items:Xt,onOpenChanged:at,open:ge,opener:gr(ga,Pe),openerElement:pa,style:U,className:E,isFilterable:G,onSearchTextChanged:G?Si:void 0,searchText:G?tt:"",labels:_,"aria-invalid":$,"aria-required":J,disabled:ga})})};Ut("span");ie.StyleSheet.create({srOnly:{border:0,clip:"rect(0,0,0,0)",height:1,margin:-1,overflow:"hidden",padding:0,position:"absolute",width:1}});F.memo(function({disabled:l,focusedMultiSelectIndex:n,id:i,labels:u,onRemove:p,removeSelectedLabel:w,selected:k,testId:b}){return e.jsx(Y,{role:"group",style:fo.pillsWrapper,id:i,children:k.map((N,O)=>{const B=u[O],V=O===n,G=i+O;return e.jsx(Rn,{id:G,testId:b?`${b}-pill-${O}`:void 0,size:"small",style:[fo.pill,V&&fo.pillFocused],kind:V?"info":"neutral","aria-label":w(B),tabIndex:-1,onClick:()=>p(N),children:e.jsxs(e.Fragment,{children:[B,!l&&e.jsx(nt,{icon:xu,size:"small"})]})},G)})})});const fo=ie.StyleSheet.create({pillsWrapper:{flexDirection:"row",flexWrap:"wrap"},pill:{fontSize:Pt.body.size.small,justifyContent:"space-between",alignItems:"center",marginBlockStart:Q.size_040,marginInlineEnd:Q.size_040,paddingInlineEnd:Q.size_040},pillFocused:Fn.focus[":focus-visible"]});ie.StyleSheet.create({listbox:{backgroundColor:pe.surface.primary,outline:"none",paddingBlock:$e.listbox.layout.padding.block,paddingInline:$e.listbox.layout.padding.inline},disabled:{color:pe.action.secondary.disabled.foreground}});ie.StyleSheet.create({wrapper:{flexDirection:"row",alignItems:"center",width:"100%",maxWidth:"100%",flexWrap:"wrap",background:pe.surface.primary,borderRadius:$e.opener.border.radius.rest,border:`${ke.width.thin} solid ${pe.core.border.neutral.subtle}`,paddingInline:$e.opener.layout.padding.inline,overflow:"hidden"},focused:Fn.focus[":focus-visible"],disabled:{background:pe.input.disabled.background,border:`${ke.width.thin} solid ${pe.input.disabled.border}`,color:pe.input.disabled.foreground},error:{background:pe.input.error.background,border:`${$e.opener.border.width.error} solid ${pe.input.error.border}`,color:pe.input.error.foreground},combobox:{appearance:"none",background:"none",border:"none",outline:"none",padding:0,minWidth:Q.size_040,width:"auto",display:"inline-grid",gridArea:"1 / 2",":focus-visible":{outline:"none",border:"none"}},listbox:{backgroundColor:pe.surface.primary,borderRadius:$e.listbox.border.radius,border:`solid ${ke.width.thin} ${pe.core.border.neutral.subtle}`,boxShadow:$e.listbox.shadow.default,maxHeight:"var(--popper-max-height)",overflowY:"auto"},hidden:{pointerEvents:"none",visibility:"hidden"},button:{position:"absolute",right:Q.size_040,top:Q.size_040,margin:0},buttonOpen:{transform:"rotate(180deg)"},clearButton:{right:Q.size_400},iconWrapper:{padding:Q.size_040,minWidth:"auto"}});const F0="_single-select-short_m6nrl_2",O0="_row_m6nrl_8",Zn={singleSelectShort:F0,row:O0},dn=o=>{const{children:l,label:n,labelSide:i="left",style:u}=o;return e.jsx("label",{className:ie.css(Br.label),children:e.jsxs(Y,{style:[Br.row,u],children:[i==="start"||e.jsx(st,{style:Br.spaceEnd,children:n}),l,i==="end"&&e.jsx(st,{style:Br.spaceStart,children:n})]})})},Br=ie.StyleSheet.create({label:{width:"fit-content"},row:{flexDirection:"row",marginTop:j.xSmall_8,alignItems:"center",width:"fit-content"},spaceStart:{marginInlineStart:j.xSmall_8},spaceEnd:{marginInlineEnd:j.xSmall_8}});dn.__docgenInfo={description:"",methods:[],displayName:"LabeledRow",props:{id:{required:!1,tsType:{name:"string"},description:""},label:{required:!0,tsType:{name:"string"},description:""},labelSide:{required:!1,tsType:{name:"union",raw:'"start" | "end"',elements:[{name:"literal",value:'"start"'},{name:"literal",value:'"end"'}]},description:""},style:{required:!1,tsType:{name:"StyleType"},description:""},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const{InfoTip:vo}=Ae;function Ju({correct:o,graph:l,onChange:n}){return e.jsxs(e.Fragment,{children:[e.jsxs(Y,{className:Zn.row,children:[e.jsx(Ze,{label:e.jsx(st,{children:"Show angle measures"}),checked:!!(o!=null&&o.showAngles),onChange:i=>{(l==null?void 0:l.type)==="angle"&&(tn(o.type==="angle",`Expected graph type to be angle, but got ${o.type}`),n({correct:{...o,showAngles:i},graph:{...l,showAngles:i}}))}}),e.jsx(vo,{children:e.jsx("p",{children:"Displays the interior angle measures."})})]}),e.jsxs(Y,{className:Zn.row,children:[e.jsx(Ze,{label:e.jsx(st,{children:"Allow reflex angles"}),checked:!!(o!=null&&o.allowReflexAngles),onChange:i=>{tn(o.type==="angle",`Expected graph type to be angle, but got ${o.type}`),tn((l==null?void 0:l.type)==="angle",`Expected graph type to be angle, but got ${l==null?void 0:l.type}`);const u={allowReflexAngles:i};n({correct:{...o,...u},graph:{...l,...u}})}}),e.jsx(vo,{children:e.jsx("p",{children:"Allow students to be able to create reflex angles."})})]}),e.jsxs(dn,{label:"Student answer must",children:[e.jsxs(qn,{selectedValue:o.match||"exact",onChange:i=>{tn(o.type==="angle",`Expected graph type to be angle, but got ${o.type}`),n({correct:{...o,match:i}})},placeholder:"",className:Zn.singleSelectShort,children:[e.jsx(we,{value:"exact",label:"match exactly"}),e.jsx(we,{value:"congruent",label:"be congruent"})]}),e.jsx(vo,{children:e.jsx("p",{children:"Congruency requires only that the angle measures are the same. An exact match implies congruency, but also requires that the angles have the same orientation and that the vertices are in the same position."})})]})]})}Ju.__docgenInfo={description:"",methods:[],displayName:"AngleAnswerOptions",props:{correct:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],required:!1}}]}},description:""},graph:{required:!0,tsType:{name:"union",raw:"PerseusGraphType | undefined",elements:[{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}}]}}]},{name:"undefined"}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: Partial<EditorProps>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    apiOptions: APIOptionsWithDefaults;

    /**
     * The labels for the x and y axes.
     */
    labels: ReadonlyArray<string>;
    /**
     * Specifies the location of the labels on the graph.  default: "onAxis".
     * - "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
     * - "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
     *    The y label is rotated. Typically used when the range min is near 0 with longer labels.
     */
    labelLocation?: AxisLabelLocation;
    /**
     * The range of the graph in the x and y directions.
     */
    range: [x: Range, y: Range];
    /**
     * Whether the graph is bounded on the x and y axes.
     */
    showAxisArrows: ShowAxisArrows;
    /**
     * How far apart the tick marks on the axes are in the x and y
     * directions.
     */
    step: [x: number, y: number];
    /**
     * How far apart the grid lines are in the x and y directions.
     */
    gridStep: [x: number, y: number];
    /**
     * How far apart the snap-to points are in the x and y directions.
     */
    snapStep: [x: number, y: number];
    /**
     * The size of the graph in pixels.
     */
    box: [x: number, y: number];

    /**
     * An error message to display in the graph area, or true if the
     * graph is valid.
     */
    valid: true | string;
    /**
     * The background image to display in the graph area and its properties.
     */
    backgroundImage: PerseusImageBackground;
    /**
     * The type of markings to display on the graph.
     * - graph: shows the axes and the grid lines
     * - grid: shows only the grid lines
     * - none: shows no markings
     */
    markings: MarkingsType;
    /**
     * Whether to show the protractor on the graph.
     */
    showProtractor: boolean;
    /**
     * Whether to show tooltips on the graph.
     * (Currently not used, but will be in the future.)
     */
    showTooltips: boolean;
    /**
     * The current correct answer for the graph. Updated by this component
     * when the graph is changed.
     *
     * Note that the "Correct answer:" textbox is not an interactive
     * element. Instead, it is a representation of the correct answer based
     * on the state of the interactive graph previewed at the bottom of the
     * editor page.
     */
    // TODO(LEMS-2344): make the type of \`correct\` more specific
    correct: PerseusGraphType;
    /**
     * The locked figures to display in the graph area.
     * Locked figures are graph elements (points, lines, line segmeents,
     * etc.) that are locked in place and not interactive.
     */
    lockedFigures?: Array<LockedFigure>;
    // Aria-label for the full graph area. Short title for the graph.
    fullGraphAriaLabel?: string;
    // Aria-description for the graph area. Longer description of the graph.
    // Note that the \`aria-description\` property is not supported well,
    // so this description will be hidden in a DOM element whose ID will
    // then be referenced by the graph's \`aria-describedby\` property.
    fullGraphAriaDescription?: string;

    /**
     * The graph to display in the graph area.
     */
    graph: InteractiveGraphProps["userInput"];
    onChange: (props: Partial<Props>) => void;
    // Whether the graph has been set to static mode.
    // Graphs in static mode are not interactive, and their coords are
    // set to those of the "correct" graph in the editor.
    static?: boolean;
}`,signature:{properties:[{key:"apiOptions",value:{name:"Readonly",elements:[{name:"intersection",raw:`APIOptions & {
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,elements:[{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},{name:"signature",type:"object",raw:`{
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,signature:{properties:[{key:"baseElements",value:{name:"NonNullable",elements:[{name:'Readonly["baseElements"]',raw:'APIOptions["baseElements"]'}],raw:'NonNullable<APIOptions["baseElements"]>',required:!0}},{key:"canScrollPage",value:{name:"NonNullable",elements:[{name:'Readonly["canScrollPage"]',raw:'APIOptions["canScrollPage"]'}],raw:'NonNullable<APIOptions["canScrollPage"]>',required:!0}},{key:"editorChangeDelay",value:{name:"NonNullable",elements:[{name:'Readonly["editorChangeDelay"]',raw:'APIOptions["editorChangeDelay"]'}],raw:'NonNullable<APIOptions["editorChangeDelay"]>',required:!0}},{key:"groupAnnotator",value:{name:"NonNullable",elements:[{name:'Readonly["groupAnnotator"]',raw:'APIOptions["groupAnnotator"]'}],raw:'NonNullable<APIOptions["groupAnnotator"]>',required:!0}},{key:"isArticle",value:{name:"NonNullable",elements:[{name:'Readonly["isArticle"]',raw:'APIOptions["isArticle"]'}],raw:'NonNullable<APIOptions["isArticle"]>',required:!0}},{key:"isMobile",value:{name:"NonNullable",elements:[{name:'Readonly["isMobile"]',raw:'APIOptions["isMobile"]'}],raw:'NonNullable<APIOptions["isMobile"]>',required:!0}},{key:"isMobileApp",value:{name:"NonNullable",elements:[{name:'Readonly["isMobileApp"]',raw:'APIOptions["isMobileApp"]'}],raw:'NonNullable<APIOptions["isMobileApp"]>',required:!0}},{key:"onFocusChange",value:{name:"NonNullable",elements:[{name:'Readonly["onFocusChange"]',raw:'APIOptions["onFocusChange"]'}],raw:'NonNullable<APIOptions["onFocusChange"]>',required:!0}},{key:"readOnly",value:{name:"NonNullable",elements:[{name:'Readonly["readOnly"]',raw:'APIOptions["readOnly"]'}],raw:'NonNullable<APIOptions["readOnly"]>',required:!0}},{key:"setDrawingAreaAvailable",value:{name:"NonNullable",elements:[{name:'Readonly["setDrawingAreaAvailable"]',raw:'APIOptions["setDrawingAreaAvailable"]'}],raw:`NonNullable<
    APIOptions["setDrawingAreaAvailable"]
>`,required:!0}},{key:"showAlignmentOptions",value:{name:"NonNullable",elements:[{name:'Readonly["showAlignmentOptions"]',raw:'APIOptions["showAlignmentOptions"]'}],raw:'NonNullable<APIOptions["showAlignmentOptions"]>',required:!0}}]}}]}],raw:`Readonly<
    APIOptions & {
        baseElements: NonNullable<APIOptions["baseElements"]>;
        canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
        editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
        groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
        isArticle: NonNullable<APIOptions["isArticle"]>;
        isMobile: NonNullable<APIOptions["isMobile"]>;
        isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
        onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
        readOnly: NonNullable<APIOptions["readOnly"]>;
        setDrawingAreaAvailable: NonNullable<
            APIOptions["setDrawingAreaAvailable"]
        >;
        showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
    }
>`,required:!0}},{key:"labels",value:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",required:!0},description:"The labels for the x and y axes."},{key:"labelLocation",value:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}],required:!1},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`},{key:"range",value:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The range of the graph in the x and y directions."},{key:"showAxisArrows",value:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]},required:!0},description:"Whether the graph is bounded on the x and y axes."},{key:"step",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:`How far apart the tick marks on the axes are in the x and y
directions.`},{key:"gridStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the grid lines are in the x and y directions."},{key:"snapStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the snap-to points are in the x and y directions."},{key:"box",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The size of the graph in pixels."},{key:"valid",value:{name:"union",raw:"true | string",elements:[{name:"literal",value:"true"},{name:"string"}],required:!0},description:`An error message to display in the graph area, or true if the
graph is valid.`},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!0},description:"The background image to display in the graph area and its properties."},{key:"markings",value:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}],required:!0},description:`The type of markings to display on the graph.
- graph: shows the axes and the grid lines
- grid: shows only the grid lines
- none: shows no markings`},{key:"showProtractor",value:{name:"boolean",required:!0},description:"Whether to show the protractor on the graph."},{key:"showTooltips",value:{name:"boolean",required:!0},description:`Whether to show tooltips on the graph.
(Currently not used, but will be in the future.)`},{key:"correct",value:{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}}],required:!0},description:`The current correct answer for the graph. Updated by this component
when the graph is changed.

Note that the "Correct answer:" textbox is not an interactive
element. Instead, it is a representation of the correct answer based
on the state of the interactive graph previewed at the bottom of the
editor page.`},{key:"lockedFigures",value:{name:"Array",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"Array<LockedFigure>",required:!1},description:`The locked figures to display in the graph area.
Locked figures are graph elements (points, lines, line segmeents,
etc.) that are locked in place and not interactive.`},{key:"fullGraphAriaLabel",value:{name:"string",required:!1}},{key:"fullGraphAriaDescription",value:{name:"string",required:!1}},{key:"graph",value:{name:'PropsFor["userInput"]',raw:'InteractiveGraphProps["userInput"]',required:!0},description:"The graph to display in the graph area."},{key:"onChange",value:{name:"signature",type:"function",raw:"(props: Partial<Props>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"Props"}],raw:"Partial<Props>"},name:"props"}],return:{name:"void"}},required:!0}},{key:"static",value:{name:"boolean",required:!1}}]}}],raw:"Partial<EditorProps>"},name:"props"}],return:{name:"void"}}},description:""}}};const Fo="unlimited",Zu=o=>{const l=parseInt(o,10);return isNaN(l)||l===0?Fo:l},Qu=({correct:o,graph:l,onChange:n})=>e.jsx(dn,{label:"Number of Points:",children:e.jsx(qn,{selectedValue:`${o.numPoints??1}`,onChange:i=>{const u=Zu(i);n({correct:{type:"point",numPoints:u},graph:{type:"point",numPoints:u}})},placeholder:"",className:Zn.singleSelectShort,children:[...[...Array(7).keys()].map(i=>e.jsx(we,{value:`${i}`,label:`${i} point${i>1?"s":""}`},i)),e.jsx(we,{value:Fo,label:"unlimited"},"unlimited")]})});Qu.__docgenInfo={description:"",methods:[],displayName:"GraphPointsCountSelector",props:{correct:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}}]}},description:""},graph:{required:!0,tsType:{name:"union",raw:"PerseusGraphType | undefined",elements:[{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}}]}}]},{name:"undefined"}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: Partial<EditorProps>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    apiOptions: APIOptionsWithDefaults;

    /**
     * The labels for the x and y axes.
     */
    labels: ReadonlyArray<string>;
    /**
     * Specifies the location of the labels on the graph.  default: "onAxis".
     * - "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
     * - "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
     *    The y label is rotated. Typically used when the range min is near 0 with longer labels.
     */
    labelLocation?: AxisLabelLocation;
    /**
     * The range of the graph in the x and y directions.
     */
    range: [x: Range, y: Range];
    /**
     * Whether the graph is bounded on the x and y axes.
     */
    showAxisArrows: ShowAxisArrows;
    /**
     * How far apart the tick marks on the axes are in the x and y
     * directions.
     */
    step: [x: number, y: number];
    /**
     * How far apart the grid lines are in the x and y directions.
     */
    gridStep: [x: number, y: number];
    /**
     * How far apart the snap-to points are in the x and y directions.
     */
    snapStep: [x: number, y: number];
    /**
     * The size of the graph in pixels.
     */
    box: [x: number, y: number];

    /**
     * An error message to display in the graph area, or true if the
     * graph is valid.
     */
    valid: true | string;
    /**
     * The background image to display in the graph area and its properties.
     */
    backgroundImage: PerseusImageBackground;
    /**
     * The type of markings to display on the graph.
     * - graph: shows the axes and the grid lines
     * - grid: shows only the grid lines
     * - none: shows no markings
     */
    markings: MarkingsType;
    /**
     * Whether to show the protractor on the graph.
     */
    showProtractor: boolean;
    /**
     * Whether to show tooltips on the graph.
     * (Currently not used, but will be in the future.)
     */
    showTooltips: boolean;
    /**
     * The current correct answer for the graph. Updated by this component
     * when the graph is changed.
     *
     * Note that the "Correct answer:" textbox is not an interactive
     * element. Instead, it is a representation of the correct answer based
     * on the state of the interactive graph previewed at the bottom of the
     * editor page.
     */
    // TODO(LEMS-2344): make the type of \`correct\` more specific
    correct: PerseusGraphType;
    /**
     * The locked figures to display in the graph area.
     * Locked figures are graph elements (points, lines, line segmeents,
     * etc.) that are locked in place and not interactive.
     */
    lockedFigures?: Array<LockedFigure>;
    // Aria-label for the full graph area. Short title for the graph.
    fullGraphAriaLabel?: string;
    // Aria-description for the graph area. Longer description of the graph.
    // Note that the \`aria-description\` property is not supported well,
    // so this description will be hidden in a DOM element whose ID will
    // then be referenced by the graph's \`aria-describedby\` property.
    fullGraphAriaDescription?: string;

    /**
     * The graph to display in the graph area.
     */
    graph: InteractiveGraphProps["userInput"];
    onChange: (props: Partial<Props>) => void;
    // Whether the graph has been set to static mode.
    // Graphs in static mode are not interactive, and their coords are
    // set to those of the "correct" graph in the editor.
    static?: boolean;
}`,signature:{properties:[{key:"apiOptions",value:{name:"Readonly",elements:[{name:"intersection",raw:`APIOptions & {
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,elements:[{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},{name:"signature",type:"object",raw:`{
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,signature:{properties:[{key:"baseElements",value:{name:"NonNullable",elements:[{name:'Readonly["baseElements"]',raw:'APIOptions["baseElements"]'}],raw:'NonNullable<APIOptions["baseElements"]>',required:!0}},{key:"canScrollPage",value:{name:"NonNullable",elements:[{name:'Readonly["canScrollPage"]',raw:'APIOptions["canScrollPage"]'}],raw:'NonNullable<APIOptions["canScrollPage"]>',required:!0}},{key:"editorChangeDelay",value:{name:"NonNullable",elements:[{name:'Readonly["editorChangeDelay"]',raw:'APIOptions["editorChangeDelay"]'}],raw:'NonNullable<APIOptions["editorChangeDelay"]>',required:!0}},{key:"groupAnnotator",value:{name:"NonNullable",elements:[{name:'Readonly["groupAnnotator"]',raw:'APIOptions["groupAnnotator"]'}],raw:'NonNullable<APIOptions["groupAnnotator"]>',required:!0}},{key:"isArticle",value:{name:"NonNullable",elements:[{name:'Readonly["isArticle"]',raw:'APIOptions["isArticle"]'}],raw:'NonNullable<APIOptions["isArticle"]>',required:!0}},{key:"isMobile",value:{name:"NonNullable",elements:[{name:'Readonly["isMobile"]',raw:'APIOptions["isMobile"]'}],raw:'NonNullable<APIOptions["isMobile"]>',required:!0}},{key:"isMobileApp",value:{name:"NonNullable",elements:[{name:'Readonly["isMobileApp"]',raw:'APIOptions["isMobileApp"]'}],raw:'NonNullable<APIOptions["isMobileApp"]>',required:!0}},{key:"onFocusChange",value:{name:"NonNullable",elements:[{name:'Readonly["onFocusChange"]',raw:'APIOptions["onFocusChange"]'}],raw:'NonNullable<APIOptions["onFocusChange"]>',required:!0}},{key:"readOnly",value:{name:"NonNullable",elements:[{name:'Readonly["readOnly"]',raw:'APIOptions["readOnly"]'}],raw:'NonNullable<APIOptions["readOnly"]>',required:!0}},{key:"setDrawingAreaAvailable",value:{name:"NonNullable",elements:[{name:'Readonly["setDrawingAreaAvailable"]',raw:'APIOptions["setDrawingAreaAvailable"]'}],raw:`NonNullable<
    APIOptions["setDrawingAreaAvailable"]
>`,required:!0}},{key:"showAlignmentOptions",value:{name:"NonNullable",elements:[{name:'Readonly["showAlignmentOptions"]',raw:'APIOptions["showAlignmentOptions"]'}],raw:'NonNullable<APIOptions["showAlignmentOptions"]>',required:!0}}]}}]}],raw:`Readonly<
    APIOptions & {
        baseElements: NonNullable<APIOptions["baseElements"]>;
        canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
        editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
        groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
        isArticle: NonNullable<APIOptions["isArticle"]>;
        isMobile: NonNullable<APIOptions["isMobile"]>;
        isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
        onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
        readOnly: NonNullable<APIOptions["readOnly"]>;
        setDrawingAreaAvailable: NonNullable<
            APIOptions["setDrawingAreaAvailable"]
        >;
        showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
    }
>`,required:!0}},{key:"labels",value:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",required:!0},description:"The labels for the x and y axes."},{key:"labelLocation",value:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}],required:!1},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`},{key:"range",value:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The range of the graph in the x and y directions."},{key:"showAxisArrows",value:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]},required:!0},description:"Whether the graph is bounded on the x and y axes."},{key:"step",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:`How far apart the tick marks on the axes are in the x and y
directions.`},{key:"gridStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the grid lines are in the x and y directions."},{key:"snapStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the snap-to points are in the x and y directions."},{key:"box",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The size of the graph in pixels."},{key:"valid",value:{name:"union",raw:"true | string",elements:[{name:"literal",value:"true"},{name:"string"}],required:!0},description:`An error message to display in the graph area, or true if the
graph is valid.`},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!0},description:"The background image to display in the graph area and its properties."},{key:"markings",value:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}],required:!0},description:`The type of markings to display on the graph.
- graph: shows the axes and the grid lines
- grid: shows only the grid lines
- none: shows no markings`},{key:"showProtractor",value:{name:"boolean",required:!0},description:"Whether to show the protractor on the graph."},{key:"showTooltips",value:{name:"boolean",required:!0},description:`Whether to show tooltips on the graph.
(Currently not used, but will be in the future.)`},{key:"correct",value:{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}}],required:!0},description:`The current correct answer for the graph. Updated by this component
when the graph is changed.

Note that the "Correct answer:" textbox is not an interactive
element. Instead, it is a representation of the correct answer based
on the state of the interactive graph previewed at the bottom of the
editor page.`},{key:"lockedFigures",value:{name:"Array",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"Array<LockedFigure>",required:!1},description:`The locked figures to display in the graph area.
Locked figures are graph elements (points, lines, line segmeents,
etc.) that are locked in place and not interactive.`},{key:"fullGraphAriaLabel",value:{name:"string",required:!1}},{key:"fullGraphAriaDescription",value:{name:"string",required:!1}},{key:"graph",value:{name:'PropsFor["userInput"]',raw:'InteractiveGraphProps["userInput"]',required:!0},description:"The graph to display in the graph area."},{key:"onChange",value:{name:"signature",type:"function",raw:"(props: Partial<Props>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"Props"}],raw:"Partial<Props>"},name:"props"}],return:{name:"void"}},required:!0}},{key:"static",value:{name:"boolean",required:!1}}]}}],raw:"Partial<EditorProps>"},name:"props"}],return:{name:"void"}}},description:""}}};const ed=o=>e.jsxs(qn,{selectedValue:o.graphType,onChange:o.onChange,placeholder:"Select an answer type",style:E0.singleSelectShort,children:[e.jsx(we,{value:"none",label:"None"}),e.jsx(we,{value:"linear",label:"Linear function"}),e.jsx(we,{value:"quadratic",label:"Quadratic function"}),e.jsx(we,{value:"sinusoid",label:"Sinusoid function"}),e.jsx(we,{value:"circle",label:"Circle"}),e.jsx(we,{value:"point",label:"Point(s)"}),e.jsx(we,{value:"linear-system",label:"Linear System"}),e.jsx(we,{value:"polygon",label:"Polygon"}),e.jsx(we,{value:"segment",label:"Line Segment(s)"}),e.jsx(we,{value:"ray",label:"Ray"}),e.jsx(we,{value:"angle",label:"Angle"})]}),E0=ie.StyleSheet.create({singleSelectShort:{height:26}});ed.__docgenInfo={description:"",methods:[],displayName:"GraphTypeSelector",props:{graphType:{required:!0,tsType:{name:"string"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newGraphType: string) => void",signature:{arguments:[{type:{name:"string"},name:"newGraphType"}],return:{name:"void"}}},description:""}}};function dt({title:o,isOpen:l,isCollapsible:n,onToggle:i}){return e.jsx(Do,{style:[ko.container,!n&&ko.notClickable],disabled:!n,onClick:()=>n&&(i==null?void 0:i(!l)),children:()=>e.jsxs(Y,{style:ko.heading,children:[e.jsx(Ne,{style:{fontSize:14,fontWeight:600},children:o}),n&&e.jsx(Ou,{isExpanded:l})]})})}const ko=ie.StyleSheet.create({container:{marginTop:j.small_12,marginInline:-10,backgroundColor:me.offBlack8,padding:j.xSmall_8,width:"calc(100% + 20px)"},heading:{flexDirection:"row",justifyContent:"space-between",userSelect:"none"},notClickable:{color:"inherit",cursor:"default"}});dt.__docgenInfo={description:"",methods:[],displayName:"Heading",props:{title:{required:!0,tsType:{name:"string"},description:""},isOpen:{required:!0,tsType:{name:"boolean"},description:""},isCollapsible:{required:!0,tsType:{name:"boolean"},description:""},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(isOpen: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"isOpen"}],return:{name:"void"}}},description:""}}};function nd(o){return e.jsxs(e.Fragment,{children:[e.jsx(dt,{title:"Correct Answer",isOpen:!0,isCollapsible:!1}),e.jsxs(Y,{id:o.id,children:[e.jsxs(Y,{children:[e.jsx($o,{style:{paddingTop:j.xxSmall_6,paddingBottom:j.xxSmall_6,color:me.offBlack64},children:"Graph the correct answer in the graph below and ensure the equation or point coordinates displayed represent the correct answer."}),e.jsx(gi,{style:{fontSize:12,backgroundColor:"#eee",paddingInline:j.xxSmall_6,borderColor:"#ccc",borderStyle:"solid",borderWidth:1},children:o.equationString})]}),o.children]})]})}nd.__docgenInfo={description:"",methods:[],displayName:"InteractiveGraphCorrectAnswer",props:{id:{required:!0,tsType:{name:"string"},description:""},equationString:{required:!0,tsType:{name:"string"},description:""},children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""}}};const Ht=o=>{const l=F.useRef(null);return F.useEffect(()=>{const n=l.current;n&&(n.style.height="42px",n.style.height=`${n.scrollHeight}px`)},[o.value]),e.jsx(qu,{...o,ref:l,resizeType:"none",style:{overflow:"hidden",...o.style}})};Ht.__docgenInfo={description:"",methods:[],displayName:"AutoResizingTextArea"};function td(o){const{ariaLabelValue:l,ariaDescriptionValue:n,onChange:i}=o,[u,p]=F.useState(!0),k=`${F.useId()}-description-textarea`;return e.jsxs(e.Fragment,{children:[e.jsx(dt,{title:"Description",isCollapsible:!0,isOpen:u,onToggle:p}),u&&e.jsxs(Y,{children:[e.jsx($o,{style:zs.caption,children:"Use these fields to describe the graph as a whole. These are used by screen readers to describe content to users who may be visually impaired."}),e.jsxs(Ne,{tag:"label",children:["Title",e.jsx(lt,{value:l,onChange:b=>i({fullGraphAriaLabel:b||void 0}),style:zs.spaceAbove})]}),e.jsx(re,{size:j.small_12}),e.jsx(Ne,{tag:"label",htmlFor:k,children:"Description"}),e.jsx(Ht,{id:k,value:n,onChange:b=>i({fullGraphAriaDescription:b||void 0})})]})]})}const zs=ie.StyleSheet.create({caption:{color:me.offBlack64,paddingTop:j.xxSmall_6,paddingBottom:j.xxSmall_6},spaceAbove:{marginTop:j.xxxSmall_4}});td.__docgenInfo={description:"",methods:[],displayName:"InteractiveGraphDescription",props:{ariaLabelValue:{required:!0,tsType:{name:"string"},description:""},ariaDescriptionValue:{required:!0,tsType:{name:"string"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(graphProps: Partial<EditorProps>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    apiOptions: APIOptionsWithDefaults;

    /**
     * The labels for the x and y axes.
     */
    labels: ReadonlyArray<string>;
    /**
     * Specifies the location of the labels on the graph.  default: "onAxis".
     * - "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
     * - "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
     *    The y label is rotated. Typically used when the range min is near 0 with longer labels.
     */
    labelLocation?: AxisLabelLocation;
    /**
     * The range of the graph in the x and y directions.
     */
    range: [x: Range, y: Range];
    /**
     * Whether the graph is bounded on the x and y axes.
     */
    showAxisArrows: ShowAxisArrows;
    /**
     * How far apart the tick marks on the axes are in the x and y
     * directions.
     */
    step: [x: number, y: number];
    /**
     * How far apart the grid lines are in the x and y directions.
     */
    gridStep: [x: number, y: number];
    /**
     * How far apart the snap-to points are in the x and y directions.
     */
    snapStep: [x: number, y: number];
    /**
     * The size of the graph in pixels.
     */
    box: [x: number, y: number];

    /**
     * An error message to display in the graph area, or true if the
     * graph is valid.
     */
    valid: true | string;
    /**
     * The background image to display in the graph area and its properties.
     */
    backgroundImage: PerseusImageBackground;
    /**
     * The type of markings to display on the graph.
     * - graph: shows the axes and the grid lines
     * - grid: shows only the grid lines
     * - none: shows no markings
     */
    markings: MarkingsType;
    /**
     * Whether to show the protractor on the graph.
     */
    showProtractor: boolean;
    /**
     * Whether to show tooltips on the graph.
     * (Currently not used, but will be in the future.)
     */
    showTooltips: boolean;
    /**
     * The current correct answer for the graph. Updated by this component
     * when the graph is changed.
     *
     * Note that the "Correct answer:" textbox is not an interactive
     * element. Instead, it is a representation of the correct answer based
     * on the state of the interactive graph previewed at the bottom of the
     * editor page.
     */
    // TODO(LEMS-2344): make the type of \`correct\` more specific
    correct: PerseusGraphType;
    /**
     * The locked figures to display in the graph area.
     * Locked figures are graph elements (points, lines, line segmeents,
     * etc.) that are locked in place and not interactive.
     */
    lockedFigures?: Array<LockedFigure>;
    // Aria-label for the full graph area. Short title for the graph.
    fullGraphAriaLabel?: string;
    // Aria-description for the graph area. Longer description of the graph.
    // Note that the \`aria-description\` property is not supported well,
    // so this description will be hidden in a DOM element whose ID will
    // then be referenced by the graph's \`aria-describedby\` property.
    fullGraphAriaDescription?: string;

    /**
     * The graph to display in the graph area.
     */
    graph: InteractiveGraphProps["userInput"];
    onChange: (props: Partial<Props>) => void;
    // Whether the graph has been set to static mode.
    // Graphs in static mode are not interactive, and their coords are
    // set to those of the "correct" graph in the editor.
    static?: boolean;
}`,signature:{properties:[{key:"apiOptions",value:{name:"Readonly",elements:[{name:"intersection",raw:`APIOptions & {
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,elements:[{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},{name:"signature",type:"object",raw:`{
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,signature:{properties:[{key:"baseElements",value:{name:"NonNullable",elements:[{name:'Readonly["baseElements"]',raw:'APIOptions["baseElements"]'}],raw:'NonNullable<APIOptions["baseElements"]>',required:!0}},{key:"canScrollPage",value:{name:"NonNullable",elements:[{name:'Readonly["canScrollPage"]',raw:'APIOptions["canScrollPage"]'}],raw:'NonNullable<APIOptions["canScrollPage"]>',required:!0}},{key:"editorChangeDelay",value:{name:"NonNullable",elements:[{name:'Readonly["editorChangeDelay"]',raw:'APIOptions["editorChangeDelay"]'}],raw:'NonNullable<APIOptions["editorChangeDelay"]>',required:!0}},{key:"groupAnnotator",value:{name:"NonNullable",elements:[{name:'Readonly["groupAnnotator"]',raw:'APIOptions["groupAnnotator"]'}],raw:'NonNullable<APIOptions["groupAnnotator"]>',required:!0}},{key:"isArticle",value:{name:"NonNullable",elements:[{name:'Readonly["isArticle"]',raw:'APIOptions["isArticle"]'}],raw:'NonNullable<APIOptions["isArticle"]>',required:!0}},{key:"isMobile",value:{name:"NonNullable",elements:[{name:'Readonly["isMobile"]',raw:'APIOptions["isMobile"]'}],raw:'NonNullable<APIOptions["isMobile"]>',required:!0}},{key:"isMobileApp",value:{name:"NonNullable",elements:[{name:'Readonly["isMobileApp"]',raw:'APIOptions["isMobileApp"]'}],raw:'NonNullable<APIOptions["isMobileApp"]>',required:!0}},{key:"onFocusChange",value:{name:"NonNullable",elements:[{name:'Readonly["onFocusChange"]',raw:'APIOptions["onFocusChange"]'}],raw:'NonNullable<APIOptions["onFocusChange"]>',required:!0}},{key:"readOnly",value:{name:"NonNullable",elements:[{name:'Readonly["readOnly"]',raw:'APIOptions["readOnly"]'}],raw:'NonNullable<APIOptions["readOnly"]>',required:!0}},{key:"setDrawingAreaAvailable",value:{name:"NonNullable",elements:[{name:'Readonly["setDrawingAreaAvailable"]',raw:'APIOptions["setDrawingAreaAvailable"]'}],raw:`NonNullable<
    APIOptions["setDrawingAreaAvailable"]
>`,required:!0}},{key:"showAlignmentOptions",value:{name:"NonNullable",elements:[{name:'Readonly["showAlignmentOptions"]',raw:'APIOptions["showAlignmentOptions"]'}],raw:'NonNullable<APIOptions["showAlignmentOptions"]>',required:!0}}]}}]}],raw:`Readonly<
    APIOptions & {
        baseElements: NonNullable<APIOptions["baseElements"]>;
        canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
        editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
        groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
        isArticle: NonNullable<APIOptions["isArticle"]>;
        isMobile: NonNullable<APIOptions["isMobile"]>;
        isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
        onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
        readOnly: NonNullable<APIOptions["readOnly"]>;
        setDrawingAreaAvailable: NonNullable<
            APIOptions["setDrawingAreaAvailable"]
        >;
        showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
    }
>`,required:!0}},{key:"labels",value:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",required:!0},description:"The labels for the x and y axes."},{key:"labelLocation",value:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}],required:!1},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`},{key:"range",value:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The range of the graph in the x and y directions."},{key:"showAxisArrows",value:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]},required:!0},description:"Whether the graph is bounded on the x and y axes."},{key:"step",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:`How far apart the tick marks on the axes are in the x and y
directions.`},{key:"gridStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the grid lines are in the x and y directions."},{key:"snapStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the snap-to points are in the x and y directions."},{key:"box",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The size of the graph in pixels."},{key:"valid",value:{name:"union",raw:"true | string",elements:[{name:"literal",value:"true"},{name:"string"}],required:!0},description:`An error message to display in the graph area, or true if the
graph is valid.`},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!0},description:"The background image to display in the graph area and its properties."},{key:"markings",value:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}],required:!0},description:`The type of markings to display on the graph.
- graph: shows the axes and the grid lines
- grid: shows only the grid lines
- none: shows no markings`},{key:"showProtractor",value:{name:"boolean",required:!0},description:"Whether to show the protractor on the graph."},{key:"showTooltips",value:{name:"boolean",required:!0},description:`Whether to show tooltips on the graph.
(Currently not used, but will be in the future.)`},{key:"correct",value:{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}}],required:!0},description:`The current correct answer for the graph. Updated by this component
when the graph is changed.

Note that the "Correct answer:" textbox is not an interactive
element. Instead, it is a representation of the correct answer based
on the state of the interactive graph previewed at the bottom of the
editor page.`},{key:"lockedFigures",value:{name:"Array",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"Array<LockedFigure>",required:!1},description:`The locked figures to display in the graph area.
Locked figures are graph elements (points, lines, line segmeents,
etc.) that are locked in place and not interactive.`},{key:"fullGraphAriaLabel",value:{name:"string",required:!1}},{key:"fullGraphAriaDescription",value:{name:"string",required:!1}},{key:"graph",value:{name:'PropsFor["userInput"]',raw:'InteractiveGraphProps["userInput"]',required:!0},description:"The graph to display in the graph area."},{key:"onChange",value:{name:"signature",type:"function",raw:"(props: Partial<Props>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"Props"}],raw:"Partial<Props>"},name:"props"}],return:{name:"void"}},required:!0}},{key:"static",value:{name:"boolean",required:!1}}]}}],raw:"Partial<EditorProps>"},name:"graphProps"}],return:{name:"void"}}},description:""}}};const D0={small:st,medium:je},Hn=o=>{const{checked:l,label:n,labelSide:i="end",size:u="medium",style:p,onChange:w}=o,k=D0[u],b=F.useId(),N=e.jsx(k,{tag:"label",htmlFor:b,children:n}),O=e.jsx(re,{size:j.xSmall_8});return e.jsxs(Y,{style:[M0.row,p],children:[i==="start"&&e.jsxs(e.Fragment,{children:[N,O]}),e.jsx(Mo,{id:b,checked:l,onChange:w}),i==="end"&&e.jsxs(e.Fragment,{children:[O,N]})]})},M0=ie.StyleSheet.create({row:{flexDirection:"row",alignItems:"center"}});Hn.__docgenInfo={description:"",methods:[],displayName:"LabeledSwitch",props:{label:{required:!0,tsType:{name:"string"},description:""},checked:{required:!0,tsType:{name:"boolean"},description:""},labelSide:{required:!1,tsType:{name:"union",raw:'"start" | "end"',elements:[{name:"literal",value:'"start"'},{name:"literal",value:'"end"'}]},description:""},size:{required:!1,tsType:{name:"union",raw:'"small" | "medium"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'}]},description:""},style:{required:!1,tsType:{name:"StyleType"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newValue: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"newValue"}],return:{name:"void"}}},description:""}}};function ad(o){const{showAxisArrows:l,onChange:n}=o;return e.jsxs(e.Fragment,{children:[e.jsx(st,{children:"Arrows"}),e.jsxs("div",{className:"perseus-widget-row",style:{display:"flex",flexDirection:"row",alignItems:"center",gap:Q.size_060},children:[e.jsx("div",{className:"perseus-widget-left-col",children:e.jsx(Hn,{label:"x min",labelSide:"start",size:"small",checked:l.xMin,onChange:()=>n("xMin")})}),e.jsx("div",{className:"perseus-widget-right-col",children:e.jsx(Hn,{label:"y min",labelSide:"start",size:"small",checked:l.yMin,onChange:()=>n("yMin")})})]}),e.jsxs("div",{className:"perseus-widget-row",style:{display:"flex",flexDirection:"row",alignItems:"center",gap:Q.size_060},children:[e.jsx("div",{className:"perseus-widget-left-col",children:e.jsx(Hn,{label:"x max",labelSide:"start",size:"small",checked:l.xMax,onChange:()=>n("xMax")})}),e.jsx("div",{className:"perseus-widget-right-col",children:e.jsx(Hn,{label:"y max",labelSide:"start",size:"small",checked:l.yMax,onChange:()=>n("yMax")})})]})]})}ad.__docgenInfo={description:"",methods:[],displayName:"AxisArrowSwitches",props:{showAxisArrows:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]}},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(axis: keyof ShowAxisArrows) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]}},name:"axis"}],return:{name:"void"}}},description:""}}};const{ButtonGroup:_s,InfoTip:Bs,RangeInput:Sa}=Ae,z0={url:null,width:0,height:0};function _0(o,l){return Math.floor((o[1]-o[0])/l)}const Qa=class Qa extends F.Component{constructor(n){super(n);x(this,"_isMounted",!1);x(this,"bgUrlRef",F.createRef());x(this,"labelXRef",F.createRef());x(this,"labelYRef",F.createRef());x(this,"change",(...n)=>Le.apply(this,n));x(this,"changeBackgroundUrl",n=>{var p;if(n.type==="keypress"&&n.key!=="Enter")return;const i=(w,k,b)=>{const N={...this.props.backgroundImage};N.url=w,N.width=k,N.height=b,this.setState({backgroundImage:N},this.changeGraph)},u=(p=this.bgUrlRef.current)==null?void 0:p.value;u?Fe.getImageSize(u,(w,k)=>{this._isMounted&&i(u,w,k)}):i(null,0,0)});x(this,"renderLabelChoices",n=>n.map(i=>e.jsx("option",{value:i[1],children:i[0]},i[1])));x(this,"validRange",n=>R.every(n,function(u){return R.isFinite(u)})?n[0]>=n[1]?"Range must have a higher number on the right":!0:"Range must be a valid number");x(this,"validateStepValue",n=>{const{step:i,range:u,name:p,minTicks:w,maxTicks:k}=n,b=_0(u,i);return b<w?p+" is too large, there must be at least "+w+" ticks.":b>k?p+" is too small, there can be at most "+k+" ticks.":!0});x(this,"validSnapStep",(n,i)=>this.validateStepValue({step:n,range:i,name:"Snap step",minTicks:5,maxTicks:60}));x(this,"validGridStep",(n,i)=>this.validateStepValue({step:n,range:i,name:"Grid step",minTicks:3,maxTicks:60}));x(this,"validStep",(n,i)=>this.validateStepValue({step:n,range:i,name:"Step",minTicks:3,maxTicks:20}));x(this,"validBackgroundImageSize",n=>n.url?n.width<=450&&n.height<=450?!0:"Image must be smaller than 450px x 450px.":!0);x(this,"validateGraphSettings",(n,i,u,p,w)=>{const k=this;let b;if(!R.every(n,function(_){return b=k.validRange(_),b===!0})||!R.every(i,function(_,M){return b=k.validStep(_,n[M]),b===!0})||!R.every(u,function(_,M){return b=k.validGridStep(_,n[M]),b===!0})||!R.every(p,function(_,M){return b=k.validSnapStep(_,n[M]),b===!0}))return b;const G=this.validBackgroundImageSize(w);return G!==!0?(b=G,b):!0});x(this,"changeLabel",(n,i)=>{const u=i.target.value,p=this.state.labelsTextbox.slice();p[n]=u,this.setState({labelsTextbox:p},this.changeGraph)});x(this,"changeRange",(n,i)=>{const u=this.state.rangeTextbox.slice();u[n]=i,this.setState({rangeTextbox:u},this.changeGraph)});x(this,"changeShowAxisArrows",n=>{const i={...this.state.showAxisArrowsSwitches};i[n]=!i[n],this.setState({showAxisArrowsSwitches:i},this.changeGraph)});x(this,"changeStepsBasedOnRange",()=>{const n=this.state.rangeTextbox.slice(),i=this.state.stepTextbox.slice(),u=this.state.gridStepTextbox.slice(),p=this.state.snapStepTextbox.slice(),w=Fe.scaleFromExtent(n[0],this.props.box[0]);if(this.validRange(n[0])===!0){i[0]=Fe.tickStepFromExtent(n[0],this.props.box[0]);const b=Fe.gridStepFromTickStep(i[0],w);b&&(u[0]=b),p[0]=u[0]/2}const k=Fe.scaleFromExtent(n[1],this.props.box[1]);if(this.validRange(n[1])===!0){i[1]=Fe.tickStepFromExtent(n[1],this.props.box[1]);const b=Fe.gridStepFromTickStep(i[1],k);b&&(u[1]=b),p[1]=u[1]/2}this.setState({stepTextbox:i,gridStepTextbox:u,snapStepTextbox:p,rangeTextbox:n},this.changeGraph)});x(this,"changeStep",n=>{this.setState({stepTextbox:n},this.changeGraph)});x(this,"changeSnapStep",n=>{this.setState({snapStepTextbox:n},this.changeGraph)});x(this,"changeGridStep",n=>{this.setState({gridStepTextbox:n,snapStepTextbox:R.map(n,function(i){return i/2})},this.changeGraph)});x(this,"changeGraph",()=>{const n=this.state.labelsTextbox,i=this.state.labelLocation,u=this.state.rangeTextbox.map(B=>B.map(V=>Number(V))),p=this.state.showAxisArrowsSwitches,w=this.state.stepTextbox.map(B=>Number(B)),k=this.state.gridStepTextbox,b=this.state.snapStepTextbox,N=this.state.backgroundImage,O=this.validateGraphSettings(u,w,k,b,N);O===!0?this.change({valid:!0,labels:n,labelLocation:i,range:u,showAxisArrows:p,step:w,gridStep:k,snapStep:b,backgroundImage:N}):this.change({valid:O})});this.state={isExpanded:!0,...Qa.stateFromProps(n)}}static stateFromProps(n){return{labelsTextbox:n.labels,labelLocation:n.labelLocation,gridStepTextbox:n.gridStep,snapStepTextbox:n.snapStep,stepTextbox:n.step,rangeTextbox:n.range,showAxisArrowsSwitches:n.showAxisArrows,backgroundImage:{...n.backgroundImage}}}componentDidMount(){this._isMounted=!0,this.changeGraph=R.debounce(this.changeGraph,300)}UNSAFE_componentWillReceiveProps(n){(!R.isEqual(this.props.labels,n.labels)||!R.isEqual(this.props.labelLocation,n.labelLocation)||!R.isEqual(this.props.gridStep,n.gridStep)||!R.isEqual(this.props.snapStep,n.snapStep)||!R.isEqual(this.props.step,n.step)||!R.isEqual(this.props.range,n.range)||!R.isEqual(this.props.backgroundImage,n.backgroundImage))&&this.setState(Qa.stateFromProps(n))}componentWillUnmount(){this._isMounted=!1}render(){return e.jsxs(e.Fragment,{children:[e.jsx(dt,{title:"Common Graph Settings",isOpen:this.state.isExpanded,isCollapsible:!0,onToggle:()=>this.setState({isExpanded:!this.state.isExpanded})}),this.state.isExpanded&&e.jsxs(Y,{children:[e.jsxs("div",{className:"graph-settings",children:[e.jsx("div",{className:"perseus-widget-row",children:e.jsx(dn,{label:"Label Location",children:e.jsx(_s,{value:this.props.labelLocation,allowEmpty:!1,buttons:[{value:"onAxis",content:"On Axis"},{value:"alongEdge",content:"Along Graph Edge"}],onChange:this.change("labelLocation")})})}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx("div",{className:"perseus-widget-left-col",children:e.jsx(dn,{label:"x Label",children:e.jsx("input",{type:"text",className:"graph-settings-axis-label",ref:this.labelXRef,onChange:n=>this.changeLabel(0,n),value:this.state.labelsTextbox[0]||""})})}),e.jsx("div",{className:"perseus-widget-right-col",children:e.jsx(dn,{label:"y Label",children:e.jsx("input",{type:"text",className:"graph-settings-axis-label",ref:this.labelYRef,onChange:n=>this.changeLabel(1,n),value:this.state.labelsTextbox[1]||""})})})]}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx("div",{className:"perseus-widget-left-col",children:e.jsx(dn,{label:"x Range",children:e.jsx(Sa,{value:this.state.rangeTextbox[0],onChange:n=>this.changeRange(0,n),allowPiTruncation:!0})})}),e.jsx("div",{className:"perseus-widget-right-col",children:e.jsx(dn,{label:"y Range",children:e.jsx(Sa,{value:this.state.rangeTextbox[1],onChange:n=>this.changeRange(1,n),allowPiTruncation:!0})})})]}),e.jsx(ad,{showAxisArrows:this.state.showAxisArrowsSwitches,onChange:this.changeShowAxisArrows}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx("div",{className:"perseus-widget-left-col",children:e.jsx(dn,{label:"Tick Step",children:e.jsx(Sa,{value:this.state.stepTextbox,onChange:this.changeStep,allowPiTruncation:!0})})}),e.jsx("div",{className:"perseus-widget-right-col",children:e.jsx(dn,{label:"Grid Step",children:e.jsx(Sa,{value:this.state.gridStepTextbox,onChange:this.changeGridStep,allowPiTruncation:!0})})})]}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx("div",{className:"perseus-widget-left-col",children:e.jsx(dn,{label:"Snap Step",children:e.jsx(Sa,{value:this.state.snapStepTextbox,onChange:this.changeSnapStep,allowPiTruncation:!0})})}),e.jsxs("div",{className:"perseus-widget-right-col",children:[e.jsx(Ue,{size:"small",kind:"tertiary",onClick:()=>{this.changeStepsBasedOnRange()},children:"Auto-adjust steps"}),e.jsxs(Bs,{children:[e.jsx("p",{children:'Use the "Auto-adjust" steps button to update the tick step, grid step, and snap step to values that are valid for the current range.'}),e.jsx("br",{}),e.jsx("p",{children:"This is useful when the range is changed, and the graph errors due to the step sizes being too large or too small."})]})]})]}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(dn,{label:"Markings:",children:e.jsx(_s,{value:this.props.markings,allowEmpty:!1,buttons:[{value:"axes",content:"Axes"},{value:"graph",content:"Graph"},{value:"grid",content:"Grid"},{value:"none",content:"None"}],onChange:this.change("markings")})})}),e.jsx("div",{className:"perseus-widget-left-col",children:e.jsx(Ze,{label:"Show tooltips",checked:this.props.showTooltips,onChange:n=>{this.change({showTooltips:n})}})})]}),e.jsxs(dn,{label:"Background image URL:",style:Pa.resetSpaceTop,children:[e.jsx("input",{type:"text",className:ie.css(Pa.backgroundUrlInput),ref:this.bgUrlRef,value:this.state.backgroundImage.url||"",onChange:n=>{const i={...this.props.backgroundImage};i.url=n.target.value,this.setState({backgroundImage:i})},onKeyPress:this.changeBackgroundUrl,onBlur:this.changeBackgroundUrl}),e.jsx(Bs,{children:e.jsx("p",{children:'Create an image in graphie, or use the "Add image" function to create a background.'})})]}),e.jsxs(Y,{style:Pa.protractorSection,children:[e.jsx(Y,{style:Pa.checkboxRow,children:e.jsx(Ze,{label:"Show protractor",checked:this.props.showProtractor,onChange:n=>{this.change({showProtractor:n})},style:Pa.resetSpaceTop})}),this.props.showProtractor&&e.jsx(Qc,{layout:"floating",text:"The protractor is not accessible. Please consider an alternate approach.",kind:"warning"})]})]})]})}};x(Qa,"defaultProps",{box:[er.defaultBoxSizeSmall,er.defaultBoxSizeSmall],labels:["$x$","$y$"],labelLocation:"onAxis",range:[[-10,10],[-10,10]],step:[1,1],gridStep:[1,1],snapStep:[1,1],valid:!0,backgroundImage:z0,markings:"graph",showProtractor:!1,showTooltips:!1,showAxisArrows:{xMin:!0,xMax:!0,yMin:!0,yMax:!0}});let si=Qa;const Pa=ie.StyleSheet.create({resetSpaceTop:{marginTop:0},backgroundUrlInput:{border:`1px solid ${me.offBlack32}`,borderRadius:j.xxxSmall_4,padding:j.xxxSmall_4},checkboxRow:{flexDirection:"row",alignItems:"center",justifyContent:"space-between",marginBottom:j.xSmall_8},protractorSection:{marginTop:j.xSmall_8,borderTop:`1px solid ${me.offBlack16}`,paddingTop:j.xSmall_8,paddingBottom:j.xSmall_8,borderBottom:`1px solid ${me.offBlack16}`}});si.__docgenInfo={description:"",methods:[{name:"stateFromProps",docblock:null,modifiers:["static"],params:[{name:"props",optional:!1,type:{name:"signature",type:"object",raw:`{
    /**
     * The size of the graph area in pixels.
     */
    box: [x: number, y: number];
    /**
     * The labels for the x and y axes.
     */
    labels: ReadonlyArray<string>;
    /**
     * Specifies the location of the labels on the graph.  default: "onAxis".
     * - "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
     * - "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
     *    The y label is rotated. Typically used when the range min is near 0 with longer labels.
     */
    labelLocation: AxisLabelLocation;
    /**
     * The range of the graph.
     */
    range: [x: Range, y: Range];
    /**
     * Whether the graph is bounded (no axis arrows) on the x and y axes.
     */
    showAxisArrows: ShowAxisArrows;
    /**
     * How far apart the tick marks on the axes are in the x and y
     * directions.
     */
    step: [x: number, y: number];
    /**
     * How far apart the grid lines are in the x and y directions.
     */
    gridStep: [x: number, y: number];
    /**
     * How far apart the snap-to points are in the x and y directions.
     */
    snapStep: [x: number, y: number];
    /**
     * An error message to display in the graph area, or true if the
     * graph is valid.
     */
    valid: true | string;
    /**
     * The background image to display in the graph area and its properties.
     */
    backgroundImage: PerseusImageBackground;

    /**
     * The type of markings to display on the graph.
     * - axes: shows the axes without the gride lines
     * - graph: shows the axes and the grid lines
     * - grid: shows only the grid lines
     * - none: shows no markings
     */
    markings: MarkingsType;
    /**
     * Whether to show the protractor on the graph.
     */
    showProtractor: boolean;
    /**
     * Whether to show tooltips on the graph.
     */
    showTooltips: boolean;

    onChange: (arg1: Partial<Props>) => void;
}`,signature:{properties:[{key:"box",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The size of the graph area in pixels."},{key:"labels",value:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",required:!0},description:"The labels for the x and y axes."},{key:"labelLocation",value:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}],required:!0},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`},{key:"range",value:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The range of the graph."},{key:"showAxisArrows",value:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]},required:!0},description:"Whether the graph is bounded (no axis arrows) on the x and y axes."},{key:"step",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:`How far apart the tick marks on the axes are in the x and y
directions.`},{key:"gridStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the grid lines are in the x and y directions."},{key:"snapStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the snap-to points are in the x and y directions."},{key:"valid",value:{name:"union",raw:"true | string",elements:[{name:"literal",value:"true"},{name:"string"}],required:!0},description:`An error message to display in the graph area, or true if the
graph is valid.`},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!0},description:"The background image to display in the graph area and its properties."},{key:"markings",value:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}],required:!0},description:`The type of markings to display on the graph.
- axes: shows the axes without the gride lines
- graph: shows the axes and the grid lines
- grid: shows only the grid lines
- none: shows no markings`},{key:"showProtractor",value:{name:"boolean",required:!0},description:"Whether to show the protractor on the graph."},{key:"showTooltips",value:{name:"boolean",required:!0},description:"Whether to show tooltips on the graph."},{key:"onChange",value:{name:"signature",type:"function",raw:"(arg1: Partial<Props>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"Props"}],raw:"Partial<Props>"},name:"arg1"}],return:{name:"void"}},required:!0}}]},alias:"Props"}}],returns:null},{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"changeBackgroundUrl",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"renderLabelChoices",docblock:null,modifiers:[],params:[{name:"choices",optional:!1,type:null}],returns:null},{name:"validRange",docblock:null,modifiers:[],params:[{name:"range",optional:!1,type:null}],returns:null},{name:"validateStepValue",docblock:null,modifiers:[],params:[{name:"settings",optional:!1,type:null}],returns:null},{name:"validSnapStep",docblock:null,modifiers:[],params:[{name:"step",optional:!1,type:null},{name:"range",optional:!1,type:null}],returns:null},{name:"validGridStep",docblock:null,modifiers:[],params:[{name:"step",optional:!1,type:null},{name:"range",optional:!1,type:null}],returns:null},{name:"validStep",docblock:null,modifiers:[],params:[{name:"step",optional:!1,type:null},{name:"range",optional:!1,type:null}],returns:null},{name:"validBackgroundImageSize",docblock:null,modifiers:[],params:[{name:"image",optional:!1,type:null}],returns:null},{name:"validateGraphSettings",docblock:null,modifiers:[],params:[{name:"range",optional:!1,type:null},{name:"step",optional:!1,type:null},{name:"gridStep",optional:!1,type:null},{name:"snapStep",optional:!1,type:null},{name:"image",optional:!1,type:null}],returns:null},{name:"changeLabel",docblock:null,modifiers:[],params:[{name:"i",optional:!1,type:null},{name:"e",optional:!1,type:null}],returns:null},{name:"changeRange",docblock:null,modifiers:[],params:[{name:"i",optional:!1,type:null},{name:"values",optional:!1,type:null}],returns:null},{name:"changeShowAxisArrows",docblock:null,modifiers:[],params:[{name:"axis",optional:!1,type:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]}}}],returns:null},{name:"changeStepsBasedOnRange",docblock:null,modifiers:[],params:[],returns:null},{name:"changeStep",docblock:null,modifiers:[],params:[{name:"step",optional:!1,type:null}],returns:null},{name:"changeSnapStep",docblock:null,modifiers:[],params:[{name:"snapStep",optional:!1,type:null}],returns:null},{name:"changeGridStep",docblock:null,modifiers:[],params:[{name:"gridStep",optional:!1,type:null}],returns:null},{name:"changeGraph",docblock:null,modifiers:[],params:[],returns:null}],displayName:"InteractiveGraphSettings",props:{box:{required:!1,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:"The size of the graph area in pixels.",defaultValue:{value:`[
    interactiveSizes.defaultBoxSizeSmall,
    interactiveSizes.defaultBoxSizeSmall,
]`,computed:!1}},labels:{required:!1,tsType:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},description:"The labels for the x and y axes.",defaultValue:{value:'["$x$", "$y$"]',computed:!1}},labelLocation:{required:!1,tsType:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}]},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`,defaultValue:{value:'"onAxis"',computed:!1}},range:{required:!1,tsType:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}]},description:"The range of the graph.",defaultValue:{value:`[
    [-10, 10],
    [-10, 10],
]`,computed:!1}},showAxisArrows:{required:!1,tsType:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]}},description:"Whether the graph is bounded (no axis arrows) on the x and y axes.",defaultValue:{value:`{
    xMin: true,
    xMax: true,
    yMin: true,
    yMax: true,
}`,computed:!1}},step:{required:!1,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:`How far apart the tick marks on the axes are in the x and y
directions.`,defaultValue:{value:"[1, 1]",computed:!1}},gridStep:{required:!1,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:"How far apart the grid lines are in the x and y directions.",defaultValue:{value:"[1, 1]",computed:!1}},snapStep:{required:!1,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:"How far apart the snap-to points are in the x and y directions.",defaultValue:{value:"[1, 1]",computed:!1}},valid:{required:!1,tsType:{name:"union",raw:"true | string",elements:[{name:"literal",value:"true"},{name:"string"}]},description:`An error message to display in the graph area, or true if the
graph is valid.`,defaultValue:{value:"true",computed:!1}},backgroundImage:{required:!1,tsType:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]}},description:"The background image to display in the graph area and its properties.",defaultValue:{value:`{
    url: null,
    width: 0,
    height: 0,
}`,computed:!1}},markings:{required:!1,tsType:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}]},description:`The type of markings to display on the graph.
- axes: shows the axes without the gride lines
- graph: shows the axes and the grid lines
- grid: shows only the grid lines
- none: shows no markings`,defaultValue:{value:'"graph"',computed:!1}},showProtractor:{required:!1,tsType:{name:"boolean"},description:"Whether to show the protractor on the graph.",defaultValue:{value:"false",computed:!1}},showTooltips:{required:!1,tsType:{name:"boolean"},description:"Whether to show tooltips on the graph.",defaultValue:{value:"false",computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(arg1: Partial<Props>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    /**
     * The size of the graph area in pixels.
     */
    box: [x: number, y: number];
    /**
     * The labels for the x and y axes.
     */
    labels: ReadonlyArray<string>;
    /**
     * Specifies the location of the labels on the graph.  default: "onAxis".
     * - "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
     * - "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
     *    The y label is rotated. Typically used when the range min is near 0 with longer labels.
     */
    labelLocation: AxisLabelLocation;
    /**
     * The range of the graph.
     */
    range: [x: Range, y: Range];
    /**
     * Whether the graph is bounded (no axis arrows) on the x and y axes.
     */
    showAxisArrows: ShowAxisArrows;
    /**
     * How far apart the tick marks on the axes are in the x and y
     * directions.
     */
    step: [x: number, y: number];
    /**
     * How far apart the grid lines are in the x and y directions.
     */
    gridStep: [x: number, y: number];
    /**
     * How far apart the snap-to points are in the x and y directions.
     */
    snapStep: [x: number, y: number];
    /**
     * An error message to display in the graph area, or true if the
     * graph is valid.
     */
    valid: true | string;
    /**
     * The background image to display in the graph area and its properties.
     */
    backgroundImage: PerseusImageBackground;

    /**
     * The type of markings to display on the graph.
     * - axes: shows the axes without the gride lines
     * - graph: shows the axes and the grid lines
     * - grid: shows only the grid lines
     * - none: shows no markings
     */
    markings: MarkingsType;
    /**
     * Whether to show the protractor on the graph.
     */
    showProtractor: boolean;
    /**
     * Whether to show tooltips on the graph.
     */
    showTooltips: boolean;

    onChange: (arg1: Partial<Props>) => void;
}`,signature:{properties:[{key:"box",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The size of the graph area in pixels."},{key:"labels",value:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",required:!0},description:"The labels for the x and y axes."},{key:"labelLocation",value:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}],required:!0},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`},{key:"range",value:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The range of the graph."},{key:"showAxisArrows",value:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]},required:!0},description:"Whether the graph is bounded (no axis arrows) on the x and y axes."},{key:"step",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:`How far apart the tick marks on the axes are in the x and y
directions.`},{key:"gridStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the grid lines are in the x and y directions."},{key:"snapStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the snap-to points are in the x and y directions."},{key:"valid",value:{name:"union",raw:"true | string",elements:[{name:"literal",value:"true"},{name:"string"}],required:!0},description:`An error message to display in the graph area, or true if the
graph is valid.`},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!0},description:"The background image to display in the graph area and its properties."},{key:"markings",value:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}],required:!0},description:`The type of markings to display on the graph.
- axes: shows the axes without the gride lines
- graph: shows the axes and the grid lines
- grid: shows only the grid lines
- none: shows no markings`},{key:"showProtractor",value:{name:"boolean",required:!0},description:"Whether to show the protractor on the graph."},{key:"showTooltips",value:{name:"boolean",required:!0},description:"Whether to show tooltips on the graph."},{key:"onChange",value:{name:"signature",type:"function",raw:"(arg1: Partial<Props>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"Props"}],raw:"Partial<Props>"},name:"arg1"}],return:{name:"void"}},required:!0}}]}}],raw:"Partial<Props>"},name:"arg1"}],return:{name:"void"}}},description:""}}};const{InfoTip:B0}=Ae,V0=Ut("ul");function $0(o){const l=[],n=document.getElementById(o);return n&&n.querySelectorAll("*").forEach(i=>{var k;const u=[],p=i.getAttribute("aria-label"),w=i.getAttribute("aria-describedby");if(p&&u.unshift({name:"label",value:p}),w){const b=w.split(/ +/);for(const N of b){const O=(k=document.getElementById(N))==null?void 0:k.textContent;O&&u.push({name:"description",value:O})}}u.length>0&&l.push({roleOrTag:i.getAttribute("role")||i.tagName.toLowerCase(),className:i.classList[i.classList.length-1]||"",attributes:u})}),l}function W0(o){const{elementArias:l,showTags:n}=o;return e.jsx("ol",{style:{listStyle:"revert",marginLeft:8},children:l.map((i,u)=>e.jsxs("li",{children:[n&&e.jsx(Rn,{size:"small",kind:"success",style:$a.smallSpaceRight,children:i.roleOrTag}),i.className,e.jsx(V0,{style:$a.indentListLeft,children:i.attributes.map((p,w)=>e.jsxs("li",{children:[e.jsx(Rn,{size:"small",kind:p.name==="label"?"info":"neutral",style:$a.smallSpaceRight,children:p.name}),p.value]},w))})]},u))})}function rd({graphId:o,correct:l,fullGraphAriaLabel:n,fullGraphAriaDescription:i,lockedFigures:u}){const[p,w]=F.useState(!0),[k,b]=F.useState(!1),[N,O]=F.useState([]),B=F.useId();return F.useEffect(()=>{O($0(o))},[l,n,i,o,u]),e.jsxs(e.Fragment,{children:[e.jsx(dt,{title:"Screen reader tree",isOpen:p,onToggle:w,isCollapsible:!0}),p&&e.jsxs(e.Fragment,{children:[e.jsxs(Y,{style:[$a.row,$a.tagSwitch],children:[e.jsx(Mo,{id:B,checked:k,onChange:b}),e.jsx(re,{size:j.xSmall_8}),e.jsx(st,{tag:"label",htmlFor:B,children:"Show HTML roles/tags"}),e.jsx(ua,{}),e.jsx(B0,{children:'This screen reader tree shows the ARIA labels and descriptions for elements within the "correct answer" Interactive Graph widget displayed above.'})]}),e.jsx(W0,{elementArias:N,showTags:k})]})]})}const $a=ie.StyleSheet.create({smallSpaceRight:{marginRight:j.xxSmall_6},indentListLeft:{listStyle:"revert",marginLeft:j.small_12},tagSwitch:{marginTop:j.xSmall_8,marginBottom:j.xSmall_8},row:{flexDirection:"row",alignItems:"center"}});rd.__docgenInfo={description:"",methods:[],displayName:"InteractiveGraphSRTree"};const{InfoTip:Vr}=Ae,G0=R.map(R.range(3,13),function(o){return e.jsx(we,{value:`${o}`,label:`${o} sides`},`polygon-sides-${o}`)});function id({correct:o,graph:l,onChange:n}){return e.jsxs(e.Fragment,{children:[e.jsx(dn,{label:"Number of sides:",children:e.jsx(qn,{selectedValue:o!=null&&o.numSides?`${o.numSides}`:"3",placeholder:"",onChange:i=>{tn((l==null?void 0:l.type)==="polygon");const u={numSides:Zu(i),coords:void 0,startCoords:void 0,snapTo:"grid"};n({correct:{...o,...u},graph:{...l,...u}})},className:Zn.singleSelectShort,children:[...G0,e.jsx(we,{value:"unlimited",label:"unlimited sides"},"unlimited")]},"polygon-select")}),e.jsxs(dn,{label:"Snap to:",children:[e.jsxs(qn,{selectedValue:(o==null?void 0:o.snapTo)||"grid",placeholder:"",onChange:i=>{tn(o.type==="polygon",`Expected correct answer type to be polygon, but got ${o.type}`),tn((l==null?void 0:l.type)==="polygon",`Expected graph type to be polygon, but got ${l==null?void 0:l.type}`);const u={snapTo:i,coords:null};n({correct:{...o,...u},graph:{...l,...u}})},className:Zn.singleSelectShort,children:[e.jsx(we,{value:"grid",label:"grid"}),(o==null?void 0:o.numSides)!=="unlimited"&&e.jsx(we,{value:"angles",label:"interior angles"}),(o==null?void 0:o.numSides)!=="unlimited"&&e.jsx(we,{value:"sides",label:"side measures"})]}),e.jsxs(Vr,{children:[e.jsx("p",{children:"These options affect the movement of the vertex points. The grid option will guide the points to the nearest half step along the grid."}),e.jsx("p",{children:"The interior angle and side measure options guide the points to the nearest whole angle or side measure respectively."})]})]}),e.jsxs(Y,{className:Zn.row,children:[e.jsx(Ze,{label:e.jsx(st,{children:"Show angle measures"}),checked:!!(o!=null&&o.showAngles),onChange:()=>{(l==null?void 0:l.type)==="polygon"&&(tn(o.type==="polygon",`Expected graph type to be polygon, but got ${o.type}`),n({correct:{...o,showAngles:!o.showAngles},graph:{...l,showAngles:!l.showAngles}}))}}),e.jsx(Vr,{children:e.jsx("p",{children:"Displays the interior angle measures."})})]}),e.jsxs(Y,{className:Zn.row,children:[e.jsx(Ze,{label:e.jsx(st,{children:"Show side measures"}),checked:!!(o!=null&&o.showSides),onChange:()=>{(l==null?void 0:l.type)==="polygon"&&o.type==="polygon"&&n({correct:{...o,showSides:!o.showSides},graph:{...l,showSides:!l.showSides}})}}),e.jsx(Vr,{children:e.jsx("p",{children:"Displays the side lengths."})})]}),e.jsxs(dn,{label:"Student answer must",children:[e.jsxs(qn,{selectedValue:o.match||"exact",onChange:i=>{tn(o.type==="polygon",`Expected graph type to be polygon, but got ${o.type}`);const u={...o,match:i};n({correct:u})},placeholder:"",className:Zn.singleSelectShort,children:[e.jsx(we,{value:"exact",label:"match exactly"}),e.jsx(we,{value:"congruent",label:"be congruent"}),e.jsx(we,{value:"approx",label:"be approximately congruent"}),e.jsx(we,{value:"similar",label:"be similar"})]}),e.jsx(Vr,{children:e.jsxs("ul",{children:[e.jsx("li",{children:e.jsxs("p",{children:[e.jsx("b",{children:"Match Exactly:"})," Match exactly in size, orientation, and location on the grid even if it is not shown in the background."]})}),e.jsx("li",{children:e.jsxs("p",{children:[e.jsx("b",{children:"Be Congruent:"})," Be congruent in size and shape, but can be located anywhere on the grid."]})}),e.jsx("li",{children:e.jsxs("p",{children:[e.jsx("b",{children:"Be Approximately Congruent:"})," Be exactly similar, and congruent in size and shape to within 0.1 units, but can be located anywhere on the grid."," ",e.jsx("em",{children:"Use this with snapping to angle measure."})]})}),e.jsx("li",{children:e.jsxs("p",{children:[e.jsx("b",{children:"Be Similar:"})," Be similar with matching interior angles, and side measures that are matching or a multiple of the correct side measures. The figure can be located anywhere on the grid."]})})]})})]})]})}id.__docgenInfo={description:"",methods:[],displayName:"PolygonAnswerOptions",props:{correct:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],raw:"Coord[]",required:!1}}]}},description:""},graph:{required:!0,tsType:{name:"union",raw:"PerseusGraphType | undefined",elements:[{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}}]}}]},{name:"undefined"}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: Partial<EditorProps>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    apiOptions: APIOptionsWithDefaults;

    /**
     * The labels for the x and y axes.
     */
    labels: ReadonlyArray<string>;
    /**
     * Specifies the location of the labels on the graph.  default: "onAxis".
     * - "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
     * - "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
     *    The y label is rotated. Typically used when the range min is near 0 with longer labels.
     */
    labelLocation?: AxisLabelLocation;
    /**
     * The range of the graph in the x and y directions.
     */
    range: [x: Range, y: Range];
    /**
     * Whether the graph is bounded on the x and y axes.
     */
    showAxisArrows: ShowAxisArrows;
    /**
     * How far apart the tick marks on the axes are in the x and y
     * directions.
     */
    step: [x: number, y: number];
    /**
     * How far apart the grid lines are in the x and y directions.
     */
    gridStep: [x: number, y: number];
    /**
     * How far apart the snap-to points are in the x and y directions.
     */
    snapStep: [x: number, y: number];
    /**
     * The size of the graph in pixels.
     */
    box: [x: number, y: number];

    /**
     * An error message to display in the graph area, or true if the
     * graph is valid.
     */
    valid: true | string;
    /**
     * The background image to display in the graph area and its properties.
     */
    backgroundImage: PerseusImageBackground;
    /**
     * The type of markings to display on the graph.
     * - graph: shows the axes and the grid lines
     * - grid: shows only the grid lines
     * - none: shows no markings
     */
    markings: MarkingsType;
    /**
     * Whether to show the protractor on the graph.
     */
    showProtractor: boolean;
    /**
     * Whether to show tooltips on the graph.
     * (Currently not used, but will be in the future.)
     */
    showTooltips: boolean;
    /**
     * The current correct answer for the graph. Updated by this component
     * when the graph is changed.
     *
     * Note that the "Correct answer:" textbox is not an interactive
     * element. Instead, it is a representation of the correct answer based
     * on the state of the interactive graph previewed at the bottom of the
     * editor page.
     */
    // TODO(LEMS-2344): make the type of \`correct\` more specific
    correct: PerseusGraphType;
    /**
     * The locked figures to display in the graph area.
     * Locked figures are graph elements (points, lines, line segmeents,
     * etc.) that are locked in place and not interactive.
     */
    lockedFigures?: Array<LockedFigure>;
    // Aria-label for the full graph area. Short title for the graph.
    fullGraphAriaLabel?: string;
    // Aria-description for the graph area. Longer description of the graph.
    // Note that the \`aria-description\` property is not supported well,
    // so this description will be hidden in a DOM element whose ID will
    // then be referenced by the graph's \`aria-describedby\` property.
    fullGraphAriaDescription?: string;

    /**
     * The graph to display in the graph area.
     */
    graph: InteractiveGraphProps["userInput"];
    onChange: (props: Partial<Props>) => void;
    // Whether the graph has been set to static mode.
    // Graphs in static mode are not interactive, and their coords are
    // set to those of the "correct" graph in the editor.
    static?: boolean;
}`,signature:{properties:[{key:"apiOptions",value:{name:"Readonly",elements:[{name:"intersection",raw:`APIOptions & {
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,elements:[{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},{name:"signature",type:"object",raw:`{
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,signature:{properties:[{key:"baseElements",value:{name:"NonNullable",elements:[{name:'Readonly["baseElements"]',raw:'APIOptions["baseElements"]'}],raw:'NonNullable<APIOptions["baseElements"]>',required:!0}},{key:"canScrollPage",value:{name:"NonNullable",elements:[{name:'Readonly["canScrollPage"]',raw:'APIOptions["canScrollPage"]'}],raw:'NonNullable<APIOptions["canScrollPage"]>',required:!0}},{key:"editorChangeDelay",value:{name:"NonNullable",elements:[{name:'Readonly["editorChangeDelay"]',raw:'APIOptions["editorChangeDelay"]'}],raw:'NonNullable<APIOptions["editorChangeDelay"]>',required:!0}},{key:"groupAnnotator",value:{name:"NonNullable",elements:[{name:'Readonly["groupAnnotator"]',raw:'APIOptions["groupAnnotator"]'}],raw:'NonNullable<APIOptions["groupAnnotator"]>',required:!0}},{key:"isArticle",value:{name:"NonNullable",elements:[{name:'Readonly["isArticle"]',raw:'APIOptions["isArticle"]'}],raw:'NonNullable<APIOptions["isArticle"]>',required:!0}},{key:"isMobile",value:{name:"NonNullable",elements:[{name:'Readonly["isMobile"]',raw:'APIOptions["isMobile"]'}],raw:'NonNullable<APIOptions["isMobile"]>',required:!0}},{key:"isMobileApp",value:{name:"NonNullable",elements:[{name:'Readonly["isMobileApp"]',raw:'APIOptions["isMobileApp"]'}],raw:'NonNullable<APIOptions["isMobileApp"]>',required:!0}},{key:"onFocusChange",value:{name:"NonNullable",elements:[{name:'Readonly["onFocusChange"]',raw:'APIOptions["onFocusChange"]'}],raw:'NonNullable<APIOptions["onFocusChange"]>',required:!0}},{key:"readOnly",value:{name:"NonNullable",elements:[{name:'Readonly["readOnly"]',raw:'APIOptions["readOnly"]'}],raw:'NonNullable<APIOptions["readOnly"]>',required:!0}},{key:"setDrawingAreaAvailable",value:{name:"NonNullable",elements:[{name:'Readonly["setDrawingAreaAvailable"]',raw:'APIOptions["setDrawingAreaAvailable"]'}],raw:`NonNullable<
    APIOptions["setDrawingAreaAvailable"]
>`,required:!0}},{key:"showAlignmentOptions",value:{name:"NonNullable",elements:[{name:'Readonly["showAlignmentOptions"]',raw:'APIOptions["showAlignmentOptions"]'}],raw:'NonNullable<APIOptions["showAlignmentOptions"]>',required:!0}}]}}]}],raw:`Readonly<
    APIOptions & {
        baseElements: NonNullable<APIOptions["baseElements"]>;
        canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
        editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
        groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
        isArticle: NonNullable<APIOptions["isArticle"]>;
        isMobile: NonNullable<APIOptions["isMobile"]>;
        isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
        onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
        readOnly: NonNullable<APIOptions["readOnly"]>;
        setDrawingAreaAvailable: NonNullable<
            APIOptions["setDrawingAreaAvailable"]
        >;
        showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
    }
>`,required:!0}},{key:"labels",value:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",required:!0},description:"The labels for the x and y axes."},{key:"labelLocation",value:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}],required:!1},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`},{key:"range",value:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The range of the graph in the x and y directions."},{key:"showAxisArrows",value:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]},required:!0},description:"Whether the graph is bounded on the x and y axes."},{key:"step",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:`How far apart the tick marks on the axes are in the x and y
directions.`},{key:"gridStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the grid lines are in the x and y directions."},{key:"snapStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the snap-to points are in the x and y directions."},{key:"box",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The size of the graph in pixels."},{key:"valid",value:{name:"union",raw:"true | string",elements:[{name:"literal",value:"true"},{name:"string"}],required:!0},description:`An error message to display in the graph area, or true if the
graph is valid.`},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!0},description:"The background image to display in the graph area and its properties."},{key:"markings",value:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}],required:!0},description:`The type of markings to display on the graph.
- graph: shows the axes and the grid lines
- grid: shows only the grid lines
- none: shows no markings`},{key:"showProtractor",value:{name:"boolean",required:!0},description:"Whether to show the protractor on the graph."},{key:"showTooltips",value:{name:"boolean",required:!0},description:`Whether to show tooltips on the graph.
(Currently not used, but will be in the future.)`},{key:"correct",value:{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}}],required:!0},description:`The current correct answer for the graph. Updated by this component
when the graph is changed.

Note that the "Correct answer:" textbox is not an interactive
element. Instead, it is a representation of the correct answer based
on the state of the interactive graph previewed at the bottom of the
editor page.`},{key:"lockedFigures",value:{name:"Array",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"Array<LockedFigure>",required:!1},description:`The locked figures to display in the graph area.
Locked figures are graph elements (points, lines, line segmeents,
etc.) that are locked in place and not interactive.`},{key:"fullGraphAriaLabel",value:{name:"string",required:!1}},{key:"fullGraphAriaDescription",value:{name:"string",required:!1}},{key:"graph",value:{name:'PropsFor["userInput"]',raw:'InteractiveGraphProps["userInput"]',required:!0},description:"The graph to display in the graph area."},{key:"onChange",value:{name:"signature",type:"function",raw:"(props: Partial<Props>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"Props"}],raw:"Partial<Props>"},name:"props"}],return:{name:"void"}},required:!0}},{key:"static",value:{name:"boolean",required:!1}}]}}],raw:"Partial<EditorProps>"},name:"props"}],return:{name:"void"}}},description:""}}};const od=({correct:o,graph:l,onChange:n})=>e.jsx(dn,{label:"Number of segments:",children:e.jsx(qn,{selectedValue:`${o.numSegments??1}`,placeholder:"",onChange:i=>{const u=+i;n({correct:{type:"segment",numSegments:u,coords:null},graph:{type:"segment",numSegments:u}})},className:Zn.singleSelectShort,children:R.range(1,7).map(i=>e.jsx(we,{value:`${i}`,label:`${i} segment${i>1?"s":""}`},i))},"segment-select")});od.__docgenInfo={description:"",methods:[],displayName:"SegmentCountSelector",props:{correct:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}]}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}]}],raw:"CollinearTuple[]",required:!1}}]}},description:""},graph:{required:!0,tsType:{name:"union",raw:"PerseusGraphType | undefined",elements:[{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}}]}}]},{name:"undefined"}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: Partial<EditorProps>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    apiOptions: APIOptionsWithDefaults;

    /**
     * The labels for the x and y axes.
     */
    labels: ReadonlyArray<string>;
    /**
     * Specifies the location of the labels on the graph.  default: "onAxis".
     * - "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
     * - "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
     *    The y label is rotated. Typically used when the range min is near 0 with longer labels.
     */
    labelLocation?: AxisLabelLocation;
    /**
     * The range of the graph in the x and y directions.
     */
    range: [x: Range, y: Range];
    /**
     * Whether the graph is bounded on the x and y axes.
     */
    showAxisArrows: ShowAxisArrows;
    /**
     * How far apart the tick marks on the axes are in the x and y
     * directions.
     */
    step: [x: number, y: number];
    /**
     * How far apart the grid lines are in the x and y directions.
     */
    gridStep: [x: number, y: number];
    /**
     * How far apart the snap-to points are in the x and y directions.
     */
    snapStep: [x: number, y: number];
    /**
     * The size of the graph in pixels.
     */
    box: [x: number, y: number];

    /**
     * An error message to display in the graph area, or true if the
     * graph is valid.
     */
    valid: true | string;
    /**
     * The background image to display in the graph area and its properties.
     */
    backgroundImage: PerseusImageBackground;
    /**
     * The type of markings to display on the graph.
     * - graph: shows the axes and the grid lines
     * - grid: shows only the grid lines
     * - none: shows no markings
     */
    markings: MarkingsType;
    /**
     * Whether to show the protractor on the graph.
     */
    showProtractor: boolean;
    /**
     * Whether to show tooltips on the graph.
     * (Currently not used, but will be in the future.)
     */
    showTooltips: boolean;
    /**
     * The current correct answer for the graph. Updated by this component
     * when the graph is changed.
     *
     * Note that the "Correct answer:" textbox is not an interactive
     * element. Instead, it is a representation of the correct answer based
     * on the state of the interactive graph previewed at the bottom of the
     * editor page.
     */
    // TODO(LEMS-2344): make the type of \`correct\` more specific
    correct: PerseusGraphType;
    /**
     * The locked figures to display in the graph area.
     * Locked figures are graph elements (points, lines, line segmeents,
     * etc.) that are locked in place and not interactive.
     */
    lockedFigures?: Array<LockedFigure>;
    // Aria-label for the full graph area. Short title for the graph.
    fullGraphAriaLabel?: string;
    // Aria-description for the graph area. Longer description of the graph.
    // Note that the \`aria-description\` property is not supported well,
    // so this description will be hidden in a DOM element whose ID will
    // then be referenced by the graph's \`aria-describedby\` property.
    fullGraphAriaDescription?: string;

    /**
     * The graph to display in the graph area.
     */
    graph: InteractiveGraphProps["userInput"];
    onChange: (props: Partial<Props>) => void;
    // Whether the graph has been set to static mode.
    // Graphs in static mode are not interactive, and their coords are
    // set to those of the "correct" graph in the editor.
    static?: boolean;
}`,signature:{properties:[{key:"apiOptions",value:{name:"Readonly",elements:[{name:"intersection",raw:`APIOptions & {
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,elements:[{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},{name:"signature",type:"object",raw:`{
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,signature:{properties:[{key:"baseElements",value:{name:"NonNullable",elements:[{name:'Readonly["baseElements"]',raw:'APIOptions["baseElements"]'}],raw:'NonNullable<APIOptions["baseElements"]>',required:!0}},{key:"canScrollPage",value:{name:"NonNullable",elements:[{name:'Readonly["canScrollPage"]',raw:'APIOptions["canScrollPage"]'}],raw:'NonNullable<APIOptions["canScrollPage"]>',required:!0}},{key:"editorChangeDelay",value:{name:"NonNullable",elements:[{name:'Readonly["editorChangeDelay"]',raw:'APIOptions["editorChangeDelay"]'}],raw:'NonNullable<APIOptions["editorChangeDelay"]>',required:!0}},{key:"groupAnnotator",value:{name:"NonNullable",elements:[{name:'Readonly["groupAnnotator"]',raw:'APIOptions["groupAnnotator"]'}],raw:'NonNullable<APIOptions["groupAnnotator"]>',required:!0}},{key:"isArticle",value:{name:"NonNullable",elements:[{name:'Readonly["isArticle"]',raw:'APIOptions["isArticle"]'}],raw:'NonNullable<APIOptions["isArticle"]>',required:!0}},{key:"isMobile",value:{name:"NonNullable",elements:[{name:'Readonly["isMobile"]',raw:'APIOptions["isMobile"]'}],raw:'NonNullable<APIOptions["isMobile"]>',required:!0}},{key:"isMobileApp",value:{name:"NonNullable",elements:[{name:'Readonly["isMobileApp"]',raw:'APIOptions["isMobileApp"]'}],raw:'NonNullable<APIOptions["isMobileApp"]>',required:!0}},{key:"onFocusChange",value:{name:"NonNullable",elements:[{name:'Readonly["onFocusChange"]',raw:'APIOptions["onFocusChange"]'}],raw:'NonNullable<APIOptions["onFocusChange"]>',required:!0}},{key:"readOnly",value:{name:"NonNullable",elements:[{name:'Readonly["readOnly"]',raw:'APIOptions["readOnly"]'}],raw:'NonNullable<APIOptions["readOnly"]>',required:!0}},{key:"setDrawingAreaAvailable",value:{name:"NonNullable",elements:[{name:'Readonly["setDrawingAreaAvailable"]',raw:'APIOptions["setDrawingAreaAvailable"]'}],raw:`NonNullable<
    APIOptions["setDrawingAreaAvailable"]
>`,required:!0}},{key:"showAlignmentOptions",value:{name:"NonNullable",elements:[{name:'Readonly["showAlignmentOptions"]',raw:'APIOptions["showAlignmentOptions"]'}],raw:'NonNullable<APIOptions["showAlignmentOptions"]>',required:!0}}]}}]}],raw:`Readonly<
    APIOptions & {
        baseElements: NonNullable<APIOptions["baseElements"]>;
        canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
        editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
        groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
        isArticle: NonNullable<APIOptions["isArticle"]>;
        isMobile: NonNullable<APIOptions["isMobile"]>;
        isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
        onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
        readOnly: NonNullable<APIOptions["readOnly"]>;
        setDrawingAreaAvailable: NonNullable<
            APIOptions["setDrawingAreaAvailable"]
        >;
        showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
    }
>`,required:!0}},{key:"labels",value:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",required:!0},description:"The labels for the x and y axes."},{key:"labelLocation",value:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}],required:!1},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`},{key:"range",value:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The range of the graph in the x and y directions."},{key:"showAxisArrows",value:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]},required:!0},description:"Whether the graph is bounded on the x and y axes."},{key:"step",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:`How far apart the tick marks on the axes are in the x and y
directions.`},{key:"gridStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the grid lines are in the x and y directions."},{key:"snapStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the snap-to points are in the x and y directions."},{key:"box",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The size of the graph in pixels."},{key:"valid",value:{name:"union",raw:"true | string",elements:[{name:"literal",value:"true"},{name:"string"}],required:!0},description:`An error message to display in the graph area, or true if the
graph is valid.`},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!0},description:"The background image to display in the graph area and its properties."},{key:"markings",value:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}],required:!0},description:`The type of markings to display on the graph.
- graph: shows the axes and the grid lines
- grid: shows only the grid lines
- none: shows no markings`},{key:"showProtractor",value:{name:"boolean",required:!0},description:"Whether to show the protractor on the graph."},{key:"showTooltips",value:{name:"boolean",required:!0},description:`Whether to show tooltips on the graph.
(Currently not used, but will be in the future.)`},{key:"correct",value:{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}}],required:!0},description:`The current correct answer for the graph. Updated by this component
when the graph is changed.

Note that the "Correct answer:" textbox is not an interactive
element. Instead, it is a representation of the correct answer based
on the state of the interactive graph previewed at the bottom of the
editor page.`},{key:"lockedFigures",value:{name:"Array",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"Array<LockedFigure>",required:!1},description:`The locked figures to display in the graph area.
Locked figures are graph elements (points, lines, line segmeents,
etc.) that are locked in place and not interactive.`},{key:"fullGraphAriaLabel",value:{name:"string",required:!1}},{key:"fullGraphAriaDescription",value:{name:"string",required:!1}},{key:"graph",value:{name:'PropsFor["userInput"]',raw:'InteractiveGraphProps["userInput"]',required:!0},description:"The graph to display in the graph area."},{key:"onChange",value:{name:"signature",type:"function",raw:"(props: Partial<Props>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"Props"}],raw:"Partial<Props>"},name:"props"}],return:{name:"void"}},required:!0}},{key:"static",value:{name:"boolean",required:!1}}]}}],raw:"Partial<EditorProps>"},name:"props"}],return:{name:"void"}}},description:""}}};const ld=o=>{const{id:l,onChange:n}=o,i=["point","line","vector","ellipse","polygon","function","label"];return e.jsx(Y,{style:Vs.container,children:e.jsx(Xu,{menuText:"Add locked figure",style:Vs.addElementSelect,children:i.map(u=>e.jsx(ar,{label:u,onClick:()=>n(u)},`${l}-${u}`))})})},Vs=ie.StyleSheet.create({container:{marginTop:j.xSmall_8},addElementSelect:{backgroundColor:me.fadedBlue8,borderRadius:j.xxxSmall_4}});ld.__docgenInfo={description:"",methods:[],displayName:"LockedFigureSelect",props:{id:{required:!0,tsType:{name:"string"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: LockedFigureType) => void",signature:{arguments:[{type:{name:'union["type"]',raw:'LockedFigure["type"]'},name:"value"}],return:{name:"void"}}},description:""}}};const rr=o=>{const{value:l,onChange:n,...i}=o,[u,p]=F.useState(!1),[w,k]=F.useState(""),b=F.useRef(null);return F.useEffect(()=>{const N=b.current,O=B=>{B.stopPropagation()};return N==null||N.addEventListener("wheel",O),()=>{N==null||N.removeEventListener("wheel",O)}},[b]),e.jsx(lt,{...i,type:"number",value:u?w:l,onChange:N=>{k(N),n(N)},onFocus:N=>{var O;k(l),p(!0),(O=o.onFocus)==null||O.call(o,N)},onBlur:N=>{var O;p(!1),(O=o.onBlur)==null||O.call(o,N)},ref:b})};rr.__docgenInfo={description:`This is a custom text field of type="number" for use in Perseus Editors.

This component makes it so that
1. the text field's input number updates on scroll without
   scrolling the page.
2. the input is controlled as long as it does not have focus.
   While it is focused, it becomes editable and emits onChange
   events. This is useful to make sure that input behavior
   remains predictable, rather than possibly having the cursor
   jump around uenxpectedly.

NOTE 1: Native HTML number inputs do not update the number value on scroll,
they only scroll the page. Inputs in React do NOT work this way (explanation
here: https://stackoverflow.com/a/68266494). By default, scrolling on a
focused number input in React causes BOTH the input value to change AND
the page to scroll. The behavior in this component is an improvement on
the React behavior, but it's the opposite of the native HTML behavior.

NOTE 2: Firefox seems to have a custom override for input scroll. Even
with this stopPropogation, Firefox matches the native HTML behavior.`,methods:[],displayName:"ScrolllessNumberTextField"};const{convertDegreesToRadians:H0,convertRadiansToDegrees:U0}=Wo,sd=o=>{const{angle:l,onChange:n}=o,[i,u]=F.useState(U0(l).toString());function p(w){u(w),!(isNaN(+w)||w==="")&&n(H0(w))}return e.jsxs(je,{tag:"label",style:$s.row,children:["angle (degrees)",e.jsx(re,{size:j.xxSmall_6}),e.jsx(rr,{value:i,onChange:p,style:$s.textField}),e.jsx(re,{size:j.xxSmall_6})]})},$s=ie.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},textField:{width:j.xxxLarge_64}});sd.__docgenInfo={description:"",methods:[],displayName:"AngleInput",props:{angle:{required:!0,tsType:{name:"number"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(angle: number) => void",signature:{arguments:[{type:{name:"number"},name:"angle"}],return:{name:"void"}}},description:""}}};const Qe=o=>{const{coord:l,labels:n,error:i,style:u,onChange:p}=o,[w,k]=F.useState([l[0].toString(),l[1].toString()]);F.useEffect(()=>{k([l[0].toString(),l[1].toString()])},[l]);function b(N,O){const B=[...w];if(B[O]=N,k(B),isNaN(+N)||N==="")return;const V=[...l];V[O]=+N,p(V)}return e.jsxs(Y,{style:[_t.row,u],children:[e.jsxs(je,{tag:"label",style:_t.row,children:[n?n[0]:"x coord",e.jsx(re,{size:j.xxSmall_6}),e.jsx(rr,{value:w[0],onChange:N=>b(N,0),style:[_t.textField,i?_t.errorField:void 0]})]}),e.jsx(re,{size:j.medium_16}),e.jsxs(je,{tag:"label",style:_t.row,children:[n?n[1]:"y coord",e.jsx(re,{size:j.xxSmall_6}),e.jsx(rr,{value:w[1],onChange:N=>b(N,1),style:[_t.textField,i?_t.errorField:void 0]})]})]})},_t=ie.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},textField:{width:j.xxxLarge_64},errorField:{borderColor:me.red,backgroundColor:me.fadedRed8}});Qe.__docgenInfo={description:"",methods:[],displayName:"CoordinatePairInput",props:{coord:{required:!0,tsType:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},description:""},labels:{required:!1,tsType:{name:"tuple",raw:"[string, string]",elements:[{name:"string"},{name:"string"}]},description:""},error:{required:!1,tsType:{name:"boolean"},description:""},style:{required:!1,tsType:{name:"StyleType"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newCoord: Coord) => void",signature:{arguments:[{type:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},name:"newCoord"}],return:{name:"void"}}},description:""}}};const K0=Ut("ul"),X0=6;F.forwardRef(function(l,n){const{children:i,id:u,initialExpandedIndex:p,allowMultipleExpanded:w=!0,caretPosition:k,cornerKind:b="rounded",animated:N,style:O,...B}=l,V=Array(i.length).fill(!1);p!==void 0&&(V[p]=!0);const[G,_]=F.useState(V),M=Array(i.length).fill(null),oe=i.length<=X0,W=(E,A)=>{const $=w?[...G]:Array(i.length).fill(!1),J=!G[E];$[E]=J,_($),A&&A(J)},U=E=>{var $,J,Z,ue;const A=M.findIndex(de=>de.current===document.activeElement);if(A!==-1)switch(E.key){case"ArrowUp":E.preventDefault();const de=(A+i.length-1)%i.length;($=M[de].current)==null||$.focus();break;case"ArrowDown":E.preventDefault();const Be=(A+1)%i.length;(J=M[Be].current)==null||J.focus();break;case"Home":E.preventDefault(),(Z=M[0].current)==null||Z.focus();break;case"End":E.preventDefault(),(ue=M[i.length-1].current)==null||ue.focus();break}};return e.jsx(K0,{style:[Y0.wrapper,O],onKeyDown:U,...B,ref:n,children:i.map((E,A)=>{const{caretPosition:$,cornerKind:J,onToggle:Z,animated:ue}=E.props,de=F.createRef();M[A]=de;const Se=A===0,Be=A===i.length-1;return e.jsx("li",{id:u,children:F.cloneElement(E,{animated:ue??N,caretPosition:$??k,cornerKind:J??b,expanded:G[A],onToggle:()=>W(A,Z),isFirstSection:Se,isLastSection:Be,isRegion:oe,ref:de})},A)})})});const Y0=ie.StyleSheet.create({wrapper:{boxSizing:"border-box",listStyle:"none",padding:0,width:"100%"}});function J0(o,l,n,i){switch(o){case"rounded-per-section":return{roundedTop:!0,roundedBottom:!i};case"rounded":return{roundedTop:l,roundedBottom:n&&!i};default:return{roundedTop:!1,roundedBottom:!1}}}const Z0=F.forwardRef(function(l,n){const{id:i,header:u,caretPosition:p,cornerKind:w,collapsible:k=!0,expanded:b,animated:N,onClick:O,sectionContentUniqueId:B,headerStyle:V,tag:G="h2",testId:_,isFirstSection:M,isLastSection:oe}=l,W=typeof u=="string",{roundedTop:U,roundedBottom:E}=J0(w,M,oe,b);return e.jsx(No,{tag:G,style:An.heading,children:e.jsx(Do,{id:i,"aria-expanded":b,"aria-controls":B,onClick:O,disabled:!k,testId:_?`${_}-header`:void 0,style:[An.headerWrapper,N&&An.headerWrapperWithAnimation,p==="start"&&An.headerWrapperCaretStart,U&&An.roundedTop,E&&An.roundedBottom,V,!k&&An.disabled],ref:n,children:()=>e.jsxs(e.Fragment,{children:[e.jsx(Y,{style:[An.headerContent,W&&An.headerString],children:W?e.jsx(Y,{style:[p==="end"?An.headerStringCaretEnd:An.headerStringCaretStart],children:u}):u}),k&&e.jsx(nt,{icon:ir,color:pe.core.foreground.neutral.default,size:"small",style:[N&&An.iconWithAnimation,p==="start"?An.iconStart:An.iconEnd,b&&An.iconExpanded],testId:_?`${_}-caret-icon`:void 0})]})})})}),$r=j.small_12-1,Ws="300ms",An=ie.StyleSheet.create({heading:{minWidth:0,marginTop:0},headerWrapper:{display:"flex",flexDirection:"row",alignItems:"center",overflow:"hidden",minWidth:"auto",width:"100%",position:"relative",zIndex:1,":active":{outline:`2px solid ${pe.action.secondary.progressive.press.border}`},":hover":{outline:`2px solid ${pe.action.secondary.progressive.hover.border}`},":focus-visible":{outline:`2px solid ${pe.focus.outer}`}},headerWrapperWithAnimation:{transition:`border-radius ${Ws}`},headerWrapperCaretStart:{flexDirection:"row-reverse"},roundedTop:{borderStartStartRadius:$r,borderStartEndRadius:$r},roundedBottom:{borderEndStartRadius:$r,borderEndEndRadius:$r},headerContent:{flexGrow:1,textAlign:"start"},headerString:{paddingTop:j.medium_16,paddingBottom:j.medium_16},headerStringCaretEnd:{paddingInlineEnd:j.small_12,paddingInlineStart:j.medium_16},headerStringCaretStart:{paddingInlineEnd:j.medium_16,paddingInlineStart:j.small_12},iconWithAnimation:{transition:`transform ${Ws}`},iconExpanded:{transform:"rotate(180deg)"},iconStart:{marginInlineStart:j.medium_16},iconEnd:{marginInlineEnd:j.medium_16},disabled:{pointerEvents:"none",color:"inherit",":focus-visible":{outline:`2px solid ${pe.focus.outer}`}}}),Q0=F.forwardRef(function(l,n){const{children:i,id:u,header:p,collapsible:w,expanded:k,animated:b=!1,onToggle:N,caretPosition:O="end",cornerKind:B="rounded",style:V,headerStyle:G,tag:_,testId:M,isFirstSection:oe=!0,isLastSection:W=!0,isRegion:U=!0,...E}=l,[A,$]=F.useState(k??!1),J=k!==void 0&&N,Z=F.useId(),ue=u??Z,de=F.useId(),Se=u?`${u}-header`:de,Be=F.useId(),le=eg(B,oe,W),fe=()=>{J?N(!k):($(!A),N&&N(!A))};let ge;return w===!1?ge=!0:ge=J?k:A,e.jsxs(Y,{id:ue,style:[St.wrapper,b&&St.wrapperWithAnimation,le.wrapper,ge?St.wrapperExpanded:St.wrapperCollapsed,V],testId:M,...E,children:[e.jsx(Z0,{id:Se,header:p,caretPosition:O,cornerKind:B,collapsible:w,expanded:ge,animated:b,onClick:fe,sectionContentUniqueId:Be,headerStyle:G,tag:_,testId:M,isFirstSection:oe,isLastSection:W,ref:n}),e.jsx(Y,{id:Be,role:U?"region":void 0,"aria-labelledby":Se,style:[St.contentWrapper,ge?St.contentWrapperExpanded:St.conentWrapperCollapsed,le.contentWrapper],testId:M?`${M}-content-panel`:void 0,children:typeof i=="string"?e.jsx(ep,{style:St.stringContent,children:i}):i})]})}),St=ie.StyleSheet.create({wrapper:{display:"grid",position:"static",boxSizing:"border-box",backgroundColor:pe.surface.primary},wrapperWithAnimation:{transition:"grid-template-rows 300ms"},wrapperCollapsed:{gridTemplateRows:"min-content 0fr"},wrapperExpanded:{gridTemplateRows:"min-content 1fr"},contentWrapper:{overflow:"hidden"},conentWrapperCollapsed:{visibility:"hidden"},contentWrapperExpanded:{visibility:"visible"},stringContent:{padding:j.medium_16}}),Wr={},eg=(o,l,n)=>{const i=`${o}-${l.toString()}-${n.toString()}`;if(Wr[i])return Wr[i];let u=Object.freeze({}),p=Object.freeze({}),w=Object.freeze({}),k=Object.freeze({});const b=`1px solid ${pe.core.border.neutral.subtle}`;o==="square"&&(u={border:b,borderBottom:"none",borderRadius:ke.radius.radius_0},n&&(k={borderBottom:b})),o==="rounded"&&(u={border:b,borderBottom:"none"},l&&(w={borderStartStartRadius:j.small_12,borderStartEndRadius:j.small_12}),n&&(k={borderBottom:b,borderEndStartRadius:j.small_12,borderEndEndRadius:j.small_12},p={borderEndEndRadius:j.small_12,borderEndStartRadius:j.small_12})),o==="rounded-per-section"&&(u={border:b,borderRadius:ke.radius.radius_120,marginBottom:j.medium_16},p={borderEndEndRadius:j.small_12,borderEndStartRadius:j.small_12});const N={wrapper:{...u,...w,...k},contentWrapper:p};return Wr[i]=ie.StyleSheet.create(N),Wr[i]},Sn=o=>{const{animated:l,children:n,header:i,expanded:u,containerStyle:p,panelStyle:w,headerStyle:k,onToggle:b}=o;return e.jsx(Y,{className:"perseus-editor-accordion",children:e.jsx(Q0,{animated:l,expanded:u,onToggle:b,style:[xo.container,p],headerStyle:[xo.accordionHeader,k],header:i,children:e.jsx(Y,{style:[xo.accordionPanel,w],children:n})})})},xo=ie.StyleSheet.create({container:{backgroundColor:pe.core.background.instructive.subtle,marginTop:j.xSmall_8},accordionHeader:{padding:j.small_12,paddingInlineEnd:0,height:j.xxLarge_48},accordionPanel:{paddingTop:j.xxSmall_6,paddingBottom:j.xxxSmall_4,paddingLeft:j.small_12,paddingRight:j.small_12}});Sn.__docgenInfo={description:"",methods:[],displayName:"PerseusEditorAccordion",props:{animated:{required:!1,tsType:{name:"boolean"},description:""},children:{required:!0,tsType:{name:"union",raw:"React.ReactNode | React.ReactNode[]",elements:[{name:"ReactReactNode",raw:"React.ReactNode"},{name:"Array",elements:[{name:"ReactReactNode",raw:"React.ReactNode"}],raw:"React.ReactNode[]"}]},description:""},header:{required:!0,tsType:{name:"union",raw:"string | React.ReactElement",elements:[{name:"string"},{name:"ReactReactElement",raw:"React.ReactElement"}]},description:""},expanded:{required:!1,tsType:{name:"boolean"},description:""},containerStyle:{required:!1,tsType:{name:"StyleType"},description:""},panelStyle:{required:!1,tsType:{name:"StyleType"},description:""},headerStyle:{required:!1,tsType:{name:"StyleType"},description:""},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:""}}};const Yo=o=>{const{color:l,filled:n=!0,decorative:i=!1}=o;return e.jsx(Y,{"aria-label":i?void 0:`${l}, ${n?"filled":"open"}`,style:[ng.colorSwatch,{border:`4px solid ${ut[l]}`,backgroundColor:n?ut[l]:me.white}]})},ng=ie.StyleSheet.create({colorSwatch:{outline:`2px solid ${me.offWhite}`,borderRadius:"50%",width:j.large_24,height:j.large_24}});Yo.__docgenInfo={description:"",methods:[],displayName:"ColorSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},filled:{required:!1,tsType:{name:"boolean"},description:""},decorative:{required:!1,tsType:{name:"boolean"},description:""}}};const tg=Object.keys(ut),jt=o=>{const{selectedValue:l,style:n,onChange:i}=o;return e.jsx(Y,{style:[Gs.row,n],children:e.jsxs(je,{tag:"label",style:Gs.row,children:["color",e.jsx(re,{size:j.xxSmall_6}),e.jsx(qn,{selectedValue:l,onChange:i,placeholder:"",children:tg.map(u=>e.jsx(we,{value:u,label:u,leftAccessory:e.jsx(Yo,{color:u,decorative:!0})},u))})]})})},Gs=ie.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center",minWidth:"auto"}});jt.__docgenInfo={description:"",methods:[],displayName:"ColorSelect",props:{selectedValue:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},style:{required:!1,tsType:{name:"StyleType"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newColor: LockedFigureColor) => void",signature:{arguments:[{type:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},name:"newColor"}],return:{name:"void"}}},description:""}}};const ud=o=>{const{color:l,fillStyle:n,strokeStyle:i}=o;return e.jsx(Y,{"aria-label":`${l}, stroke ${i}, fill ${n}`,style:[Hs.container,{border:`4px ${i} ${ut[l]}`}],children:e.jsx(Y,{style:[Hs.innerCircle,{backgroundColor:ut[l],opacity:n==="white"?0:yi[n]}]})})},Hs=ie.StyleSheet.create({container:{outline:`2px solid ${me.offWhite}`,borderRadius:"50%",width:j.xLarge_32,height:j.large_24,backgroundColor:me.white,alignItems:"center",justifyContent:"center"},innerCircle:{width:28,height:20,borderRadius:"50%"}});ud.__docgenInfo={description:"",methods:[],displayName:"EllipseSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const lr=o=>{const{selectedValue:l,containerStyle:n,onChange:i}=o;return e.jsxs(je,{tag:"label",style:[ag.lineStrokeSelect,n],children:["stroke",e.jsx(re,{size:j.xxxSmall_4}),e.jsxs(qn,{selectedValue:l,onChange:i,placeholder:"",children:[e.jsx(we,{value:"solid",label:"solid"}),e.jsx(we,{value:"dashed",label:"dashed"})]})]})},ag=ie.StyleSheet.create({lineStrokeSelect:{display:"flex",flexDirection:"row",alignItems:"center",minWidth:0}});lr.__docgenInfo={description:"",methods:[],displayName:"LineStrokeSelect",props:{selectedValue:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newValue: StyleOptions) => void",signature:{arguments:[{type:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},name:"newValue"}],return:{name:"void"}}},description:""},containerStyle:{required:!1,tsType:{name:"StyleType"},description:""}}};const ma=o=>{const{selectedValue:l,containerStyle:n,onChange:i}=o;return e.jsxs(je,{tag:"label",style:[{display:"flex",flexDirection:"row",alignItems:"center",minWidth:0},n],children:["weight",e.jsx(re,{size:j.xxxSmall_4}),e.jsxs(qn,{selectedValue:l,onChange:u=>i(u),placeholder:"",children:[e.jsx(we,{value:"thin",label:"thin"}),e.jsx(we,{value:"medium",label:"medium"}),e.jsx(we,{value:"thick",label:"thick"})]})]})};ma.__docgenInfo={description:"",methods:[],displayName:"LineWeightSelect",props:{selectedValue:{required:!0,tsType:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newValue: StrokeWeight) => void",signature:{arguments:[{type:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},name:"newValue"}],return:{name:"void"}}},description:""},containerStyle:{required:!1,tsType:{name:"StyleType"},description:""}}};const rg=""+new URL("pencil-circle-gxKdCU6a.svg",import.meta.url).href,{InfoTip:ig}=Ae;function Kt(o){const{ariaLabel:l,getPrepopulatedAriaLabel:n,onChangeProps:i}=o,p=`aria-label-${F.useId()}`,[w,k]=F.useState(!1);return e.jsxs(Y,{children:[e.jsx(re,{size:j.xSmall_8}),e.jsxs(Y,{style:qo.row,children:[e.jsx(je,{tag:"label",htmlFor:p,children:"Aria label"}),e.jsx(ua,{}),e.jsxs(ig,{children:["Aria label is used by screen readers to describe content to users who may be visually impaired. ",e.jsx("br",{}),e.jsx("br",{}),"Populating this field will make it so that users can use a screen reader to navigate to this point and hear the description.",e.jsx("br",{}),e.jsx("br",{}),"If you leave this field blank, the point will be hidden from screen readers. Users will not be able to navigate to this point using a screen reader."]})]}),e.jsx(re,{size:j.xxSmall_6}),e.jsx($o,{style:qo.caption,children:"The figure is hidden from screen readers if this field is left blank."}),e.jsx(re,{size:j.xxSmall_6}),e.jsx(qu,{id:p,value:w?"Loading...":l??"",onChange:b=>{i({ariaLabel:b||void 0})},placeholder:"Ex. Point at (x, y)",rows:1,resizeType:"vertical"}),e.jsx(Ue,{kind:"tertiary",startIcon:rg,style:qo.button,onClick:()=>{k(!0),n().then(b=>{k(!1),i({ariaLabel:b})})},children:"Auto-generate"})]})}const qo=ie.StyleSheet.create({row:{flexDirection:"row",alignItems:"center"},button:{alignSelf:"start"},caption:{color:me.offBlack64}});Kt.__docgenInfo={description:"",methods:[],displayName:"LockedFigureAria",props:{ariaLabel:{required:!0,tsType:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]},description:""},getPrepopulatedAriaLabel:{required:!0,tsType:{name:"signature",type:"function",raw:"() => Promise<string>",signature:{arguments:[],return:{name:"Promise",elements:[{name:"string"}],raw:"Promise<string>"}}},description:`The async function that generates the prepopulated aria label
for the locked figure with math details converted to spoken words.`},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: {ariaLabel?: string | undefined}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ariaLabel?: string | undefined}",signature:{properties:[{key:"ariaLabel",value:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}],required:!1}}]}},name:"props"}],return:{name:"void"}}},description:""}}};const dd=""+new URL("caret-double-down-bold-Bd6la7IK.svg",import.meta.url).href,md=""+new URL("caret-double-up-bold-DXRVAODE.svg",import.meta.url).href,cd=""+new URL("caret-up-bold-DRBgEf-E.svg",import.meta.url).href,vi=""+new URL("trash-bold-CtqTW1Dq.svg",import.meta.url).href,Lt=o=>{const{figureType:l,onMove:n,onRemove:i}=o;return e.jsxs(Y,{style:Us.container,children:[e.jsx(Ue,{startIcon:vi,"aria-label":`Delete locked ${l}`,onClick:i,kind:"tertiary",style:Us.deleteButton,children:"Delete"}),n&&e.jsxs(e.Fragment,{children:[e.jsx(ua,{}),e.jsx(kn,{icon:md,kind:"tertiary",size:"small","aria-label":`Move locked ${l} to the back`,onClick:()=>n("back")}),e.jsx(kn,{icon:cd,kind:"tertiary",size:"small","aria-label":`Move locked ${l} backward`,onClick:()=>n("backward")}),e.jsx(kn,{icon:ir,kind:"tertiary",size:"small","aria-label":`Move locked ${l} forward`,onClick:()=>n("forward")}),e.jsx(kn,{icon:dd,kind:"tertiary",size:"small","aria-label":`Move locked ${l} to the front`,onClick:()=>n("front")})]})]})},Us=ie.StyleSheet.create({container:{width:"100%",flexDirection:"row",alignItems:"center",marginTop:j.xxxSmall_4},deleteButton:{marginInlineStart:-4}});Lt.__docgenInfo={description:"",methods:[],displayName:"LockedFigureSettingsActions",props:{figureType:{required:!0,tsType:{name:'union["type"]',raw:'LockedFigure["type"]'},description:""},onMove:{required:!1,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:""},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};const{InfoTip:og}=Ae;function Rt(o){const{type:l,coord:n,color:i,size:u,text:p,expanded:w,onChangeProps:k,onMove:b,onRemove:N,onToggle:O,containerStyle:B}=o;return e.jsxs(Sn,{expanded:w,onToggle:O,header:e.jsxs(Y,{style:[Xn.row,Xn.accordionHeaderContainer],children:[e.jsxs(Ne,{children:["Label (",n[0],", ",n[1],")"]}),e.jsx(re,{size:j.xSmall_8}),p!==""&&e.jsx(Ne,{style:[{backgroundColor:me.white,color:ut[i]},Xn.accordionHeader],children:p})]}),containerStyle:B,children:[e.jsx(Qe,{coord:n,onChange:V=>{k({coord:V})},style:Xn.spaceUnder}),e.jsxs(Y,{style:Xn.row,children:[e.jsxs(je,{tag:"label",style:[Xn.row,Xn.spaceUnder,{flexGrow:1}],children:["text",e.jsx(re,{size:j.xSmall_8}),e.jsx(lt,{value:p,placeholder:"ex. $x^2$ or $\\frac{1}{2}$",onChange:V=>k({text:V})})]}),e.jsxs(og,{children:["Surround your text with $ for TeX.",e.jsx("br",{}),"Example: ","This circle has radius $\\frac{1}{2}$ units.",e.jsx("br",{}),e.jsx("br",{}),'It is important to use TeX when appropriate for accessibility. The above example would be read as "This circle has radius one-half units" by screen readers.']})]}),e.jsxs(Y,{style:Xn.row,children:[e.jsx(jt,{selectedValue:i,onChange:V=>{k({color:V})},style:Xn.spaceUnder}),e.jsx(re,{size:j.medium_16}),e.jsxs(je,{tag:"label",style:Xn.row,children:["size",e.jsx(re,{size:j.xSmall_8}),e.jsxs(qn,{selectedValue:u,onChange:V=>k({size:V}),placeholder:"",children:[e.jsx(we,{value:"small",label:"small"}),e.jsx(we,{value:"medium",label:"medium"}),e.jsx(we,{value:"large",label:"large"})]})]})]}),e.jsx(Lt,{figureType:l,onMove:b,onRemove:N})]})}const Xn=ie.StyleSheet.create({accordionHeaderContainer:{whiteSpace:"nowrap"},accordionHeader:{padding:j.xxxSmall_4,marginInlineEnd:j.xSmall_8,borderRadius:j.xxxSmall_4,textOverflow:"ellipsis",overflow:"hidden"},row:{display:"flex",flexDirection:"row",alignItems:"center",minWidth:0},spaceUnder:{marginBottom:j.xSmall_8}});Rt.__docgenInfo={description:"",methods:[],displayName:"LockedLabelSettings",props:{type:{required:!0,tsType:{name:"literal",value:'"label"'},description:""},coord:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},text:{required:!0,tsType:{name:"string"},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},size:{required:!0,tsType:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}]},description:""},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedLabelType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"Partial<LockedLabelType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coord, color, etc.) are updated."},onMove:{required:!1,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:`Called when a movement button (top, up, down, bottom) is pressed.
This is also used to indicate that this LockedLabelSettings component
is for a standalone label, not part of a larger locked figure.`},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},containerStyle:{required:!1,tsType:{name:"StyleType"},description:""}}};const Bt="grayH";function mt(o){switch(o){case"point":return{type:"point",coord:[0,0],color:Bt,filled:!0,labels:[]};case"line":return{type:"line",kind:"line",points:[mt("point"),{...mt("point"),coord:[2,2]}],color:Bt,lineStyle:"solid",showPoint1:!1,showPoint2:!1,weight:"medium",labels:[]};case"vector":return{type:"vector",points:[[0,0],[2,2]],color:Bt,weight:"medium",labels:[]};case"ellipse":return{type:"ellipse",center:[0,0],radius:[1,1],angle:0,color:Bt,fillStyle:"none",strokeStyle:"solid",weight:"medium",labels:[]};case"polygon":return{type:"polygon",points:[[0,2],[-1,0],[1,0]],color:Bt,showVertices:!1,fillStyle:"none",strokeStyle:"solid",weight:"medium",labels:[]};case"function":return{type:"function",color:Bt,strokeStyle:"solid",weight:"medium",equation:"x^2",domain:[-1/0,1/0],directionalAxis:"x",labels:[]};case"label":return{type:"label",coord:[0,0],text:"label",color:Bt,size:"medium"};default:throw new da(o)}}function ca(o,l="solid",n,i="medium"){const u=o==="grayH"?"gray":o,w=`. Appearance${i==="medium"?"":` ${i}`} ${l} ${u}`;switch(n){case"none":return`${w} border, with no fill.`;case"white":return`${w} border, with a white fill.`;case"solid":case"translucent":return`${w} border, with a ${n} ${u} fill.`;case void 0:return`${w}.`;default:throw new da(n)}}async function xn(o){const l=await np.SpeechRuleEngine.setup("en");let n="";const i=tp(o);for(const u of i)switch(u.type){case"math":n+=l.texToSpeech(u.content);break;case"specialCharacter":n+=u.content.length>1?u.content.slice(1):u.content;break;default:n+=u.content;break}return n}async function Nt(o){if(o.length===0)return"";const l=o.map(i=>xn(i.text));return` ${(await Promise.all(l)).join(", ")}`}const{convertRadiansToDegrees:lg}=Wo,{InfoTip:sg}=Ae,pd=o=>{const{center:l,radius:n,angle:i,color:u,labels:p,ariaLabel:w,fillStyle:k,strokeStyle:b,weight:N,expanded:O,onToggle:B,onChangeProps:V,onMove:G,onRemove:_}=o;async function M(){const A=await Nt(p),$=await xn(`$${l[0]}$`),J=await xn(`$${l[1]}$`),Z=await xn(`$${lg(i)}$`),ue=n[0]===n[1];let de="";ue?de+=`Circle${A} with radius ${n[0]}`:de+=`Ellipse${A} with x radius ${n[0]} and y radius ${n[1]}`,de+=`, centered at ${$} comma ${J}`,!ue&&i!==0&&(de+=`, rotated by ${Z} degrees`);const Se=ca(u,b,k,N);return de+=Se,de}function oe(A){const $=A[0]-l[0],J=A[1]-l[1],Z={center:A};Z.labels=p.map(ue=>({...ue,coord:[ue.coord[0]+$,ue.coord[1]+J]})),V(Z)}function W(A){const $={color:A};$.labels=p.map(J=>({...J,color:A})),V($)}function U(A,$){const J=[...p];J[$]={...p[$],...A},V({labels:J})}function E(A){const $=p.filter((J,Z)=>Z!==A);V({labels:$})}return e.jsxs(Sn,{expanded:O,onToggle:B,header:e.jsxs(Y,{style:Ln.row,children:[e.jsx(Ne,{children:`Ellipse (${l[0]}, ${l[1]}), radius ${n[0]}, ${n[1]}`}),e.jsx(re,{size:j.xSmall_8}),e.jsx(ud,{color:o.color,fillStyle:k,strokeStyle:b})]}),children:[e.jsxs(Y,{style:Ln.row,children:[e.jsx(Qe,{coord:l,style:Ln.spaceUnder,onChange:oe}),e.jsx(Y,{style:Ln.spaceUnder,children:e.jsx(sg,{children:"The coordinates for the center of the ellipse."})})]}),e.jsx(Qe,{coord:n,labels:["x radius","y radius"],style:Ln.spaceUnder,onChange:A=>V({radius:A})}),e.jsx(sd,{angle:i,onChange:A=>V({angle:A})}),e.jsx(re,{size:j.xSmall_8}),e.jsxs(Y,{style:[Ln.row,Ln.spaceUnder],children:[e.jsx(jt,{selectedValue:u,onChange:W}),e.jsx(re,{size:j.medium_16}),e.jsxs(je,{tag:"label",style:[Ln.row,Ln.truncatedWidth],children:["fill",e.jsx(re,{size:j.xxSmall_6}),e.jsx(qn,{selectedValue:k,onChange:A=>V({fillStyle:A}),placeholder:"",children:Object.keys(yi).map(A=>e.jsx(we,{value:A,label:A},A))})]})]}),e.jsx(lr,{selectedValue:b,onChange:A=>V({strokeStyle:A}),containerStyle:{marginBottom:Q.size_080}}),e.jsx(ma,{selectedValue:N,onChange:A=>V({weight:A})}),e.jsx(re,{size:j.small_12}),e.jsx(Y,{style:Ln.horizontalRule}),e.jsx(Kt,{ariaLabel:w,getPrepopulatedAriaLabel:M,onChangeProps:A=>{V(A)}}),e.jsx(re,{size:j.xxxSmall_4}),e.jsx(Y,{style:Ln.horizontalRule}),e.jsx(re,{size:j.small_12}),e.jsx(je,{children:"Visible labels"}),p.map((A,$)=>F.createElement(Rt,{...A,key:$,expanded:!0,onChangeProps:J=>{U(J,$)},onRemove:()=>{E($)},containerStyle:Ln.labelContainer})),e.jsx(Ue,{kind:"tertiary",startIcon:Gt,onClick:()=>{const A={...mt("label"),coord:[l[0],l[1]-p.length],color:u};V({labels:[...p,A]})},style:Ln.addButton,children:"Add visible label"}),e.jsx(Lt,{figureType:o.type,onMove:G,onRemove:_})]})},Ln=ie.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:j.xSmall_8},truncatedWidth:{minWidth:0},addButton:{alignSelf:"start"},labelContainer:{backgroundColor:me.white},horizontalRule:{height:1,backgroundColor:me.offBlack16}});pd.__docgenInfo={description:"",methods:[],displayName:"LockedEllipseSettings",props:{onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},type:{required:!0,tsType:{name:"literal",value:'"ellipse"'},description:""},center:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},radius:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},angle:{required:!0,tsType:{name:"number"},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},weight:{required:!0,tsType:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},description:""},labels:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedEllipseType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedEllipseType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};const ug=""+new URL("copy-ChcUWZci.svg",import.meta.url).href,dg=""+new URL("note-pencil-CqqXva0w.svg",import.meta.url).href,ki=o=>{const{color:l,lineStyle:n}=o;return e.jsx(Y,{style:Ks.container,children:e.jsx(Y,{"aria-label":`${l}, ${n}`,style:[Ks.lineSwatch,{border:`5px ${n} ${ut[l]}`}]})})},Ks=ie.StyleSheet.create({container:{backgroundColor:me.white,justifyContent:"center",padding:j.xSmall_8,borderRadius:j.xxxSmall_4},lineSwatch:{width:40}});ki.__docgenInfo={description:"",methods:[],displayName:"LineSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},lineStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const Xs={linear:["x + 5","1/2x - 2"],polynomial:["1/2x^2 + 3x - 4","(1/3)x^3 - 2x^2 + 3x - 4"],trigonometric:["sin(x) * 3","arctan(2x) + 4"]},hd=o=>{const{color:l,strokeStyle:n,equation:i,directionalAxis:u,domain:p,weight:w,ariaLabel:k,onChangeProps:b,onMove:N,onRemove:O}=o,B=o.labels,V=u==="x"?"y=":"x=",G=`Function (${V}${i})`,_=le=>[Number.isFinite(le[0])?le[0].toString():"",Number.isFinite(le[1])?le[1].toString():""],[M,oe]=F.useState(_(p)),[W,U]=F.useState("");F.useEffect(()=>{oe(_(p))},[p]);async function E(){let fe=`Function${await Nt(B)} with equation ${V}${i}`;(Number.isFinite(p[0])||Number.isFinite(p[1]))&&(fe+=`, domain from ${p[0]} to ${p[1]}`);const ge=ca(l,n,void 0,w);return fe+=ge,fe}function A(le,fe){const ge={};ge[le]=fe,b(ge)}function $(le,fe){const ge=[...M];ge[le]=fe,oe(ge);const Ke=[...p];let tt=parseFloat(fe);fe===""&&le===0?tt=-1/0:fe===""&&le===1&&(tt=1/0),Ke[le]=tt,b({domain:Ke})}const J=Object.keys(Xs),Z=W!=="",ue=Z?Xs[W]:["Select category to see example equations"];function de(le){const fe={color:le};fe.labels=B.map(ge=>({...ge,color:le})),b(fe)}function Se(le,fe){const ge=[...B];ge[fe]={...B[fe],...le},b({labels:ge})}function Be(le){const fe=B.filter((ge,Ke)=>Ke!==le);b({labels:fe})}return e.jsxs(Sn,{expanded:o.expanded,onToggle:o.onToggle,header:e.jsxs(Y,{style:ze.row,children:[e.jsx(Ne,{style:ze.accordionHeader,children:G}),e.jsx(re,{size:j.xSmall_8}),e.jsx(ki,{color:l,lineStyle:n})]}),children:[e.jsxs(Y,{style:[ze.row,{marginBottom:Q.size_080}],children:[e.jsx(jt,{selectedValue:l,onChange:de}),e.jsx(re,{size:j.small_12}),e.jsx(lr,{selectedValue:n,onChange:le=>{A("strokeStyle",le)}})]}),e.jsx(ma,{selectedValue:w,onChange:le=>b({weight:le})}),e.jsxs(Y,{style:[ze.row,ze.rowSpace],children:[e.jsxs(qn,{selectedValue:u,onChange:le=>{A("directionalAxis",le)},"aria-label":"equation prefix",style:[ze.dropdownLabel,ze.axisMenu],placeholder:"",children:[e.jsx(we,{value:"x",label:"y ="}),e.jsx(we,{value:"y",label:"x ="})]}),e.jsx(re,{size:j.xSmall_8}),e.jsx(lt,{type:"text","aria-label":"equation",value:i,onChange:le=>{A("equation",le)},style:[ze.textField]})]}),e.jsxs(Y,{style:[ze.row,ze.rowSpace],children:[e.jsxs(je,{tag:"label",style:[ze.dropdownLabel,ze.domainMin],children:["domain min",e.jsx(re,{size:j.xxSmall_6}),e.jsx(lt,{type:"number",style:ze.domainMinField,value:M[0],onChange:le=>{$(0,le)}})]}),e.jsx(re,{size:j.medium_16}),e.jsxs(je,{tag:"label","aria-label":"domain max",style:[ze.dropdownLabel,ze.domainMax],children:["max",e.jsx(re,{size:j.xxSmall_6}),e.jsx(lt,{type:"number",style:ze.domainMaxField,value:M[1],onChange:le=>{$(1,le)}})]})]}),e.jsxs(Sn,{header:e.jsx(Ne,{children:"Example Functions"}),expanded:!1,containerStyle:ze.exampleWorkspace,panelStyle:ze.exampleAccordionPanel,children:[e.jsxs(je,{tag:"label",style:ze.dropdownLabel,children:["Choose a category",e.jsx(re,{size:j.xxSmall_6}),e.jsx(qn,{selectedValue:W,onChange:U,placeholder:"examples",children:J.map(le=>e.jsx(we,{value:le,label:le},le))})]}),Z&&e.jsx("ul",{className:ie.css(ze.exampleContainer),children:ue.map((le,fe)=>e.jsx(mg,{category:W,example:le,index:fe,pasteEquationFn:A},fe))})]}),e.jsx(re,{size:j.small_12}),e.jsx(Y,{style:ze.horizontalRule}),e.jsx(Kt,{ariaLabel:k,getPrepopulatedAriaLabel:E,onChangeProps:le=>{b(le)}}),e.jsx(re,{size:j.xxxSmall_4}),e.jsx(Y,{style:ze.horizontalRule}),e.jsx(re,{size:j.small_12}),e.jsx(je,{children:"Visible labels"}),B.map((le,fe)=>e.jsx(Rt,{...le,expanded:!0,onChangeProps:ge=>{Se(ge,fe)},onRemove:()=>{Be(fe)},containerStyle:ze.labelContainer},fe)),e.jsx(Ue,{kind:"tertiary",startIcon:Gt,onClick:()=>{const le={...mt("label"),coord:[0,-B.length],color:l};b({labels:[...B,le]})},style:ze.addButton,children:"Add visible label"}),e.jsx(Lt,{figureType:o.type,onMove:N,onRemove:O})]})},mg=o=>{const{category:l,example:n,index:i,pasteEquationFn:u}=o,p=F.useId();return e.jsxs("li",{className:ie.css(ze.exampleRow),children:[e.jsx(kn,{icon:dg,kind:"tertiary","aria-label":"paste example","aria-describedby":p,onClick:()=>u("equation",n),size:"medium",style:ze.copyPasteButton}),e.jsx(kn,{icon:ug,kind:"tertiary","aria-label":"copy example","aria-describedby":p,onClick:()=>navigator.clipboard.writeText(n),size:"medium",style:ze.copyPasteButton}),e.jsx(re,{size:j.xxxSmall_4}),e.jsx(Y,{style:ze.exampleContent,id:p,children:n})]},`${l}-${i}`)},ze=ie.StyleSheet.create({accordionHeader:{textOverflow:"ellipsis",maxWidth:"calc(100% - 64px)",overflow:"hidden",whiteSpace:"nowrap"},axisMenu:{minWidth:"auto"},copyPasteButton:{flexShrink:"0",margin:"0 2px"},domainMin:{justifyContent:"space-between",width:"calc(((100% - 141px) / 2) + 88.7px)",textWrap:"nowrap"},domainMinField:{width:"calc(100% - 88.7px)"},domainMax:{width:"calc(((100% - 141px) / 2) + 36.2px)"},domainMaxField:{width:"calc(100% - 36.2px)"},dropdownLabel:{alignItems:"center",display:"flex"},exampleAccordionPanel:{alignItems:"start",paddingBottom:"12px",flexDirection:"row",flexWrap:"wrap"},exampleContainer:{background:"white",border:`1px solid ${me.fadedOffBlack16}`,borderRadius:"4px",flexGrow:"1",listStyleType:"none",maxHeight:"88px",margin:"8px 0 0 0",overflowY:"scroll",padding:"4px 12px 4px 4px"},exampleContent:{fontFamily:'"Lato", sans-serif',flexGrow:"1",color:me.offBlack},exampleRow:{alignItems:"center",display:"flex",flexDirection:"row",minHeight:"44px"},exampleWorkspace:{background:me.white50},rowSpace:{marginTop:j.xSmall_8},row:{display:"flex",flexDirection:"row",alignItems:"center"},textField:{flexGrow:"1"},addButton:{alignSelf:"start"},horizontalRule:{height:1,backgroundColor:me.offBlack16},labelContainer:{backgroundColor:me.white}});hd.__docgenInfo={description:"",methods:[],displayName:"LockedFunctionSettings",props:{type:{required:!0,tsType:{name:"literal",value:'"function"'},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},weight:{required:!0,tsType:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},description:""},equation:{required:!0,tsType:{name:"string"},description:"This is the user-defined equation (as it was typed)"},directionalAxis:{required:!0,tsType:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}]},description:"The independent variable of this function"},domain:{required:!0,tsType:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},labels:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedFunctionType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedFunctionType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (points, color, etc.) are updated."}}};const ui=o=>{const{headerLabel:l,coord:n,color:i,filled:u=!0,labels:p,ariaLabel:w,onChangeProps:k,onMove:b,onRemove:N,showPoint:O,error:B,expanded:V,onTogglePoint:G,onToggle:_}=o,M=!b&&!N;async function oe(){const $=await Nt(p),J=await xn(`$${n[0]}$`),Z=await xn(`$${n[1]}$`);let ue=`Point${$} at ${J} comma ${Z}`;const de=ca(i);return ue+=de,ue}function W($){const J={color:$};J.labels=p.map(Z=>({...Z,color:$})),k(J)}function U($){const J=$[0]-n[0],Z=$[1]-n[1],ue={coord:$};ue.labels=p.map(de=>({...de,coord:[de.coord[0]+J,de.coord[1]+Z]})),k(ue)}function E($,J){const Z=[...p];Z[J]={...p[J],...$},k({labels:Z})}function A($){const J=p.filter((Z,ue)=>ue!==$);k({labels:J})}return e.jsxs(Sn,{expanded:V,onToggle:_,containerStyle:M?Yn.definingContainer:void 0,panelStyle:M?Yn.definingPanel:void 0,header:e.jsxs(Y,{style:Yn.row,children:[e.jsx(Ne,{children:`${l||"Point"} (${n[0]}, ${n[1]})`}),e.jsx(re,{size:j.xSmall_8}),e.jsx(Yo,{color:i,filled:u})]}),children:[e.jsx(Qe,{coord:n,style:Yn.spaceUnder,onChange:U,error:!!B}),G&&e.jsx(Hn,{label:"show point on graph",checked:!!O,style:O&&Yn.spaceUnder,onChange:G}),(!M||O)&&e.jsxs(e.Fragment,{children:[e.jsx(jt,{selectedValue:i,onChange:W,style:Yn.spaceUnder}),e.jsx(Hn,{label:"open point",checked:!u,onChange:$=>{k({filled:!$})}})]}),!M&&e.jsxs(e.Fragment,{children:[e.jsx(re,{size:j.small_12}),e.jsx(Y,{style:Yn.horizontalRule}),e.jsx(Kt,{ariaLabel:w,getPrepopulatedAriaLabel:oe,onChangeProps:$=>{k($)}})]}),e.jsx(re,{size:j.xxxSmall_4}),e.jsx(Y,{style:Yn.horizontalRule}),e.jsx(re,{size:j.small_12}),e.jsx(je,{children:"Visible labels"}),p.map(($,J)=>F.createElement(Rt,{...$,key:J,containerStyle:!M&&Yn.lockedPointLabelContainer,expanded:!0,onChangeProps:Z=>{E(Z,J)},onRemove:()=>{A(J)}})),e.jsx(Ue,{kind:"tertiary",startIcon:Gt,onClick:()=>{const $={...mt("label"),coord:[n[0]+.5,n[1]-p.length],color:i};k({labels:[...p,$]})},style:Yn.addButton,children:"Add visible label"}),N&&e.jsx(Lt,{figureType:o.type,onMove:b,onRemove:N})]})},Yn=ie.StyleSheet.create({definingContainer:{marginTop:j.xSmall_8,marginBottom:0,marginLeft:-4,marginRight:-4,backgroundColor:me.white},definingPanel:{paddingBottom:j.xxSmall_6},lockedPointLabelContainer:{backgroundColor:me.white},row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:j.xSmall_8},addButton:{alignSelf:"start"},horizontalRule:{height:1,backgroundColor:me.offBlack16}});ui.__docgenInfo={description:"",methods:[],displayName:"LockedPointSettings",props:{type:{required:!0,tsType:{name:"literal",value:'"point"'},description:""},coord:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},filled:{required:!0,tsType:{name:"boolean"},description:""},labels:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},headerLabel:{required:!1,tsType:{name:"string"},description:`Optional label for the point to display in the header summary.
Defaults to "Point".`},showPoint:{required:!1,tsType:{name:"boolean"},description:"Whether the extra point settings are toggled open."},error:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"Optional error message to display."},onTogglePoint:{required:!1,tsType:{name:"signature",type:"function",raw:"(newValue) => void",signature:{arguments:[{name:"newValue"}],return:{name:"void"}}},description:"Called when the extra settings toggle switch is changed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPointType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedPointType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onMove:{required:!1,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when the point is moved."},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the point is removed."}}};const Co="The line cannot have length 0.",gd=o=>{const{kind:l,points:n,color:i,lineStyle:u="solid",showPoint1:p,showPoint2:w,weight:k,labels:b,ariaLabel:N,onChangeProps:O,onMove:B,onRemove:V}=o,[G,_]=n,M=l.charAt(0).toUpperCase()+l.slice(1),oe=`${M} (${G.coord[0]},
        ${G.coord[1]}), (${_.coord[0]}, ${_.coord[1]})`,W=Go(G.coord,_.coord);async function U(){const Z=await Nt(b),ue=await Nt(G.labels),de=await Nt(_.labels),Se=await xn(`$${G.coord[0]}$`),Be=await xn(`$${G.coord[1]}$`),le=await xn(`$${_.coord[0]}$`),fe=await xn(`$${_.coord[1]}$`);let ge;switch(l){case"line":ge=`${M}${Z} through point${ue} at ${Se} comma ${Be} and point${de} at ${le} comma ${fe}`;break;case"ray":ge=`${M}${Z} from point${ue} at ${Se} comma ${Be} through point${de} at ${le} comma ${fe}`;break;case"segment":ge=`${M}${Z} from point${ue} at ${Se} comma ${Be} to point${de} at ${le} comma ${fe}`;break;default:throw new da(l,"Unknown line kind")}const Ke=ca(i,u,void 0,k);return ge+=Ke,ge}function E(Z,ue){const de=[...n];de[ue]={...n[ue],...Z};const Se=Bn.midpoint(n[0].coord,n[1].coord),Be=Bn.midpoint(de[0].coord,de[1].coord),le=[Be[0]-Se[0],Be[1]-Se[1]],fe=b.map((ge,Ke)=>({...ge,coord:[ge.coord[0]+le[0],ge.coord[1]+le[1]]}));O({points:de,labels:fe})}function A(Z){const ue=b.map(de=>({...de,color:Z}));O({color:Z,points:[{...G,color:Z,labels:G.labels.map(de=>({...de,color:Z}))},{..._,color:Z,labels:_.labels.map(de=>({...de,color:Z}))}],labels:ue})}function $(Z,ue){const de=[...b];de[ue]={...b[ue],...Z},O({labels:de})}function J(Z){const ue=b.filter((de,Se)=>Se!==Z);O({labels:ue})}return e.jsxs(Sn,{expanded:o.expanded,onToggle:o.onToggle,header:e.jsxs(Y,{style:Jn.row,children:[e.jsx(Ne,{children:oe}),e.jsx(re,{size:j.xSmall_8}),e.jsx(ki,{color:i,lineStyle:u})]}),children:[e.jsxs(je,{tag:"label",style:[Jn.row,Jn.spaceUnder],children:["kind",e.jsx(re,{size:j.xxxSmall_4}),e.jsxs(qn,{selectedValue:l,onChange:Z=>O({kind:Z}),placeholder:"",children:[e.jsx(we,{value:"line",label:"line"}),e.jsx(we,{value:"ray",label:"ray"}),e.jsx(we,{value:"segment",label:"segment"})]})]}),e.jsxs(Y,{style:[Jn.row,Jn.spaceUnder],children:[e.jsx(jt,{selectedValue:i,onChange:A}),e.jsx(re,{size:j.small_12}),e.jsx(lr,{selectedValue:u,onChange:Z=>O({lineStyle:Z})})]}),e.jsx(ma,{selectedValue:k,onChange:Z=>O({weight:Z})}),W&&e.jsx(je,{style:Jn.errorText,children:Co}),e.jsx(ui,{headerLabel:"Point 1",expanded:!0,showPoint:p,error:W?Co:null,...G,onTogglePoint:Z=>O({showPoint1:Z}),onChangeProps:Z=>E(Z,0)}),e.jsx(ui,{headerLabel:"Point 2",expanded:!0,showPoint:w,error:W?Co:null,..._,onTogglePoint:Z=>O({showPoint2:Z}),onChangeProps:Z=>E(Z,1)}),e.jsx(re,{size:j.small_12}),e.jsx(Y,{style:Jn.horizontalRule}),e.jsx(Kt,{ariaLabel:N,getPrepopulatedAriaLabel:U,onChangeProps:Z=>{O(Z)}}),e.jsx(re,{size:j.xxxSmall_4}),e.jsx(Y,{style:Jn.horizontalRule}),e.jsx(re,{size:j.small_12}),e.jsx(je,{children:"Visible labels"}),b.map((Z,ue)=>F.createElement(Rt,{...Z,key:ue,expanded:!0,onChangeProps:de=>{$(de,ue)},onRemove:()=>{J(ue)},containerStyle:Jn.labelContainer})),e.jsx(Ue,{kind:"tertiary",startIcon:Gt,onClick:()=>{const Z=[0,-1],ue=Bn.add(Bn.scale(Z,b.length),Bn.midpoint(n[0].coord,n[1].coord)),de={...mt("label"),coord:ue,color:i};O({labels:[...b,de]})},style:Jn.addButton,children:"Add visible label"}),e.jsx(Lt,{figureType:o.type,onMove:B,onRemove:V})]})},Jn=ie.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:j.xSmall_8},errorText:{color:me.red},addButton:{alignSelf:"start"},horizontalRule:{height:1,backgroundColor:me.offBlack16},labelContainer:{backgroundColor:me.white}});gd.__docgenInfo={description:"",methods:[],displayName:"LockedLineSettings",props:{type:{required:!0,tsType:{name:"literal",value:'"line"'},description:""},kind:{required:!0,tsType:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}]},description:""},points:{required:!0,tsType:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},lineStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},showPoint1:{required:!0,tsType:{name:"boolean"},description:""},showPoint2:{required:!0,tsType:{name:"boolean"},description:""},weight:{required:!0,tsType:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},description:""},labels:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedFigure>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"Partial<LockedFigure>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (points, color, etc.) are updated."}}};const cg=""+new URL("arrow-fat-down-Bfm634Ub.svg",import.meta.url).href,pg=""+new URL("arrow-fat-left-vG4eNh8n.svg",import.meta.url).href,hg=""+new URL("arrow-fat-right-LGRtshLE.svg",import.meta.url).href,gg=""+new URL("arrow-fat-up-BqHZ5poh.svg",import.meta.url).href,yg=""+new URL("minus-circle-D0QptBrx.svg",import.meta.url).href,yd=o=>{const{color:l,fillStyle:n,strokeStyle:i}=o;return e.jsx(Y,{"aria-label":`${l}, stroke ${i}, fill ${n}`,style:[Ys.container,{border:`4px ${i} ${ut[l]}`}],children:e.jsx(Y,{style:[Ys.innerSquare,{backgroundColor:ut[l],opacity:n==="white"?0:yi[n]}]})})},Ys=ie.StyleSheet.create({container:{outline:`2px solid ${me.offWhite}`,width:j.large_24,height:j.large_24,backgroundColor:me.white,alignItems:"center",justifyContent:"center"},innerSquare:{width:20,height:20}});yd.__docgenInfo={description:"",methods:[],displayName:"PolygonSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const bd=o=>{const{points:l,color:n,showVertices:i,fillStyle:u,strokeStyle:p,weight:w,labels:k,ariaLabel:b,expanded:N,onToggle:O,onChangeProps:B,onMove:V,onRemove:G}=o;async function _(){let A=`Polygon${await Nt(k)} with ${l.length} sides, vertices at `;const $=await Promise.all(l.map(async([Z,ue])=>{const de=await xn(`$${Z}$`),Se=await xn(`$${ue}$`);return`${de} comma ${Se}`}));A+=$.join(", ");const J=ca(n,p,u,w);return A+=J,A}function M(E){const A={color:E};A.labels=k.map($=>({...$,color:E})),B(A)}function oe(E){switch(E){case"up":B({points:l.map(([A,$])=>[A,$+1]),labels:k.map(A=>({...A,coord:[A.coord[0],A.coord[1]+1]}))});break;case"down":B({points:l.map(([A,$])=>[A,$-1]),labels:k.map(A=>({...A,coord:[A.coord[0],A.coord[1]-1]}))});break;case"left":B({points:l.map(([A,$])=>[A-1,$]),labels:k.map(A=>({...A,coord:[A.coord[0]-1,A.coord[1]]}))});break;case"right":B({points:l.map(([A,$])=>[A+1,$]),labels:k.map(A=>({...A,coord:[A.coord[0]+1,A.coord[1]]}))});break}}function W(E,A){const $=[...k];$[A]={...k[A],...E},B({labels:$})}function U(E){const A=k.filter(($,J)=>J!==E);B({labels:A})}return e.jsxs(Sn,{expanded:N,onToggle:O,header:e.jsxs(Y,{style:nn.row,children:[e.jsx(Ne,{children:`Polygon, ${l.length} sides`}),e.jsx(re,{size:j.xSmall_8}),e.jsx(yd,{color:n,fillStyle:u,strokeStyle:p})]}),children:[e.jsxs(Y,{style:[nn.row,nn.spaceUnder],children:[e.jsx(jt,{selectedValue:n,onChange:M}),e.jsx(re,{size:j.medium_16}),e.jsxs(je,{tag:"label",style:[nn.row,nn.truncatedWidth],children:["fill",e.jsx(re,{size:j.xxSmall_6}),e.jsx(qn,{selectedValue:u,onChange:E=>B({fillStyle:E}),placeholder:"",children:Object.keys(yi).map(E=>e.jsx(we,{value:E,label:E},E))})]})]}),e.jsx(lr,{selectedValue:p,onChange:E=>B({strokeStyle:E}),containerStyle:nn.spaceUnder}),e.jsx(ma,{selectedValue:w,onChange:E=>B({weight:E}),containerStyle:nn.spaceUnder}),e.jsx(Hn,{label:"show vertices",checked:i,onChange:E=>B({showVertices:E}),style:nn.spaceUnder}),e.jsxs(Sn,{header:e.jsx(Ne,{children:"Points"}),expanded:!0,containerStyle:nn.pointAccordionContainer,panelStyle:nn.pointAccordionPanel,children:[l.map((E,A)=>{const $=String.fromCharCode(65+A);return e.jsxs(Y,{style:[nn.row,nn.spaceUnder],children:[e.jsx(Ne,{children:`${$}:`}),e.jsx(re,{size:j.medium_16}),e.jsx(Qe,{coord:E,labels:["x","y"],onChange:J=>{const Z=[...l];Z[A]=J,o.onChangeProps({points:Z})}}),l.length>3&&e.jsx(kn,{"aria-label":`Delete polygon point ${$}`,icon:yg,kind:"tertiary",actionType:"destructive",onClick:()=>{const J=[...l];J.splice(A,1),o.onChangeProps({points:J})},style:nn.icon})]},`locked-polygon-point-index-${A}`)}),e.jsxs(Y,{style:[nn.row,nn.polygonActionsContainer],children:[e.jsx(Ue,{kind:"tertiary",startIcon:Gt,onClick:()=>{o.onChangeProps({points:[...l,[0,0]]})},children:"Add point"}),e.jsx(ua,{}),e.jsxs(Y,{style:nn.movementButtonsContainer,children:[e.jsx(kn,{"aria-label":"Move polygon up",size:"small",icon:gg,kind:"tertiary",onClick:()=>oe("up")}),e.jsxs(Y,{style:nn.row,children:[e.jsx(kn,{"aria-label":"Move polygon left",size:"small",icon:pg,kind:"tertiary",onClick:()=>oe("left")}),e.jsx(kn,{"aria-label":"Move polygon down",size:"small",icon:cg,kind:"tertiary",onClick:()=>oe("down")}),e.jsx(kn,{"aria-label":"Move polygon right",size:"small",icon:hg,kind:"tertiary",onClick:()=>oe("right")})]})]})]})]}),e.jsx(re,{size:j.small_12}),e.jsx(Y,{style:nn.horizontalRule}),e.jsx(Kt,{ariaLabel:b,getPrepopulatedAriaLabel:_,onChangeProps:E=>{B(E)}}),e.jsx(re,{size:j.xxxSmall_4}),e.jsx(Y,{style:nn.horizontalRule}),e.jsx(re,{size:j.small_12}),e.jsx(je,{children:"Visible labels"}),k.map((E,A)=>F.createElement(Rt,{...E,key:A,expanded:!0,onChangeProps:$=>{W($,A)},onRemove:()=>{U(A)},containerStyle:nn.labelContainer})),e.jsx(Ue,{kind:"tertiary",startIcon:Gt,onClick:()=>{const E={...mt("label"),coord:[l[0][0],l[0][1]-k.length],color:n};B({labels:[...k,E]})},style:nn.addButton,children:"Add visible label"}),e.jsx(Lt,{figureType:o.type,onMove:V,onRemove:G})]})},nn=ie.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},pointAccordionContainer:{backgroundColor:me.white},pointAccordionPanel:{alignItems:"start"},icon:{marginInlineStart:j.xxxSmall_4},polygonActionsContainer:{width:"100%"},movementButtonsContainer:{display:"flex",flexDirection:"column",alignItems:"center",minWidth:"fit-content"},spaceUnder:{marginBottom:j.xSmall_8},truncatedWidth:{minWidth:0},addButton:{alignSelf:"start"},labelContainer:{backgroundColor:me.white},horizontalRule:{height:1,backgroundColor:me.offBlack16}});bd.__docgenInfo={description:"",methods:[],displayName:"LockedPolygonSettings",props:{onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},type:{required:!0,tsType:{name:"literal",value:'"polygon"'},description:""},points:{required:!0,tsType:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],raw:"Coord[]"},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},showVertices:{required:!0,tsType:{name:"boolean"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},weight:{required:!0,tsType:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},description:""},labels:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPolygonType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedPolygonType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};const bg="The vector cannot have length 0.",wd=o=>{const{points:l,color:n,weight:i,labels:u,ariaLabel:p,onChangeProps:w,onMove:k,onRemove:b}=o,[N,O]=l,B=`Vector (${N[0]}, ${N[1]}), (${O[0]}, ${O[1]})`,V=Go(N,O);async function G(){const U=await Nt(u),E=await xn(`$${N[0]}$`),A=await xn(`$${N[1]}$`),$=await xn(`$${O[0]}$`),J=await xn(`$${O[1]}$`);let Z=`Vector${U} from ${E} comma ${A} to ${$} comma ${J}`;const ue=ca(n,"solid",void 0,i);return Z+=ue,Z}function _(U,E){if(typeof U<"u"){const A=[...l];A[E]=[...U];const $=Bn.midpoint(N,O),J=Bn.midpoint(A[0],A[1]),Z=Bn.sub(J,$),ue=u.map(de=>({...de,coord:Bn.add(de.coord,Z)}));w({points:A,labels:ue})}}function M(U){const E={color:U};E.labels=u.map(A=>({...A,color:U})),w(E)}function oe(U,E){const A=[...u];A[E]={...u[E],...U},w({labels:A})}function W(U){const E=u.filter((A,$)=>$!==U);w({labels:E})}return e.jsxs(Sn,{expanded:o.expanded,onToggle:o.onToggle,header:e.jsxs(Y,{style:_n.row,children:[e.jsx(Ne,{children:B}),e.jsx(re,{size:j.xSmall_8}),e.jsx(ki,{color:n,lineStyle:"solid"})]}),children:[e.jsx(jt,{selectedValue:n,onChange:M,style:{marginBottom:Q.size_080}}),e.jsx(ma,{selectedValue:i,onChange:U=>w({weight:U})}),V&&e.jsx(je,{style:_n.errorText,children:bg}),e.jsx(Sn,{expanded:!0,containerStyle:_n.container,panelStyle:_n.accordionPanel,header:e.jsx(Y,{style:_n.row,children:e.jsx(Ne,{children:`Tail (${N[0]}, ${N[1]})`})}),children:e.jsx(Qe,{coord:N,error:V,onChange:U=>{_(U,0)}})}),e.jsx(Sn,{expanded:!0,containerStyle:_n.container,panelStyle:_n.accordionPanel,header:e.jsx(Y,{style:_n.row,children:e.jsx(Ne,{children:`Tip (${O[0]}, ${O[1]})`})}),children:e.jsx(Qe,{coord:O,error:V,onChange:U=>{_(U,1)}})}),e.jsx(re,{size:j.small_12}),e.jsx(Y,{style:_n.horizontalRule}),e.jsx(Kt,{ariaLabel:p,getPrepopulatedAriaLabel:G,onChangeProps:U=>{w(U)}}),e.jsx(re,{size:j.xxxSmall_4}),e.jsx(Y,{style:_n.horizontalRule}),e.jsx(re,{size:j.small_12}),e.jsx(je,{children:"Visible labels"}),u.map((U,E)=>F.createElement(Rt,{...U,key:E,expanded:!0,onChangeProps:A=>{oe(A,E)},onRemove:()=>{W(E)},containerStyle:_n.labelContainer})),e.jsx(Ue,{kind:"tertiary",startIcon:Gt,onClick:()=>{const U=[0,-1],E=Bn.add(Bn.scale(U,u.length),Bn.midpoint(N,O)),A={...mt("label"),coord:E,color:n};w({labels:[...u,A]})},style:_n.addButton,children:"Add visible label"}),e.jsx(Lt,{figureType:o.type,onMove:k,onRemove:b})]})},_n=ie.StyleSheet.create({accordionPanel:{paddingBottom:j.medium_16},container:{marginTop:j.xSmall_8,marginBottom:0,marginLeft:-4,marginRight:-4,backgroundColor:me.white},errorText:{color:me.red,marginTop:j.xSmall_8},row:{flexDirection:"row",alignItems:"center"},addButton:{alignSelf:"start"},horizontalRule:{height:1,backgroundColor:me.offBlack16},labelContainer:{backgroundColor:me.white}});wd.__docgenInfo={description:"",methods:[],displayName:"LockedVectorSettings",props:{type:{required:!0,tsType:{name:"literal",value:'"vector"'},description:""},points:{required:!0,tsType:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},weight:{required:!0,tsType:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},description:""},labels:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedFigure>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"Partial<LockedFigure>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (points, color, etc.) are updated."}}};const fd=o=>{switch(o.type){case"point":return e.jsx(ui,{...o});case"line":return e.jsx(gd,{...o});case"vector":return e.jsx(wd,{...o});case"ellipse":return e.jsx(pd,{...o});case"polygon":return e.jsx(bd,{...o});case"function":return e.jsx(hd,{...o});case"label":return e.jsx(Rt,{...o});default:throw new da(o)}};fd.__docgenInfo={description:"",methods:[],displayName:"LockedFigureSettings",props:{onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."}}};const vd=o=>{const l=Array((o.figures??[]).length).fill(!1),[n,i]=F.useState(l),[u,p]=F.useState(!0),w=F.useId(),{figures:k,onChange:b}=o;function N(W){const E={lockedFigures:[...k||[],mt(W)]};b(E),i([...n,!0])}function O(W,U){if(W===0&&(U==="back"||U==="backward")||k&&W===k.length-1&&(U==="front"||U==="forward"))return;const A=[...k||[]],$=[...n],[J]=A.splice(W,1);switch($.splice(W,1),U){case"back":A.unshift(J),$.unshift(!0);break;case"backward":A.splice(W-1,0,J),$.splice(W-1,0,!0);break;case"forward":A.splice(W+1,0,J),$.splice(W+1,0,!0);break;case"front":A.push(J),$.push(!0);break}b({lockedFigures:A}),i($)}function B(W){if(window.confirm("Are you sure you want to delete this figure?")){const U=k||[];b({lockedFigures:[...U.slice(0,W),...U.slice(W+1)]});const E=[...n];E.splice(W,1),i(E)}}function V(W,U){const E=k||[],A={lockedFigures:[...E.slice(0,W),{...E[W],...U},...E.slice(W+1)]};b(A)}function G(W){i(Array(k==null?void 0:k.length).fill(W))}const _=n.every(W=>!W),M=_?"Expand all":"Collapse all",oe=!!(k!=null&&k.length);return e.jsxs(e.Fragment,{children:[e.jsx(dt,{title:"Locked Figures",isOpen:u,onToggle:()=>p(!u),isCollapsible:!0}),u&&e.jsxs(Y,{children:[k==null?void 0:k.map((W,U)=>e.jsx(fd,{expanded:n[U],onToggle:E=>{const A=[...n];A[U]=E,i(A)},...W,onChangeProps:E=>V(U,E),onMove:E=>O(U,E),onRemove:()=>B(U)},`${w}-locked-${W}-${U}`)),e.jsxs(Y,{style:Js.buttonContainer,children:[e.jsx(ld,{id:`${w}-select`,onChange:N}),e.jsx(re,{size:j.small_12}),oe&&e.jsx(Ue,{kind:"secondary",onClick:()=>G(_),style:Js.button,children:M})]})]})]})},Js=ie.StyleSheet.create({buttonContainer:{flexDirection:"row",alignItems:"center"},button:{marginTop:j.xSmall_8,flexGrow:1}});vd.__docgenInfo={description:"",methods:[],displayName:"LockedFiguresSection",props:{figures:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"Array<LockedFigure>"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: Partial<InteractiveGraphEditorProps>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    apiOptions: APIOptionsWithDefaults;

    /**
     * The labels for the x and y axes.
     */
    labels: ReadonlyArray<string>;
    /**
     * Specifies the location of the labels on the graph.  default: "onAxis".
     * - "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
     * - "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
     *    The y label is rotated. Typically used when the range min is near 0 with longer labels.
     */
    labelLocation?: AxisLabelLocation;
    /**
     * The range of the graph in the x and y directions.
     */
    range: [x: Range, y: Range];
    /**
     * Whether the graph is bounded on the x and y axes.
     */
    showAxisArrows: ShowAxisArrows;
    /**
     * How far apart the tick marks on the axes are in the x and y
     * directions.
     */
    step: [x: number, y: number];
    /**
     * How far apart the grid lines are in the x and y directions.
     */
    gridStep: [x: number, y: number];
    /**
     * How far apart the snap-to points are in the x and y directions.
     */
    snapStep: [x: number, y: number];
    /**
     * The size of the graph in pixels.
     */
    box: [x: number, y: number];

    /**
     * An error message to display in the graph area, or true if the
     * graph is valid.
     */
    valid: true | string;
    /**
     * The background image to display in the graph area and its properties.
     */
    backgroundImage: PerseusImageBackground;
    /**
     * The type of markings to display on the graph.
     * - graph: shows the axes and the grid lines
     * - grid: shows only the grid lines
     * - none: shows no markings
     */
    markings: MarkingsType;
    /**
     * Whether to show the protractor on the graph.
     */
    showProtractor: boolean;
    /**
     * Whether to show tooltips on the graph.
     * (Currently not used, but will be in the future.)
     */
    showTooltips: boolean;
    /**
     * The current correct answer for the graph. Updated by this component
     * when the graph is changed.
     *
     * Note that the "Correct answer:" textbox is not an interactive
     * element. Instead, it is a representation of the correct answer based
     * on the state of the interactive graph previewed at the bottom of the
     * editor page.
     */
    // TODO(LEMS-2344): make the type of \`correct\` more specific
    correct: PerseusGraphType;
    /**
     * The locked figures to display in the graph area.
     * Locked figures are graph elements (points, lines, line segmeents,
     * etc.) that are locked in place and not interactive.
     */
    lockedFigures?: Array<LockedFigure>;
    // Aria-label for the full graph area. Short title for the graph.
    fullGraphAriaLabel?: string;
    // Aria-description for the graph area. Longer description of the graph.
    // Note that the \`aria-description\` property is not supported well,
    // so this description will be hidden in a DOM element whose ID will
    // then be referenced by the graph's \`aria-describedby\` property.
    fullGraphAriaDescription?: string;

    /**
     * The graph to display in the graph area.
     */
    graph: InteractiveGraphProps["userInput"];
    onChange: (props: Partial<Props>) => void;
    // Whether the graph has been set to static mode.
    // Graphs in static mode are not interactive, and their coords are
    // set to those of the "correct" graph in the editor.
    static?: boolean;
}`,signature:{properties:[{key:"apiOptions",value:{name:"Readonly",elements:[{name:"intersection",raw:`APIOptions & {
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,elements:[{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},{name:"signature",type:"object",raw:`{
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,signature:{properties:[{key:"baseElements",value:{name:"NonNullable",elements:[{name:'Readonly["baseElements"]',raw:'APIOptions["baseElements"]'}],raw:'NonNullable<APIOptions["baseElements"]>',required:!0}},{key:"canScrollPage",value:{name:"NonNullable",elements:[{name:'Readonly["canScrollPage"]',raw:'APIOptions["canScrollPage"]'}],raw:'NonNullable<APIOptions["canScrollPage"]>',required:!0}},{key:"editorChangeDelay",value:{name:"NonNullable",elements:[{name:'Readonly["editorChangeDelay"]',raw:'APIOptions["editorChangeDelay"]'}],raw:'NonNullable<APIOptions["editorChangeDelay"]>',required:!0}},{key:"groupAnnotator",value:{name:"NonNullable",elements:[{name:'Readonly["groupAnnotator"]',raw:'APIOptions["groupAnnotator"]'}],raw:'NonNullable<APIOptions["groupAnnotator"]>',required:!0}},{key:"isArticle",value:{name:"NonNullable",elements:[{name:'Readonly["isArticle"]',raw:'APIOptions["isArticle"]'}],raw:'NonNullable<APIOptions["isArticle"]>',required:!0}},{key:"isMobile",value:{name:"NonNullable",elements:[{name:'Readonly["isMobile"]',raw:'APIOptions["isMobile"]'}],raw:'NonNullable<APIOptions["isMobile"]>',required:!0}},{key:"isMobileApp",value:{name:"NonNullable",elements:[{name:'Readonly["isMobileApp"]',raw:'APIOptions["isMobileApp"]'}],raw:'NonNullable<APIOptions["isMobileApp"]>',required:!0}},{key:"onFocusChange",value:{name:"NonNullable",elements:[{name:'Readonly["onFocusChange"]',raw:'APIOptions["onFocusChange"]'}],raw:'NonNullable<APIOptions["onFocusChange"]>',required:!0}},{key:"readOnly",value:{name:"NonNullable",elements:[{name:'Readonly["readOnly"]',raw:'APIOptions["readOnly"]'}],raw:'NonNullable<APIOptions["readOnly"]>',required:!0}},{key:"setDrawingAreaAvailable",value:{name:"NonNullable",elements:[{name:'Readonly["setDrawingAreaAvailable"]',raw:'APIOptions["setDrawingAreaAvailable"]'}],raw:`NonNullable<
    APIOptions["setDrawingAreaAvailable"]
>`,required:!0}},{key:"showAlignmentOptions",value:{name:"NonNullable",elements:[{name:'Readonly["showAlignmentOptions"]',raw:'APIOptions["showAlignmentOptions"]'}],raw:'NonNullable<APIOptions["showAlignmentOptions"]>',required:!0}}]}}]}],raw:`Readonly<
    APIOptions & {
        baseElements: NonNullable<APIOptions["baseElements"]>;
        canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
        editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
        groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
        isArticle: NonNullable<APIOptions["isArticle"]>;
        isMobile: NonNullable<APIOptions["isMobile"]>;
        isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
        onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
        readOnly: NonNullable<APIOptions["readOnly"]>;
        setDrawingAreaAvailable: NonNullable<
            APIOptions["setDrawingAreaAvailable"]
        >;
        showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
    }
>`,required:!0}},{key:"labels",value:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",required:!0},description:"The labels for the x and y axes."},{key:"labelLocation",value:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}],required:!1},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`},{key:"range",value:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The range of the graph in the x and y directions."},{key:"showAxisArrows",value:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]},required:!0},description:"Whether the graph is bounded on the x and y axes."},{key:"step",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:`How far apart the tick marks on the axes are in the x and y
directions.`},{key:"gridStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the grid lines are in the x and y directions."},{key:"snapStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the snap-to points are in the x and y directions."},{key:"box",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The size of the graph in pixels."},{key:"valid",value:{name:"union",raw:"true | string",elements:[{name:"literal",value:"true"},{name:"string"}],required:!0},description:`An error message to display in the graph area, or true if the
graph is valid.`},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!0},description:"The background image to display in the graph area and its properties."},{key:"markings",value:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}],required:!0},description:`The type of markings to display on the graph.
- graph: shows the axes and the grid lines
- grid: shows only the grid lines
- none: shows no markings`},{key:"showProtractor",value:{name:"boolean",required:!0},description:"Whether to show the protractor on the graph."},{key:"showTooltips",value:{name:"boolean",required:!0},description:`Whether to show tooltips on the graph.
(Currently not used, but will be in the future.)`},{key:"correct",value:{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}}],required:!0},description:`The current correct answer for the graph. Updated by this component
when the graph is changed.

Note that the "Correct answer:" textbox is not an interactive
element. Instead, it is a representation of the correct answer based
on the state of the interactive graph previewed at the bottom of the
editor page.`},{key:"lockedFigures",value:{name:"Array",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"Array<LockedFigure>",required:!1},description:`The locked figures to display in the graph area.
Locked figures are graph elements (points, lines, line segmeents,
etc.) that are locked in place and not interactive.`},{key:"fullGraphAriaLabel",value:{name:"string",required:!1}},{key:"fullGraphAriaDescription",value:{name:"string",required:!1}},{key:"graph",value:{name:'PropsFor["userInput"]',raw:'InteractiveGraphProps["userInput"]',required:!0},description:"The graph to display in the graph area."},{key:"onChange",value:{name:"signature",type:"function",raw:"(props: Partial<Props>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"Props"}],raw:"Partial<Props>"},name:"props"}],return:{name:"void"}},required:!0}},{key:"static",value:{name:"boolean",required:!1}}]}}],raw:"Partial<InteractiveGraphEditorProps>"},name:"props"}],return:{name:"void"}}},description:""}}};const wg=""+new URL("arrow-counter-clockwise-bold-BmDV9QhN.svg",import.meta.url).href,{getClockwiseAngle:fg}=Wo;function vg(o){if("startCoords"in o)return o.startCoords}function kg(o,l,n){switch(o.type){case"linear":case"ray":return Fu({...o,startCoords:void 0},l,n);case"segment":return Ru({...o,startCoords:void 0},l,n);case"linear-system":return Lu({...o,startCoords:void 0},l,n);case"circle":const i=Nu({...o,startCoords:void 0}),u=Iu(ju(i.radiusPoint,i.center));return{center:i.center,radius:u};case"sinusoid":return Pu({...o,startCoords:void 0},l,n);case"quadratic":return Su({...o,startCoords:void 0},l,n);case"point":return Au({...o,startCoords:void 0},l,n);case"polygon":return Tu({...o,startCoords:void 0},l,n);case"angle":return Cu({graph:{...o,startCoords:void 0},range:l,step:n});default:return}}const xg=o=>{const l=o[0],n=o[1],i=n[1]-l[1],u=Math.PI/(2*(n[0]-l[0])),p=l[0]*u,w=l[1];return"y = "+i.toFixed(3)+"sin("+u.toFixed(3)+"x - "+p.toFixed(3)+") + "+w.toFixed(3)},qg=o=>{const l=o[0],n=o[1],i=o[2],u=(l[0]-n[0])*(l[0]-i[0])*(n[0]-i[0]);if(u===0)return"Division by zero error";const p=(i[0]*(n[1]-l[1])+n[0]*(l[1]-i[1])+l[0]*(i[1]-n[1]))/u,w=(i[0]*i[0]*(l[1]-n[1])+n[0]*n[0]*(i[1]-l[1])+l[0]*l[0]*(n[1]-i[1]))/u,k=(n[0]*i[0]*(n[0]-i[0])*l[1]+i[0]*l[0]*(i[0]-l[0])*n[1]+l[0]*n[0]*(l[0]-n[0])*i[1])/u;return"y = "+p.toFixed(3)+"x^2 + "+w.toFixed(3)+"x + "+k.toFixed(3)},Cg=(o,l=!1)=>{const n=o[1];return`${fg(o,l).toFixed(0)}° angle at (${n[0]}, ${n[1]})`},Tg=(o,l)=>{if(l)return!1;switch(o.type){case"point":return o.numPoints!=="unlimited";case"polygon":return o.numSides!=="unlimited"&&o.snapTo!=="angles"&&o.snapTo!=="sides";case"none":return!1;case"angle":case"circle":case"linear":case"linear-system":case"quadratic":case"ray":case"segment":case"sinusoid":return!0;default:throw new da(o)}},kd=o=>{const{startCoords:l,allowReflexAngles:n,onChange:i}=o;return e.jsxs(e.Fragment,{children:[e.jsxs(Y,{style:Na.equationSection,children:[e.jsx(je,{children:"Starting equation:"}),e.jsx(gi,{style:Na.equationBody,children:Cg(l,n)})]}),e.jsxs(Y,{style:Na.tile,children:[e.jsx(Ne,{children:"Point 1:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:l[0],labels:["x","y"],onChange:u=>i([u,l[1],l[2]])})]}),e.jsxs(Y,{style:Na.tile,children:[e.jsx(Ne,{children:"Vertex:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:l[1],labels:["x","y"],onChange:u=>i([l[0],u,l[2]])})]}),e.jsxs(Y,{style:Na.tile,children:[e.jsx(Ne,{children:"Point 2:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:l[2],labels:["x","y"],onChange:u=>i([l[0],l[1],u])})]})]})},Na=ie.StyleSheet.create({tile:{backgroundColor:me.fadedBlue8,marginTop:j.xSmall_8,padding:j.small_12,borderRadius:j.xSmall_8,flexDirection:"row",alignItems:"center"},equationSection:{marginTop:j.small_12},equationBody:{backgroundColor:me.fadedOffBlack8,border:`1px solid ${me.fadedOffBlack32}`,marginTop:j.xSmall_8,paddingLeft:j.xSmall_8,paddingRight:j.xSmall_8,fontSize:Pt.size.xSmall}});kd.__docgenInfo={description:"",methods:[],displayName:"StartCoordsAngle",props:{startCoords:{required:!0,tsType:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]}]},description:""},allowReflexAngles:{required:!1,tsType:{name:"boolean"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(startCoords: AngleCoords) => void",signature:{arguments:[{type:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]}]},name:"startCoords"}],return:{name:"void"}}},description:""}}};const xd=o=>{const{startCoords:l,onChange:n}=o,[i,u]=F.useState(l.radius.toString());F.useEffect(()=>{u(l.radius.toString())},[l.radius]);function p(w){u(w),!(isNaN(+w)||w===""||+w==0)&&n({center:l.center,radius:parseFloat(w)})}return e.jsxs(Y,{style:Gr.tile,children:[e.jsxs(Y,{style:Gr.row,children:[e.jsx(Ne,{children:"Center:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:l.center,labels:["x","y"],onChange:w=>n({center:w,radius:l.radius})})]}),e.jsx(re,{size:j.small_12}),e.jsxs(Ne,{tag:"label",style:Gr.row,children:["Radius:",e.jsx(re,{size:j.small_12}),e.jsx(rr,{value:i,onChange:p,style:Gr.textField})]})]})},Gr=ie.StyleSheet.create({tile:{backgroundColor:me.fadedBlue8,marginTop:j.xSmall_8,padding:j.small_12,borderRadius:j.xSmall_8},row:{display:"flex",flexDirection:"row",alignItems:"center"},textField:{width:j.xxxLarge_64}});xd.__docgenInfo={description:"",methods:[],displayName:"StartCoordsCircle",props:{startCoords:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"radius",value:{name:"number",required:!0}}]}},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(startCoords: CircleCoords) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"radius",value:{name:"number",required:!0}}]}},name:"startCoords"}],return:{name:"void"}}},description:""}}};const qd=o=>{const{startCoords:l,onChange:n}=o;return e.jsxs(e.Fragment,{children:[e.jsxs(Y,{style:Zs.tile,children:[e.jsx(Ne,{children:"Point 1:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:l[0],labels:["x","y"],onChange:i=>n([i,l[1]])})]}),e.jsxs(Y,{style:Zs.tile,children:[e.jsx(Ne,{children:"Point 2:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:l[1],labels:["x","y"],onChange:i=>n([l[0],i])})]})]})},Zs=ie.StyleSheet.create({tile:{backgroundColor:me.fadedBlue8,marginTop:j.xSmall_8,padding:j.small_12,borderRadius:j.xSmall_8,flexDirection:"row",alignItems:"center"}});qd.__docgenInfo={description:"",methods:[],displayName:"StartCoordsLine",props:{startCoords:{required:!0,tsType:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(startCoords: CollinearTuple) => void",signature:{arguments:[{type:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}]},name:"startCoords"}],return:{name:"void"}}},description:""}}};const Cd=o=>{const{startCoords:l,type:n,onChange:i}=o,u=n==="segment"?"Segment":"Line";return e.jsx(e.Fragment,{children:l.map((p,w)=>e.jsxs(Sn,{header:e.jsx(Ne,{children:`${u} ${w+1}`}),expanded:!0,children:[e.jsxs(Y,{style:Qs.nestedTile,children:[e.jsx(Ne,{children:"Point 1:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:p[0],labels:["x","y"],onChange:k=>{const b=[...l];b[w]=[k,p[1]],i(b)}})]}),e.jsxs(Y,{style:Qs.nestedTile,children:[e.jsx(Ne,{children:"Point 2:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:p[1],labels:["x","y"],onChange:k=>{const b=[...l];b[w]=[p[0],k],i(b)}})]})]},`segment-${w}-start-coords`))})},Qs=ie.StyleSheet.create({nestedTile:{paddingBottom:j.small_12,flexDirection:"row",alignItems:"center"}});Cd.__docgenInfo={description:"",methods:[],displayName:"StartCoordsMultiline",props:{type:{required:!0,tsType:{name:"union",raw:'"linear-system" | "segment"',elements:[{name:"literal",value:'"linear-system"'},{name:"literal",value:'"segment"'}]},description:""},startCoords:{required:!0,tsType:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}]}],raw:"CollinearTuple[]"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(startCoords: CollinearTuple[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}]}],raw:"CollinearTuple[]"},name:"startCoords"}],return:{name:"void"}}},description:""}}};const Td=o=>{const{startCoords:l,onChange:n}=o;return e.jsx(e.Fragment,{children:l.map((i,u)=>e.jsxs(Y,{style:Ag.tile,children:[e.jsx(Ne,{children:`Point ${u+1}:`}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:i,labels:["x","y"],onChange:p=>{const w=[...l];w[u]=p,n(w)}})]},u))})},Ag=ie.StyleSheet.create({tile:{backgroundColor:me.fadedBlue8,marginTop:j.xSmall_8,padding:j.small_12,borderRadius:j.xSmall_8,flexDirection:"row",alignItems:"center"}});Td.__docgenInfo={description:"",methods:[],displayName:"StartCoordsPoint",props:{startCoords:{required:!0,tsType:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]}],raw:"Coord[]"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(startCoords: Coord[]) => void",signature:{arguments:[{type:{name:"Array",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]}],raw:"Coord[]"},name:"startCoords"}],return:{name:"void"}}},description:""}}};const Ad=o=>{const{startCoords:l,onChange:n}=o;return e.jsxs(e.Fragment,{children:[e.jsxs(Y,{style:Ia.equationSection,children:[e.jsx(je,{children:"Starting equation:"}),e.jsx(gi,{style:Ia.equationBody,children:qg(l)})]}),e.jsxs(Y,{style:Ia.tile,children:[e.jsx(Ne,{children:"Point 1:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:l[0],labels:["x","y"],onChange:i=>n([i,l[1],l[2]])})]}),e.jsxs(Y,{style:Ia.tile,children:[e.jsx(Ne,{children:"Point 2:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:l[1],labels:["x","y"],onChange:i=>n([l[0],i,l[2]])})]}),e.jsxs(Y,{style:Ia.tile,children:[e.jsx(Ne,{children:"Point 3:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:l[2],labels:["x","y"],onChange:i=>n([l[0],l[1],i])})]})]})},Ia=ie.StyleSheet.create({tile:{backgroundColor:me.fadedBlue8,marginTop:j.xSmall_8,padding:j.small_12,borderRadius:j.xSmall_8,flexDirection:"row",alignItems:"center"},equationSection:{marginTop:j.small_12},equationBody:{backgroundColor:me.fadedOffBlack8,border:`1px solid ${me.fadedOffBlack32}`,marginTop:j.xSmall_8,paddingLeft:j.xSmall_8,paddingRight:j.xSmall_8,fontSize:Pt.size.xSmall}});Ad.__docgenInfo={description:"",methods:[],displayName:"StartCoordsQuadratic",props:{startCoords:{required:!0,tsType:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(startCoords: [Coord, Coord, Coord]) => void",signature:{arguments:[{type:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]}]},name:"startCoords"}],return:{name:"void"}}},description:""}}};const Sd=o=>{const{startCoords:l,onChange:n}=o;return e.jsxs(e.Fragment,{children:[e.jsxs(Y,{style:Hr.equationSection,children:[e.jsx(je,{children:"Starting equation:"}),e.jsx(gi,{style:Hr.equationBody,children:xg(l)})]}),e.jsxs(Y,{style:Hr.tile,children:[e.jsx(Ne,{children:"Point 1:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:l[0],labels:["x","y"],onChange:i=>n([i,l[1]])})]}),e.jsxs(Y,{style:Hr.tile,children:[e.jsx(Ne,{children:"Point 2:"}),e.jsx(re,{size:j.small_12}),e.jsx(Qe,{coord:l[1],labels:["x","y"],onChange:i=>n([l[0],i])})]})]})},Hr=ie.StyleSheet.create({tile:{backgroundColor:me.fadedBlue8,marginTop:j.xSmall_8,padding:j.small_12,borderRadius:j.xSmall_8,flexDirection:"row",alignItems:"center"},equationSection:{marginTop:j.small_12},equationBody:{backgroundColor:me.fadedOffBlack8,border:`1px solid ${me.fadedOffBlack32}`,marginTop:j.xSmall_8,paddingLeft:j.xSmall_8,paddingRight:j.xSmall_8,fontSize:Pt.size.xSmall}});Sd.__docgenInfo={description:"",methods:[],displayName:"StartCoordsSinusoid",props:{startCoords:{required:!0,tsType:{name:"tuple",raw:"[Coord, Coord]",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(startCoords: SinusoidCoords) => void",signature:{arguments:[{type:{name:"tuple",raw:"[Coord, Coord]",elements:[{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]}]},name:"startCoords"}],return:{name:"void"}}},description:""}}};const Sg=o=>{const{type:l,range:n,step:i,allowReflexAngles:u,onChange:p}=o;switch(l){case"linear":case"ray":const w=Fu(o,n,i);return e.jsx(qd,{startCoords:w,onChange:p});case"linear-system":case"segment":const k=l==="segment"?Ru(o,n,i):Lu(o,n,i);return e.jsx(Cd,{type:l,startCoords:k,onChange:p});case"circle":const b=Nu(o),N=Iu(ju(b.radiusPoint,b.center));return e.jsx(xd,{startCoords:{center:b.center,radius:N},onChange:p});case"sinusoid":const O=Pu(o,n,i);return e.jsx(Sd,{startCoords:O,onChange:p});case"quadratic":const B=Su(o,n,i);return e.jsx(Ad,{startCoords:B,onChange:p});case"point":case"polygon":const V=l==="point"?Au(o,n,i):Tu(o,n,i);return e.jsx(Td,{startCoords:V,onChange:p});case"angle":const G=Cu({graph:o,range:n,step:i});return e.jsx(kd,{startCoords:G,allowReflexAngles:u,onChange:p});default:return null}},Pd=o=>{const{range:l,step:n,onChange:i}=o,[u,p]=F.useState(!0);return e.jsxs(Y,{children:[e.jsx(dt,{isCollapsible:!0,title:"Start coordinates",isOpen:u,onToggle:()=>p(!u)}),u&&e.jsxs(e.Fragment,{children:[e.jsx(Sg,{...o}),e.jsx(re,{size:j.small_12}),e.jsx(Ue,{startIcon:wg,kind:"tertiary",size:"small",onClick:()=>{i(kg(o,l,n))},children:"Use default start coordinates"})]})]})};Pd.__docgenInfo={description:"",methods:[],displayName:"StartCoordsSettings",props:{range:{required:!0,tsType:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},step:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},allowReflexAngles:{required:!1,tsType:{name:"boolean"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(startCoords: StartCoords) => void",signature:{arguments:[{type:{name:'Extract["startCoords"]',raw:`Extract<
    PerseusGraphType,
    GraphTypesThatHaveStartCoords
>["startCoords"]`},name:"startCoords"}],return:{name:"void"}}},description:""}}};const To=rp.widget;class di extends F.Component{constructor(){super(...arguments);x(this,"displayName","InteractiveGraphEditor");x(this,"className","perseus-widget-interactive-graph");x(this,"changeStartCoords",n=>{var u;if(!((u=this.props.graph)!=null&&u.type))return;const i={...this.props.graph,startCoords:n};this.props.onChange({graph:i})});x(this,"getSaveWarnings",()=>{var i;const n=[];for(const u of this.props.lockedFigures??[])u.type==="line"&&Go(u.points[0].coord,u.points[1].coord)&&n.push("The line cannot have length 0.");return((i=this.props.graph)==null?void 0:i.type)==="polygon"&&this.props.graph.numSides==="unlimited"&&this.props.graph.coords===null&&n.push("Polygon must be closed."),n})}serialize(){const n=R.pick(this.props,"step","backgroundImage","markings","labels","labelLocation","showProtractor","showTooltips","range","showAxisArrows","gridStep","snapStep","lockedFigures","fullGraphAriaLabel","fullGraphAriaDescription"),i=this.refs.graph;if(i){const u=i&&i.getUserInput();R.extend(n,{graph:{type:u.type,startCoords:this.props.graph&&vg(this.props.graph)},correct:u}),R.each(["allowReflexAngles","angleOffsetDeg","numPoints","numSides","numSegments","showAngles","showSides","snapTo","snapDegrees"],function(p){R.has(u,p)&&(n.graph[p]=u[p])})}return n}render(){let n,i;const u=this.props.gridStep||Fe.getGridStep(this.props.range,this.props.step,er.defaultBoxSize),p=this.props.snapStep||Fe.snapStepFromGridStep(u),w=bu.SMALL;if(this.props.valid===!0){const k=this.props.correct,b={ref:"graph",box:this.props.box,range:this.props.range,showAxisArrows:this.props.showAxisArrows,labels:this.props.labels,labelLocation:this.props.labelLocation,step:this.props.step,gridStep:u,snapStep:p,backgroundImage:this.props.backgroundImage,markings:this.props.markings,showProtractor:this.props.showProtractor,showTooltips:this.props.showTooltips,lockedFigures:this.props.lockedFigures,fullGraphAriaLabel:this.props.fullGraphAriaLabel,fullGraphAriaDescription:this.props.fullGraphAriaDescription,trackInteraction:function(){},userInput:k,handleUserInput:N=>{let O=this.props.correct;tn(N!=null),O.type===N.type?O=Pg(O,N):O=N,this.props.onChange({correct:O,graph:this.props.graph})}};n=e.jsx(To,{...b,containerSizeClass:w,apiOptions:{...this.props.apiOptions,isMobile:!1}}),i=To.getEquationString(b)}else n=e.jsx("div",{className:"perseus-error",children:this.props.valid});return e.jsx(nr,{children:k=>{var b,N,O,B,V,G;return e.jsxs(Y,{children:[e.jsx(dn,{label:"Answer type:",children:e.jsx(ed,{graphType:((b=this.props.graph)==null?void 0:b.type)??To.defaultProps.userInput.type,onChange:_=>{this.props.onChange({graph:{type:_},correct:{type:_}})}})}),e.jsx(td,{ariaLabelValue:this.props.fullGraphAriaLabel??"",ariaDescriptionValue:this.props.fullGraphAriaDescription??"",onChange:this.props.onChange}),e.jsx(nd,{id:k,equationString:i,children:n}),((N=this.props.correct)==null?void 0:N.type)==="angle"&&e.jsx(Ju,{correct:this.props.correct,graph:this.props.graph,onChange:this.props.onChange}),((O=this.props.correct)==null?void 0:O.type)==="point"&&e.jsx(Qu,{correct:this.props.correct,graph:this.props.graph,onChange:this.props.onChange}),((B=this.props.correct)==null?void 0:B.type)==="polygon"&&e.jsx(id,{correct:this.props.correct,graph:this.props.graph,onChange:this.props.onChange}),((V=this.props.correct)==null?void 0:V.type)==="segment"&&e.jsx(od,{correct:this.props.correct,graph:this.props.graph,onChange:this.props.onChange}),((G=this.props.graph)==null?void 0:G.type)&&Tg(this.props.graph,this.props.static)&&e.jsx(Pd,{...this.props.graph,range:this.props.range,step:this.props.step,onChange:this.changeStartCoords}),e.jsx(rd,{graphId:k,correct:this.props.correct,fullGraphAriaLabel:this.props.fullGraphAriaLabel,fullGraphAriaDescription:this.props.fullGraphAriaDescription,lockedFigures:this.props.lockedFigures}),e.jsx(si,{box:yu(w),range:this.props.range,showAxisArrows:this.props.showAxisArrows,labels:this.props.labels,labelLocation:this.props.labelLocation,step:this.props.step,gridStep:u,snapStep:p,valid:this.props.valid,backgroundImage:this.props.backgroundImage,markings:this.props.markings,showProtractor:this.props.showProtractor,showTooltips:this.props.showTooltips,onChange:this.props.onChange}),e.jsx(vd,{figures:this.props.lockedFigures,onChange:this.props.onChange})]})}})}}x(di,"widgetName","interactive-graph"),x(di,"defaultProps",{...ap.defaultWidgetOptions,valid:!0,lockedFigures:[]});function Pg(o,l){if(o.type!==l.type)throw new Error(`Cannot merge graphs with different types (${o.type} and ${l.type})`);switch(o.type){case"angle":return tn(l.type==="angle"),{...o,...l};case"circle":return tn(l.type==="circle"),{...o,...l};case"linear":return tn(l.type==="linear"),{...o,...l};case"linear-system":return tn(l.type==="linear-system"),{...o,...l};case"none":return tn(l.type==="none"),{...o,...l};case"point":return tn(l.type==="point"),{...o,...l};case"polygon":return tn(l.type==="polygon"),{...o,...l};case"quadratic":return tn(l.type==="quadratic"),{...o,...l};case"ray":return tn(l.type==="ray"),{...o,...l};case"segment":return tn(l.type==="segment"),{...o,...l};case"sinusoid":return tn(l.type==="sinusoid"),{...o,...l};default:throw new da(o)}}di.__docgenInfo={description:`An editor for the InteractiveGraph widget, which allows the user to
specify the graph's properties and the correct answer.

Used in the exercise editor.`,methods:[{name:"changeStartCoords",docblock:null,modifiers:[],params:[{name:"coords",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:{type:{name:"signature",type:"object",raw:`{
    // Where the little black axis lines & labels (ticks) should render.
    // Also known as the tick step. default [1, 1]
    // NOTE(kevinb): perseus_data.go defines this as Array<number>
    step: [number, number];
    // Where the grid lines on the graph will render. default [1, 1]
    // NOTE(kevinb): perseus_data.go defines this as Array<number>
    gridStep?: [x: number, y: number];
    // Where the graph points will lock to when they are dragged. default [0.5, 0.5]
    // NOTE(kevinb): perseus_data.go defines this as Array<number>
    snapStep?: [x: number, y: number];
    // An optional image to use in the background
    backgroundImage?: PerseusImageBackground;
    /**
     * The type of markings to display on the graph.
     */
    markings: MarkingsType;
    // How to label the X and Y axis.  default: ["x", "y"]
    labels?: string[];
    /**
     * Specifies the location of the labels on the graph.  default: "onAxis".
     * - "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
     * - "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
     *    The y label is rotated. Typically used when the range min is near 0 with longer labels.
     */
    labelLocation?: AxisLabelLocation;
    // Which sides of the graph are bounded (removed axis arrows).
    showAxisArrows: ShowAxisArrows;
    // Whether to show the Protractor tool overlayed on top of the graph
    showProtractor: boolean;
    /**
     * Whether to show the Ruler tool overlayed on top of the graph.
     * @deprecated - no longer used by the InteractiveGraph widget. The
     * property is kept on this type to prevent its accidental reuse in future
     * features, since it may appear in production data.
     */
    showRuler?: boolean;
    // Whether to show tooltips on the graph
    showTooltips?: boolean;
    /**
     * The unit to show on the ruler.  e.g. "mm", "cm",  "m", "km", "in", "ft",
     * "yd", "mi".
     * @deprecated - no longer used by the InteractiveGraph widget. The
     * property is kept on this type to prevent its accidental reuse in future
     * features, since it may appear in production data.
     */
    rulerLabel?: string;
    /**
     * How many ticks to show on the ruler.  e.g. 1, 2, 4, 8, 10, 16. Must be
     * an integer.
     * @deprecated - no longer used by the InteractiveGraph widget. The
     * property is kept on this type to prevent its accidental reuse in future
     * features, since it may appear in production data.
     */
    rulerTicks?: number;
    // The X and Y coordinate ranges for the view of the graph.  default: [[-10, 10], [-10, 10]]
    // NOTE(kevinb): perseus_data.go defines this as Array<Array<number>>
    // TODO(kevinb): Add a transform function to interactive-graph.jsx to
    // rename \`range\` to \`ranges\` so that things are less confusing.
    range: GraphRange;
    // The type of graph
    graph: PerseusGraphType;
    // The correct kind of graph, if being used to select function type
    // TODO(LEMS-2344): make the type of \`correct\` more specific
    correct: PerseusGraphType;
    // Shapes (points, chords, etc) displayed on the graph that cannot
    // be moved by the user.
    lockedFigures: LockedFigure[];
    // Aria label that applies to the entire graph.
    fullGraphAriaLabel?: string;
    // Aria description that applies to the entire graph.
    fullGraphAriaDescription?: string;
}`,signature:{properties:[{key:"step",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"gridStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"snapStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!1}},{key:"markings",value:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}],required:!0},description:"The type of markings to display on the graph."},{key:"labels",value:{name:"Array",elements:[{name:"string"}],raw:"string[]",required:!1}},{key:"labelLocation",value:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}],required:!1},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`},{key:"showAxisArrows",value:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]},required:!0}},{key:"showProtractor",value:{name:"boolean",required:!0}},{key:"showRuler",value:{name:"boolean",required:!1},description:`Whether to show the Ruler tool overlayed on top of the graph.
@deprecated - no longer used by the InteractiveGraph widget. The
property is kept on this type to prevent its accidental reuse in future
features, since it may appear in production data.`},{key:"showTooltips",value:{name:"boolean",required:!1}},{key:"rulerLabel",value:{name:"string",required:!1},description:`The unit to show on the ruler.  e.g. "mm", "cm",  "m", "km", "in", "ft",
"yd", "mi".
@deprecated - no longer used by the InteractiveGraph widget. The
property is kept on this type to prevent its accidental reuse in future
features, since it may appear in production data.`},{key:"rulerTicks",value:{name:"number",required:!1},description:`How many ticks to show on the ruler.  e.g. 1, 2, 4, 8, 10, 16. Must be
an integer.
@deprecated - no longer used by the InteractiveGraph widget. The
property is kept on this type to prevent its accidental reuse in future
features, since it may appear in production data.`},{key:"range",value:{name:"tuple",raw:`[
    x: [min: number, max: number],
    y: [min: number, max: number],
]`,elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"graph",value:{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}}],required:!0}},{key:"correct",value:{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}}],required:!0}},{key:"lockedFigures",value:{name:"Array",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"LockedFigure[]",required:!0}},{key:"fullGraphAriaLabel",value:{name:"string",required:!1}},{key:"fullGraphAriaDescription",value:{name:"string",required:!1}}]}}}},{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:null}],displayName:"InteractiveGraphEditor",props:{apiOptions:{required:!0,tsType:{name:"Readonly",elements:[{name:"intersection",raw:`APIOptions & {
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,elements:[{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},{name:"signature",type:"object",raw:`{
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,signature:{properties:[{key:"baseElements",value:{name:"NonNullable",elements:[{name:'Readonly["baseElements"]',raw:'APIOptions["baseElements"]'}],raw:'NonNullable<APIOptions["baseElements"]>',required:!0}},{key:"canScrollPage",value:{name:"NonNullable",elements:[{name:'Readonly["canScrollPage"]',raw:'APIOptions["canScrollPage"]'}],raw:'NonNullable<APIOptions["canScrollPage"]>',required:!0}},{key:"editorChangeDelay",value:{name:"NonNullable",elements:[{name:'Readonly["editorChangeDelay"]',raw:'APIOptions["editorChangeDelay"]'}],raw:'NonNullable<APIOptions["editorChangeDelay"]>',required:!0}},{key:"groupAnnotator",value:{name:"NonNullable",elements:[{name:'Readonly["groupAnnotator"]',raw:'APIOptions["groupAnnotator"]'}],raw:'NonNullable<APIOptions["groupAnnotator"]>',required:!0}},{key:"isArticle",value:{name:"NonNullable",elements:[{name:'Readonly["isArticle"]',raw:'APIOptions["isArticle"]'}],raw:'NonNullable<APIOptions["isArticle"]>',required:!0}},{key:"isMobile",value:{name:"NonNullable",elements:[{name:'Readonly["isMobile"]',raw:'APIOptions["isMobile"]'}],raw:'NonNullable<APIOptions["isMobile"]>',required:!0}},{key:"isMobileApp",value:{name:"NonNullable",elements:[{name:'Readonly["isMobileApp"]',raw:'APIOptions["isMobileApp"]'}],raw:'NonNullable<APIOptions["isMobileApp"]>',required:!0}},{key:"onFocusChange",value:{name:"NonNullable",elements:[{name:'Readonly["onFocusChange"]',raw:'APIOptions["onFocusChange"]'}],raw:'NonNullable<APIOptions["onFocusChange"]>',required:!0}},{key:"readOnly",value:{name:"NonNullable",elements:[{name:'Readonly["readOnly"]',raw:'APIOptions["readOnly"]'}],raw:'NonNullable<APIOptions["readOnly"]>',required:!0}},{key:"setDrawingAreaAvailable",value:{name:"NonNullable",elements:[{name:'Readonly["setDrawingAreaAvailable"]',raw:'APIOptions["setDrawingAreaAvailable"]'}],raw:`NonNullable<
    APIOptions["setDrawingAreaAvailable"]
>`,required:!0}},{key:"showAlignmentOptions",value:{name:"NonNullable",elements:[{name:'Readonly["showAlignmentOptions"]',raw:'APIOptions["showAlignmentOptions"]'}],raw:'NonNullable<APIOptions["showAlignmentOptions"]>',required:!0}}]}}]}],raw:`Readonly<
    APIOptions & {
        baseElements: NonNullable<APIOptions["baseElements"]>;
        canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
        editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
        groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
        isArticle: NonNullable<APIOptions["isArticle"]>;
        isMobile: NonNullable<APIOptions["isMobile"]>;
        isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
        onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
        readOnly: NonNullable<APIOptions["readOnly"]>;
        setDrawingAreaAvailable: NonNullable<
            APIOptions["setDrawingAreaAvailable"]
        >;
        showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
    }
>`},description:""},labels:{required:!1,tsType:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},description:"The labels for the x and y axes.",defaultValue:{value:'["x", "y"]',computed:!1}},labelLocation:{required:!1,tsType:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}]},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`,defaultValue:{value:'"onAxis"',computed:!1}},range:{required:!1,tsType:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}]},description:"The range of the graph in the x and y directions.",defaultValue:{value:`[
    [-10, 10],
    [-10, 10],
]`,computed:!1}},showAxisArrows:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]}},description:"Whether the graph is bounded on the x and y axes."},step:{required:!1,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:`How far apart the tick marks on the axes are in the x and y
directions.`,defaultValue:{value:"[1, 1]",computed:!1}},gridStep:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:"How far apart the grid lines are in the x and y directions."},snapStep:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:"How far apart the snap-to points are in the x and y directions."},box:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:"The size of the graph in pixels."},valid:{required:!1,tsType:{name:"union",raw:"true | string",elements:[{name:"literal",value:"true"},{name:"string"}]},description:`An error message to display in the graph area, or true if the
graph is valid.`,defaultValue:{value:"true",computed:!1}},backgroundImage:{required:!1,tsType:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]}},description:"The background image to display in the graph area and its properties.",defaultValue:{value:`{
    url: null,
}`,computed:!1}},markings:{required:!1,tsType:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}]},description:`The type of markings to display on the graph.
- graph: shows the axes and the grid lines
- grid: shows only the grid lines
- none: shows no markings`,defaultValue:{value:'"graph"',computed:!1}},showProtractor:{required:!1,tsType:{name:"boolean"},description:"Whether to show the protractor on the graph.",defaultValue:{value:"false",computed:!1}},showTooltips:{required:!1,tsType:{name:"boolean"},description:`Whether to show tooltips on the graph.
(Currently not used, but will be in the future.)`,defaultValue:{value:"false",computed:!1}},correct:{required:!1,tsType:{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!1}],raw:"Coord[]",required:!1}}]}}]},description:`The current correct answer for the graph. Updated by this component
when the graph is changed.

Note that the "Correct answer:" textbox is not an interactive
element. Instead, it is a representation of the correct answer based
on the state of the interactive graph previewed at the bottom of the
editor page.`,defaultValue:{value:`{
    type: "linear",
    coords: null,
}`,computed:!1}},lockedFigures:{required:!1,tsType:{name:"Array",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"Array<LockedFigure>"},description:`The locked figures to display in the graph area.
Locked figures are graph elements (points, lines, line segmeents,
etc.) that are locked in place and not interactive.`,defaultValue:{value:"[]",computed:!1}},fullGraphAriaLabel:{required:!1,tsType:{name:"string"},description:""},fullGraphAriaDescription:{required:!1,tsType:{name:"string"},description:""},graph:{required:!1,tsType:{name:'PropsFor["userInput"]',raw:'InteractiveGraphProps["userInput"]'},description:"The graph to display in the graph area.",defaultValue:{value:`{
    type: "linear",
}`,computed:!1}},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: Partial<Props>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    apiOptions: APIOptionsWithDefaults;

    /**
     * The labels for the x and y axes.
     */
    labels: ReadonlyArray<string>;
    /**
     * Specifies the location of the labels on the graph.  default: "onAxis".
     * - "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
     * - "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
     *    The y label is rotated. Typically used when the range min is near 0 with longer labels.
     */
    labelLocation?: AxisLabelLocation;
    /**
     * The range of the graph in the x and y directions.
     */
    range: [x: Range, y: Range];
    /**
     * Whether the graph is bounded on the x and y axes.
     */
    showAxisArrows: ShowAxisArrows;
    /**
     * How far apart the tick marks on the axes are in the x and y
     * directions.
     */
    step: [x: number, y: number];
    /**
     * How far apart the grid lines are in the x and y directions.
     */
    gridStep: [x: number, y: number];
    /**
     * How far apart the snap-to points are in the x and y directions.
     */
    snapStep: [x: number, y: number];
    /**
     * The size of the graph in pixels.
     */
    box: [x: number, y: number];

    /**
     * An error message to display in the graph area, or true if the
     * graph is valid.
     */
    valid: true | string;
    /**
     * The background image to display in the graph area and its properties.
     */
    backgroundImage: PerseusImageBackground;
    /**
     * The type of markings to display on the graph.
     * - graph: shows the axes and the grid lines
     * - grid: shows only the grid lines
     * - none: shows no markings
     */
    markings: MarkingsType;
    /**
     * Whether to show the protractor on the graph.
     */
    showProtractor: boolean;
    /**
     * Whether to show tooltips on the graph.
     * (Currently not used, but will be in the future.)
     */
    showTooltips: boolean;
    /**
     * The current correct answer for the graph. Updated by this component
     * when the graph is changed.
     *
     * Note that the "Correct answer:" textbox is not an interactive
     * element. Instead, it is a representation of the correct answer based
     * on the state of the interactive graph previewed at the bottom of the
     * editor page.
     */
    // TODO(LEMS-2344): make the type of \`correct\` more specific
    correct: PerseusGraphType;
    /**
     * The locked figures to display in the graph area.
     * Locked figures are graph elements (points, lines, line segmeents,
     * etc.) that are locked in place and not interactive.
     */
    lockedFigures?: Array<LockedFigure>;
    // Aria-label for the full graph area. Short title for the graph.
    fullGraphAriaLabel?: string;
    // Aria-description for the graph area. Longer description of the graph.
    // Note that the \`aria-description\` property is not supported well,
    // so this description will be hidden in a DOM element whose ID will
    // then be referenced by the graph's \`aria-describedby\` property.
    fullGraphAriaDescription?: string;

    /**
     * The graph to display in the graph area.
     */
    graph: InteractiveGraphProps["userInput"];
    onChange: (props: Partial<Props>) => void;
    // Whether the graph has been set to static mode.
    // Graphs in static mode are not interactive, and their coords are
    // set to those of the "correct" graph in the editor.
    static?: boolean;
}`,signature:{properties:[{key:"apiOptions",value:{name:"Readonly",elements:[{name:"intersection",raw:`APIOptions & {
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,elements:[{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},{name:"signature",type:"object",raw:`{
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,signature:{properties:[{key:"baseElements",value:{name:"NonNullable",elements:[{name:'Readonly["baseElements"]',raw:'APIOptions["baseElements"]'}],raw:'NonNullable<APIOptions["baseElements"]>',required:!0}},{key:"canScrollPage",value:{name:"NonNullable",elements:[{name:'Readonly["canScrollPage"]',raw:'APIOptions["canScrollPage"]'}],raw:'NonNullable<APIOptions["canScrollPage"]>',required:!0}},{key:"editorChangeDelay",value:{name:"NonNullable",elements:[{name:'Readonly["editorChangeDelay"]',raw:'APIOptions["editorChangeDelay"]'}],raw:'NonNullable<APIOptions["editorChangeDelay"]>',required:!0}},{key:"groupAnnotator",value:{name:"NonNullable",elements:[{name:'Readonly["groupAnnotator"]',raw:'APIOptions["groupAnnotator"]'}],raw:'NonNullable<APIOptions["groupAnnotator"]>',required:!0}},{key:"isArticle",value:{name:"NonNullable",elements:[{name:'Readonly["isArticle"]',raw:'APIOptions["isArticle"]'}],raw:'NonNullable<APIOptions["isArticle"]>',required:!0}},{key:"isMobile",value:{name:"NonNullable",elements:[{name:'Readonly["isMobile"]',raw:'APIOptions["isMobile"]'}],raw:'NonNullable<APIOptions["isMobile"]>',required:!0}},{key:"isMobileApp",value:{name:"NonNullable",elements:[{name:'Readonly["isMobileApp"]',raw:'APIOptions["isMobileApp"]'}],raw:'NonNullable<APIOptions["isMobileApp"]>',required:!0}},{key:"onFocusChange",value:{name:"NonNullable",elements:[{name:'Readonly["onFocusChange"]',raw:'APIOptions["onFocusChange"]'}],raw:'NonNullable<APIOptions["onFocusChange"]>',required:!0}},{key:"readOnly",value:{name:"NonNullable",elements:[{name:'Readonly["readOnly"]',raw:'APIOptions["readOnly"]'}],raw:'NonNullable<APIOptions["readOnly"]>',required:!0}},{key:"setDrawingAreaAvailable",value:{name:"NonNullable",elements:[{name:'Readonly["setDrawingAreaAvailable"]',raw:'APIOptions["setDrawingAreaAvailable"]'}],raw:`NonNullable<
    APIOptions["setDrawingAreaAvailable"]
>`,required:!0}},{key:"showAlignmentOptions",value:{name:"NonNullable",elements:[{name:'Readonly["showAlignmentOptions"]',raw:'APIOptions["showAlignmentOptions"]'}],raw:'NonNullable<APIOptions["showAlignmentOptions"]>',required:!0}}]}}]}],raw:`Readonly<
    APIOptions & {
        baseElements: NonNullable<APIOptions["baseElements"]>;
        canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
        editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
        groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
        isArticle: NonNullable<APIOptions["isArticle"]>;
        isMobile: NonNullable<APIOptions["isMobile"]>;
        isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
        onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
        readOnly: NonNullable<APIOptions["readOnly"]>;
        setDrawingAreaAvailable: NonNullable<
            APIOptions["setDrawingAreaAvailable"]
        >;
        showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
    }
>`,required:!0}},{key:"labels",value:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",required:!0},description:"The labels for the x and y axes."},{key:"labelLocation",value:{name:"union",raw:'"onAxis" | "alongEdge"',elements:[{name:"literal",value:'"onAxis"'},{name:"literal",value:'"alongEdge"'}],required:!1},description:`Specifies the location of the labels on the graph.  default: "onAxis".
- "onAxis": Labels are positioned on the axis at the right (x) and top (y) of the graph.
- "alongEdge": Labels are centered along the bottom (x) and left (y) edges of the graph.
   The y label is rotated. Typically used when the range min is near 0 with longer labels.`},{key:"range",value:{name:"tuple",raw:"[x: Range, y: Range]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The range of the graph in the x and y directions."},{key:"showAxisArrows",value:{name:"signature",type:"object",raw:`{
    xMin: boolean;
    xMax: boolean;
    yMin: boolean;
    yMax: boolean;
}`,signature:{properties:[{key:"xMin",value:{name:"boolean",required:!0}},{key:"xMax",value:{name:"boolean",required:!0}},{key:"yMin",value:{name:"boolean",required:!0}},{key:"yMax",value:{name:"boolean",required:!0}}]},required:!0},description:"Whether the graph is bounded on the x and y axes."},{key:"step",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:`How far apart the tick marks on the axes are in the x and y
directions.`},{key:"gridStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the grid lines are in the x and y directions."},{key:"snapStep",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"How far apart the snap-to points are in the x and y directions."},{key:"box",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The size of the graph in pixels."},{key:"valid",value:{name:"union",raw:"true | string",elements:[{name:"literal",value:"true"},{name:"string"}],required:!0},description:`An error message to display in the graph area, or true if the
graph is valid.`},{key:"backgroundImage",value:{name:"signature",type:"object",raw:`{
    // The URL of the image
    url?: string | null;
    // The width of the image
    width?: number;
    // The height of the image
    height?: number;
    // The top offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    top?: number;
    // The left offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    left?: number;
    // The scale of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    scale?: number;
    // The bottom offset of the image
    // NOTE: perseus_data.go says this is required, but nullable, even though
    // it isn't necessary at all.
    bottom?: number;
}`,signature:{properties:[{key:"url",value:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}],required:!1}},{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}},{key:"top",value:{name:"number",required:!1}},{key:"left",value:{name:"number",required:!1}},{key:"scale",value:{name:"number",required:!1}},{key:"bottom",value:{name:"number",required:!1}}]},required:!0},description:"The background image to display in the graph area and its properties."},{key:"markings",value:{name:"union",raw:'"axes" | "graph" | "grid" | "none"',elements:[{name:"literal",value:'"axes"'},{name:"literal",value:'"graph"'},{name:"literal",value:'"grid"'},{name:"literal",value:'"none"'}],required:!0},description:`The type of markings to display on the graph.
- graph: shows the axes and the grid lines
- grid: shows only the grid lines
- none: shows no markings`},{key:"showProtractor",value:{name:"boolean",required:!0},description:"Whether to show the protractor on the graph."},{key:"showTooltips",value:{name:"boolean",required:!0},description:`Whether to show tooltips on the graph.
(Currently not used, but will be in the future.)`},{key:"correct",value:{name:"union",raw:`| PerseusGraphTypeAngle
| PerseusGraphTypeCircle
| PerseusGraphTypeLinear
| PerseusGraphTypeLinearSystem
| PerseusGraphTypeNone
| PerseusGraphTypePoint
| PerseusGraphTypePolygon
| PerseusGraphTypeQuadratic
| PerseusGraphTypeRay
| PerseusGraphTypeSegment
| PerseusGraphTypeSinusoid`,elements:[{name:"signature",type:"object",raw:`{
    type: "angle";
    // Whether to show the angle measurements.  default: false
    showAngles?: boolean;
    // Allow Reflex Angles if an "angle" type.  default: true
    allowReflexAngles?: boolean;
    // The angle offset in degrees if an "angle" type. default: 0
    angleOffsetDeg?: number;
    // Snap to degree increments if an "angle" type. default: 1
    snapDegrees?: number;
    // How to match the answer. If missing, defaults to exact matching.
    match?: "congruent";
    // must have 3 coords - ie [Coord, Coord, Coord]
    coords?: [Coord, Coord, Coord];
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"angle"',required:!0}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"allowReflexAngles",value:{name:"boolean",required:!1}},{key:"angleOffsetDeg",value:{name:"number",required:!1}},{key:"snapDegrees",value:{name:"number",required:!1}},{key:"match",value:{name:"literal",value:'"congruent"',required:!1}},{key:"coords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "circle";
    center?: Coord;
    radius?: number;
    // The initial coordinates the graph renders with.
    startCoords?: {
        center: Coord;
        radius: number;
    };
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"circle"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!1}},{key:"startCoords",value:{name:"signature",type:"object",raw:`{
    center: Coord;
    radius: number;
}`,signature:{properties:[{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"number",required:!0}}]},required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear";
    // expects 2 coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "linear-system";
    // expects 2 sets of 2 coords
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"linear-system"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "none";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"none"',required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "point";
    // The number of points if a "point" type.  default: 1.  "unlimited" if no limit
    numPoints?: number | "unlimited";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
    // Used instead of \`coords\` in some old graphs that have only one point.
    coord?: Coord;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"numPoints",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    // The number of sides.  default: 3. "unlimited" if no limit
    numSides?: number | "unlimited";
    // Whether to the angle measurements.  default: false
    showAngles?: boolean;
    // Whether to show side measurements. default: false
    showSides?: boolean;
    // How to snap points.  e.g. "grid", "angles", or "sides". default: grid
    snapTo?: "grid" | "angles" | "sides";
    // How to match the answer. If missing, defaults to exact matching.
    match?: "similar" | "congruent" | "approx" | "exact";
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"numSides",value:{name:"union",raw:'number | "unlimited"',elements:[{name:"number"},{name:"literal",value:'"unlimited"'}],required:!1}},{key:"showAngles",value:{name:"boolean",required:!1}},{key:"showSides",value:{name:"boolean",required:!1}},{key:"snapTo",value:{name:"union",raw:'"grid" | "angles" | "sides"',elements:[{name:"literal",value:'"grid"'},{name:"literal",value:'"angles"'},{name:"literal",value:'"sides"'}],required:!1}},{key:"match",value:{name:"union",raw:'"similar" | "congruent" | "approx" | "exact"',elements:[{name:"literal",value:'"similar"'},{name:"literal",value:'"congruent"'},{name:"literal",value:'"approx"'},{name:"literal",value:'"exact"'}],required:!1}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "quadratic";
    // expects a list of 3 coords
    coords?: [Coord, Coord, Coord] | null;
    // The initial coordinates the graph renders with.
    startCoords?: [Coord, Coord, Coord];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"quadratic"',required:!0}},{key:"coords",value:{name:"union",raw:"[Coord, Coord, Coord] | null",elements:[{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}]},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Coord, Coord, Coord]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ray";
    // Expects a list of 2 Coords
    coords?: CollinearTuple | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ray"',required:!0}},{key:"coords",value:{name:"union",raw:"CollinearTuple | null",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "segment";
    // The number of segments if a "segment" type. default: 1.  Max: 6
    numSegments?: number;
    // Expects a list of Coord tuples. Length should match the \`numSegments\` value.
    coords?: CollinearTuple[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: CollinearTuple[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"segment"',required:!0}},{key:"numSegments",value:{name:"number",required:!1}},{key:"coords",value:{name:"union",raw:"CollinearTuple[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[Vector2, Vector2]",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],required:!1}],raw:"CollinearTuple[]",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "sinusoid";
    // Expects a list of 2 Coords
    coords?: Coord[] | null;
    // The initial coordinates the graph renders with.
    startCoords?: Coord[];
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"sinusoid"',required:!0}},{key:"coords",value:{name:"union",raw:"Coord[] | null",elements:[{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]"},{name:"null"}],required:!1}},{key:"startCoords",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!1}}]}}],required:!0},description:`The current correct answer for the graph. Updated by this component
when the graph is changed.

Note that the "Correct answer:" textbox is not an interactive
element. Instead, it is a representation of the correct answer based
on the state of the interactive graph previewed at the bottom of the
editor page.`},{key:"lockedFigures",value:{name:"Array",elements:[{name:"union",raw:`| LockedPointType
| LockedLineType
| LockedVectorType
| LockedEllipseType
| LockedPolygonType
| LockedFunctionType
| LockedLabelType`,elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "line";
    kind: "line" | "ray" | "segment";
    points: [point1: LockedPointType, point2: LockedPointType];
    color: LockedFigureColor;
    lineStyle: LockedLineStyle;
    showPoint1: boolean;
    showPoint2: boolean;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"line"',required:!0}},{key:"kind",value:{name:"union",raw:'"line" | "ray" | "segment"',elements:[{name:"literal",value:'"line"'},{name:"literal",value:'"ray"'},{name:"literal",value:'"segment"'}],required:!0}},{key:"points",value:{name:"tuple",raw:"[point1: LockedPointType, point2: LockedPointType]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"lineStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"showPoint1",value:{name:"boolean",required:!0}},{key:"showPoint2",value:{name:"boolean",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "vector";
    points: [tail: Coord, tip: Coord];
    color: LockedFigureColor;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"vector"',required:!0}},{key:"points",value:{name:"tuple",raw:"[tail: Coord, tip: Coord]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}},{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}]}],raw:"Array<LockedFigure>",required:!1},description:`The locked figures to display in the graph area.
Locked figures are graph elements (points, lines, line segmeents,
etc.) that are locked in place and not interactive.`},{key:"fullGraphAriaLabel",value:{name:"string",required:!1}},{key:"fullGraphAriaDescription",value:{name:"string",required:!1}},{key:"graph",value:{name:'PropsFor["userInput"]',raw:'InteractiveGraphProps["userInput"]',required:!0},description:"The graph to display in the graph area."},{key:"onChange",value:{name:"signature",type:"function",raw:"(props: Partial<Props>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"Props"}],raw:"Partial<Props>"},name:"props"}],return:{name:"void"}},required:!0}},{key:"static",value:{name:"boolean",required:!1}}]}}],raw:"Partial<Props>"},name:"props"}],return:{name:"void"}}},description:""},static:{required:!1,tsType:{name:"boolean"},description:""}}};const{RangeInput:Ng}=Ae,Ig=ip.widget,eu=6;class Wa extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"onMatrixBoardSizeChange",n=>{const i=lp(this.props.answers);if(n[0]!==null&&n[1]!==null){n=[Math.round(Math.min(Math.max(n[0],1),eu)),Math.round(Math.min(Math.max(n[1],1),eu))];const u=R(Math.min(n[0],i[0])).times(p=>R(Math.min(n[1],i[1])).times(w=>this.props.answers[p][w]));this.props.onChange({matrixBoardSize:n,answers:u})}});x(this,"serialize",()=>Ee.serialize.call(this))}render(){const n={onBlur:()=>{},onFocus:()=>{},trackInteraction:()=>{},userInput:{answers:this.props.answers},handleUserInput:i=>{this.change({answers:i.answers})},...this.props};return e.jsxs("div",{className:"perseus-matrix-editor",children:[e.jsxs("div",{className:"perseus-widget-row",children:[" ","Max matrix size:"," ",e.jsx(Ng,{value:this.props.matrixBoardSize,onChange:this.onMatrixBoardSizeChange,format:this.props.labelStyle,useArrowKeys:!0})]}),e.jsx("div",{className:"perseus-widget-row",children:e.jsx(Ig,{...n})}),e.jsxs("div",{className:"perseus-widget-row",children:[" ","Matrix prefix:"," ",e.jsx(Pn,{ref:"prefix",apiOptions:this.props.apiOptions,content:this.props.prefix,widgetEnabled:!1,onChange:i=>{this.change({prefix:i.content})}})]}),e.jsxs("div",{className:"perseus-widget-row",children:[" ","Matrix suffix:"," ",e.jsx(Pn,{ref:"suffix",apiOptions:this.props.apiOptions,content:this.props.suffix,widgetEnabled:!1,onChange:i=>{this.change({suffix:i.content})}})]})]})}}x(Wa,"propTypes",{...mn,matrixBoardSize:te.arrayOf(te.number).isRequired,answers:te.arrayOf(te.arrayOf(te.number)),prefix:te.string,suffix:te.string,cursorPosition:te.arrayOf(te.number)}),x(Wa,"widgetName","matrix"),x(Wa,"defaultProps",op.defaultWidgetOptions);Wa.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"onMatrixBoardSizeChange",docblock:null,modifiers:[],params:[{name:"range",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"MatrixEditor",props:{matrixBoardSize:{defaultValue:{value:"[3, 3]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"number"}},required:!1},answers:{defaultValue:{value:"[[]]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"arrayOf",value:{name:"number"}}},required:!1},prefix:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},suffix:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},cursorPosition:{defaultValue:{value:"[0, 0]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"number"}},required:!1}},composes:["@khanacademy/perseus"]};const{InfoTip:jg,NumberInput:Ur,RangeInput:Lg}=Ae,Rg={url:null,top:0,left:0};class Ga extends F.Component{constructor(){super(...arguments);x(this,"className","perseus-widget-measurer");x(this,"change",(...n)=>Le.apply(this,n));x(this,"_changeUrl",n=>{this._changeImage("url",n.target.value)});x(this,"_changeTop",n=>{this._changeImage("top",n)});x(this,"_changeLeft",n=>{this._changeImage("left",n)});x(this,"_changeImage",(n,i)=>{const u=R.clone(this.props.image);u[n]=i,this.change("image",u)});x(this,"renderLabelChoices",n=>R.map(n,function(i){const[u,p]=i;return e.jsx("option",{value:p,children:u},p)}));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const n=R.extend({},Rg,this.props.image);return e.jsxs("div",{className:"perseus-widget-measurer",children:[e.jsx("div",{children:"Image displayed under protractor and/or ruler:"}),e.jsxs("div",{children:["URL:"," ",e.jsx("input",{type:"text",className:"perseus-widget-measurer-url",ref:"image-url",defaultValue:n.url,onChange:this._changeUrl}),e.jsx(jg,{children:e.jsx("p",{children:'Create an image in graphie, or use the "Add image" function to create a background.'})})]}),n.url&&e.jsxs("div",{className:"perseus-widget-row",children:[e.jsxs("label",{className:"perseus-widget-left-col",children:["Pixels from top:"," ",e.jsx(Ur,{placeholder:0,onChange:this._changeTop,value:n.top,useArrowKeys:!0})]}),e.jsxs("label",{className:"perseus-widget-right-col",children:["Pixels from left:"," ",e.jsx(Ur,{placeholder:0,onChange:this._changeLeft,value:n.left,useArrowKeys:!0})]})]}),e.jsxs("div",{children:["Containing area [width, height]:"," ",e.jsx(Lg,{onChange:this.change("box"),value:this.props.box,useArrowKeys:!0})]}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx("div",{className:"perseus-widget-left-col",children:e.jsx(Ze,{label:"Show ruler",checked:this.props.showRuler,onChange:i=>{this.props.onChange({showRuler:i})}})}),e.jsx("div",{className:"perseus-widget-right-col",children:e.jsx(Ze,{label:"Show protractor",checked:this.props.showProtractor,onChange:i=>{this.props.onChange({showProtractor:i})}})})]}),this.props.showRuler&&e.jsxs("div",{children:[e.jsx("div",{children:e.jsxs("label",{children:[" ","Ruler label:"," ",e.jsxs("select",{onChange:i=>this.change("rulerLabel",i.target.value),value:this.props.rulerLabel,children:[e.jsx("option",{value:"",children:"None"}),e.jsx("optgroup",{label:"Metric",children:this.renderLabelChoices([["milimeters","mm"],["centimeters","cm"],["meters","m"],["kilometers","km"]])}),e.jsx("optgroup",{label:"Imperial",children:this.renderLabelChoices([["inches","in"],["feet","ft"],["yards","yd"],["miles","mi"]])})]})]})}),e.jsx("div",{children:e.jsxs("label",{children:[" ","Ruler ticks:"," ",e.jsx("select",{onChange:i=>this.change("rulerTicks",+i.target.value),value:this.props.rulerTicks,children:R.map([1,2,4,8,10,16],function(i){return e.jsx("option",{value:i,children:i},i)})})]})}),e.jsx("div",{children:e.jsxs("label",{children:["Ruler pixels per unit:"," ",e.jsx(Ur,{placeholder:40,onChange:this.change("rulerPixels"),value:this.props.rulerPixels,useArrowKeys:!0})]})}),e.jsx("div",{children:e.jsxs("label",{children:["Ruler length in units:"," ",e.jsx(Ur,{placeholder:10,onChange:this.change("rulerLength"),value:this.props.rulerLength,useArrowKeys:!0})]})})]})]})}}x(Ga,"widgetName","measurer"),x(Ga,"propTypes",{...mn,box:te.arrayOf(te.number),image:te.shape({url:te.string,top:te.number,left:te.number}),showProtractor:te.bool,showRuler:te.bool,rulerLabel:te.string,rulerTicks:te.number,rulerPixels:te.number,rulerLength:te.number}),x(Ga,"defaultProps",sp.defaultWidgetOptions);Ga.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"_changeUrl",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"_changeTop",docblock:null,modifiers:[],params:[{name:"newTop",optional:!1,type:null}],returns:null},{name:"_changeLeft",docblock:null,modifiers:[],params:[{name:"newLeft",optional:!1,type:null}],returns:null},{name:"_changeImage",docblock:null,modifiers:[],params:[{name:"subProp",optional:!1,type:null},{name:"newValue",optional:!1,type:null}],returns:null},{name:"renderLabelChoices",docblock:null,modifiers:[],params:[{name:"choices",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"MeasurerEditor",props:{box:{defaultValue:{value:"[480, 480]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"number"}},required:!1},image:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"shape",value:{url:{name:"string",required:!1},top:{name:"number",required:!1},left:{name:"number",required:!1}}},required:!1},showProtractor:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1},showRuler:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},rulerLabel:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},rulerTicks:{defaultValue:{value:"10",computed:!1},description:"",type:{name:"number"},required:!1},rulerPixels:{defaultValue:{value:"40",computed:!1},description:"",type:{name:"number"},required:!1},rulerLength:{defaultValue:{value:"10",computed:!1},description:"",type:{name:"number"},required:!1}},composes:["@khanacademy/perseus"]};const{NumberInput:Fg,TextInput:Og}=Ae;class mi extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"updateMolecule",n=>{this.change({smiles:n})});x(this,"updateRotation",n=>{this.change({rotationAngle:n})});x(this,"serialize",()=>Ee.serialize.call(this))}render(){return e.jsxs("div",{children:[e.jsx("div",{children:e.jsxs("label",{children:["SMILES: ",e.jsx(Og,{onChange:this.updateMolecule,value:this.props.smiles})]})}),e.jsx("div",{children:e.jsxs("label",{children:["Rotation (deg): ",e.jsx(Fg,{onChange:this.updateRotation,value:this.props.rotationAngle})]})})]})}}x(mi,"propTypes",{...mn,rotationAngle:te.number,smiles:te.string}),x(mi,"widgetName","molecule-renderer");mi.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"updateMolecule",docblock:null,modifiers:[],params:[{name:"newValue",optional:!1,type:null}],returns:null},{name:"updateRotation",docblock:null,modifiers:[],params:[{name:"newValue",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"MoleculeWidgetEditor",props:{rotationAngle:{description:"",type:{name:"number"},required:!1},smiles:{description:"",type:{name:"string"},required:!1}},composes:["@khanacademy/perseus"]};const{InfoTip:ja,NumberInput:nu,TextInput:Eg}=Ae,{firstNumericalParse:tu}=Fe,Dg=[{title:"Integers",value:"integer",content:"6"},{title:"Decimals",value:"decimal",content:"0.75"},{title:"Proper fractions",value:"proper",content:"⅗"},{title:"Improper fractions",value:"improper",content:"⁷⁄₄"},{title:"Mixed numbers",value:"mixed",content:"1¾"},{title:"Numbers with π",value:"pi",content:"π"}],au=o=>({value:null,status:o,message:"",simplify:"required",answerForms:[],strict:!1,maxError:null});class Ha extends F.Component{constructor(n){super(n);x(this,"change",(...n)=>Le.apply(this,n));x(this,"onToggleAnswers",n=>{const i=this.state.showAnswerDetails.slice();i[n]=!i[n],this.setState({showAnswerDetails:i})});x(this,"onToggleAnswerForm",(n,i)=>{let u=[...this.props.answers[n].answerForms??[]];u.includes(i)?u=u.filter(k=>k!==i):u.push(i);const w=this.updateAnswer(n,"answerForms");w&&w(u)});x(this,"onToggleHeading",n=>()=>{const i=`show${n}`,u={...this.state};u[i]=!u[i],this.setState(u)});x(this,"onTrashAnswer",n=>{if(n>=0&&n<this.props.answers.length){const i=this.props.answers.slice(0);i.splice(n,1),this.props.onChange({answers:i})}});x(this,"onSpace",(n,i,...u)=>{n.key===" "&&(n.preventDefault(),i.apply(this,u))});x(this,"onStatusChange",n=>{const i=["wrong","ungraded","correct"],u=this.props.answers,p=i.indexOf(u[n].status),w=i[(p+1)%i.length];this.updateAnswer(n,{status:w,simplify:w==="correct"?"required":"accepted"})});x(this,"onEvaluationChange",(n,i)=>{this.updateAnswer(n,{status:i,simplify:i==="correct"?"required":"accepted"})});x(this,"updateAnswer",(n,i)=>{if(!R.isObject(i))return R.partial((p,w,k)=>{const b={};b[w]=k,this.updateAnswer(p,b)},n,i);let u=[...this.props.answers];if(n===u.length){const p=au(this.state.lastStatus);u=u.concat(p)}u[n]=R.extend({},u[n],i),this.props.onChange({answers:u})});x(this,"addAnswer",()=>{const n=au(this.state.lastStatus),i=this.props.answers.concat(n),u=this.state.showAnswerDetails.concat(!0);this.setState({showAnswerDetails:u}),this.props.onChange({answers:i})});x(this,"getSaveWarnings",()=>{const n=[];return R.contains(R.pluck(this.props.answers,"value"),"")&&n.push("One or more answers is empty"),this.props.answers.forEach((i,u)=>{i.strict&&(!i.answerForms||i.answerForms.length===0)&&n.push(`Answer ${u+1} is set to string format matching, but no format was selected`)}),n});x(this,"serialize",()=>Ee.serialize.call(this));this.state={lastStatus:"wrong",showAnswerDetails:Array(this.props.answers.length).fill(!0),showSettings:!0,showAnswers:!0}}render(){const n=this.props.answers,i={size:"medium",role:"radio",style:{marginRight:"8px"}},u=_=>{const{kind:M,onClick:oe,ariaLabel:W,children:U}=_,E=_.role??"radio",A={...i,"aria-label":W,kind:M,role:E,onClick:oe};return e.jsx(Rn,{...A,children:U})},p=_=>{const{answerIndex:M,answerProperty:oe,value:W,children:U}=_,A=n[M][oe]===W?"accent":"transparent",$={};$[oe]=W;const J=_.onClick??(()=>{this.updateAnswer(M,$)});return e.jsx(u,{kind:A,onClick:J,children:U})},w=_=>e.jsxs("fieldset",{className:"perseus-widget-row unsimplified-options",children:[n[_].status!=="correct"&&e.jsx(e.Fragment,{children:e.jsx("legend",{className:"inline-options",children:"Unsimplified answers are irrelevant for this status"})}),n[_].status==="correct"&&e.jsxs(e.Fragment,{children:[e.jsx("legend",{className:"inline-options",children:"Unsimplified answers are"}),e.jsx("span",{className:"tooltip-for-legend",children:e.jsxs(ja,{children:[e.jsx("p",{children:'Normally select "ungraded". This will give the user a message saying the answer is correct but not simplified. The user will then have to simplify it and re-enter, but will not be penalized. (5th grade and after)'}),e.jsx("p",{children:'Select "accepted" only if the user is not expected to know how to simplify fractions yet. (Anything prior to 5th grade)'}),e.jsxs("p",{children:['Select "wrong" ',e.jsx("em",{children:"only"})," if we are specifically assessing the ability to simplify."]})]})}),e.jsx("br",{}),e.jsx(p,{answerIndex:_,answerProperty:"simplify",value:"required",children:"Ungraded"}),e.jsx(p,{answerIndex:_,answerProperty:"simplify",value:"optional",children:"Accepted"}),e.jsx(p,{answerIndex:_,answerProperty:"simplify",value:"enforced",children:"Wrong"})]})]}),k=_=>e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx("label",{children:"Possible answer formats "}),e.jsxs(ja,{children:[e.jsx("p",{children:'Formats will be autoselected for you based on the given answer; to show no suggested formats and accept all types, simply have a decimal/integer be the answer. Values with π will have format "pi", and values that are fractions will have some subset (mixed will be "mixed" and "proper"; improper/proper will both be "improper" and "proper"). If you would like to specify that it is only a proper fraction (or only a mixed/improper fraction), deselect the other format. Except for specific cases, you should not need to change the autoselected formats.'}),e.jsxs("p",{children:["To restrict the answer to ",e.jsx("em",{children:"only"}),' an improper fraction (i.e. 7/4), select the improper fraction and toggle "strict" to true. This ',e.jsx("b",{children:"will not"})," ","accept 1.75 as an answer."," "]}),e.jsx("p",{children:"Unless you are testing that specific skill, please do not restrict the answer format."})]}),e.jsx("br",{}),Dg.map(M=>{var E;const W=((E=n[_].answerForms)==null?void 0:E.includes(M.value))?"accent":"transparent",U=()=>{this.onToggleAnswerForm(_,M.value)};return e.jsx(u,{ariaLabel:M.title,kind:W,role:"checkbox",onClick:U,children:M.content},M.value)})]}),e.jsxs("fieldset",{className:"perseus-widget-row",children:[e.jsx("legend",{children:"Answer formats are: "}),e.jsx(p,{answerIndex:_,answerProperty:"strict",value:!1,children:"Suggested"}),e.jsx(p,{answerIndex:_,answerProperty:"strict",value:!0,children:"Required"})]})]}),b=e.jsxs("fieldset",{className:"perseus-widget-row",children:[e.jsx("legend",{className:"inline-options",children:"Width: "}),e.jsx(Rn,{...i,kind:this.props.size==="normal"?"accent":"transparent",onClick:()=>{this.change("size")("normal")},children:"Normal (80px)"}),e.jsx(Rn,{...i,kind:this.props.size==="small"?"accent":"transparent",onClick:()=>{this.change("size")("small")},children:"Small (40px)"}),e.jsx(ja,{children:e.jsx("p",{children:'Use size "Normal" for all text boxes, unless there are multiple text boxes in one line and the answer area is too narrow to fit them.'})})]}),N=e.jsxs("fieldset",{className:"perseus-widget-row",children:[e.jsx("legend",{className:"inline-options",children:"Alignment: "}),e.jsx(Rn,{...i,kind:this.props.rightAlign?"transparent":"accent",onClick:()=>{this.props.onChange({rightAlign:!1})},children:"Left"}),e.jsx(Rn,{...i,kind:this.props.rightAlign?"accent":"transparent",onClick:()=>{this.props.onChange({rightAlign:!0})},children:"Right"})]}),O=e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx("label",{children:"Aria label"}),e.jsx(ja,{children:e.jsx("p",{children:"Text to describe this input. This will be shown to users using screenreaders."})})]}),e.jsx(Eg,{labelText:"aria label",value:this.props.labelText,onChange:this.change("labelText")})]}),B=e.jsxs("fieldset",{className:"perseus-widget-row",children:[e.jsx("legend",{className:"inline-options",children:"Number style: "}),e.jsx(Rn,{...i,kind:this.props.coefficient?"transparent":"accent",onClick:()=>{this.props.onChange({coefficient:!1})},children:"Standard"}),e.jsx(Rn,{...i,kind:this.props.coefficient?"accent":"transparent",onClick:()=>{this.props.onChange({coefficient:!0})},children:"Coefficient"}),e.jsx(ja,{children:e.jsx("p",{children:"A coefficient style number allows the student to use - for -1 and an empty string to mean 1."})})]}),V={wrong:"(address the mistake/misconception)",ungraded:"(explain in detail to avoid confusion)",correct:"(reinforce the user's understanding)"},G=()=>n.map((_,M)=>{const oe=e.jsx(Pn,{apiOptions:this.props.apiOptions,content:_.message||"",placeholder:"Why is this answer "+_.status+"?	"+V[_.status],widgetEnabled:!1,onChange:J=>{"content"in J&&this.updateAnswer(M,{message:J.content})}}),W=_.status.charAt(0).toUpperCase()+_.status.slice(1),U=(_.answerForms||[]).at(-1),E=Yr.toNumericString(_.value??0,U),A=_.maxError?`± ${Yr.toNumericString(_.maxError,U)}`:"",$=_.value===null?"New Answer":`${W} answer: ${E} ${A}`;return e.jsx("div",{className:"perseus-widget-row answer-option",children:e.jsxs(Sn,{animated:!0,expanded:this.state.showAnswerDetails[M],onToggle:()=>{this.onToggleAnswers(M)},header:e.jsx(Ne,{children:$}),children:[e.jsxs("div",{className:"input-answer-editor-value-container"+(_.maxError?" with-max-error":""),children:[e.jsxs("label",{children:["User input:",e.jsx(nu,{value:_.value,className:"numeric-input-value",placeholder:"answer",format:R.last(_.answerForms||[]),onFormatChange:(J,Z)=>{let ue;Z==="pi"?ue=["pi"]:Z==="mixed"?ue=["proper","mixed"]:(Z==="proper"||Z==="improper")&&(ue=["proper","improper"]),this.updateAnswer(M,{value:tu(J),answerForms:ue})},onChange:J=>{this.updateAnswer(M,{value:tu(J)})}})]}),e.jsx("span",{className:"max-error-plusmn",children:"±"}),e.jsx(nu,{className:"max-error-input-value",placeholder:0,value:n[M].maxError,format:R.last(_.answerForms||[]),onChange:this.updateAnswer(M,"maxError")})]}),e.jsxs("fieldset",{className:"perseus-widget-row",children:[e.jsx("legend",{className:"inline-options",children:"Status:"}),e.jsx(p,{answerIndex:M,answerProperty:"status",value:"correct",onClick:()=>{this.onEvaluationChange(M,"correct")},children:"Correct"}),e.jsx(p,{answerIndex:M,answerProperty:"status",value:"wrong",onClick:()=>{this.onEvaluationChange(M,"wrong")},children:"Wrong"}),e.jsx(p,{answerIndex:M,answerProperty:"status",value:"ungraded",onClick:()=>{this.onEvaluationChange(M,"ungraded")},children:"Ungraded"})]}),w(M),e.jsx("div",{className:"perseus-widget-row",children:"(Articles only) Message shown to user:"}),oe,k(M),e.jsx(Ue,{startIcon:vi,"aria-label":`Delete ${$}`,className:"delete-item-button",onClick:()=>{this.onTrashAnswer(M)},kind:"tertiary",children:"Delete"})]})},M)});return e.jsxs("div",{className:"perseus-input-number-editor",children:[e.jsx(dt,{title:"General Settings",isCollapsible:!0,isOpen:this.state.showSettings,onToggle:this.onToggleHeading("Settings")}),e.jsx("div",{className:`perseus-editor-accordion-container ${this.state.showSettings?"expanded":"collapsed"}`,children:e.jsxs("div",{className:"perseus-editor-accordion-content",children:[b,N,B,O]})}),e.jsx(dt,{title:"Answers",isCollapsible:!0,isOpen:this.state.showAnswers,onToggle:this.onToggleHeading("Answers")}),e.jsx("div",{className:`perseus-editor-accordion-container ${this.state.showAnswers?"expanded":"collapsed"}`,children:e.jsxs("div",{className:"perseus-editor-accordion-content",children:[G(),e.jsx(Ue,{kind:"tertiary",onClick:this.addAnswer,children:"Add new answer"})]})})]})}}x(Ha,"widgetName","numeric-input"),x(Ha,"displayName","NumericInputEditor"),x(Ha,"defaultProps",up.defaultWidgetOptions);Ha.__docgenInfo={description:`An editor for adding a numeric input widget that allows users to enter
numerical values with specific validation rules.`,methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"onToggleAnswers",docblock:null,modifiers:[],params:[{name:"answerIndex",optional:!1,type:{name:"number"}}],returns:null},{name:"onToggleAnswerForm",docblock:null,modifiers:[],params:[{name:"answerIndex",optional:!1,type:{name:"number"}},{name:"answerForm",optional:!1,type:null}],returns:null},{name:"onToggleHeading",docblock:null,modifiers:[],params:[{name:"accordionName",optional:!1,type:{name:"string"}}],returns:null},{name:"onTrashAnswer",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null}],returns:null},{name:"onSpace",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null},{name:"callback",optional:!1,type:null},{name:"...args",optional:!1,type:null}],returns:null},{name:"onStatusChange",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null}],returns:null},{name:"onEvaluationChange",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null},{name:"newStatus",optional:!1,type:null}],returns:null},{name:"updateAnswer",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null},{name:"update",optional:!1,type:null}],returns:null},{name:"addAnswer",docblock:null,modifiers:[],params:[],returns:null},{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"NumericInputEditor",props:{onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(results: any) => any",signature:{arguments:[{type:{name:"any"},name:"results"}],return:{name:"any"}}},description:""},apiOptions:{required:!1,tsType:{name:"Readonly",elements:[{name:"intersection",raw:`APIOptions & {
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,elements:[{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},{name:"signature",type:"object",raw:`{
    baseElements: NonNullable<APIOptions["baseElements"]>;
    canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
    editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
    groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
    isArticle: NonNullable<APIOptions["isArticle"]>;
    isMobile: NonNullable<APIOptions["isMobile"]>;
    isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
    onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
    readOnly: NonNullable<APIOptions["readOnly"]>;
    setDrawingAreaAvailable: NonNullable<
        APIOptions["setDrawingAreaAvailable"]
    >;
    showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
}`,signature:{properties:[{key:"baseElements",value:{name:"NonNullable",elements:[{name:'Readonly["baseElements"]',raw:'APIOptions["baseElements"]'}],raw:'NonNullable<APIOptions["baseElements"]>',required:!0}},{key:"canScrollPage",value:{name:"NonNullable",elements:[{name:'Readonly["canScrollPage"]',raw:'APIOptions["canScrollPage"]'}],raw:'NonNullable<APIOptions["canScrollPage"]>',required:!0}},{key:"editorChangeDelay",value:{name:"NonNullable",elements:[{name:'Readonly["editorChangeDelay"]',raw:'APIOptions["editorChangeDelay"]'}],raw:'NonNullable<APIOptions["editorChangeDelay"]>',required:!0}},{key:"groupAnnotator",value:{name:"NonNullable",elements:[{name:'Readonly["groupAnnotator"]',raw:'APIOptions["groupAnnotator"]'}],raw:'NonNullable<APIOptions["groupAnnotator"]>',required:!0}},{key:"isArticle",value:{name:"NonNullable",elements:[{name:'Readonly["isArticle"]',raw:'APIOptions["isArticle"]'}],raw:'NonNullable<APIOptions["isArticle"]>',required:!0}},{key:"isMobile",value:{name:"NonNullable",elements:[{name:'Readonly["isMobile"]',raw:'APIOptions["isMobile"]'}],raw:'NonNullable<APIOptions["isMobile"]>',required:!0}},{key:"isMobileApp",value:{name:"NonNullable",elements:[{name:'Readonly["isMobileApp"]',raw:'APIOptions["isMobileApp"]'}],raw:'NonNullable<APIOptions["isMobileApp"]>',required:!0}},{key:"onFocusChange",value:{name:"NonNullable",elements:[{name:'Readonly["onFocusChange"]',raw:'APIOptions["onFocusChange"]'}],raw:'NonNullable<APIOptions["onFocusChange"]>',required:!0}},{key:"readOnly",value:{name:"NonNullable",elements:[{name:'Readonly["readOnly"]',raw:'APIOptions["readOnly"]'}],raw:'NonNullable<APIOptions["readOnly"]>',required:!0}},{key:"setDrawingAreaAvailable",value:{name:"NonNullable",elements:[{name:'Readonly["setDrawingAreaAvailable"]',raw:'APIOptions["setDrawingAreaAvailable"]'}],raw:`NonNullable<
    APIOptions["setDrawingAreaAvailable"]
>`,required:!0}},{key:"showAlignmentOptions",value:{name:"NonNullable",elements:[{name:'Readonly["showAlignmentOptions"]',raw:'APIOptions["showAlignmentOptions"]'}],raw:'NonNullable<APIOptions["showAlignmentOptions"]>',required:!0}}]}}]}],raw:`Readonly<
    APIOptions & {
        baseElements: NonNullable<APIOptions["baseElements"]>;
        canScrollPage: NonNullable<APIOptions["canScrollPage"]>;
        editorChangeDelay: NonNullable<APIOptions["editorChangeDelay"]>;
        groupAnnotator: NonNullable<APIOptions["groupAnnotator"]>;
        isArticle: NonNullable<APIOptions["isArticle"]>;
        isMobile: NonNullable<APIOptions["isMobile"]>;
        isMobileApp: NonNullable<APIOptions["isMobileApp"]>;
        onFocusChange: NonNullable<APIOptions["onFocusChange"]>;
        readOnly: NonNullable<APIOptions["readOnly"]>;
        setDrawingAreaAvailable: NonNullable<
            APIOptions["setDrawingAreaAvailable"]
        >;
        showAlignmentOptions: NonNullable<APIOptions["showAlignmentOptions"]>;
    }
>`},description:""},answers:{defaultValue:{value:`[
    {
        value: null,
        status: "correct",
        message: "",
        simplify: "required",
        answerForms: [],
        strict: false,
        maxError: null,
    },
]`,computed:!1},required:!1},size:{defaultValue:{value:'"normal"',computed:!1},required:!1},coefficient:{defaultValue:{value:"false",computed:!1},required:!1},labelText:{defaultValue:{value:'""',computed:!1},required:!1},rightAlign:{defaultValue:{value:"false",computed:!1},required:!1}}};const{InfoTip:Kr,TextListEditor:ru}=Ae,iu="normal",ou="auto",lu="horizontal",su="vertical",uu=(o,l,n,i)=>{const u={};n&&i!==void 0&&(u[n]=i.map(N=>({content:N})));const p=n==="correctOptions"?u.correctOptions:o,w=n==="otherOptions"?u.otherOptions:l,k=[...p,...w],b=[...new Set(k.map(N=>N.content))].filter(N=>N!=="").sort().sort((N,O)=>{const B=V=>/\d/.test(V)?0:/^\$?[a-zA-Z]+\$?$/.test(V)?2:1;return B(N)-B(O)}).map(N=>({content:N}));return{...u,options:b}};class Ua extends F.Component{constructor(){super(...arguments);x(this,"onOptionsChange",(n,i,u)=>{const p=uu(this.props.correctOptions||[],this.props.otherOptions||[],n,i);this.props.onChange(p,u)});x(this,"onLayoutChange",n=>{this.props.onChange({layout:n.target.value})});x(this,"onHeightChange",n=>{this.props.onChange({height:n.target.value})});x(this,"serialize",()=>{const{options:n}=uu(this.props.correctOptions||[],this.props.otherOptions||[]);return{options:n,correctOptions:this.props.correctOptions,otherOptions:this.props.otherOptions,height:this.props.height,layout:this.props.layout}})}render(){return e.jsxs("div",{className:"perseus-widget-orderer",children:[e.jsxs("div",{children:[" ","Correct answer:"," ",e.jsx(Kr,{children:e.jsx("p",{children:"Place the cards in the correct order. The same card can be used more than once in the answer but will only be displayed once at the top of a stack of identical cards."})})]}),e.jsx(ru,{options:R.pluck(this.props.correctOptions,"content"),onChange:this.onOptionsChange.bind(this,"correctOptions"),layout:this.props.layout}),e.jsxs("div",{children:[" ","Other cards:"," ",e.jsx(Kr,{children:e.jsx("p",{children:"Create cards that are not part of the answer."})})]}),e.jsx(ru,{options:R.pluck(this.props.otherOptions,"content"),onChange:this.onOptionsChange.bind(this,"otherOptions"),layout:this.props.layout}),e.jsxs("div",{children:[e.jsxs("label",{children:[" ","Layout:"," ",e.jsxs("select",{value:this.props.layout,onChange:this.onLayoutChange,children:[e.jsx("option",{value:lu,children:"Horizontal"}),e.jsx("option",{value:su,children:"Vertical"})]})]}),e.jsx(Kr,{children:e.jsx("p",{children:"Use the horizontal layout for short text and small images. The vertical layout is best for longer text (e.g. proofs)."})})]}),e.jsxs("div",{children:[e.jsxs("label",{children:[" ","Height:"," ",e.jsxs("select",{value:this.props.height,onChange:this.onHeightChange,children:[e.jsx("option",{value:iu,children:"Normal"}),e.jsx("option",{value:ou,children:"Automatic"})]})]}),e.jsx(Kr,{children:e.jsx("p",{children:'Use "Normal" for text, "Automatic" for images.'})})]})]})}}x(Ua,"propTypes",{correctOptions:te.array,otherOptions:te.array,height:te.oneOf([iu,ou]),layout:te.oneOf([lu,su]),onChange:te.func.isRequired}),x(Ua,"widgetName","orderer"),x(Ua,"defaultProps",dp.defaultWidgetOptions);Ua.__docgenInfo={description:"",methods:[{name:"onOptionsChange",docblock:null,modifiers:[],params:[{name:"whichOptions",optional:!1,type:null},{name:"options",optional:!1,type:null},{name:"cb",optional:!1,type:null}],returns:null},{name:"onLayoutChange",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"onHeightChange",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"OrdererEditor",props:{correctOptions:{defaultValue:{value:'[{content: "$x$"}]',computed:!1},description:"",type:{name:"array"},required:!1},otherOptions:{defaultValue:{value:'[{content: "$y$"}]',computed:!1},description:"",type:{name:"array"},required:!1},height:{defaultValue:{value:'"normal"',computed:!1},description:"",type:{name:"enum",value:[{value:'"normal"',computed:!1},{value:'"auto"',computed:!1}]},required:!1},layout:{defaultValue:{value:'"horizontal"',computed:!1},description:"",type:{name:"enum",value:[{value:'"horizontal"',computed:!1},{value:'"vertical"',computed:!1}]},required:!1},onChange:{description:"",type:{name:"func"},required:!0}}};const{InfoTip:du}=Ae;class Ka extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){const n=e.jsx(Pn,{ref:"passage-editor",apiOptions:this.props.apiOptions,content:this.props.passageText,widgetEnabled:!1,placeholder:"Type passage here...",onChange:u=>{this.change({passageText:u.content})},showWordCount:!0}),i=e.jsx(Pn,{ref:"passage-footnotes-editor",apiOptions:this.props.apiOptions,content:this.props.footnotes,widgetEnabled:!1,placeholder:"Type footnotes here...",onChange:u=>{this.change({footnotes:u.content})}});return e.jsxs("div",{className:"perseus-widget-passage-editor",children:[e.jsx("div",{className:"perseus-widget-row",children:e.jsx(Ze,{label:"Show line numbers",checked:this.props.showLineNumbers,onChange:u=>{this.props.onChange({showLineNumbers:u})}})}),e.jsxs("div",{children:["Passage title:",e.jsx(du,{children:e.jsx("p",{children:"An optional title that will appear directly above the passage in the same font style. (E.g. Passage 1)"})}),e.jsx("div",{children:e.jsx("input",{type:"text",defaultValue:this.props.passageTitle,onChange:u=>{this.change({passageTitle:u.target.value})}})})]}),e.jsxs("div",{children:["Passage Text:",n]}),e.jsxs("div",{children:["Footnotes:",e.jsx(du,{children:e.jsx("p",{children:"To add footnotes, add ^ characters where they belong in the passage. Then, add ^ in the footnotes area to reference the footnotes in the passage."})}),i]})]})}}x(Ka,"propTypes",{...mn,passageTitle:te.string,passageText:te.string,footnotes:te.string,showLineNumbers:te.bool}),x(Ka,"widgetName","passage"),x(Ka,"defaultProps",mp.defaultWidgetOptions);Ka.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"PassageEditor",props:{passageTitle:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},passageText:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},footnotes:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},showLineNumbers:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1}},composes:["@khanacademy/perseus"]};const{InfoTip:Mg,NumberInput:mu,TextInput:zg}=Ae;class Xa extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"serialize",()=>Ee.serialize.call(this))}render(){return e.jsxs("div",{children:[e.jsx("div",{children:e.jsxs("label",{children:["Passage Number: ",e.jsx(mu,{value:this.props.passageNumber,onChange:this.change("passageNumber")})]})}),e.jsx("div",{children:e.jsxs("label",{children:["Reference Number: ",e.jsx(mu,{value:this.props.referenceNumber,onChange:this.change("referenceNumber")})]})}),e.jsx("div",{children:e.jsxs("label",{children:["Summary Text: ",e.jsx(zg,{value:this.props.summaryText,onChange:this.change("summaryText")}),e.jsxs(Mg,{children:[e.jsx("p",{children:"Short summary of the referenced section. This will be included in parentheses and quotes automatically."}),e.jsx("p",{children:"Ex: The start ... the end"})]})]})})]})}}x(Xa,"propTypes",{...mn,passageNumber:te.number,referenceNumber:te.number,summaryText:te.string}),x(Xa,"widgetName","passage-ref"),x(Xa,"defaultProps",cp.defaultWidgetOptions);Xa.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"PassageRefEditor",props:{passageNumber:{defaultValue:{value:"1",computed:!1},description:"",type:{name:"number"},required:!1},referenceNumber:{defaultValue:{value:"1",computed:!1},description:"",type:{name:"number"},required:!1},summaryText:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1}},composes:["@khanacademy/perseus"]};class Ya extends F.Component{constructor(){super(...arguments);x(this,"change",(...n)=>Le.apply(this,n));x(this,"handleContentChange",n=>{this.change({content:n.target.value})});x(this,"serialize",()=>Ee.serialize.call(this))}render(){return e.jsxs("div",{children:["Content:",e.jsx("input",{type:"text",value:this.props.content,onChange:this.handleContentChange})]})}}x(Ya,"propTypes",{...mn,content:te.string}),x(Ya,"widgetName","passage-ref-target"),x(Ya,"defaultProps",pp.defaultWidgetOptions);Ya.__docgenInfo={description:"",methods:[{name:"change",docblock:null,modifiers:[],params:[{name:"...args",optional:!1,type:null}],returns:null},{name:"handleContentChange",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"PassageRefTargetEditor",props:{content:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1}},composes:["@khanacademy/perseus"]};const Oo=""+new URL("plus-bold-CG3_Sgx2.svg",import.meta.url).href,_g="_tile_226b7_1",Bg="_radio-option-actions-container_226b7_14",Vg="_button-row_226b7_21",$g="_image-editor-container_226b7_28",xi={tile:_g,radioOptionActionsContainer:Bg,buttonRow:Vg,imageEditorContainer:$g};function Eo({initialImageUrl:o,initialImageAltText:l,containerClassName:n,onSave:i,onClose:u,onDelete:p}){const[w,k]=F.useState(o),[b,N]=F.useState(l);F.useEffect(()=>{k(o??""),N(l??"")},[o,l]);const O=F.useId(),B=`${O}-image-url-textarea`,V=`${O}-image-alt-text-textarea`;function G(){k(""),N(""),u==null||u()}function _(){i(w,b),G()}return e.jsxs("div",{className:n,children:[u&&e.jsx(kn,{"aria-label":"Close",icon:xu,size:"small",kind:"tertiary",onClick:G,style:{position:"absolute",top:4,right:4}}),e.jsx(Wt,{tag:"label",htmlFor:B,style:{marginBlockEnd:Q.size_040},children:"Image URL"}),e.jsx(Ht,{id:B,value:w,placeholder:"cdn.kastatic.org/...",onChange:M=>{k(M)},style:{marginBlockEnd:Q.size_080}}),e.jsx(Wt,{tag:"label",htmlFor:V,style:{marginBlockEnd:Q.size_040},children:"Image Alt Text"}),e.jsx(Ht,{id:V,value:b,placeholder:"Example: Graph of a linear function...",onChange:M=>{N(M)}}),e.jsxs("span",{className:xi.buttonRow,children:[p&&e.jsx(Ue,{size:"small",kind:"tertiary",startIcon:vi,style:{alignSelf:"flex-start"},onClick:p,children:"Delete this image"}),e.jsx(ua,{}),e.jsx(Ue,{size:"small",disabled:w===o&&b===l,style:{alignSelf:"flex-start"},onClick:_,children:"Save image"})]})]})}Eo.__docgenInfo={description:"",methods:[],displayName:"RadioImageEditor",props:{initialImageUrl:{required:!0,tsType:{name:"string"},description:""},initialImageAltText:{required:!0,tsType:{name:"string"},description:""},containerClassName:{required:!1,tsType:{name:"string"},description:""},onSave:{required:!0,tsType:{name:"signature",type:"function",raw:"(imageUrl: string, imageAltText: string) => void",signature:{arguments:[{type:{name:"string"},name:"imageUrl"},{type:{name:"string"},name:"imageAltText"}],return:{name:"void"}}},description:""},onClose:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onDelete:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};function Wg(o,l,n,i){const u=[...o],[p]=u.splice(n,1);switch(i){case"top":if(n===0)return o;u.unshift(p);break;case"up":if(n===0)return o;u.splice(n-1,0,p);break;case"down":if(n===o.length-1||n===o.length-2&&l)return o;u.splice(n+1,0,p);break;case"bottom":if(n===o.length-1)return o;if(l){const w=u.pop();u.push(p),w&&u.push(w)}else u.push(p);break}return u}function Gg(o){const l=[],n=La.parse(o,{});La.traverseContent(n,u=>{u.type==="image"&&l.push({url:u.target||"",altText:u.alt||""})});let i=o;return l.forEach((u,p)=>{const w=`![${u.altText}](${u.url})`,k=`![Image ${p+1}]`,b=i.indexOf(w);b!==-1&&(i=i.substring(0,b)+k+i.substring(b+w.length))}),[i,l]}function Ao(o,l){let n=o;for(let i=0;i<l.length;i++){const u=l[i];n=n.replace(`![Image ${i+1}]`,`![${u.altText}](${u.url})`)}return n}const Nd=o=>{const{content:l,choiceIndex:n,onContentChange:i,isNoneOfTheAbove:u}=o,w=`${F.useId()}-content-textarea`,[k,b]=F.useState(""),[N,O]=F.useState([]),[B,V]=F.useState(!1);F.useEffect(()=>{const[E,A]=Gg(l??"");b(E),O(A)},[l]);const G=(E,A,$)=>{const J=`${l}
![${$}](${A})`;i(E,J)},_=E=>{const A=`![Image ${E+1}]`,$=k.replace(A,"");b($);const J=Ao($,N);i(n,J)},M=(E,A,$)=>{const J=[...N];J[E]={url:A,altText:$},O(J);const Z=Ao(k,J);i(n,Z)},oe=(E,A)=>{b(A);const $=Ao(A,N);i(E,$)},W=E=>{const A=E.clipboardData.getData("text");(A.includes("cdn.kastatic.org")||A.includes("graphie"))&&(E.preventDefault(),G(n,A,""))},U=E=>{window.confirm("Are you sure you want to delete this image?")&&_(E)};return u?e.jsxs(e.Fragment,{children:[e.jsx(Wt,{tag:"label",htmlFor:w,children:"Content"}),e.jsx(Ht,{id:w,value:"None of the above",disabled:!0,onChange:()=>{}})]}):e.jsxs(e.Fragment,{children:[e.jsx(Wt,{tag:"label",htmlFor:w,style:{marginBlockEnd:Q.size_040},children:"Content"}),e.jsx(Ht,{id:w,value:k,placeholder:"Type a choice here...",onChange:E=>{oe(n,E)},onPaste:W}),!B&&e.jsx(Ue,{startIcon:Oo,size:"small",kind:"tertiary",style:{alignSelf:"flex-start"},onClick:()=>{V(!0)},children:"Add image"}),B&&e.jsx(Eo,{initialImageUrl:"",initialImageAltText:"",containerClassName:xi.imageEditorContainer,onSave:(E,A)=>{G(n,E,A)},onClose:()=>{V(!1)}}),(N==null?void 0:N.map((E,A)=>e.jsxs(Sn,{header:`Image ${A+1}`,expanded:!0,containerStyle:{backgroundColor:pe.surface.primary,marginBlockStart:Q.size_040,marginBlockEnd:Q.size_040},panelStyle:{paddingBlockEnd:Q.size_120},children:[e.jsx("img",{src:E.url,alt:E.altText,style:{marginBlockEnd:Q.size_080}}),e.jsx(Eo,{initialImageUrl:E.url,initialImageAltText:E.altText,onSave:($,J)=>{M(A,$,J)},onDelete:()=>{U(A)}})]},E.url)))??null]})};Nd.__docgenInfo={description:"",methods:[],displayName:"RadioOptionContentAndImageEditor",props:{isNoneOfTheAbove:{required:!0,tsType:{name:"boolean"},description:""},content:{required:!0,tsType:{name:"string"},description:""},choiceIndex:{required:!0,tsType:{name:"number"},description:""},onContentChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(choiceIndex: number, content: string) => void",signature:{arguments:[{type:{name:"number"},name:"choiceIndex"},{type:{name:"string"},name:"content"}],return:{name:"void"}}},description:""}}};function Id({content:o,showDelete:l,showMove:n,onDelete:i,onMove:u}){return e.jsxs("div",{className:xi.radioOptionActionsContainer,children:[l&&e.jsx(Ue,{size:"small",kind:"tertiary",startIcon:vi,onClick:()=>{window.confirm(`Are you sure you want to remove this choice? 

${o}`)&&i()},children:"Remove"}),n&&e.jsxs(e.Fragment,{children:[e.jsx(ua,{}),e.jsx(kn,{icon:md,kind:"tertiary",size:"xsmall","aria-label":"Move choice to the top",onClick:()=>u("top")}),e.jsx(kn,{icon:cd,kind:"tertiary",size:"xsmall","aria-label":"Move choice up",onClick:()=>u("up")}),e.jsx(kn,{icon:ir,kind:"tertiary",size:"xsmall","aria-label":"Move choice down",onClick:()=>u("down")}),e.jsx(kn,{icon:dd,kind:"tertiary",size:"xsmall","aria-label":"Move choice to the bottom",onClick:()=>u("bottom")})]})]})}Id.__docgenInfo={description:"",methods:[],displayName:"RadioOptionSettingsActions",props:{content:{required:!0,tsType:{name:"string"},description:""},showDelete:{required:!0,tsType:{name:"boolean"},description:""},showMove:{required:!0,tsType:{name:"boolean"},description:""},onDelete:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: ChoiceMovementType) => void",signature:{arguments:[{type:{name:"union",raw:'"up" | "down" | "top" | "bottom"',elements:[{name:"literal",value:'"up"'},{name:"literal",value:'"down"'},{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}]},name:"movement"}],return:{name:"void"}}},description:""}}};function jd({index:o,correct:l,multipleSelect:n,onClick:i}){return e.jsx(Rn,{size:"large",style:{marginInlineEnd:Q.size_080,color:l?me.white:me.red,backgroundColor:l?me.activeGreen:me.fadedRed8,borderRadius:n?ke.radius.radius_040:Q.size_240,border:`1px solid ${l?me.activeGreen:me.red}`,width:Q.size_560,flexDirection:"row"},onClick:i,children:e.jsxs(e.Fragment,{children:[e.jsx(nt,{size:"small",icon:l?Bo:hp,style:{marginInlineEnd:Q.size_060},color:l?me.white:me.red}),String.fromCharCode(65+o)]})})}jd.__docgenInfo={description:"",methods:[],displayName:"RadioStatusPill",props:{index:{required:!0,tsType:{name:"number"},description:""},correct:{required:!1,tsType:{name:"boolean"},description:""},multipleSelect:{required:!0,tsType:{name:"boolean"},description:""},onClick:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""}}};function Ld({index:o,choice:l,multipleSelect:n,onStatusChange:i,onContentChange:u,onRationaleChange:p,showDelete:w,showMove:k,onDelete:b,onMove:N}){const{content:O,rationale:B,correct:V,isNoneOfTheAbove:G}=l,M=`${F.useId()}-rationale-textarea`;return e.jsxs("div",{className:xi.tile,children:[e.jsxs("fieldset",{className:"perseus-widget-row",children:[e.jsx(jd,{index:o,correct:V,multipleSelect:n,onClick:()=>{i(o,!V)}}),e.jsx(Wt,{style:{display:"inline",marginInlineEnd:Q.size_080},children:"Status"}),e.jsx(Rn,{kind:V?"accent":"transparent",onClick:()=>{i(o,!0)},style:{marginInlineEnd:Q.size_080,outlineColor:V?pe.core.background.instructive.default:pe.core.border.neutral.default},children:"Correct"}),e.jsx(Rn,{kind:V?"transparent":"accent",onClick:()=>{i(o,!1)},style:{marginInlineEnd:Q.size_080,outlineColor:V?pe.core.border.neutral.default:pe.core.background.instructive.default},children:"Incorrect"})]}),e.jsx(Nd,{content:O,choiceIndex:o,isNoneOfTheAbove:G??!1,onContentChange:u}),e.jsx(Wt,{tag:"label",htmlFor:M,style:{marginBlockStart:Q.size_040,marginBlockEnd:Q.size_040},children:"Rationale"}),e.jsx(Ht,{id:M,value:B??"",placeholder:`Why is this choice ${V?"correct":"incorrect"}?`,onChange:oe=>{p(o,oe)}}),e.jsx(Id,{content:O,showDelete:w,showMove:k,onDelete:b,onMove:oe=>N(o,oe)})]})}Ld.__docgenInfo={description:"",methods:[],displayName:"RadioOptionSettings",props:{index:{required:!0,tsType:{name:"number"},description:""},choice:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    // Translatable Markdown; The label for this choice
    content: string;
    /**
     * An opaque string that uniquely identifies this choice within
     * the radio widget. The format of this ID is subject to change.
     */
    id: string;
    // Translatable Markdown; Rationale to give the user when they get it wrong
    rationale?: string;
    // Whether this option is a correct answer or not
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    correct?: boolean;
    // If this is none of the above, override the content with "None of the above"
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    isNoneOfTheAbove?: boolean;
}`,signature:{properties:[{key:"content",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0},description:`An opaque string that uniquely identifies this choice within
the radio widget. The format of this ID is subject to change.`},{key:"rationale",value:{name:"string",required:!1}},{key:"correct",value:{name:"boolean",required:!1}},{key:"isNoneOfTheAbove",value:{name:"boolean",required:!1}}]}},description:""},multipleSelect:{required:!0,tsType:{name:"boolean"},description:""},onStatusChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(choiceIndex: number, correct: boolean) => void",signature:{arguments:[{type:{name:"number"},name:"choiceIndex"},{type:{name:"boolean"},name:"correct"}],return:{name:"void"}}},description:""},onContentChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(choiceIndex: number, content: string) => void",signature:{arguments:[{type:{name:"number"},name:"choiceIndex"},{type:{name:"string"},name:"content"}],return:{name:"void"}}},description:""},onRationaleChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(choiceIndex: number, rationale: string) => void",signature:{arguments:[{type:{name:"number"},name:"choiceIndex"},{type:{name:"string"},name:"rationale"}],return:{name:"void"}}},description:""},showDelete:{required:!0,tsType:{name:"boolean"},description:""},showMove:{required:!0,tsType:{name:"boolean"},description:""},onDelete:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(choiceIndex: number, movement: ChoiceMovementType) => void",signature:{arguments:[{type:{name:"number"},name:"choiceIndex"},{type:{name:"union",raw:'"up" | "down" | "top" | "bottom"',elements:[{name:"literal",value:'"up"'},{name:"literal",value:'"down"'},{name:"literal",value:'"top"'},{name:"literal",value:'"bottom"'}]},name:"movement"}],return:{name:"void"}}},description:""}}};class ci extends F.Component{constructor(){super(...arguments);x(this,"onMultipleSelectChange",n=>{const i=n.multipleSelect;let u=this.props.choices;i||na(u)>1&&(u=u.map(w=>({...w,correct:!1}))),this.props.onChange({multipleSelect:i,choices:u,numCorrect:na(u)})});x(this,"onCountChoicesChange",n=>{const i=n.countChoices;this.props.onChange({countChoices:i})});x(this,"onChange",({checked:n})=>{const i=this.props.choices.map((u,p)=>({...u,correct:n[p],content:u.isNoneOfTheAbove&&!n[p]?"":u.content}));this.props.onChange({choices:i,numCorrect:na(i)})});x(this,"onStatusChange",(n,i)=>{let u;i&&!this.props.multipleSelect?u=this.props.choices.map(p=>!1):u=this.props.choices.map(p=>p.correct),u[n]=i,this.onChange({checked:u})});x(this,"onContentChange",(n,i)=>{const u=[...this.props.choices];u[n]={...u[n],content:i},this.props.onChange({choices:u})});x(this,"onRationaleChange",(n,i)=>{const u=[...this.props.choices];u[n]={...u[n],rationale:i},i===""&&delete u[n].rationale,this.props.onChange({choices:u})});x(this,"onDelete",n=>{const i=this.props.choices.slice(),u=i[n];i.splice(n,1),this.props.onChange({choices:i,hasNoneOfTheAbove:this.props.hasNoneOfTheAbove&&!u.isNoneOfTheAbove,numCorrect:na(i)})});x(this,"addChoice",(n,i)=>{i.preventDefault();const u=this.props.choices.slice(),p={isNoneOfTheAbove:n,content:"",id:crypto.randomUUID()},w=u.length-(this.props.hasNoneOfTheAbove?1:0);u.splice(w,0,p),this.props.onChange({choices:u,hasNoneOfTheAbove:n||this.props.hasNoneOfTheAbove},()=>{this.refs[`choice-editor${w}`].refs["content-editor"].focus()})});x(this,"handleMove",(n,i)=>{const u=Wg(this.props.choices,this.props.hasNoneOfTheAbove,n,i);this.props.onChange({choices:u})});x(this,"focus",()=>(this.refs["choice-editor0"].refs["content-editor"].focus(),!0));x(this,"getSaveWarnings",()=>R.some(R.pluck(this.props.choices,"correct"))?[]:["No choice is marked as correct."])}serialize(){const{choices:n,randomize:i,multipleSelect:u,countChoices:p,hasNoneOfTheAbove:w,deselectEnabled:k}=this.props;return{choices:n,randomize:i,multipleSelect:u,countChoices:p,hasNoneOfTheAbove:w,deselectEnabled:k,numCorrect:na(n)}}render(){const n=na(this.props.choices);return e.jsxs("div",{children:[e.jsx(yp,{href:"https://www.khanacademy.org/internal-courses/content-creation-best-practices/xe46daa512cd9c644:question-writing/xe46daa512cd9c644:multiple-choice/a/stems",target:"_blank",children:"Multiple choice best practices"}),e.jsxs("div",{className:"perseus-widget-row",children:[e.jsx(Hn,{label:"Randomize order",checked:this.props.randomize,onChange:i=>{this.props.onChange({randomize:i})},style:{marginBlockEnd:Q.size_060}}),e.jsx(Hn,{label:"Multiple selections",checked:this.props.multipleSelect,onChange:i=>{this.onMultipleSelectChange({multipleSelect:i})},style:{marginBlockEnd:Q.size_060}}),this.props.multipleSelect&&e.jsxs(e.Fragment,{children:[e.jsx(Hn,{label:"Specify number correct",checked:this.props.countChoices,onChange:i=>{this.onCountChoicesChange({countChoices:i})},style:{marginBlockEnd:Q.size_060}}),e.jsxs(bp,{children:["Current number correct: ",n]})]})]}),this.props.choices.map((i,u)=>e.jsx(Ld,{index:u,choice:i,multipleSelect:this.props.multipleSelect,onStatusChange:this.onStatusChange,onContentChange:this.onContentChange,onRationaleChange:this.onRationaleChange,showDelete:this.props.choices.length>=2,showMove:this.props.choices.length>1&&!i.isNoneOfTheAbove,onDelete:()=>this.onDelete(u),onMove:this.handleMove},`choice-${i.id}}`)),e.jsxs("div",{className:"add-choice-container",children:[e.jsx(Ue,{size:"small",kind:"tertiary",startIcon:Oo,onClick:this.addChoice.bind(this,!1),style:{marginInlineEnd:"2.4rem"},children:"Add a choice"}),!this.props.hasNoneOfTheAbove&&e.jsx(Ue,{size:"small",kind:"tertiary",startIcon:Oo,onClick:this.addChoice.bind(this,!0),children:"None of the above"})]})]})}}x(ci,"widgetName","radio"),x(ci,"defaultProps",gp.defaultWidgetOptions);ci.__docgenInfo={description:"An editor for adding a radio widget that allows users to select a single option from multiple choices.",methods:[{name:"onMultipleSelectChange",docblock:null,modifiers:[],params:[{name:"allowMultiple",optional:!1,type:null}],returns:null},{name:"onCountChoicesChange",docblock:null,modifiers:[],params:[{name:"count",optional:!1,type:null}],returns:null},{name:"onChange",docblock:null,modifiers:[],params:[{name:"{checked}",optional:!1,type:null}],returns:null},{name:"onStatusChange",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null},{name:"correct",optional:!1,type:null}],returns:null},{name:"onContentChange",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null},{name:"newContent",optional:!1,type:null}],returns:null},{name:"onRationaleChange",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null},{name:"newRationale",optional:!1,type:null}],returns:null},{name:"onDelete",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null}],returns:null},{name:"addChoice",docblock:null,modifiers:[],params:[{name:"noneOfTheAbove",optional:!1,type:null},{name:"e",optional:!1,type:null}],returns:null},{name:"handleMove",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null},{name:"movement",optional:!1,type:null}],returns:null},{name:"focus",docblock:null,modifiers:[],params:[],returns:null},{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:{type:{name:"signature",type:"object",raw:`{
    // The choices provided to the user.
    choices: PerseusRadioChoice[];
    // Does this have a "none of the above" option?
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    hasNoneOfTheAbove?: boolean;
    // If multipleSelect is enabled, Specify the number expected to be correct.
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    countChoices?: boolean;
    // How many of the choices are correct, which is conditionally used to tell
    // learners ahead of time how many options they'll need.
    numCorrect?: number;
    // Randomize the order of the options or keep them as defined
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    randomize?: boolean;
    // Does this set allow for multiple selections to be correct?
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    multipleSelect?: boolean;
    // deprecated
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    deselectEnabled?: boolean;
}`,signature:{properties:[{key:"choices",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    // Translatable Markdown; The label for this choice
    content: string;
    /**
     * An opaque string that uniquely identifies this choice within
     * the radio widget. The format of this ID is subject to change.
     */
    id: string;
    // Translatable Markdown; Rationale to give the user when they get it wrong
    rationale?: string;
    // Whether this option is a correct answer or not
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    correct?: boolean;
    // If this is none of the above, override the content with "None of the above"
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    isNoneOfTheAbove?: boolean;
}`,signature:{properties:[{key:"content",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0},description:`An opaque string that uniquely identifies this choice within
the radio widget. The format of this ID is subject to change.`},{key:"rationale",value:{name:"string",required:!1}},{key:"correct",value:{name:"boolean",required:!1}},{key:"isNoneOfTheAbove",value:{name:"boolean",required:!1}}]}}],raw:"PerseusRadioChoice[]",required:!0}},{key:"hasNoneOfTheAbove",value:{name:"boolean",required:!1}},{key:"countChoices",value:{name:"boolean",required:!1}},{key:"numCorrect",value:{name:"number",required:!1}},{key:"randomize",value:{name:"boolean",required:!1}},{key:"multipleSelect",value:{name:"boolean",required:!1}},{key:"deselectEnabled",value:{name:"boolean",required:!1}}]}}}}],displayName:"RadioEditor",props:{apiOptions:{required:!0,tsType:{name:"Readonly",elements:[{name:"signature",type:"object",raw:`{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}`,signature:{properties:[{key:"isArticle",value:{name:"boolean",required:!1}},{key:"onFocusChange",value:{name:"signature",type:"function",raw:`(
    newFocusPath: FocusPath,
    oldFocusPath: FocusPath,
    keypadHeight?: number,
    focusedElement?: HTMLElement,
) => unknown`,signature:{arguments:[{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"newFocusPath"},{type:{name:"union",raw:"ReadonlyArray<string> | null | undefined",elements:[{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},{name:"null"},{name:"undefined"}]},name:"oldFocusPath"},{type:{name:"number"},name:"keypadHeight"},{type:{name:"HTMLElement"},name:"focusedElement"}],return:{name:"unknown"}},required:!1}},{key:"GroupMetadataEditor",value:{name:"ReactComponentType",raw:"React.ComponentType<StubTagEditorType>",elements:[{name:"any"}],required:!1},description:"@deprecated - metadata is no longer used by the Group widget"},{key:"showAlignmentOptions",value:{name:"boolean",required:!1}},{key:"readOnly",value:{name:"boolean",required:!1},description:`A boolean that indicates whether the associated problem has been
answered correctly and should no longer be interactive.`},{key:"answerableCallback",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1}},{key:"getAnotherHint",value:{name:"signature",type:"function",raw:"() => unknown",signature:{arguments:[],return:{name:"unknown"}},required:!1}},{key:"interactionCallback",value:{name:"signature",type:"function",raw:"(widgetData: {[widgetId: string]: any}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{[widgetId: string]: any}",signature:{properties:[{key:{name:"string"},value:{name:"any",required:!0}}]}},name:"widgetData"}],return:{name:"void"}},required:!1}},{key:"groupAnnotator",value:{name:"signature",type:"function",raw:"(groupNumber: number, widgetId: string) => React.ReactNode",signature:{arguments:[{type:{name:"number"},name:"groupNumber"},{type:{name:"string"},name:"widgetId"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`A function that takes in the relative problem number (starts at
0 and is incremented for each group widget), and the ID of the
group widget, then returns a react component that will be added
immediately above the renderer in the group widget. If the
function returns null, no annotation will be added.`},{key:"imagePlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If imagePlaceholder is set, Perseus will render the placeholder instead
of the image node.`},{key:"widgetPlaceholder",value:{name:"ReactReactNode",raw:"React.ReactNode",required:!1},description:`If widgetPlaceholder is set, Perseus will render the placeholder instead
of the widget node.`},{key:"baseElements",value:{name:"signature",type:"object",raw:`{
    /**
     * The <Link /> component provided here must adhere to the same
     * interface as React's base <a /> component.
     */
    Link: React.ComponentType<any>;
}`,signature:{properties:[{key:"Link",value:{name:"ReactComponentType",raw:"React.ComponentType<any>",elements:[{name:"any"}],required:!0},description:`The <Link /> component provided here must adhere to the same
interface as React's base <a /> component.`}]},required:!1},description:`Base React elements that can be used in place of the standard DOM
DOM elements. For example, when provided, <Link /> will be used
in place of <a />. This allows clients to provide pre-styled
components or components with custom behavior.`},{key:"imagePreloader",value:{name:"signature",type:"function",raw:"(dimensions: Dimensions) => React.ReactNode",signature:{arguments:[{type:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]}},name:"dimensions"}],return:{name:"ReactReactNode",raw:"React.ReactNode"}},required:!1},description:`Function that takes dimensions and returns a React component
to display while an image is loading.`},{key:"trackInteraction",value:{name:"signature",type:"function",raw:"(args: TrackInteractionArgs) => void",signature:{arguments:[{type:{name:"intersection",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
} & Partial<TrackingGradedGroupExtraArguments> &
    Partial<TrackingSequenceExtraArguments>`,elements:[{name:"signature",type:"object",raw:`{
    // The widget type that this interaction originates from
    type: string;
    // The widget id that this interaction originates from
    id: string;

    correct?: boolean;

    // Tracking args are all optional here because we don't know which
    // widgets originated the call, and thus can't know what extra
    // arguments will be included!
}`,signature:{properties:[{key:"type",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0}},{key:"correct",value:{name:"boolean",required:!1}}]}},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    status: "correct" | "incorrect" | "invalid";
}`,signature:{properties:[{key:"status",value:{name:"union",raw:'"correct" | "incorrect" | "invalid"',elements:[{name:"literal",value:'"correct"'},{name:"literal",value:'"incorrect"'},{name:"literal",value:'"invalid"'}],required:!0}}]}}],raw:"Partial<TrackingGradedGroupExtraArguments>"},{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    visible: number;
}`,signature:{properties:[{key:"visible",value:{name:"number",required:!0}}]}}],raw:"Partial<TrackingSequenceExtraArguments>"}]},name:"args"}],return:{name:"void"}},required:!1},description:`A function that is called when the user has interacted with a widget. It
also includes any extra parameters that the originating widget provided.
This is used for keeping track of widget interactions.`},{key:"customKeypad",value:{name:"boolean",required:!1},description:`A boolean that indicates whether or not a custom keypad is
being used.  For mobile web this will be the ProvidedKeypad
component.  In this situation we use the MathInput component
from the math-input repo instead of the existing perseus math
input components.`},{key:"nativeKeypadProxy",value:{name:"signature",type:"function",raw:"(blur: () => void) => KeypadAPI",signature:{arguments:[{type:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},name:"blur"}],return:{name:"KeypadAPI"}},required:!1},description:`If this is provided, it is called instead of appending an instance
of \`math-input\`'s keypad to the body. This is used by the native
apps so they can have the keypad be defined on the native side.
It is called with an function that, when called, blurs the input,
and is expected to return an object of the shape
keypadElementPropType from math-input/src/prop-types.js.`},{key:"isMobile",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile styling."},{key:"isMobileApp",value:{name:"boolean",required:!1},description:"Indicates whether or not to use mobile app styling."},{key:"setDrawingAreaAvailable",value:{name:"signature",type:"function",raw:"(arg1: boolean) => unknown",signature:{arguments:[{type:{name:"boolean"},name:"arg1"}],return:{name:"unknown"}},required:!1},description:`A function, called with a bool indicating whether use of the
drawing area (scratchpad) should be allowed/disallowed.

Previously handled by \`Khan.scratchpad.enable/disable\``},{key:"hintProgressColor",value:{name:"string",required:!1},description:"The color used for the hint progress indicator (eg. 1 / 3)"},{key:"canScrollPage",value:{name:"boolean",required:!1},description:`Whether this Renderer is allowed to auto-scroll the rest of the
page. For example, if this is enabled, the most recently used
radio widget will attempt to keep the "selected" answer in view
after entering review mode.

Defaults to \`false\`.`},{key:"editorChangeDelay",value:{name:"number",required:!1},description:`The value in milliseconds by which the local state of content
in a editor is delayed before propagated to a prop. For example,
when text is typed in the text area of an Editor component,
there will be a delay equal to the value of \`editorChangeDelay\`
before the change is propagated. This is added for better
responsiveness of the editor when used in certain contexts such
as StructuredItem exercises where constant re-rendering for each
keystroke caused text typed in the text area to appear in it
only after a good few seconds.`},{key:"flags",value:{name:"Record",elements:[{name:"unknown[number]",raw:"(typeof PerseusFeatureFlags)[number]"},{name:"boolean"}],raw:"Record<(typeof PerseusFeatureFlags)[number], boolean>",required:!1},description:`Feature flags that can be passed from consuming application.
Define the feature flag name in packages/perseus-core/src/feature-flags.ts`}]}}],raw:`Readonly<{
    isArticle?: boolean;
    onFocusChange?: (
        newFocusPath: FocusPath,
        oldFocusPath: FocusPath,
        keypadHeight?: number,
        focusedElement?: HTMLElement,
    ) => unknown;
    /**
     * @deprecated - metadata is no longer used by the Group widget
     */
    GroupMetadataEditor?: React.ComponentType<StubTagEditorType>;
    showAlignmentOptions?: boolean;
    /**
     * A boolean that indicates whether the associated problem has been
     * answered correctly and should no longer be interactive.
     */
    readOnly?: boolean;
    answerableCallback?: (arg1: boolean) => unknown;
    getAnotherHint?: () => unknown;
    interactionCallback?: (widgetData: {[widgetId: string]: any}) => void;
    /**
     * A function that takes in the relative problem number (starts at
     * 0 and is incremented for each group widget), and the ID of the
     * group widget, then returns a react component that will be added
     * immediately above the renderer in the group widget. If the
     * function returns null, no annotation will be added.
     */
    groupAnnotator?: (groupNumber: number, widgetId: string) => React.ReactNode;
    /**
     * If imagePlaceholder is set, Perseus will render the placeholder instead
     * of the image node.
     */
    imagePlaceholder?: React.ReactNode;
    /**
     * If widgetPlaceholder is set, Perseus will render the placeholder instead
     * of the widget node.
     */
    widgetPlaceholder?: React.ReactNode;
    /**
     * Base React elements that can be used in place of the standard DOM
     * DOM elements. For example, when provided, <Link /> will be used
     * in place of <a />. This allows clients to provide pre-styled
     * components or components with custom behavior.
     */
    baseElements?: {
        /**
         * The <Link /> component provided here must adhere to the same
         * interface as React's base <a /> component.
         */
        Link: React.ComponentType<any>;
    };
    /**
     * Function that takes dimensions and returns a React component
     * to display while an image is loading.
     */
    imagePreloader?: (dimensions: Dimensions) => React.ReactNode;
    /**
     * A function that is called when the user has interacted with a widget. It
     * also includes any extra parameters that the originating widget provided.
     * This is used for keeping track of widget interactions.
     */
    trackInteraction?: (args: TrackInteractionArgs) => void;
    /**
     * A boolean that indicates whether or not a custom keypad is
     * being used.  For mobile web this will be the ProvidedKeypad
     * component.  In this situation we use the MathInput component
     * from the math-input repo instead of the existing perseus math
     * input components.
     */
    customKeypad?: boolean;
    /**
     * If this is provided, it is called instead of appending an instance
     * of \`math-input\`'s keypad to the body. This is used by the native
     * apps so they can have the keypad be defined on the native side.
     * It is called with an function that, when called, blurs the input,
     * and is expected to return an object of the shape
     * keypadElementPropType from math-input/src/prop-types.js.
     */
    nativeKeypadProxy?: (blur: () => void) => KeypadAPI;
    /** Indicates whether or not to use mobile styling. */
    isMobile?: boolean;
    /** Indicates whether or not to use mobile app styling. */
    isMobileApp?: boolean;
    /** A function, called with a bool indicating whether use of the
     * drawing area (scratchpad) should be allowed/disallowed.
     *
     * Previously handled by \`Khan.scratchpad.enable/disable\`
     */
    setDrawingAreaAvailable?: (arg1: boolean) => unknown;
    /** The color used for the hint progress indicator (eg. 1 / 3) */
    hintProgressColor?: string;
    /**
     * Whether this Renderer is allowed to auto-scroll the rest of the
     * page. For example, if this is enabled, the most recently used
     * radio widget will attempt to keep the "selected" answer in view
     * after entering review mode.
     *
     * Defaults to \`false\`.
     */
    canScrollPage?: boolean;
    /**
     * The value in milliseconds by which the local state of content
     * in a editor is delayed before propagated to a prop. For example,
     * when text is typed in the text area of an Editor component,
     * there will be a delay equal to the value of \`editorChangeDelay\`
     * before the change is propagated. This is added for better
     * responsiveness of the editor when used in certain contexts such
     * as StructuredItem exercises where constant re-rendering for each
     * keystroke caused text typed in the text area to appear in it
     * only after a good few seconds.
     */
    editorChangeDelay?: number;
    /**
     * Feature flags that can be passed from consuming application.
     * Define the feature flag name in packages/perseus-core/src/feature-flags.ts
     */
    flags?: Record<(typeof PerseusFeatureFlags)[number], boolean>;
}>`},description:""},countChoices:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},choices:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    // Translatable Markdown; The label for this choice
    content: string;
    /**
     * An opaque string that uniquely identifies this choice within
     * the radio widget. The format of this ID is subject to change.
     */
    id: string;
    // Translatable Markdown; Rationale to give the user when they get it wrong
    rationale?: string;
    // Whether this option is a correct answer or not
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    correct?: boolean;
    // If this is none of the above, override the content with "None of the above"
    // NOTE: perseus_data.go says this is required even though it isn't necessary.
    isNoneOfTheAbove?: boolean;
}`,signature:{properties:[{key:"content",value:{name:"string",required:!0}},{key:"id",value:{name:"string",required:!0},description:`An opaque string that uniquely identifies this choice within
the radio widget. The format of this ID is subject to change.`},{key:"rationale",value:{name:"string",required:!1}},{key:"correct",value:{name:"boolean",required:!1}},{key:"isNoneOfTheAbove",value:{name:"boolean",required:!1}}]}}],raw:"PerseusRadioChoice[]"},description:"",defaultValue:{value:`[
    {content: "", id: "radio-choice-0"},
    {content: "", id: "radio-choice-1"},
    {content: "", id: "radio-choice-2"},
    {content: "", id: "radio-choice-3"},
]`,computed:!1}},randomize:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},hasNoneOfTheAbove:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},multipleSelect:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},deselectEnabled:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},static:{required:!0,tsType:{name:"boolean"},description:""}}};const{InfoTip:Hg,NumberInput:cu}=Ae,Ug=wp.widget;class Ja extends F.Component{constructor(){super(...arguments);x(this,"numberOfColumns",F.createRef());x(this,"focus",()=>{var n;(n=this.numberOfColumns.current)==null||n.focus()});x(this,"onSizeInput",(n,i)=>{let u=+n||0,p=+i||0;u=Math.min(Math.max(1,u),30),p=Math.min(Math.max(1,p),6);const w=this.props.columns,k=this.props.rows,b=this.props.answers;u<=k?b.length=u:R(u-k).times(function(){b.push(Fe.stringArrayOfSize(w))});function N(B){p<=w?B.length=p:R(p-w).times(function(){B.push("")})}const O=this.props.headers;N(O),R.each(b,N),this.props.onChange({rows:u,columns:p,answers:b,headers:O})});x(this,"serialize",()=>{const n=R.pick(this.props,"headers","rows","columns");return R.extend({},n,{answers:R.map(this.props.answers,R.clone)})})}render(){const n={headers:this.props.headers,onChange:this.props.onChange,userInput:this.props.answers,handleUserInput:i=>{this.props.onChange({answers:i})},apiOptions:this.props.apiOptions,editableHeaders:!0,onFocus:()=>{},onBlur:()=>{},trackInteraction:()=>{},Editor:Pn};return e.jsxs("div",{children:[e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("label",{children:["Number of columns:"," ",e.jsx(cu,{ref:this.numberOfColumns,value:this.props.columns,onChange:i=>{i&&this.onSizeInput(this.props.rows,i)},useArrowKeys:!0})]})}),e.jsx("div",{className:"perseus-widget-row",children:e.jsxs("label",{children:["Number of rows:"," ",e.jsx(cu,{ref:"numberOfRows",value:this.props.rows,onChange:i=>{i&&this.onSizeInput(i,this.props.columns)},useArrowKeys:!0})]})}),e.jsxs("div",{children:[" ","Table of answers:"," ",e.jsx(Hg,{children:e.jsx("p",{children:"The student has to fill out all cells in the table. For partially filled tables create a table using the template, and insert text input boxes as desired."})})]}),e.jsx("div",{children:e.jsx(Ug,{...n})})]})}}x(Ja,"propTypes",{rows:te.number,columns:te.number,headers:te.arrayOf(te.string),answers:te.arrayOf(te.arrayOf(te.string))}),x(Ja,"widgetName","table"),x(Ja,"defaultProps",fp.defaultWidgetOptions);Ja.__docgenInfo={description:"",methods:[{name:"focus",docblock:null,modifiers:[],params:[],returns:null},{name:"onSizeInput",docblock:null,modifiers:[],params:[{name:"numRawRows",optional:!1,type:null},{name:"numRawColumns",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"TableEditor",props:{headers:{defaultValue:{value:'[""]',computed:!1},description:"",type:{name:"arrayOf",value:{name:"string"}},required:!1},rows:{defaultValue:{value:"4",computed:!1},description:"",type:{name:"number"},required:!1},columns:{defaultValue:{value:"1",computed:!1},description:"",type:{name:"number"},required:!1},answers:{defaultValue:{value:`new Array(defaultRows)
.fill(0)
.map(() => new Array(defaultColumns).fill(""))`,computed:!0},description:"",type:{name:"arrayOf",value:{name:"arrayOf",value:{name:"string"}}},required:!1}}};const{InfoTip:Kg}=Ae,Xg=/khanacademy\.org\/.*\/v\/(.*)$/;function Yg(o){const l=Xg.exec(o);return l?l[1]:o}class Za extends F.Component{constructor(){super(...arguments);x(this,"_handleUrlChange",n=>{this.props.onChange({location:Yg(n)})});x(this,"serialize",()=>Ee.serialize.call(this))}render(){return e.jsx("div",{children:e.jsxs("label",{children:["KA Video Slug:"," ",e.jsx(et,{value:this.props.location,style:{width:290},onChange:this._handleUrlChange}),e.jsx(Kg,{children:"KA video URLs will be converted to just the slug."})]})})}}x(Za,"propTypes",{location:te.string,onChange:te.func}),x(Za,"widgetName","video"),x(Za,"defaultProps",vp.defaultWidgetOptions);Za.__docgenInfo={description:"This is the main editor for this widget, to specify all the options.",methods:[{name:"_handleUrlChange",docblock:null,modifiers:[],params:[{name:"url",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"VideoEditor",props:{location:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},onChange:{description:"",type:{name:"func"},required:!1}}};const Jg=[Ra,Fa,Oa,Ea,Da,Jr,Ip,Vt,Ma,za,_a,Ba,Va,jp,oi,di,Fp,Op,Wa,Ga,mi,Ep,Ha,Ua,Ka,Xa,Ya,Dp,Mp,zp,_p,Ja,Za,ci,Uo],ky=()=>{kp(xp),qp(Jg),Cp(),Tp()};export{Jg as A,Ra as C,Oa as D,Pn as E,Va as I,Io as J,Ha as N,Sn as P,ci as R,Du as S,Jr as a,th as b,Ea as c,Da as d,oi as e,di as f,ky as r};
