import{j as e}from"./jsx-runtime-63Ea5SlK.js";import{B as D}from"./choice-Xr-SKHrB.js";import{V as f}from"./index-0DbkllkJ.js";import{S as c}from"./index-nqMmpXbO.js";import{s,c as h}from"./index-deFLJwr4.js";import{L as M,a as N}from"./index-18qWGOW7.js";import{L as V,p as U}from"./locked-figure-aria-cNSSPrLz.js";import{l as E}from"./index-awljIyHI.js";import{P as I,C as W,L as X,a as G}from"./locked-label-settings-6ht0io0O.js";import{C as H}from"./color-select-aUifoW8Y.js";import{C as J,g as K,j as Q,a as Y}from"./util-HzFZ8oS9.js";import{L as q}from"./labeled-switch-JhwyK92a.js";const T=k=>{var L,C,P;const{flags:i,headerLabel:j,coord:l,color:m,filled:v=!0,labels:n,ariaLabel:S,onChangeProps:u,onMove:w,onRemove:g,showPoint:y,error:F,expanded:_,onTogglePoint:x,onToggle:z}=k,d=!w&&!g;async function A(){let a=`Point${await Q(n)} at (${l[0]}, ${l[1]})`;const o=Y(m);return a+=o,a}function R(r){const a={color:r};n&&(a.labels=n.map(o=>({...o,color:r}))),u(a)}function B(r){const a=r[0]-l[0],o=r[1]-l[1],p={coord:r};n&&(p.labels=n.map(b=>({...b,coord:[b.coord[0]+a,b.coord[1]+o]}))),u(p)}function $(r,a){if(!n)return;const o=[...n];o[a]={...n[a],...r},u({labels:o})}function O(r){if(!n)return;const a=n.filter((o,p)=>p!==r);u({labels:a})}return e.jsxs(I,{expanded:_,onToggle:z,containerStyle:d?t.definingContainer:void 0,panelStyle:d?t.definingPanel:void 0,header:e.jsxs(f,{style:t.row,children:[e.jsx(M,{children:`${j||"Point"} (${l[0]}, ${l[1]})`}),e.jsx(c,{size:s.xSmall_8}),e.jsx(J,{color:m,filled:v})]}),children:[e.jsx(W,{coord:l,style:t.spaceUnder,onChange:B,error:!!F}),x&&e.jsx(q,{label:"show point on graph",checked:!!y,style:y&&t.spaceUnder,onChange:x}),(!d||y)&&e.jsxs(e.Fragment,{children:[e.jsx(H,{selectedValue:m,onChange:R,style:t.spaceUnder}),e.jsx(q,{label:"open point",checked:!v,onChange:r=>{u({filled:!r})}})]}),!d&&((L=i==null?void 0:i.mafs)==null?void 0:L["locked-figures-aria"])&&e.jsxs(e.Fragment,{children:[e.jsx(c,{size:s.small_12}),e.jsx(f,{style:t.horizontalRule}),e.jsx(V,{ariaLabel:S,getPrepopulatedAriaLabel:A,onChangeProps:r=>{u(r)}})]}),(!d&&((C=i==null?void 0:i.mafs)==null?void 0:C["locked-point-labels"])||d&&((P=i==null?void 0:i.mafs)==null?void 0:P["locked-line-labels"]))&&e.jsxs(e.Fragment,{children:[e.jsx(c,{size:s.xxxSmall_4}),e.jsx(f,{style:t.horizontalRule}),e.jsx(c,{size:s.small_12}),e.jsx(N,{children:"Visible labels"}),n==null?void 0:n.map((r,a)=>e.jsx(X,{...r,containerStyle:!d&&t.lockedPointLabelContainer,expanded:!0,onChangeProps:o=>{$(o,a)},onRemove:()=>{O(a)}})),e.jsx(D,{kind:"tertiary",startIcon:U,onClick:()=>{const r={...K("label"),coord:[l[0]+.5,l[1]-1*((n==null?void 0:n.length)??0)],color:m};u({labels:[...n??[],r]})},style:t.addButton,children:"Add visible label"})]}),g&&e.jsx(G,{figureType:k.type,onMove:w,onRemove:g})]})},t=E.StyleSheet.create({definingContainer:{marginTop:s.xSmall_8,marginBottom:0,marginLeft:-s.xxxSmall_4,marginRight:-s.xxxSmall_4,backgroundColor:h.white},definingPanel:{paddingBottom:s.xxSmall_6},lockedPointLabelContainer:{backgroundColor:h.white},row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:s.xSmall_8},addButton:{alignSelf:"start"},horizontalRule:{height:1,backgroundColor:h.offBlack16}}),me=T;T.__docgenInfo={description:"",methods:[],displayName:"LockedPointSettings",props:{type:{required:!0,tsType:{name:"literal",value:'"point"'},description:""},coord:{required:!0,tsType:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}]},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},filled:{required:!0,tsType:{name:"boolean"},description:""},labels:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},flags:{required:!1,tsType:{name:'Readonly["flags"]',raw:'APIOptions["flags"]'},description:"Optional flags to determine which features are enabled."},headerLabel:{required:!1,tsType:{name:"string"},description:`Optional label for the point to display in the header summary.
Defaults to "Point".`},showPoint:{required:!1,tsType:{name:"boolean"},description:"Whether the extra point settings are toggled open."},error:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"Optional error message to display."},onTogglePoint:{required:!1,tsType:{name:"signature",type:"function",raw:"(newValue) => void",signature:{arguments:[{name:"newValue"}],return:{name:"void"}}},description:"Called when the extra settings toggle switch is changed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPointType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "point";
    coord: Coord;
    color: LockedFigureColor;
    filled: boolean;
    labels?: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"point"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"filled",value:{name:"boolean",required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[number, number]",elements:[{name:"number"},{name:"number"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!1}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedPointType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onMove:{required:!1,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when the point is moved."},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the point is removed."}}};export{me as L};
