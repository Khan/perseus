import{a as y,j as e,F as A}from"./jsx-runtime-FVsy8kgq.js";import"./util-XcxTwqb0.js";import{e as I}from"./svg-image-Rjw-_QTV.js";import{B as j}from"./choice-j6w4LtFN.js";import{V as m}from"./index-6h5t6F0w.js";import{S as z}from"./index-qUyqkRvh.js";import{s,c as u}from"./index-deFLJwr4.js";import{L as w,a as E}from"./index-h_CiYGGb.js";import{p as D}from"./plus-circle-JCxQSzSv.js";import{l as O}from"./index-awljIyHI.js";import{v as d}from"./index-IIMKO4_x.js";import{C as T}from"./coordinate-pair-input-23mAp7kL.js";import{P as L,L as N}from"./locked-figure-settings-actions-IWjaGpUw.js";import{C as U}from"./color-select-YZ9W64bA.js";import{L as W}from"./line-swatch-Ph0gVTi_.js";import{L as G}from"./locked-label-settings-jFJkNe8h.js";import{g as H}from"./util--x7fOvRO.js";const J="The vector cannot have length 0.",k=p=>{var S;const{flags:g,points:v,color:h,labels:a,onChangeProps:c,onMove:P,onRemove:_}=p,[i,l]=v,F=`Vector (${i[0]}, ${i[1]}), (${l[0]}, ${l[1]})`,f=I(i,l);function x(o,n){if(typeof o<"u"){const t=[...v];t[n]=[...o];const b=d.midpoint(i,l),M=d.midpoint(t[0],t[1]),R=d.sub(M,b),V=a.map(C=>({...C,coord:d.add(C.coord,R)}));c({points:t,labels:V})}}function $(o){const n={color:o};n.labels=a.map(t=>({...t,color:o})),c(n)}function q(o,n){const t=[...a];t[n]={...a[n],...o},c({labels:t})}function B(o){const n=a.filter((t,b)=>b!==o);c({labels:n})}return y(L,{expanded:p.expanded,onToggle:p.onToggle,header:y(m,{style:r.row,children:[e(w,{children:F}),e(z,{size:s.xSmall_8}),e(W,{color:h,lineStyle:"solid"})]}),children:[e(m,{style:[r.row,r.spaceUnder],children:e(U,{selectedValue:h,onChange:$})}),f&&e(E,{style:r.errorText,children:J}),e(L,{expanded:!0,containerStyle:r.container,panelStyle:r.accordionPanel,header:e(m,{style:r.row,children:e(w,{children:`Tail (${i[0]}, ${i[1]})`})}),children:e(T,{coord:i,error:f,onChange:o=>{x(o,0)}})}),e(L,{expanded:!0,containerStyle:r.container,panelStyle:r.accordionPanel,header:e(m,{style:r.row,children:e(w,{children:`Tip (${l[0]}, ${l[1]})`})}),children:e(T,{coord:l,error:f,onChange:o=>{x(o,1)}})}),((S=g==null?void 0:g.mafs)==null?void 0:S["locked-vector-labels"])&&y(A,{children:[e(m,{style:r.horizontalRule}),a.map((o,n)=>e(G,{...o,expanded:!0,onChangeProps:t=>{q(t,n)},onRemove:()=>{B(n)},containerStyle:r.labelContainer})),e(j,{kind:"tertiary",startIcon:D,onClick:()=>{const o=[0,-1],n=d.add(d.scale(o,a.length),d.midpoint(i,l)),t={...H("label"),coord:n,color:h};c({labels:[...a,t]})},style:r.addButton,children:"Add visible label"})]}),e(N,{figureType:p.type,onMove:P,onRemove:_})]})},r=O.StyleSheet.create({accordionPanel:{paddingBottom:s.medium_16},container:{marginTop:s.xSmall_8,marginBottom:0,marginLeft:-s.xxxSmall_4,marginRight:-s.xxxSmall_4,backgroundColor:u.white},errorText:{color:u.red,marginTop:s.xSmall_8},row:{flexDirection:"row",alignItems:"center"},addButton:{alignSelf:"start"},horizontalRule:{marginTop:s.small_12,marginBottom:s.xxxSmall_4,height:1,backgroundColor:u.offBlack16},labelContainer:{backgroundColor:u.white}}),pe=k;k.__docgenInfo={description:"",methods:[],displayName:"LockedVectorSettings",props:{flags:{required:!1,tsType:{name:'APIOptions["flags"]',raw:'APIOptions["flags"]'},description:""},showLabelsFlag:{required:!1,tsType:{name:"boolean"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedFigure>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedFigure"}],raw:"Partial<LockedFigure>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (points, color, etc.) are updated."}}};export{pe as L};
