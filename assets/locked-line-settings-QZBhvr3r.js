import{a as t,j as e,F as O}from"./jsx-runtime-BGVbfQ2Z.js";import"./util-WvQWLN3r.js";import"./index-default-4_ZsnO94.js";import{e as U}from"./svg-image-xT-AdWRe.js";import{V as b}from"./index-oMd7J_hd.js";import{S as _,O as m}from"./answer-choices-pUTJh6qw.js";import{S as h}from"./index-D5BWnz-K.js";import{s as l,c as L}from"./index-lUErx3pE.js";import{L as T,a as w}from"./index-B3k62xyQ.js";import{l as $}from"./index-awljIyHI.js";import{C as F}from"./color-select-pXxcu-5c.js";import{C as A}from"./color-swatch-Wx1G5rrw.js";import{L as I,C as B,a as D}from"./locked-figure-settings-actions-1VXcFq7Z.js";import{L as q}from"./labeled-switch-1CfqzVIm.js";import{L as N}from"./line-swatch-NqYdmc4g.js";const k=r=>{const{coord:d,color:u,filled:p=!0,label:f,showPoint:c="false",error:x,onChangeProps:a,onTogglePoint:y}=r;function i(o){a({color:o})}return t(I,{expanded:r.expanded,onToggle:r.onToggle,containerStyle:g.container,panelStyle:g.accordionPanel,header:t(b,{style:g.row,children:[e(T,{children:`${f||"Point"} (${d[0]}, ${d[1]})`}),e(h,{size:l.xSmall_8}),c&&e(A,{color:u,filled:p})]}),children:[e(B,{coord:d,error:!!x,onChange:o=>{a({coord:o})}}),y&&e(q,{label:"show point on graph",checked:!!c,style:c&&g.spaceUnder,onChange:y}),c&&t(O,{children:[e(F,{selectedValue:u,onChange:i,style:g.spaceUnder}),e(q,{label:"open point",checked:!p,onChange:o=>{a({filled:!o})}})]})]})},g=$.StyleSheet.create({container:{marginTop:l.xSmall_8,marginBottom:0,marginLeft:-l.xxxSmall_4,marginRight:-l.xxxSmall_4,backgroundColor:L.white},accordionPanel:{paddingBottom:l.medium_16},row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:l.xSmall_8}});try{definingpointsettings.displayName="definingpointsettings",definingpointsettings.__docgenInfo={description:"",displayName:"definingpointsettings",props:{showM2Features:{defaultValue:null,description:"",name:"showM2Features",required:!1,type:{name:"boolean"}},expanded:{defaultValue:null,description:"Whether this accordion is expanded.",name:"expanded",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"Called when the accordion is expanded or collapsed.",name:"onToggle",required:!1,type:{name:"((expanded: boolean) => void)"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:'"point"'}},coord:{defaultValue:null,description:"",name:"coord",required:!0,type:{name:"Coord"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"enum",value:[{value:'"blue"'},{value:'"green"'},{value:'"grayH"'},{value:'"purple"'},{value:'"pink"'},{value:'"orange"'},{value:'"red"'}]}},filled:{defaultValue:null,description:"",name:"filled",required:!0,type:{name:"boolean"}},label:{defaultValue:null,description:`Optional label for the point to display in the header summary.
Defaults to "Point".`,name:"label",required:!0,type:{name:"string"}},showPoint:{defaultValue:null,description:"Whether the extra point settings are toggled open.",name:"showPoint",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Optional error message to display.",name:"error",required:!1,type:{name:"string | null"}},onTogglePoint:{defaultValue:null,description:"Called when the extra settings toggle switch is changed.",name:"onTogglePoint",required:!1,type:{name:"((newValue: any) => void)"}},onChangeProps:{defaultValue:null,description:"Called when the props (coords, color, etc.) are updated.",name:"onChangeProps",required:!0,type:{name:"(newProps: Partial<LockedPointType>) => void"}}}}}catch{}const v="The line cannot have length 0.",R=r=>{const{kind:d,points:u,color:p,lineStyle:f="solid",showPoint1:c,showPoint2:x,onChangeProps:a,onRemove:y}=r,[i,o]=u,z=`${d.charAt(0).toUpperCase()+d.slice(1)} (${i.coord[0]},
        ${i.coord[1]}), (${o.coord[0]}, ${o.coord[1]})`,P=U(i.coord,o.coord);function C(n,S){const V=[...u];V[S]={...u[S],...n},a({points:V})}function M(n){a({color:n,points:[{...i,color:n},{...o,color:n}]})}return t(I,{expanded:r.expanded,onToggle:r.onToggle,header:t(b,{style:s.row,children:[e(T,{children:z}),e(h,{size:l.xSmall_8}),e(N,{color:p,lineStyle:f})]}),children:[t(w,{tag:"label",style:[s.row,s.spaceUnder],children:["kind",e(h,{size:l.xxxSmall_4}),t(_,{selectedValue:d,onChange:n=>a({kind:n}),placeholder:"",children:[e(m,{value:"line",label:"line"}),e(m,{value:"ray",label:"ray"}),e(m,{value:"segment",label:"segment"})]})]}),t(b,{style:s.row,children:[e(F,{selectedValue:p,onChange:M}),e(h,{size:l.small_12}),t(w,{tag:"label",style:s.row,children:["style",e(h,{size:l.xxxSmall_4}),t(_,{selectedValue:f,onChange:n=>a({lineStyle:n}),placeholder:"",style:s.selectMarginOffset,children:[e(m,{value:"solid",label:"solid"}),e(m,{value:"dashed",label:"dashed"})]})]})]}),P&&e(w,{style:s.errorText,children:v}),e(k,{label:"Point 1",showPoint:c,error:P?v:null,...i,onTogglePoint:n=>a({showPoint1:n}),onChangeProps:n=>C(n,0)}),e(k,{label:"Point 2",showPoint:x,error:P?v:null,...o,onTogglePoint:n=>a({showPoint2:n}),onChangeProps:n=>C(n,1)}),e(D,{onRemove:y,figureAriaLabel:`locked line defined by
                    ${i.coord[0]}, ${i.coord[1]} and
                    ${o.coord[0]}, ${o.coord[1]}.`})]})},s=$.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:l.xSmall_8},selectMarginOffset:{marginInlineEnd:-l.xxxSmall_4},errorText:{color:L.red}}),te=R;try{lockedlinesettings.displayName="lockedlinesettings",lockedlinesettings.__docgenInfo={description:"",displayName:"lockedlinesettings",props:{type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:'"line"'}},kind:{defaultValue:null,description:"",name:"kind",required:!0,type:{name:"enum",value:[{value:'"line"'},{value:'"ray"'},{value:'"segment"'}]}},points:{defaultValue:null,description:"",name:"points",required:!0,type:{name:"[point1: LockedPointType, point2: LockedPointType]"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"enum",value:[{value:'"blue"'},{value:'"green"'},{value:'"grayH"'},{value:'"purple"'},{value:'"pink"'},{value:'"orange"'},{value:'"red"'}]}},lineStyle:{defaultValue:null,description:"",name:"lineStyle",required:!0,type:{name:"enum",value:[{value:'"solid"'},{value:'"dashed"'}]}},showPoint1:{defaultValue:null,description:"",name:"showPoint1",required:!0,type:{name:"boolean"}},showPoint2:{defaultValue:null,description:"",name:"showPoint2",required:!0,type:{name:"boolean"}},showM2Features:{defaultValue:null,description:"",name:"showM2Features",required:!1,type:{name:"boolean"}},expanded:{defaultValue:null,description:"Whether this accordion is expanded.",name:"expanded",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"Called when the accordion is expanded or collapsed.",name:"onToggle",required:!1,type:{name:"((expanded: boolean) => void)"}},onRemove:{defaultValue:null,description:"Called when the delete button is pressed.",name:"onRemove",required:!0,type:{name:"() => void"}},onChangeProps:{defaultValue:null,description:"Called when the props (points, color, etc.) are updated.",name:"onChangeProps",required:!0,type:{name:"(newProps: Partial<LockedFigure>) => void"}}}}}catch{}export{te as L};
