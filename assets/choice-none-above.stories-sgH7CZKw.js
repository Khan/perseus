import{j as m}from"./jsx-runtime-FVsy8kgq.js";import{a as s}from"./chunk-WFFRPTHA-zlNDxfrq.js";import{C as a}from"./choice-none-above-y1zpbT3B.js";import"./index-TT1qJ6UJ.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./preview-errors-7FWlPnjy.js";import"./index-PPLHz8o0.js";import"./i18n-context-P7VpLqM1.js";import"./renderer-L23s5OFx.js";import"./version-akiLXZts.js";import"./util-EodL-OyW.js";import"./jquery-yG1GhClm.js";import"./invariant-bu5zBsRS.js";import"./index-J2t_5nK1.js";import"./index-dnMhQZ-1.js";import"./index-7vsPyIck.js";import"./asset-context-I7yIqWki.js";import"./svg-image-WHPtcgo-.js";import"./index-awljIyHI.js";import"./index-6h5t6F0w.js";import"./index-deFLJwr4.js";import"./dependencies-8XILypbq.js";import"./fixed-to-responsive-1fSZ1n--.js";import"./constants-I_nlPaPx.js";import"./client-rbWgHzHN.js";import"./inline-icon-tKY1iMkH.js";import"./icon-paths-AuJwhOz7.js";import"./image-loader-mgyZcN0j.js";import"./tex-VP4hirbI.js";import"./zoomable-CA1NzpZD.js";import"./zoomable-tex-MZi7Hqbp.js";import"./perseus-api-mOiZT07d.js";import"./index-0C4KXdeC.js";import"./stub-tag-editor-Hmby24Jq.js";import"./text-list-editor-pe7AGDAl.js";import"./lint-I_5mQeXl.js";import"./choice-zricoHUw.js";import"./react-router-dom-W_e8xVUu.js";import"./index-tvtfaFq4.js";import"./index-o3wWn3Y5.js";import"./index-h_CiYGGb.js";import"./index-ngddCaVG.js";import"./index-rfN0X25E.js";import"./index-xuPsLuPk.js";import"./index-WNT3sUKf.js";import"./index-qUyqkRvh.js";import"./index-BPSWBbj5.js";import"./index-YCTzZMik.js";import"./index-CkAxGj88.js";import"./Popper-kGnKOid7.js";import"./icon-YuYiVxsK.js";import"./media-queries-MaBBbpNq.js";import"./choice-icon-zdhTnbOd.js";import"./focus-ring-sgSTt4fM.js";import"./option-status-vrNywrR6.js";const lo={title:"Perseus/Widgets/Radio/Choice None of the Above",args:{showContent:!1,content:"This is a possible choice"}},n={checked:!1,rationale:"This is a good rational",correct:!0,disabled:!1,pos:0,reviewMode:!1,showRationale:!1,showCorrectness:!1,multipleSelect:!1,crossedOut:!1,previouslyAnswered:!1,apiOptions:{},onChange:s("changed")},o=i=>{const p={...n,...i};return m(a,{...p})};o.__docgenInfo={description:"",methods:[],displayName:"Example",props:{content:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},showContent:{required:!1,tsType:{name:"boolean"},description:""}}};var t,r,e;o.parameters={...o.parameters,docs:{...(t=o.parameters)==null?void 0:t.docs,source:{originalSource:`(args: StoryArgs): React.ReactElement => {
  const combineProps = ({
    ...ChoiceDefaults,
    ...args
  } as const);
  return <ChoiceNoneAbove {...combineProps} />;
}`,...(e=(r=o.parameters)==null?void 0:r.docs)==null?void 0:e.source}}};const fo=["Example"];export{o as Example,fo as __namedExportsOrder,lo as default};
