import{j as d,V as u,n as h,cz as s,e as c,s as i,bP as p,cC as f,cD as y}from"./iframe-CvVOl_wM.js";import"./item-version-CM-vdOGJ.js";import"./article-renderer-ifo9MFST.js";import"./server-item-renderer-BWrjrsdx.js";import"./hints-renderer-vP4aZU-y.js";const b=e=>{const{color:o,filled:t=!0,decorative:n=!1}=e;return d.jsx(u,{"aria-label":n?void 0:`${o}, ${t?"filled":"open"}`,style:[w.colorSwatch,{border:`4px solid ${s[o]}`,backgroundColor:t?s[o]:c.white}]})},w=h.StyleSheet.create({colorSwatch:{outline:`2px solid ${c.offWhite}`,borderRadius:"50%",width:i.large_24,height:i.large_24}});b.__docgenInfo={description:"",methods:[],displayName:"ColorSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},filled:{required:!1,tsType:{name:"boolean"},description:""},decorative:{required:!1,tsType:{name:"boolean"},description:""}}};const r="grayH";function l(e){switch(e){case"point":return{type:"point",coord:[0,0],color:r,filled:!0,labels:[]};case"line":return{type:"line",kind:"line",points:[l("point"),{...l("point"),coord:[2,2]}],color:r,lineStyle:"solid",showPoint1:!1,showPoint2:!1,labels:[]};case"vector":return{type:"vector",points:[[0,0],[2,2]],color:r,labels:[]};case"ellipse":return{type:"ellipse",center:[0,0],radius:[1,1],angle:0,color:r,fillStyle:"none",strokeStyle:"solid",labels:[]};case"polygon":return{type:"polygon",points:[[0,2],[-1,0],[1,0]],color:r,showVertices:!1,fillStyle:"none",strokeStyle:"solid",labels:[]};case"function":return{type:"function",color:r,strokeStyle:"solid",equation:"x^2",domain:[-1/0,1/0],directionalAxis:"x",labels:[]};case"label":return{type:"label",coord:[0,0],text:"label",color:r,size:"medium"};default:throw new p(e)}}function C(e,o="solid",t){const n=e==="grayH"?"gray":e;switch(t){case"none":return`. Appearance ${o} ${n} border, with no fill.`;case"white":return`. Appearance ${o} ${n} border, with a white fill.`;case"solid":case"translucent":return`. Appearance ${o} ${n} border, with a ${t} ${n} fill.`;case void 0:return`. Appearance ${o} ${n}.`;default:throw new p(t)}}async function g(e){const o=await f.SpeechRuleEngine.setup("en");let t="";const n=y(e);for(const a of n)switch(a.type){case"math":t+=o.texToSpeech(a.content);break;case"specialCharacter":t+=a.content.length>1?a.content.slice(1):a.content;break;default:t+=a.content;break}return t}async function v(e){if(e.length===0)return"";const o=e.map(n=>g(n.text));return` ${(await Promise.all(o)).join(", ")}`}export{b as C,g as a,C as b,l as g,v as j};
