import{a as r,j as e,F as D}from"./jsx-runtime-BGVbfQ2Z.js";import"./util-EDQcR2F7.js";import{e as N}from"./svg-image-e9ScUZD0.js";import{V as h,u as R}from"./index-4c2J3ov1.js";import{S as T,O as m}from"./answer-choices-S7xRMWa3.js";import{L as F,S as C,C as W,a as j}from"./locked-figure-settings-actions-YNYZLhO-.js";import{s as o,c as U}from"./index-lUErx3pE.js";import{L as M,a as x}from"./index-qh_wob3p.js";import{l as O}from"./index-awljIyHI.js";import{C as z}from"./color-select-8DXorrBN.js";import{C as E}from"./color-swatch-OONT2VsD.js";import{L as I}from"./labeled-switch-Ud4hRrtF.js";import{L as H}from"./line-swatch-TEP3l1x8.js";const $=i=>{const{coord:s,color:c,filled:p=!0,label:f,showPoint:u="false",error:w,range:y,onChangeProps:a,onTogglePoint:P}=i;function d(l){a({color:l})}return r(F,{expanded:i.expanded,onToggle:i.onToggle,containerStyle:g.container,panelStyle:g.accordionPanel,header:r(h,{style:g.row,children:[e(M,{children:`${f||"Point"} (${s[0]}, ${s[1]})`}),e(C,{size:o.xSmall_8}),u&&e(E,{color:c,filled:p})]}),children:[e(W,{coord:s,error:!!w,range:y,onChange:l=>{a({coord:l})}}),P&&e(I,{label:"show point on graph",checked:!!u,style:u&&g.spaceUnder,onChange:P}),u&&r(D,{children:[e(z,{selectedValue:c,onChange:d,style:g.spaceUnder}),e(I,{label:"open point",checked:!p,onChange:l=>{a({filled:!l})}})]})]})},g=O.StyleSheet.create({container:{marginTop:o.xSmall_8,marginBottom:0,marginLeft:-o.xxxSmall_4,marginRight:-o.xxxSmall_4,backgroundColor:U.white},accordionPanel:{paddingBottom:o.medium_16},row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:o.xSmall_8}});try{definingpointsettings.displayName="definingpointsettings",definingpointsettings.__docgenInfo={description:"",displayName:"definingpointsettings",props:{showM2Features:{defaultValue:null,description:"",name:"showM2Features",required:!1,type:{name:"boolean"}},range:{defaultValue:null,description:"The range of the graph. Used to restrict the coordinates.",name:"range",required:!1,type:{name:"[Interval, Interval]"}},onChangeProps:{defaultValue:null,description:`Called when the props (points, color, etc.) are updated.
Called when the props (coords, color, etc.) are updated.`,name:"onChangeProps",required:!0,type:{name:"((newProps: Partial<LockedFigure>) => void) & ((newProps: Partial<LockedPointType>) => void)"}},expanded:{defaultValue:null,description:"Whether this accordion is expanded.",name:"expanded",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"Called when the accordion is expanded or collapsed.",name:"onToggle",required:!1,type:{name:"((expanded: boolean) => void)"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:'"point"'}},coord:{defaultValue:null,description:"",name:"coord",required:!0,type:{name:"Coord"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"enum",value:[{value:'"green"'},{value:'"grayH"'},{value:'"purple"'},{value:'"pink"'},{value:'"red"'}]}},filled:{defaultValue:null,description:"",name:"filled",required:!0,type:{name:"boolean"}},label:{defaultValue:null,description:`Optional label for the point to display in the header summary.
Defaults to "Point".`,name:"label",required:!0,type:{name:"string"}},showPoint:{defaultValue:null,description:"Whether the extra point settings are toggled open.",name:"showPoint",required:!1,type:{name:"boolean"}},error:{defaultValue:null,description:"Optional error message to display.",name:"error",required:!1,type:{name:"string | null"}},onTogglePoint:{defaultValue:null,description:"Called when the extra settings toggle switch is changed.",name:"onTogglePoint",required:!1,type:{name:"((newValue: any) => void)"}}}}}catch{}const b="The line cannot have length 0.",K=i=>{const{kind:s,points:c,color:p,lineStyle:f="solid",showPoint1:u,showPoint2:w,range:y,onChangeProps:a,onRemove:P}=i,[d,l]=c,S=R(),V=S.get("line-kind-select"),q=S.get("line-style-select"),A=`${s.charAt(0).toUpperCase()+s.slice(1)} (${d.coord[0]},
        ${d.coord[1]}), (${l.coord[0]}, ${l.coord[1]})`,v=N(d.coord,l.coord);function k(n,_){const L=[...c];L[_]={...c[_],...n},a({points:L})}function B(n){a({color:n,points:[{...d,color:n},{...l,color:n}]})}return r(F,{expanded:i.expanded,onToggle:i.onToggle,header:r(h,{style:t.row,children:[e(M,{children:A}),e(C,{size:o.xSmall_8}),e(H,{color:p,lineStyle:f})]}),children:[r(h,{style:[t.row,t.spaceUnder],children:[e(x,{htmlFor:V,style:t.label,tag:"label",children:"kind"}),r(T,{id:V,selectedValue:s,onChange:n=>a({kind:n}),placeholder:"",children:[e(m,{value:"line",label:"line"}),e(m,{value:"ray",label:"ray"}),e(m,{value:"segment",label:"segment"})]})]}),r(h,{style:[t.row,t.spaceUnder],children:[e(z,{selectedValue:p,onChange:B}),e(C,{size:o.small_12}),r(h,{style:t.row,children:[e(x,{htmlFor:q,style:t.label,tag:"label",children:"style"}),r(T,{id:q,selectedValue:f,onChange:n=>a({lineStyle:n}),placeholder:"",style:t.selectMarginOffset,children:[e(m,{value:"solid",label:"solid"}),e(m,{value:"dashed",label:"dashed"})]})]})]}),v&&e(x,{style:t.errorText,children:b}),e($,{label:"Point 1",showPoint:u,error:v?b:null,range:y,...d,onTogglePoint:n=>a({showPoint1:n}),onChangeProps:n=>k(n,0)}),e($,{label:"Point 2",showPoint:w,error:v?b:null,range:y,...l,onTogglePoint:n=>a({showPoint2:n}),onChangeProps:n=>k(n,1)}),e(j,{onRemove:P,figureAriaLabel:`locked line defined by
                    ${d.coord[0]}, ${d.coord[1]} and
                    ${l.coord[0]}, ${l.coord[1]}.`})]})},t=O.StyleSheet.create({row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:o.xSmall_8},label:{marginInlineEnd:o.xxxSmall_4},selectMarginOffset:{marginInlineEnd:-o.xxxSmall_4},errorText:{color:U.red}}),de=K;try{lockedlinesettings.displayName="lockedlinesettings",lockedlinesettings.__docgenInfo={description:"",displayName:"lockedlinesettings",props:{type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:'"line"'}},kind:{defaultValue:null,description:"",name:"kind",required:!0,type:{name:"enum",value:[{value:'"line"'},{value:'"ray"'},{value:'"segment"'}]}},points:{defaultValue:null,description:"",name:"points",required:!0,type:{name:"[point1: LockedPointType, point2: LockedPointType]"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"enum",value:[{value:'"green"'},{value:'"grayH"'},{value:'"purple"'},{value:'"pink"'},{value:'"red"'}]}},lineStyle:{defaultValue:null,description:"",name:"lineStyle",required:!0,type:{name:"enum",value:[{value:'"solid"'},{value:'"dashed"'}]}},showPoint1:{defaultValue:null,description:"",name:"showPoint1",required:!0,type:{name:"boolean"}},showPoint2:{defaultValue:null,description:"",name:"showPoint2",required:!0,type:{name:"boolean"}},showM2Features:{defaultValue:null,description:"",name:"showM2Features",required:!1,type:{name:"boolean"}},range:{defaultValue:null,description:"",name:"range",required:!0,type:{name:"[Interval, Interval]"}},onRemove:{defaultValue:null,description:"Called when the delete button is pressed.",name:"onRemove",required:!0,type:{name:"() => void"}},onChangeProps:{defaultValue:null,description:"Called when the props (points, color, etc.) are updated.",name:"onChangeProps",required:!0,type:{name:"(newProps: Partial<LockedFigure>) => void"}},expanded:{defaultValue:null,description:"Whether this accordion is expanded.",name:"expanded",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"Called when the accordion is expanded or collapsed.",name:"onToggle",required:!1,type:{name:"((expanded: boolean) => void)"}}}}}catch{}export{de as L};
