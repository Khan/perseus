import{a as p,j as o,F as b}from"./jsx-runtime-FVsy8kgq.js";import{B as V}from"./choice-XJA1Q6b6.js";import{V as w}from"./index-6h5t6F0w.js";import{S as g}from"./index-qUyqkRvh.js";import{s,c as P}from"./index-deFLJwr4.js";import{L as I,a as U}from"./index-h_CiYGGb.js";import{L as E,p as W}from"./locked-figure-aria-VmkV4f-y.js";import{l as N}from"./index-awljIyHI.js";import{P as G,C as H,L as J,a as K}from"./locked-label-settings-z31X7Dby.js";import{C as Q}from"./color-select-b1y_8Tuk.js";import{C as X,g as Y,j as Z,a as ee}from"./util-Qife8zOO.js";import{L as _}from"./labeled-switch-bnQAcY9g.js";const q=L=>{var x,S,T;const{flags:i,headerLabel:A,coord:l,color:m,filled:C=!0,labels:n,ariaLabel:B,onChangeProps:d,onMove:v,onRemove:h,showPoint:f,error:F,expanded:R,onTogglePoint:k,onToggle:z}=L,c=!v&&!h;async function O(){let a=`Point${await Z(n)} at (${l[0]}, ${l[1]})`;const t=ee(m);return a+=t,a}function $(e){const a={color:e};n&&(a.labels=n.map(t=>({...t,color:e}))),d(a)}function j(e){const a=e[0]-l[0],t=e[1]-l[1],u={coord:e};n&&(u.labels=n.map(y=>({...y,coord:[y.coord[0]+a,y.coord[1]+t]}))),d(u)}function D(e,a){if(!n)return;const t=[...n];t[a]={...n[a],...e},d({labels:t})}function M(e){if(!n)return;const a=n.filter((t,u)=>u!==e);d({labels:a})}return p(G,{expanded:R,onToggle:z,containerStyle:c?r.definingContainer:void 0,panelStyle:c?r.definingPanel:void 0,header:p(w,{style:r.row,children:[o(I,{children:`${A||"Point"} (${l[0]}, ${l[1]})`}),o(g,{size:s.xSmall_8}),o(X,{color:m,filled:C})]}),children:[o(H,{coord:l,style:r.spaceUnder,onChange:j,error:!!F}),k&&o(_,{label:"show point on graph",checked:!!f,style:f&&r.spaceUnder,onChange:k}),(!c||f)&&p(b,{children:[o(Q,{selectedValue:m,onChange:$,style:r.spaceUnder}),o(_,{label:"open point",checked:!C,onChange:e=>{d({filled:!e})}})]}),!c&&((x=i==null?void 0:i.mafs)==null?void 0:x["locked-figures-aria"])&&p(b,{children:[o(g,{size:s.small_12}),o(w,{style:r.horizontalRule}),o(E,{ariaLabel:B,getPrepopulatedAriaLabel:O,onChangeProps:e=>{d(e)}})]}),(!c&&((S=i==null?void 0:i.mafs)==null?void 0:S["locked-point-labels"])||c&&((T=i==null?void 0:i.mafs)==null?void 0:T["locked-line-labels"]))&&p(b,{children:[o(g,{size:s.xxxSmall_4}),o(w,{style:r.horizontalRule}),o(g,{size:s.small_12}),o(U,{children:"Visible labels"}),n==null?void 0:n.map((e,a)=>o(J,{...e,containerStyle:!c&&r.lockedPointLabelContainer,expanded:!0,onChangeProps:t=>{D(t,a)},onRemove:()=>{M(a)}})),o(V,{kind:"tertiary",startIcon:W,onClick:()=>{const e={...Y("label"),coord:[l[0]+.5,l[1]-1*((n==null?void 0:n.length)??0)],color:m};d({labels:[...n??[],e]})},style:r.addButton,children:"Add visible label"})]}),h&&o(K,{figureType:L.type,onMove:v,onRemove:h})]})},r=N.StyleSheet.create({definingContainer:{marginTop:s.xSmall_8,marginBottom:0,marginLeft:-s.xxxSmall_4,marginRight:-s.xxxSmall_4,backgroundColor:P.white},definingPanel:{paddingBottom:s.xxSmall_6},lockedPointLabelContainer:{backgroundColor:P.white},row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:s.xSmall_8},addButton:{alignSelf:"start"},horizontalRule:{height:1,backgroundColor:P.offBlack16}}),ue=q;q.__docgenInfo={description:"",methods:[],displayName:"LockedPointSettings",props:{flags:{required:!1,tsType:{name:'APIOptions["flags"]',raw:'APIOptions["flags"]'},description:"Optional flags to determine which features are enabled."},headerLabel:{required:!1,tsType:{name:"string"},description:`Optional label for the point to display in the header summary.
Defaults to "Point".`},showPoint:{required:!1,tsType:{name:"boolean"},description:"Whether the extra point settings are toggled open."},error:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"Optional error message to display."},onTogglePoint:{required:!1,tsType:{name:"signature",type:"function",raw:"(newValue) => void",signature:{arguments:[{name:"newValue"}],return:{name:"void"}}},description:"Called when the extra settings toggle switch is changed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPointType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedPointType"}],raw:"Partial<LockedPointType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onMove:{required:!1,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when the point is moved."},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the point is removed."}}};export{ue as L};
