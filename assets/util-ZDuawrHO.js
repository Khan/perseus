import"./util-XcxTwqb0.js";import{l as u,s as p}from"./svg-image-Rjw-_QTV.js";import{g as m,b as f,e as y,f as g,h as C,i as x,j as v,k as S,l as F}from"./article-renderer-y3FyHVLE.js";import"./jquery-yG1GhClm.js";import"./phet-simulation-OmyjCAdl.js";import"./version-akiLXZts.js";import"./dependencies-8XILypbq.js";import"./perseus-api--FMzJRa0.js";import"./multi-renderer-0XDv8ANK.js";import"./hints-renderer-phUSAwlE.js";import"./renderer-Bc3o6rku.js";import"./base-radio-uSTZJxUR.js";import"./button-group-nsoLlHtM.js";import"./graph-sgfCFYpv.js";import"./hud-FI3E3dT_.js";import"./icon-YuYiVxsK.js";import"./index-K9BSJPWl.js";import"./inline-icon-tKY1iMkH.js";import"./math-input-5c41KzAV.js";import"./multi-button-group-a0iIfrwx.js";import"./number-input-nAb-9rMQ.js";import"./range-input-_BNU8ZEa.js";import"./text-input-15gEhfDF.js";import"./text-list-editor-pe7AGDAl.js";import"./index-0C4KXdeC.js";import"./i18n-context-W41LcU6B.js";import{w as P}from"./index-J2t_5nK1.js";function N(o){o.focus({preventScroll:!0})}const s="grayH";function c(o){switch(o){case"point":return{type:"point",coord:[0,0],color:s,filled:!0};case"line":return{type:"line",kind:"line",points:[c("point"),{...c("point"),coord:[2,2]}],color:s,lineStyle:"solid",showPoint1:!1,showPoint2:!1};case"vector":return{type:"vector",points:[[0,0],[2,2]],color:s};case"ellipse":return{type:"ellipse",center:[0,0],radius:[1,1],angle:0,color:s,fillStyle:"none",strokeStyle:"solid"};case"polygon":return{type:"polygon",points:[[0,2],[-1,0],[1,0]],color:s,showVertices:!1,fillStyle:"none",strokeStyle:"solid"};case"function":return{type:"function",color:s,strokeStyle:"solid",equation:"x^2",directionalAxis:"x"};case"label":return{type:"label",coord:[0,0],text:"",color:s,size:"medium"};default:throw new P(o)}}function X(o){return o/180*Math.PI}function Y(o){return o/Math.PI*180}function Z(o,t,e){switch(o.type){case"linear":case"ray":return F({...o,startCoords:void 0},t,e);case"segment":return S({...o,startCoords:void 0},t,e);case"linear-system":return v({...o,startCoords:void 0},t,e);case"circle":const r=x({...o,startCoords:void 0}),n=u(p(r.radiusPoint,r.center));return{center:r.center,radius:n};case"sinusoid":return C({...o,startCoords:void 0},t,e);case"quadratic":return g({...o,startCoords:void 0},t,e);case"point":return y({...o,startCoords:void 0},t,e);case"polygon":return f({...o,startCoords:void 0},t,e);case"angle":return m({graph:{...o,startCoords:void 0},range:t,step:e});default:return}}const oo=o=>{const t=o[0],e=o[1],r=e[1]-t[1],n=Math.PI/(2*(e[0]-t[0])),i=t[0]*n,a=t[1];return"y = "+r.toFixed(3)+"sin("+n.toFixed(3)+"x - "+i.toFixed(3)+") + "+a.toFixed(3)},to=o=>{const t=o[0],e=o[1],r=o[2],n=(t[0]-e[0])*(t[0]-r[0])*(e[0]-r[0]);if(n===0)return"Division by zero error";const i=(r[0]*(e[1]-t[1])+e[0]*(t[1]-r[1])+t[0]*(r[1]-e[1]))/n,a=(r[0]*r[0]*(t[1]-e[1])+e[0]*e[0]*(r[1]-t[1])+t[0]*t[0]*(e[1]-r[1]))/n,d=(e[0]*r[0]*(e[0]-r[0])*t[1]+r[0]*t[0]*(r[0]-t[0])*e[1]+t[0]*e[0]*(t[0]-e[0])*r[1])/n;return"y = "+i.toFixed(3)+"x^2 + "+a.toFixed(3)+"x + "+d.toFixed(3)},l=(o,t)=>{const e=o[0]-t[0],r=o[1]-t[1];return(180+Math.atan2(-r,-e)*180/Math.PI+360)%360},eo=o=>{const[t,e,r]=o;return`${(l(r,e)-l(t,e)).toFixed(0)}Â° angle at (${e[0]}, ${e[1]})`},ro=(o,t)=>!(t||o.type==="point"&&o.numPoints==="unlimited"||o.type==="polygon"&&(o.numSides==="unlimited"||o.snapTo==="angles"||o.snapTo==="sides"));export{eo as a,to as b,oo as c,X as d,Z as e,N as f,c as g,Y as r,ro as s};
