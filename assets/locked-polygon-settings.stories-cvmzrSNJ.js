import{r}from"./index-6oxdNXpR.js";import{L as m}from"./locked-polygon-settings-4Ca3be_p.js";import{g as y}from"./util-BoBJ5lhB.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./underscore-885MUNGo.js";import"./core-widget-registry-lKD0wS3Q.js";import"./index-71P4mDMp.js";import"./index-hw7d7wq0.js";import"./no-important-xCWWYXQR.js";import"./index-OMSOgf8r.js";import"./tiny-invariant-bHgPayXn.js";import"./index-zRqVZh6A.js";import"./index-jek-Xksa.js";import"./index--z92Kcj-.js";import"./index-Y1DiWZsM.js";import"./index-6pF6CjBQ.js";import"./answer-choices-sHp64B-v.js";import"./index-v_a-r9JG.js";import"./index-F5uqTDBi.js";import"./index-9gkyvru-.js";import"./index-OQMtW1Q1.js";import"./assertThisInitialized-4q6YPdh3.js";import"./Popper-Y5KDXl-P.js";import"./index-sTgrFwmj.js";import"./index-L0cWnnN3.js";import"./i18n-context-X2Y0qeee.js";import"./renderer-nkstHlKm.js";import"./perseus-error-l3K_anoI.js";import"./util-VofM5AGr.js";import"./jquery-5v7aFUvu.js";import"./get-decimal-separator-C5N_K9o2.js";import"./index-o42urCig.js";import"./index-J2t_5nK1.js";import"./index-dnMhQZ-1.js";import"./zoomable-tex-w6m6mqm2.js";import"./tex-q_4hQMGs.js";import"./dependencies-CP7Uh8Kq.js";import"./zoomable-m_J-BBOg.js";import"./svg-image-0WmcnIq_.js";import"./fixed-to-responsive-8Rm8IBlT.js";import"./constants-vGHYchdS.js";import"./client-Rb4DelHy.js";import"./inline-icon-8e4u-lSW.js";import"./icon-paths-5JCXzGsq.js";import"./image-loader-R3-BVy6L.js";import"./perseus-api-Y55S7ZPk.js";import"./stub-tag-editor--BF0WBUz.js";import"./text-list-editor-9dKImvgD.js";import"./lint-a43UkMJQ.js";import"./locked-figure-aria-4z06z7DM.js";import"./all-widgets-Jeznopc9.js";import"./prop-types-JWuPHey-.js";import"./mobile-keypad-tUVpsJFS.js";import"./tabbar-B0kYgJj9.js";import"./item-Ztp2GOp4.js";import"./button-assets-L8ov_9cF.js";import"./keypad-button-SQB6sX9u.js";import"./operators-page-LLpnvJeI.js";import"./navigation-pad-mlqM3fWh.js";import"./key-translator-HPkFpdNX.js";import"./index-X6BFiFsH.js";import"./math-input-nTpV27gO.js";import"./index-yKRLgHQQ.js";import"./simple-keypad-input-DjHd1aUI.js";import"./input-with-examples-VYmpzNZ8.js";import"./text-input-9x5mqlXT.js";import"./base-radio-ZuzK4xJG.js";import"./media-queries-OayJ4KsJ.js";import"./choice-iY0uKhlg.js";import"./icon-H34hvC3Q.js";import"./choice-icon-pV53mzFw.js";import"./focus-ring-bfQ0sQA2.js";import"./option-status-zWp-slrk.js";import"./choice-none-above-h75nNuCW.js";import"./shared-hWJYD-yu.js";import"./phet-simulation-q9u8c_AJ.js";import"./index-yTmR3PFw.js";import"./button-group-f5V3tSn8.js";import"./index-smZ6iCr_.js";import"./jsx-runtime-63Ea5SlK.js";import"./hud-VpTa1tZ-.js";import"./index-3j9EmwNK.js";import"./multi-button-group-7ejnk4_z.js";import"./number-input-tV-QBemb.js";import"./range-input-4aqRS9Ce.js";import"./marker-yRdSODa2.js";import"./answer-pill-dX4noPCS.js";import"./sortable-BNX3TIiT.js";import"./video-transcript-link-REgDyjHF.js";import"./server-item-renderer-JSC5PKxc.js";import"./hints-renderer-HTIDt_J4.js";import"./article-renderer-iH1mCP9d.js";import"./components-H6fLPt-X.js";import"./locked-label-settings-VIChDnhz.js";import"./scrollless-number-text-field-rQL1rvNx.js";import"./trash-bold-fB90jBjf.js";import"./color-select-oVeLA587.js";import"./labeled-switch-CHIeXRT8.js";import"./line-stroke-select-fYXqt1wn.js";const Pr={title:"PerseusEditor/Components/Locked Polygon Settings",component:m},o=i=>r.createElement(m,{...i}),d={...y("polygon"),onChangeProps:()=>{},onMove:()=>{},onRemove:()=>{}};o.args=d;const t={render:function(){const[e,s]=r.useState(d),p=a=>{s({...e,...a})};return r.createElement(m,{...e,onChangeProps:p})}};t.parameters={chromatic:{disableSnapshot:!0}};const n={render:function(){const[e,s]=r.useState(!0),[p,a]=r.useState(d),E=R=>{a({...p,...R})};return r.createElement(m,{...p,expanded:e,onToggle:s,onChangeProps:E})}};o.__docgenInfo={description:"",methods:[],displayName:"Default"};var c,l,u;o.parameters={...o.parameters,docs:{...(c=o.parameters)==null?void 0:c.docs,source:{originalSource:`(args): React.ReactElement => {
  return <LockedPolygonSettings {...args} />;
}`,...(u=(l=o.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};var g,P,f;t.parameters={...t.parameters,docs:{...(g=t.parameters)==null?void 0:g.docs,source:{originalSource:`{
  render: function Render() {
    const [props, setProps] = React.useState(defaultProps);
    const handlePropsUpdate = newProps => {
      setProps({
        ...props,
        ...newProps
      });
    };
    return <LockedPolygonSettings {...props} onChangeProps={handlePropsUpdate} />;
  }
}`,...(f=(P=t.parameters)==null?void 0:P.docs)==null?void 0:f.source}}};var S,h,x;n.parameters={...n.parameters,docs:{...(S=n.parameters)==null?void 0:S.docs,source:{originalSource:`{
  render: function Render() {
    const [expanded, setExpanded] = React.useState(true);
    const [props, setProps] = React.useState(defaultProps);
    const handlePropsUpdate = newProps => {
      setProps({
        ...props,
        ...newProps
      });
    };
    return <LockedPolygonSettings {...props} expanded={expanded} onToggle={setExpanded} onChangeProps={handlePropsUpdate} />;
  }
}`,...(x=(h=n.parameters)==null?void 0:h.docs)==null?void 0:x.source}}};const fr=["Default","Controlled","Expanded"];export{t as Controlled,o as Default,n as Expanded,fr as __namedExportsOrder,Pr as default};
