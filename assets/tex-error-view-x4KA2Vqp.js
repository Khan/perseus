var g=Object.defineProperty;var m=(r,e,s)=>e in r?g(r,e,{enumerable:!0,configurable:!0,writable:!0,value:s}):r[e]=s;var i=(r,e,s)=>m(r,typeof e!="symbol"?e+"":e,s);import{n as p,j as t,bw as x,r as y,V as o}from"./iframe-CccAjlbi.js";const u=""+new URL("caret-right-bold-Bc1ILELB.svg",import.meta.url).href;function c(r){const e=r.isExpanded?d.expanded:d.collapsed;return t.jsx(x,{icon:u,style:e})}const d=p.StyleSheet.create({collapsed:{transition:".15s"},expanded:{transform:"rotate(90deg)",transition:".15s"}});c.__docgenInfo={description:`Displays a caret in either expanded or collapsed state. For use in headings
that collapse a region.`,methods:[],displayName:"ToggleableCaret",props:{isExpanded:{required:!0,tsType:{name:"boolean"},description:""}}};class E extends y.Component{constructor(){super(...arguments);i(this,"state",{showErrors:!1});i(this,"handleToggleTexErrors",s=>{this.setState({showErrors:!this.state.showErrors})})}render(){const{errorList:s}=this.props,{showErrors:a}=this.state;return t.jsxs(o,{style:n.errorContainer,children:[t.jsxs(o,{style:n.title,onClick:this.handleToggleTexErrors,children:[t.jsx(c,{isExpanded:a}),"Â  TeX Errors (",s.length,")"]}),a&&t.jsx(o,{style:n.errorExplanation,children:"If your math doesn't display correctly, these errors might help you troubleshoot. Message #content-kitchen for help."}),a&&s.map((l,h)=>t.jsxs(o,{style:n.error,children:[t.jsx(o,{style:{color:"red"},children:l.math}),t.jsx(o,{children:l.message})]},h))]})}}const n=p.StyleSheet.create({title:{backgroundColor:"#eee",fontSize:"1.25em",padding:"4px 10px",cursor:"pointer",display:"flex",flexDirection:"row",alignItems:"center"},errorContainer:{border:"1px solid #ddd",borderTop:"none"},errorExplanation:{padding:"4px 10px",backgroundColor:"pink"},error:{padding:"4px 10px"}});E.__docgenInfo={description:"Displays a collapsable list of TeX rendering errors.",methods:[{name:"handleToggleTexErrors",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null}],displayName:"TexErrorView",props:{errorList:{required:!0,tsType:{name:"ReadonlyArray",elements:[{name:"signature",type:"object",raw:"{math: string; message: string}",signature:{properties:[{key:"math",value:{name:"string",required:!0}},{key:"message",value:{name:"string",required:!0}}]}}],raw:"ReadonlyArray<{math: string; message: string}>"},description:""}}};export{E as T,c as a};
