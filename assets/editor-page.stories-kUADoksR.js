import{j as l}from"./jsx-runtime-BGVbfQ2Z.js";import{a as A}from"./chunk-WFFRPTHA-zlNDxfrq.js";import{r as o}from"./index-qhcEwEpg.js";import{r as g,E as h}from"./register-all-widgets-and-editors-for-testing-wS9AT2KU.js";import"./preview-errors-7FWlPnjy.js";import"./index-PPLHz8o0.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./version-akiLXZts.js";import"./article-renderer-5XXUYWl6.js";import"./compare-59FC1ybr.js";import"./prop-types-s8wDZuDY.js";import"./index-V35CFGao.js";import"./index-fuyzzUuV.js";import"./index-J2t_5nK1.js";import"./index-awljIyHI.js";import"./index-E09jvG0x.js";import"./index-2LjNjJpa.js";import"./index-4c2J3ov1.js";import"./tabbar-4UDQk7cN.js";import"./item-P3WrK4af.js";import"./index-1P5txiDe.js";import"./index-tvtfaFq4.js";import"./button-assets-_Am9ApvA.js";import"./keypad-button-Yf_O0DZf.js";import"./operators-page-jaQPWpBb.js";import"./navigation-pad-JIlZRGXW.js";import"./index-uu39Elyn.js";import"./key-translator-e7mZtIzr.js";import"./_commonjs-dynamic-modules-h-SxKiO4.js";import"./enums-x5qaTru7.js";import"./renderer-IESC4U7A.js";import"./index-awCzqCwC.js";import"./jquery-5v7aFUvu.js";import"./index-default-4_ZsnO94.js";import"./asset-context-pmjKTqqL.js";import"./svg-image-7Y_7d88d.js";import"./index-ntsnGU3X.js";import"./dependencies-fnqF3NiV.js";import"./perseus-error-OpXxk17X.js";import"./util-0RXiyYTM.js";import"./fixed-to-responsive-G5J_wmel.js";import"./constants-I_nlPaPx.js";import"./inline-icon-MJBS_-2U.js";import"./icon-paths-fAaGW1jp.js";import"./image-loader-BrzYBUzY.js";import"./tex-SwZEYYPF.js";import"./zoomable-QW77xrsT.js";import"./zoomable-tex-LJgLrbXQ.js";import"./perseus-api-Ly41NhN4.js";import"./stub-tag-editor-CaJYfBue.js";import"./text-list-editor-bJphcq85.js";import"./lint-4QkP-VXi.js";import"./index-cRKslbtI.js";import"./index-fdRf1OJX.js";import"./index-Fg8WJp4t.js";import"./index-_15Y2y0p.js";import"./index-RrkX9P05.js";import"./Popper-2p8US95Y.js";import"./math-input-frx7TRf0.js";import"./unit-kRJG92HA.js";import"./input-with-examples-cpcVtYy8.js";import"./math-output-o5-UebzW.js";import"./text-input-aDhxqzgd.js";import"./index-to4e0yK9.js";import"./tooltip-K2JbXmT6.js";import"./simple-keypad-input-HRUldzHP.js";import"./base-radio-2bv1kAJh.js";import"./media-queries-MaBBbpNq.js";import"./shared-3pf9YZIg.js";import"./choice-7Bfg02MO.js";import"./icon-HbAIhp4d.js";import"./choice-icon-YaMguKwM.js";import"./focus-ring-SGFL5fpl.js";import"./option-status-hT8t_5a4.js";import"./choice-none-above-wLDNGyUm.js";import"./video-transcript-link-bbZ3NvJD.js";import"./answer-choices-RWN8wEOh.js";import"./button-group-eBTrRsKy.js";import"./graph-nOSVewF6.js";import"./tiny-invariant-bHgPayXn.js";import"./bundle.esm-3RuEOGQS.js";import"./hud-Q7Km3N9P.js";import"./info-tip-Fae-O4h-.js";import"./multi-button-group-rHU9dGVb.js";import"./number-input-lwrURXqC.js";import"./prop-check-box-wRngoh_G.js";import"./range-input-ar8q3yJk.js";import"./marker-LNMzYiYW.js";import"./answer-pill-F6zs-OoL.js";import"./sortable-fWzLqSaQ.js";import"./multi-renderer-hGWktgqV.js";import"./hints-renderer-CrPG3IgO.js";import"./components-7PVYub0D.js";import"./device-framer-CzUMoggo.js";import"./constants-hQyjCzwz.js";import"./section-control-button-pqMwoZ7M.js";import"./editor-WiLA9uW6.js";import"./tex-error-view-vfu3z_P8.js";import"./viewport-resizer-pWA0L0LZ.js";import"./structured-item-diff-bQcqs7k9.js";import"./text-diff-wIDz9VNI.js";import"./tags-diff-FjOIBX6Y.js";import"./item-extras-editor-QYAlZsZc.js";import"./perseus-types-FVzQqVLf.js";import"./multi-items-y8NHP9Cv.js";/* empty css                       */import"./categorizer-editor-3li-wcJ2.js";import"./editor-jsonify-mCLVf2cH.js";import"./blur-input-0MWX_AIX.js";import"./definition-editor-BCNwgD_k.js";import"./dropdown-editor-nIKh16ck.js";import"./explanation-editor-UVjRCy4k.js";import"./expression-editor-nsH1TS_3.js";import"./graph-settings-TxcYZQDE.js";import"./image-editor-xYNS4xWy.js";import"./input-number-editor-FBsSvkoy.js";import"./interaction-editor-BU5nPbd0.js";import"./interactive-graph-editor-iza-6Z6R.js";import"./interactive-graph-settings-P5wFfTIa.js";import"./locked-point-settings-XnFKTFB2.js";import"./color-circle-xqm9n2rJ.js";import"./color-select--98Qm2qP.js";import"./util-QZ-4fnoK.js";import"./label-image-editor-qTtFNXBj.js";import"./form-wrapped-text-field-teMyG3L3.js";import"./answer-choices-Y888mwFw.js";import"./behavior-wTPUp3KS.js";import"./question-markers-rok1gUrJ.js";import"./marker-eUBsIaki.js";import"./select-image-0Eaz3o0g.js";import"./matcher-editor-EoCXhor8.js";import"./number-line-editor-d2ExRhEc.js";import"./numeric-input-editor-BmtTUjOY.js";import"./python-program-editor-UBz5scXe.js";import"./editor-MfQ8Fcp_.js";import"./sorter-editor-Me7FcpYI.js";g();const Xo={title:"Perseus Editor/EditorPage"},M=A("onChange"),i=()=>{const[m,n]=o.useState("phone"),[s,a]=o.useState(!1),[c,u]=o.useState(),[d,f]=o.useState(),[v,w]=o.useState();return l(h,{apiOptions:{isMobile:!1,flags:{mafs:{segment:!0}}},previewDevice:m,onPreviewDeviceChange:t=>n(t),developerMode:!0,jsonMode:s,answerArea:c,question:d,hints:v,frameSource:"about:blank",previewURL:"about:blank",itemId:"1",onChange:t=>{M(t),"jsonMode"in t&&a(t.jsonMode),"answerArea"in t&&u(t.answerArea),"question"in t&&f(t.question),"hints"in t&&w(t.hints)}})};var r,e,p;i.parameters={...i.parameters,docs:{...(r=i.parameters)==null?void 0:r.docs,source:{originalSource:`(): React.ReactElement => {
  const [previewDevice, setPreviewDevice] = React.useState<DeviceType>("phone");
  const [jsonMode, setJsonMode] = React.useState<boolean | undefined>(false);
  const [answerArea, setAnswerArea] = React.useState<PerseusAnswerArea | undefined | null>();
  const [question, setQuestion] = React.useState<PerseusRenderer | undefined>();
  const [hints, setHints] = React.useState<ReadonlyArray<Hint> | undefined>();
  return <EditorPage apiOptions={{
    isMobile: false,
    flags: {
      mafs: {
        segment: true
      }
    }
  }} previewDevice={previewDevice} onPreviewDeviceChange={newDevice => setPreviewDevice(newDevice)} developerMode={true} jsonMode={jsonMode} answerArea={answerArea} question={question} hints={hints} frameSource="about:blank" previewURL="about:blank" itemId="1" onChange={props => {
    onChangeAction(props);
    if ("jsonMode" in props) {
      setJsonMode(props.jsonMode);
    }
    if ("answerArea" in props) {
      setAnswerArea(props.answerArea);
    }
    if ("question" in props) {
      setQuestion(props.question);
    }
    if ("hints" in props) {
      setHints(props.hints);
    }
  }} />;
}`,...(p=(e=i.parameters)==null?void 0:e.docs)==null?void 0:p.source}}};const Yo=["Demo"];export{i as Demo,Yo as __namedExportsOrder,Xo as default};
