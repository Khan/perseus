import{j as a}from"./jsx-runtime-BGVbfQ2Z.js";import{l as c}from"./index-awljIyHI.js";import{r as u}from"./index-qhcEwEpg.js";import{r as d}from"./index-E09jvG0x.js";const r=class r extends u.Component{constructor(){super(...arguments),this.toggleSelect=e=>{const t=(this.props.values||[]).slice(0),n=this.props.allowEmpty;t.indexOf(e)>=0&&(t.length>1||n)?t.splice(t.indexOf(e),1):t.indexOf(e)<0&&t.push(e),this.props.onChange(t)}}focus(){var e;return(e=d.findDOMNode(this))==null||e.focus(),!0}render(){const e=this.props.values||[],t=this.props.buttons.map((o,l)=>{const p=e.indexOf(o.value)>=0;return a("button",{title:o.title,type:"button",id:""+l,ref:"button"+l,className:c.css(i.buttonStyle,p&&i.selectedStyle),onClick:()=>this.toggleSelect(o.value),children:o.content||""+o.value},""+l)});return a("div",{style:{display:"inline-block"},children:t})}};r.defaultProps={values:[],allowEmpty:!0};let s=r;const i=c.StyleSheet.create({buttonStyle:{backgroundColor:"white",border:"1px solid #ccc",borderLeft:"0",cursor:"pointer",margin:"0",padding:"5px 10px",position:"relative",":first-child":{borderLeft:"1px solid #ccc",borderTopLeftRadius:"3px",borderBottomLeftRadius:"3px"},":last-child":{borderRight:"1px solid #ccc",borderTopRightRadius:"3px",borderBottomRightRadius:"3px"},":hover":{backgroundColor:"#ccc"},":focus":{zIndex:2}},selectedStyle:{backgroundColor:"#ddd"}});try{s.displayName="MultiButtonGroup",s.__docgenInfo={description:`MultiButtonGroup is an aesthetically pleasing group of buttons,
which allows multiple buttons to be selected at the same time.

NOTE: This component is almost identical to ./button-group.jsx except that
this component allows multiple selection!`,displayName:"MultiButtonGroup",props:{values:{defaultValue:{value:"[]"},description:"",name:"values",required:!1,type:{name:"readonly any[] | null"}},buttons:{defaultValue:null,description:"",name:"buttons",required:!0,type:{name:"readonly { value: any; content: ReactNode; title?: string | undefined; }[]"}},onChange:{defaultValue:null,description:"",name:"onChange",required:!0,type:{name:"(values?: any) => unknown"}},allowEmpty:{defaultValue:{value:"true"},description:"",name:"allowEmpty",required:!1,type:{name:"boolean"}}}}}catch{}export{s as M};
