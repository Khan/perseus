import{j as e}from"./jsx-runtime-BT65X5dW.js";import{S as C,a as K,M as j}from"./mobile-keypad-D5p8Dkiz.js";import{a as S}from"./index-B-lxVbXh.js";import{r}from"./index-C6mWTJJr.js";import{M}from"./prop-types-Cj1R03My.js";import"./key-translator-BCKDNkGu.js";import"./button-assets-qUGjw7KS.js";import"./underscore-U-AHniOr.js";import"./core-widget-registry-2eRuEUfZ.js";import"./no-important-DlFk8a1I.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-B1Gws05u.js";import"./index-3H81sEQ1.js";import"./index-BzwLglMS.js";import"./index-CskvhqFA.js";import"./assertThisInitialized-B9jnkVVz.js";import"./index-KFdEgasi.js";import"./tiny-invariant-CopsF_GD.js";import"./index-CjnMbH_2.js";import"./tabbar-CZSBNGic.js";import"./item-BLUJCfQ8.js";import"./keypad-button-DRHD9eMV.js";import"./operators-page-CFNV3bPo.js";import"./navigation-pad-UnBGCW6R.js";import"./v4-CtRu48qb.js";import"./index-CrGd2QqM.js";import"./get-decimal-separator-B2cicA45.js";const k={title:"math-input/Full Mobile MathInput",parameters:{backgrounds:{default:"light background",values:[{name:"light background",value:"lightgrey",default:!0}]}}},T=({keypadElement:t,setKeypadElement:a})=>{const[l,x]=r.useState(""),[s,f]=r.useState(!1),[n,h]=r.useState(!0),[u,v]=r.useState(!0),g=r.useRef(null),y=n?"CDOT":"TIMES";return r.useEffect(()=>{t==null||t.configure({keypadType:s?"EXPRESSION":"FRACTION",extraKeys:s?["x","y","PI","THETA"]:[],times:n},()=>{})},[t,s,n]),e.jsxs("div",{style:{padding:"1rem 2rem"},children:[e.jsxs("div",{children:[e.jsx("div",{children:"NOTE: To properly test the input interaction, you will need to simulate a device using the dev tools. MathInput requires touch events (not click events)."}),e.jsxs("div",{style:{padding:"1rem 0"},children:[e.jsx("button",{onClick:()=>f(!s),children:`Use ${s?"Fraction":"Expression"} Keypad`}),e.jsx("button",{onClick:()=>v(!u),children:`Use ${u?"Legacy":"New"} Keypad`}),e.jsx("button",{onClick:()=>h(!n),children:"Toggle to "+y})]})]}),e.jsx(M,{value:l,ref:g,keypadElement:t,onChange:(o,p)=>{x(o),p==null||p()},onFocus:()=>{t==null||t.activate()},onBlur:()=>{t==null||t.dismiss()},ariaLabel:"Mobile input"}),e.jsx(j,{onElementMounted:o=>{o&&a(o)},onDismiss:()=>{},onAnalyticsEvent:async o=>S("onAnalyticsEvent")(o)})]})};function i(){return e.jsx(C,{children:e.jsx(K.Consumer,{children:({keypadElement:t,setKeypadElement:a})=>e.jsx(T,{keypadElement:t,setKeypadElement:a})})})}i.__docgenInfo={description:"",methods:[],displayName:"Wrapped"};var m,d,c;i.parameters={...i.parameters,docs:{...(m=i.parameters)==null?void 0:m.docs,source:{originalSource:`function Wrapped() {
  return <StatefulKeypadContextProvider>
            <KeypadContext.Consumer>
                {({
        keypadElement,
        setKeypadElement
      }) => <Basic keypadElement={keypadElement} setKeypadElement={setKeypadElement} />}
            </KeypadContext.Consumer>
        </StatefulKeypadContextProvider>;
}`,...(c=(d=i.parameters)==null?void 0:d.docs)==null?void 0:c.source}}};const tt=["Wrapped"];export{i as Wrapped,tt as __namedExportsOrder,k as default};
