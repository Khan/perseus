import{j as d}from"./jsx-runtime-63Ea5SlK.js";import{r as a}from"./index-6oxdNXpR.js";import{L as i}from"./locked-polygon-settings-YRc0Ygrh.js";import{g as C}from"./util-HHLopYME.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./index-default-4_ZsnO94.js";import"./core-widget-registry-9mlopZp-.js";import"./index-_CVl-B2F.js";import"./index-_3CKOwHy.js";import"./no-important-xCWWYXQR.js";import"./index-0pCajwWr.js";import"./index-QHkT31Yt.js";import"./index-4dAUYsag.js";import"./index-oE4Tpxqm.js";import"./index-ZdJtI3z8.js";import"./index-7Z-R4z4z.js";import"./answer-choices-2pmdRurO.js";import"./index-o999uk82.js";import"./index-DQJhbslN.js";import"./index-9gkyvru-.js";import"./index-OQMtW1Q1.js";import"./assertThisInitialized-4q6YPdh3.js";import"./Popper-Y5KDXl-P.js";import"./index-wvJr82a4.js";import"./index-MBMqDkZ-.js";import"./i18n-context-GVCAGr7t.js";import"./renderer-1Ef0Bf1y.js";import"./perseus-error-l3K_anoI.js";import"./util-5sPUHjVJ.js";import"./jquery-5v7aFUvu.js";import"./get-decimal-separator-c07pHhM9.js";import"./index-J2t_5nK1.js";import"./index-dnMhQZ-1.js";import"./zoomable-tex-OTkyDBc-.js";import"./tex-MX5FPdQh.js";import"./dependencies-CP7Uh8Kq.js";import"./zoomable-pOEbOEqK.js";import"./svg-image-xT-ee6xH.js";import"./fixed-to-responsive-I_PLOgi8.js";import"./constants-qvNmarDy.js";import"./client-Rb4DelHy.js";import"./inline-icon-6fh0Wu1y.js";import"./icon-paths-5JCXzGsq.js";import"./image-loader-cBoFrbCq.js";import"./perseus-api-DO0X8arb.js";import"./index-IiwcBdIZ.js";import"./stub-tag-editor-3VEaZ-53.js";import"./text-list-editor-ND6Qift6.js";import"./lint-r_VdOcfh.js";import"./locked-figure-aria-fuP7pkwO.js";import"./article-renderer-hu1Jn3cn.js";import"./prop-types-OXICk5n1.js";import"./mobile-keypad-taovYQqa.js";import"./tabbar-UtkI9pTR.js";import"./item-YVSph9Dw.js";import"./button-assets-hOlALWgM.js";import"./keypad-button-gVoT5jIP.js";import"./operators-page-Gf1ydThM.js";import"./navigation-pad--ZzISEj-.js";import"./key-translator-P972Clll.js";import"./enums-x5qaTru7.js";import"./index-rXO3OHs_.js";import"./math-input-yWYqyJh9.js";import"./index-8_CLcrTy.js";import"./input-with-examples-KpvDU0LI.js";import"./text-input-kDS1r-UD.js";import"./tooltip-Lp8Mlfe3.js";import"./simple-keypad-input-eNzVJJGK.js";import"./base-radio-VxW7Ap7z.js";import"./media-queries-AtsgWQBm.js";import"./choice-XoQfklAK.js";import"./icon-7RFbyLiL.js";import"./choice-icon-M7ulrC-T.js";import"./focus-ring-NR0ydWyB.js";import"./option-status-OKcFildK.js";import"./choice-none-above-OAjmm-xf.js";import"./shared-apNPYhSn.js";import"./phet-simulation-t69N-Bc7.js";import"./index-Xg8lxIoz.js";import"./button-group-SY8dumRU.js";import"./index-smZ6iCr_.js";import"./tiny-invariant-bHgPayXn.js";import"./hud-n-xEkDjs.js";import"./index-4SmKKGcF.js";import"./multi-button-group-3E5hf1eq.js";import"./number-input-w4Ob0CGn.js";import"./range-input-jfGUYo-4.js";import"./marker-SHULTUJk.js";import"./answer-pill-EVbG_Ypt.js";import"./sortable-BlafJwdi.js";import"./video-transcript-link-V9S2M50Z.js";import"./server-item-renderer-wtYPl1Cn.js";import"./hints-renderer-yfRGWsz2.js";import"./components-aTkk-9Ae.js";import"./locked-label-settings-OlZ-ipNI.js";import"./scrollless-number-text-field-WjEg5ORt.js";import"./trash-bold-qurVV1zz.js";import"./color-select-B8QZpeXD.js";import"./labeled-switch-Hfj5QOR9.js";import"./line-stroke-select-jDcyUR2v.js";const xr={title:"PerseusEditor/Components/Locked Polygon Settings",component:i},o=m=>d.jsx(i,{...m}),c={...C("polygon"),onChangeProps:()=>{},onMove:()=>{},onRemove:()=>{}};o.args=c;const r={render:function(){const[t,n]=a.useState(c),p=s=>{n({...t,...s})};return d.jsx(i,{...t,onChangeProps:p})}};r.parameters={chromatic:{disableSnapshot:!0}};const e={render:function(){const[t,n]=a.useState(!0),[p,s]=a.useState(c),E=y=>{s({...p,...y})};return d.jsx(i,{...p,expanded:t,onToggle:n,onChangeProps:E})}};o.__docgenInfo={description:"",methods:[],displayName:"Default"};var u,l,g;o.parameters={...o.parameters,docs:{...(u=o.parameters)==null?void 0:u.docs,source:{originalSource:`(args): React.ReactElement => {
  return <LockedPolygonSettings {...args} />;
}`,...(g=(l=o.parameters)==null?void 0:l.docs)==null?void 0:g.source}}};var P,f,x;r.parameters={...r.parameters,docs:{...(P=r.parameters)==null?void 0:P.docs,source:{originalSource:`{
  render: function Render() {
    const [props, setProps] = React.useState(defaultProps);
    const handlePropsUpdate = newProps => {
      setProps({
        ...props,
        ...newProps
      });
    };
    return <LockedPolygonSettings {...props} onChangeProps={handlePropsUpdate} />;
  }
}`,...(x=(f=r.parameters)==null?void 0:f.docs)==null?void 0:x.source}}};var S,h,R;e.parameters={...e.parameters,docs:{...(S=e.parameters)==null?void 0:S.docs,source:{originalSource:`{
  render: function Render() {
    const [expanded, setExpanded] = React.useState(true);
    const [props, setProps] = React.useState(defaultProps);
    const handlePropsUpdate = newProps => {
      setProps({
        ...props,
        ...newProps
      });
    };
    return <LockedPolygonSettings {...props} expanded={expanded} onToggle={setExpanded} onChangeProps={handlePropsUpdate} />;
  }
}`,...(R=(h=e.parameters)==null?void 0:h.docs)==null?void 0:R.source}}};const Sr=["Default","Controlled","Expanded"];export{r as Controlled,o as Default,e as Expanded,Sr as __namedExportsOrder,xr as default};
