import{S as E,a as K,M as x}from"./mobile-keypad-BTuEqmKk.js";import{a as h}from"./chunk-D5ZWXAHU-Dm3eDOzv.js";import{r as e}from"./index-C6mWTJJr.js";import{M as S}from"./prop-types-Bt57fpTf.js";import"./key-translator-bknjHtsc.js";import"./button-assets-CICggd4J.js";import"./underscore-U-AHniOr.js";import"./core-widget-registry-2tCIH_GM.js";import"./no-important-DlFk8a1I.js";import"./_commonjsHelpers-BosuxZz1.js";import"./index-Xl5L4rvz.js";import"./index-3H81sEQ1.js";import"./index-BzwLglMS.js";import"./index-CskvhqFA.js";import"./assertThisInitialized-B9jnkVVz.js";import"./index-1LDQje0j.js";import"./tiny-invariant-CopsF_GD.js";import"./index-CC9jxhwQ.js";import"./tabbar-ShCvdYam.js";import"./item-DMOJOx6J.js";import"./keypad-button-Ce4opAXu.js";import"./operators-page-ByyAQb6A.js";import"./navigation-pad-DdOxfhts.js";import"./v4-CtRu48qb.js";import"./index-CrGd2QqM.js";import"./get-decimal-separator-B2cicA45.js";const Y={title:"math-input/Full Mobile MathInput",parameters:{backgrounds:{default:"light background",values:[{name:"light background",value:"lightgrey",default:!0}]}}},M=({keypadElement:t,setKeypadElement:s})=>{const[l,d]=e.useState(""),[o,f]=e.useState(!1),[i,v]=e.useState(!0),[p,g]=e.useState(!0),y=e.useRef(null),C=i?"CDOT":"TIMES";return e.useEffect(()=>{t==null||t.configure({keypadType:o?"EXPRESSION":"FRACTION",extraKeys:o?["x","y","PI","THETA"]:[],times:i},()=>{})},[t,o,i]),e.createElement("div",{style:{padding:"1rem 2rem"}},e.createElement("div",null,e.createElement("div",null,"NOTE: To properly test the input interaction, you will need to simulate a device using the dev tools. MathInput requires touch events (not click events)."),e.createElement("div",{style:{padding:"1rem 0"}},e.createElement("button",{onClick:()=>f(!o)},`Use ${o?"Fraction":"Expression"} Keypad`),e.createElement("button",{onClick:()=>g(!p)},`Use ${p?"Legacy":"New"} Keypad`),e.createElement("button",{onClick:()=>v(!i)},"Toggle to "+C))),e.createElement(S,{value:l,ref:y,keypadElement:t,onChange:(r,a)=>{d(r),a==null||a()},onFocus:()=>{t==null||t.activate()},onBlur:()=>{t==null||t.dismiss()},ariaLabel:"Mobile input"}),e.createElement(x,{onElementMounted:r=>{r&&s(r)},onDismiss:()=>{},onAnalyticsEvent:async r=>h("onAnalyticsEvent")(r)}))};function n(){return e.createElement(E,null,e.createElement(K.Consumer,null,({keypadElement:t,setKeypadElement:s})=>e.createElement(M,{keypadElement:t,setKeypadElement:s})))}n.__docgenInfo={description:"",methods:[],displayName:"Wrapped"};var u,m,c;n.parameters={...n.parameters,docs:{...(u=n.parameters)==null?void 0:u.docs,source:{originalSource:`function Wrapped() {
  return <StatefulKeypadContextProvider>
            <KeypadContext.Consumer>
                {({
        keypadElement,
        setKeypadElement
      }) => <Basic keypadElement={keypadElement} setKeypadElement={setKeypadElement} />}
            </KeypadContext.Consumer>
        </StatefulKeypadContextProvider>;
}`,...(c=(m=n.parameters)==null?void 0:m.docs)==null?void 0:c.source}}};const Z=["Wrapped"];export{n as Wrapped,Z as __namedExportsOrder,Y as default};
