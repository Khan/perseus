import{j as e}from"./jsx-runtime-63Ea5SlK.js";import{S as C,a as j,M as S}from"./mobile-keypad-WqQ4dmZ0.js";import{a as M}from"./chunk-D5ZWXAHU-vR62DWf0.js";import{r}from"./index-6oxdNXpR.js";import{M as T}from"./prop-types-ddbsKmgQ.js";import"./key-translator-dOrHL3hQ.js";import"./button-assets-OFdVZZ8g.js";import{K as d}from"./enums-x5qaTru7.js";import"./index-default-4_ZsnO94.js";import"./core-widget-registry-AphjUPV9.js";import"./no-important-xCWWYXQR.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./index-9gkyvru-.js";import"./index-OQMtW1Q1.js";import"./index-J2t_5nK1.js";import"./index-_3CKOwHy.js";import"./assertThisInitialized-4q6YPdh3.js";import"./index-0pCajwWr.js";import"./index-QHkT31Yt.js";import"./tabbar-UtkI9pTR.js";import"./item-YVSph9Dw.js";import"./keypad-button-46M25VLh.js";import"./operators-page-a2o7DNF2.js";import"./navigation-pad-Cesbzfhi.js";import"./v4-yQnnJER4.js";import"./get-decimal-separator-c07pHhM9.js";const k={title:"math-input/Full Mobile MathInput",parameters:{backgrounds:{default:"light background",values:[{name:"light background",value:"lightgrey",default:!0}]}}},I=({keypadElement:t,setKeypadElement:a})=>{const[x,f]=r.useState(""),[s,h]=r.useState(!1),[n,v]=r.useState(!0),[u,g]=r.useState(!0),y=r.useRef(null),K=n?"CDOT":"TIMES";return r.useEffect(()=>{t==null||t.configure({keypadType:s?d.EXPRESSION:d.FRACTION,extraKeys:s?["x","y","PI","THETA"]:[],times:n},()=>{})},[t,s,n]),e.jsxs("div",{style:{padding:"1rem 2rem"},children:[e.jsxs("div",{children:[e.jsx("div",{children:"NOTE: To properly test the input interaction, you will need to simulate a device using the dev tools. MathInput requires touch events (not click events)."}),e.jsxs("div",{style:{padding:"1rem 0"},children:[e.jsx("button",{onClick:()=>h(!s),children:`Use ${s?"Fraction":"Expression"} Keypad`}),e.jsx("button",{onClick:()=>g(!u),children:`Use ${u?"Legacy":"New"} Keypad`}),e.jsx("button",{onClick:()=>v(!n),children:"Toggle to "+K})]})]}),e.jsx(T,{value:x,ref:y,keypadElement:t,onChange:(o,p)=>{f(o),p==null||p()},onFocus:()=>{t==null||t.activate()},onBlur:()=>{t==null||t.dismiss()},ariaLabel:"Mobile input"}),e.jsx(S,{onElementMounted:o=>{o&&a(o)},onDismiss:()=>{},onAnalyticsEvent:async o=>M("onAnalyticsEvent")(o)})]})};function i(){return e.jsx(C,{children:e.jsx(j.Consumer,{children:({keypadElement:t,setKeypadElement:a})=>e.jsx(I,{keypadElement:t,setKeypadElement:a})})})}i.__docgenInfo={description:"",methods:[],displayName:"Wrapped"};var m,c,l;i.parameters={...i.parameters,docs:{...(m=i.parameters)==null?void 0:m.docs,source:{originalSource:`function Wrapped() {
  return <StatefulKeypadContextProvider>
            <KeypadContext.Consumer>
                {({
        keypadElement,
        setKeypadElement
      }) => <Basic keypadElement={keypadElement} setKeypadElement={setKeypadElement} />}
            </KeypadContext.Consumer>
        </StatefulKeypadContextProvider>;
}`,...(l=(c=i.parameters)==null?void 0:c.docs)==null?void 0:l.source}}};const tt=["Wrapped"];export{i as Wrapped,tt as __namedExportsOrder,k as default};
