import{a as i,j as e}from"./jsx-runtime-BGVbfQ2Z.js";import{V as m}from"./index-4c2J3ov1.js";import{L as g,S as f,C as h,a as y}from"./locked-figure-settings-actions-YNYZLhO-.js";import{s}from"./index-lUErx3pE.js";import{L as C}from"./index-qh_wob3p.js";import{l as v}from"./index-awljIyHI.js";import{C as x}from"./color-select-8DXorrBN.js";import{C as L}from"./color-swatch-OONT2VsD.js";import{L as S}from"./labeled-switch-Ud4hRrtF.js";const V=a=>{const{coord:o,color:t,filled:l=!0,range:p,onChangeProps:r,onRemove:u}=a;function c(n){r({color:n})}return i(g,{expanded:a.expanded,onToggle:a.onToggle,header:i(m,{style:d.row,children:[e(C,{children:`Point (${o[0]}, ${o[1]})`}),e(f,{size:s.xSmall_8}),e(L,{color:t,filled:l})]}),children:[e(h,{coord:o,range:p,onChange:n=>{r({coord:n})}}),e(x,{selectedValue:t,onChange:c,style:d.spaceUnder}),e(S,{label:"open point",checked:!l,onChange:n=>{r({filled:!n})}}),e(y,{onRemove:u,figureAriaLabel:`locked point at ${o[0]}, ${o[1]}`})]})},d=v.StyleSheet.create({row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:s.xSmall_8}}),T=V;try{lockedpointsettings.displayName="lockedpointsettings",lockedpointsettings.__docgenInfo={description:"",displayName:"lockedpointsettings",props:{showM2Features:{defaultValue:null,description:"",name:"showM2Features",required:!1,type:{name:"boolean"}},range:{defaultValue:null,description:"",name:"range",required:!0,type:{name:"[Interval, Interval]"}},onRemove:{defaultValue:null,description:"Called when the delete button is pressed.",name:"onRemove",required:!0,type:{name:"() => void"}},onChangeProps:{defaultValue:null,description:"Called when the props (points, color, etc.) are updated.",name:"onChangeProps",required:!0,type:{name:"(newProps: Partial<LockedFigure>) => void"}},expanded:{defaultValue:null,description:"Whether this accordion is expanded.",name:"expanded",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"Called when the accordion is expanded or collapsed.",name:"onToggle",required:!1,type:{name:"((expanded: boolean) => void)"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:'"point"'}},coord:{defaultValue:null,description:"",name:"coord",required:!0,type:{name:"Coord"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"enum",value:[{value:'"green"'},{value:'"grayH"'},{value:'"purple"'},{value:'"pink"'},{value:'"red"'}]}},filled:{defaultValue:null,description:"",name:"filled",required:!0,type:{name:"boolean"}}}}}catch{}export{T as L};
