import{j as O}from"./jsx-runtime-FVsy8kgq.js";import{a as c}from"./chunk-WFFRPTHA-zlNDxfrq.js";import{I as x}from"./index-VDi1Le_1.js";import{K as F}from"./mobile-keypad-wPUeR8mM.js";import"./index-TT1qJ6UJ.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./preview-errors-7FWlPnjy.js";import"./index-PPLHz8o0.js";import"./index-awljIyHI.js";import"./index-7vsPyIck.js";import"./index-CkAxGj88.js";import"./index-J2t_5nK1.js";import"./index-6h5t6F0w.js";import"./index-deFLJwr4.js";import"./tabbar-WYCYDof0.js";import"./item-X9tjzx12.js";import"./index-WNT3sUKf.js";import"./react-router-dom-W_e8xVUu.js";import"./index-tvtfaFq4.js";import"./button-assets-txIojR3b.js";import"./keypad-button-rKskH7oM.js";import"./operators-page-C_EsmjPW.js";import"./navigation-pad-ss7r0FKW.js";const s="Operators Page",l="Numbers Page",S="Geometry Page",I="Fractions Page",re={title:"math-input/Full Keypad",parameters:{backgrounds:{values:[{name:"light background",value:"white",default:!0}]},viewport:{defaultViewport:"iphone6",viewports:x}},component:F,args:{advancedRelations:!1,basicRelations:!1,divisionKey:!1,logarithms:!1,fractionsOnly:!1,convertDotToTimes:!1,preAlgebra:!1,trigonometry:!1,sendEvent:()=>{},onAnalyticsEvent:async()=>{}},argTypes:{advancedRelations:{control:"boolean",table:{category:s}},basicRelations:{control:"boolean",table:{category:s}},divisionKey:{control:"boolean",table:{category:l}},logarithms:{control:"boolean",table:{category:s}},fractionsOnly:{control:"boolean",table:{category:I}},multiplicationDot:{control:"boolean",table:{category:l}},preAlgebra:{control:"boolean",table:{category:s}},trigonometry:{control:"boolean",table:{category:S}}}},e=w=>O(F,{...w,onClickKey:c("onClickKey"),onAnalyticsEvent:async D=>c("onAnalyticsEvent")(D)}),i=e.bind({}),a=e.bind({});a.args={preAlgebra:!0};const o=e.bind({});o.args={preAlgebra:!0,trigonometry:!0};const t=e.bind({});t.args={fractionsOnly:!0};const r=e.bind({});r.args={advancedRelations:!0,basicRelations:!0,divisionKey:!0,logarithms:!0,convertDotToTimes:!1,preAlgebra:!0,trigonometry:!0,expandedView:!0,showDismiss:!0,extraKeys:["a","b","c"]};const n=e.bind({});n.args={advancedRelations:!0,basicRelations:!0,divisionKey:!0,logarithms:!0,convertDotToTimes:!1,preAlgebra:!0,trigonometry:!0,expandedView:!1,showDismiss:!0,extraKeys:["a","b","c"]};var p,y,m;i.parameters={...i.parameters,docs:{...(p=i.parameters)==null?void 0:p.docs,source:{originalSource:'(args: PropsFor<typeof Keypad>): React.ReactElement => <Keypad {...args} onClickKey={action("onClickKey")} onAnalyticsEvent={async e => action("onAnalyticsEvent")(e)} />',...(m=(y=i.parameters)==null?void 0:y.docs)==null?void 0:m.source}}};var g,d,u;a.parameters={...a.parameters,docs:{...(g=a.parameters)==null?void 0:g.docs,source:{originalSource:'(args: PropsFor<typeof Keypad>): React.ReactElement => <Keypad {...args} onClickKey={action("onClickKey")} onAnalyticsEvent={async e => action("onAnalyticsEvent")(e)} />',...(u=(d=a.parameters)==null?void 0:d.docs)==null?void 0:u.source}}};var b,v,K;o.parameters={...o.parameters,docs:{...(b=o.parameters)==null?void 0:b.docs,source:{originalSource:'(args: PropsFor<typeof Keypad>): React.ReactElement => <Keypad {...args} onClickKey={action("onClickKey")} onAnalyticsEvent={async e => action("onAnalyticsEvent")(e)} />',...(K=(v=o.parameters)==null?void 0:v.docs)==null?void 0:K.source}}};var f,E,A;t.parameters={...t.parameters,docs:{...(f=t.parameters)==null?void 0:f.docs,source:{originalSource:'(args: PropsFor<typeof Keypad>): React.ReactElement => <Keypad {...args} onClickKey={action("onClickKey")} onAnalyticsEvent={async e => action("onAnalyticsEvent")(e)} />',...(A=(E=t.parameters)==null?void 0:E.docs)==null?void 0:A.source}}};var R,P,k;r.parameters={...r.parameters,docs:{...(R=r.parameters)==null?void 0:R.docs,source:{originalSource:'(args: PropsFor<typeof Keypad>): React.ReactElement => <Keypad {...args} onClickKey={action("onClickKey")} onAnalyticsEvent={async e => action("onAnalyticsEvent")(e)} />',...(k=(P=r.parameters)==null?void 0:P.docs)==null?void 0:k.source}}};var h,C,T;n.parameters={...n.parameters,docs:{...(h=n.parameters)==null?void 0:h.docs,source:{originalSource:'(args: PropsFor<typeof Keypad>): React.ReactElement => <Keypad {...args} onClickKey={action("onClickKey")} onAnalyticsEvent={async e => action("onAnalyticsEvent")(e)} />',...(T=(C=n.parameters)==null?void 0:C.docs)==null?void 0:T.source}}};const ne=["Default","PreAlgebra","Trigonometry","FractionsOnly","Everything","EverythingMinusNavigationPad"];export{i as Default,r as Everything,n as EverythingMinusNavigationPad,t as FractionsOnly,a as PreAlgebra,o as Trigonometry,ne as __namedExportsOrder,re as default};
