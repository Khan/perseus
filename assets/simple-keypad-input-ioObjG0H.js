import{j as i}from"./jsx-runtime-BGVbfQ2Z.js";import{k as u,M as a}from"./prop-types-3U8aPQU9.js";import"./key-translator-LscBjx_B.js";import"./index-AMPNwp1g.js";import"./button-assets-cmoMUwP4.js";import{K as m}from"./enums-x5qaTru7.js";import{P as s}from"./index-tvtfaFq4.js";import{r as l}from"./index-qhcEwEpg.js";class c extends l.Component{constructor(){super(...arguments),this._isMounted=!1}componentDidMount(){this._isMounted=!0}componentWillUnmount(){this._isMounted=!1}focus(){this.refs.input.focus()}blur(){var t,e;typeof((t=this.refs.input)==null?void 0:t.blur)=="function"&&((e=this.refs.input)==null||e.blur())}getValue(){return this.props.value}render(){const t=this,{keypadElement:e,onFocus:p,value:o,...n}=t.props;return i(a,{ref:"input",keypadElement:e,onFocus:()=>{e?e.configure({keypadType:m.FRACTION},()=>{t._isMounted&&p&&p()}):p&&p()},value:o==null?"":""+o,...n})}}c.propTypes={keypadElement:u,onFocus:s.func,value:s.oneOfType([s.string,s.number])};try{simplekeypadinput.displayName="simplekeypadinput",simplekeypadinput.__docgenInfo={description:"",displayName:"simplekeypadinput",props:{}}}catch{}export{c as S};
