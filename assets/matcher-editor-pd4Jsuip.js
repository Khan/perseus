var u=Object.defineProperty;var f=(r,s,t)=>s in r?u(r,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):r[s]=t;var a=(r,s,t)=>f(r,typeof s!="symbol"?s+"":s,t);import{r as m,a9 as n,aa as g,_ as p,j as e,ab as h}from"./iframe-JLMxgQJB.js";import"./changeable-BRq84Vma.js";import"./article-renderer-DJ_P937b.js";import"./server-item-renderer-B8Oy5Ibe.js";import"./hints-renderer-DhZ4Pen0.js";import{c as x}from"./components-C6F2Y-Bk.js";const{InfoTip:o,TextListEditor:c}=x;class l extends m.Component{constructor(){super(...arguments);a(this,"onLabelChange",(t,i)=>{const d=p.clone(this.props.labels);d[t]=i.target.value,this.props.onChange({labels:d})});a(this,"getSaveWarnings",()=>this.props.left.length!==this.props.right.length?["The two halves of the matcher have different numbers of cards."]:[]);a(this,"serialize",()=>p.pick(this.props,"left","right","labels","orderMatters","padding"))}render(){return e.jsxs("div",{className:"perseus-matcher-editor",children:[e.jsxs("div",{children:[" ","Correct answer:"," ",e.jsx(o,{children:e.jsx("p",{children:"Enter the correct answers here. The preview on the right will show the cards in a randomized order, which is how the student will see them."})})]}),e.jsxs("div",{className:"perseus-clearfix",children:[e.jsx(c,{options:this.props.left,onChange:(t,i)=>{this.props.onChange({left:t},i)},layout:"vertical"}),e.jsx(c,{options:this.props.right,onChange:(t,i)=>{this.props.onChange({right:t},i)},layout:"vertical"})]}),e.jsxs("span",{children:[" ","Labels:"," ",e.jsx(o,{children:e.jsx("p",{children:"These are entirely optional."})})]}),e.jsxs("div",{children:[e.jsx("input",{type:"text",defaultValue:this.props.labels[0],onChange:this.onLabelChange.bind(this,0)}),e.jsx("input",{type:"text",defaultValue:this.props.labels[1],onChange:this.onLabelChange.bind(this,1)})]}),e.jsxs("div",{children:[e.jsx(h,{label:"Order of the matched pairs matters:",checked:this.props.orderMatters,onChange:t=>{this.props.onChange({orderMatters:t})}}),e.jsxs(o,{children:[e.jsx("p",{children:"With this option enabled, only the order provided above will be treated as correct. This is useful when ordering is significant, such as in the context of a proof."}),e.jsx("p",{children:"If disabled, pairwise matching is sufficient. To make this clear, the left column becomes fixed in the provided order and only the cards in the right column can be moved."})]})]}),e.jsxs("div",{children:[e.jsx(h,{label:"Padding:",checked:this.props.padding,onChange:t=>{this.props.onChange({padding:t})}}),e.jsx(o,{children:e.jsx("p",{children:"Padding is good for text, but not needed for images."})})]})]})}}a(l,"propTypes",{left:n.array,right:n.array,labels:n.array,orderMatters:n.bool,padding:n.bool}),a(l,"widgetName","matcher"),a(l,"defaultProps",g.defaultWidgetOptions);l.__docgenInfo={description:"An editor for adding a matcher widget that allows users to match items from two different sets.",methods:[{name:"onLabelChange",docblock:null,modifiers:[],params:[{name:"index",optional:!1,type:null},{name:"e",optional:!1,type:null}],returns:null},{name:"getSaveWarnings",docblock:null,modifiers:[],params:[],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"MatcherEditor",props:{left:{defaultValue:{value:'["$x$", "$y$", "$z$"]',computed:!1},description:"",type:{name:"array"},required:!1},right:{defaultValue:{value:'["$1$", "$2$", "$3$"]',computed:!1},description:"",type:{name:"array"},required:!1},labels:{defaultValue:{value:'["test", "label"]',computed:!1},description:"",type:{name:"array"},required:!1},orderMatters:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},padding:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1}}};export{l as M};
