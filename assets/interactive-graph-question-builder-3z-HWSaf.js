function y(){return new n}class n{constructor(){this.gridStep=[1,1],this.labels=["x","y"],this.markings="graph",this.xRange=[-10,10],this.yRange=[-10,10],this.snapStep=[.5,.5],this.tickStep=[1,1],this.showProtractor=!1,this.interactiveFigureConfig=new o(1),this.lockedFigures=[]}build(){return{content:"[[â˜ƒ interactive-graph 1]]",images:{},widgets:{"interactive-graph 1":{graded:!0,options:{correct:this.interactiveFigureConfig.correct(),graph:this.interactiveFigureConfig.graph(),gridStep:this.gridStep,labels:this.labels,markings:this.markings,range:[this.xRange,this.yRange],rulerLabel:"",rulerTicks:10,showProtractor:this.showProtractor,showRuler:!1,snapStep:this.snapStep,step:this.tickStep,lockedFigures:this.lockedFigures},type:"interactive-graph",version:{major:0,minor:0}}}}}withGridStep(t,r){return this.gridStep=[t,r],this}withAxisLabels(t,r){return this.labels=[t,r],this}withMarkings(t){return this.markings=t,this}withXRange(t,r){return this.xRange=[t,r],this}withYRange(t,r){return this.yRange=[t,r],this}withSnapStep(t,r){return this.snapStep=[t,r],this}withTickStep(t,r){return this.tickStep=[t,r],this}withProtractor(){return this.showProtractor=!0,this}withSegments(t){return this.interactiveFigureConfig=new o(t.length,t),this}withNumSegments(t){return this.interactiveFigureConfig=new o(t),this}withLinear(t){return this.interactiveFigureConfig=new a(t),this}withLinearSystem(t){return this.interactiveFigureConfig=new c(t),this}withRay(t){return this.interactiveFigureConfig=new h(t),this}withCircle(t){return this.interactiveFigureConfig=new u(t),this}withQuadratic(t){return this.interactiveFigureConfig=new g(t),this}withSinusoid(t){return this.interactiveFigureConfig=new d(t),this}withPolygon(t){return this.interactiveFigureConfig=new l(t),this}addLockedPointAt(t,r){return this.addLockedFigure(this.createLockedPoint(t,r)),this}addLockedLine(t,r){const i={type:"line",kind:"line",showPoint1:!0,showPoint2:!0,color:"green",lineStyle:"solid",points:[this.createLockedPoint(...t),this.createLockedPoint(...r)]};return this.addLockedFigure(i),this}addLockedVector(t,r,i){const s={type:"vector",color:i??"grayH",points:[t,r]};return this.addLockedFigure(s),this}addLockedEllipse(t,r,i){const s={type:"ellipse",center:t,radius:r,angle:0,color:"grayH",fillStyle:"none",strokeStyle:"solid",...i};return this.addLockedFigure(s),this}addLockedPolygon(t,r){const i={type:"polygon",points:t,color:"grayH",showVertices:!1,fillStyle:"none",strokeStyle:"solid",...r};return this.addLockedFigure(i),this}createLockedPoint(t,r){return{type:"point",coord:[t,r],color:"green",filled:!0}}addLockedFigure(t){this.lockedFigures=[...this.lockedFigures,t]}}class o{constructor(t,r){this.numSegments=t,this.startCoords=r}correct(){return{type:"segment",numSegments:this.numSegments,coords:p(this.numSegments,()=>[[-7,7],[2,5]])}}graph(){return{type:"segment",numSegments:this.numSegments,coords:this.startCoords}}}class a{constructor(t){this.startCoords=t}correct(){return{type:"linear",coords:[[-10,-5],[10,5]]}}graph(){return{type:"linear",coords:this.startCoords}}}class c{constructor(t){this.startCoords=t}correct(){return{type:"linear-system",coords:[[[-10,-5],[10,5]],[[-10,5],[10,-5]]]}}graph(){return{type:"linear-system",coords:this.startCoords}}}class h{constructor(t){this.startCoords=t}correct(){return{type:"ray",coords:[[-10,-5],[10,5]]}}graph(){return{type:"ray",coords:this.startCoords}}}class u{constructor(t){this.startCoords=t}correct(){return{type:"circle",radius:5,center:[0,0]}}graph(){return this.startCoords?{type:"circle",center:this.startCoords,radius:5}:{type:"circle"}}}class g{constructor(t){this.startCoords=t}correct(){return{type:"quadratic",coords:[[-10,5],[10,5],[0,-5]]}}graph(){return{type:"quadratic",coords:this.startCoords}}}class d{constructor(t){this.startCoords=t}correct(){return{type:"sinusoid",coords:[[-10,5],[10,5]]}}graph(){return{type:"sinusoid",coords:this.startCoords}}}class l{constructor(t){this.snapTo=t}correct(){return{type:"polygon",numSides:4,showAngles:!0,showSides:!0,snapTo:"grid",coords:[[-1,2],[3,4],[1,-2],[-3,0]]}}graph(){return{type:"polygon",snapTo:this.snapTo}}}function p(e,t){return new Array(e).fill(null).map(t)}export{y as i};
