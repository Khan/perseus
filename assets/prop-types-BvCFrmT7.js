var K=Object.defineProperty;var W=(a,s,e)=>s in a?K(a,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[s]=e;var i=(a,s,e)=>(W(a,typeof s!="symbol"?s+"":s,e),e);import{e as j}from"./index-C-7MqfDi.js";import{j as u}from"./jsx-runtime-BT65X5dW.js";import{a as Q,V as U}from"./mobile-keypad-BHpB2siZ.js";import{c as w}from"./index-BfjDPqC2.js";import{e as V}from"./index-BzwLglMS.js";import{n as X}from"./no-important-DlFk8a1I.js";import{r as R}from"./index-C6mWTJJr.js";import{h as k}from"./index-B1Gws05u.js";import{M as H}from"./button-assets-CvhnJ8JL.js";import{m,i as Y,s as v,b as $,e as M,f as z,h as G,M as T,j as x,k as F,c as J,g as Z,l as ee,a as te}from"./key-translator-DURLLdBI.js";import{P as y}from"./index-CrGd2QqM.js";const ne="@khanacademy/math-input",oe="__lib_version__";j(ne,oe);const B=11,O=1.045,N=2*B,se=2*N,ie=2*N,q=B,E=O*(q*4),_=4*q;class L extends R.Component{render(){const{x:s,y:e,animateIntoPosition:t}=this.props,n=t?{transitionDuration:"100ms",transitionProperty:"transform"}:{},o=`translate(${s}px, ${e}px)`,r={position:"absolute",zIndex:4,left:-44/2,top:0,transform:o,width:ie,height:se,touchAction:"none",...n};return u.jsx("span",{style:r,onTouchStart:this.props.onTouchStart,onTouchMove:this.props.onTouchMove,onTouchEnd:this.props.onTouchEnd,onTouchCancel:this.props.onTouchCancel,children:u.jsxs("svg",{fill:"none",width:_,height:E,viewBox:`0 0 ${_} ${E}`,children:[u.jsxs("filter",{id:"math-input_cursor",colorInterpolationFilters:"sRGB",filterUnits:"userSpaceOnUse",height:E*.87,width:_*.82,x:"4",y:"0",children:[u.jsx("feFlood",{floodOpacity:"0",result:"BackgroundImageFix"}),u.jsx("feColorMatrix",{in:"SourceAlpha",type:"matrix",values:"0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0"}),u.jsx("feOffset",{dy:"4"}),u.jsx("feGaussianBlur",{stdDeviation:"4"}),u.jsx("feColorMatrix",{type:"matrix",values:"0 0 0 0 0.129412 0 0 0 0 0.141176 0 0 0 0 0.172549 0 0 0 0.08 0"}),u.jsx("feBlend",{in2:"BackgroundImageFix",mode:"normal",result:"effect1_dropShadow"}),u.jsx("feBlend",{in:"SourceGraphic",in2:"effect1_dropShadow",mode:"normal",result:"shape"})]}),u.jsx("g",{filter:"url(#math-input_cursor)",children:u.jsx("path",{d:"m22 4-7.07 7.0284c-1.3988 1.3901-2.3515 3.1615-2.7376 5.09-.3861 1.9284-.1883 3.9274.5685 5.7441s2.0385 3.3694 3.6831 4.4619c1.6445 1.0925 3.5781 1.6756 5.556 1.6756s3.9115-.5831 5.556-1.6756c1.6446-1.0925 2.9263-2.6452 3.6831-4.4619s.9546-3.8157.5685-5.7441c-.3861-1.9285-1.3388-3.6999-2.7376-5.09z",fill:"#1865f2"})}),u.jsx("path",{d:"m14.9301 10.4841 7.0699-7.06989 7.0699 7.06989.0001.0001c1.3988 1.3984 2.3515 3.1802 2.7376 5.1201s.1883 3.9507-.5685 5.7782c-.7568 1.8274-2.0385 3.3894-3.6831 4.4883-1.6445 1.099-3.5781 1.6855-5.556 1.6855s-3.9115-.5865-5.556-1.6855c-1.6446-1.0989-2.9263-2.6609-3.6831-4.4883-.7568-1.8275-.9546-3.8383-.5685-5.7782s1.3388-3.7217 2.7376-5.1201z",stroke:"#fff",strokeWidth:"2"})]})})}}i(L,"defaultProps",{animateIntoPosition:!1,visible:!1,x:0,y:0});L.__docgenInfo={description:"",methods:[],displayName:"CursorHandle",props:{animateIntoPosition:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},onTouchCancel:{required:!0,tsType:{name:"signature",type:"function",raw:"(arg1: React.TouchEvent<HTMLSpanElement>) => void",signature:{arguments:[{type:{name:"ReactTouchEvent",raw:"React.TouchEvent<HTMLSpanElement>",elements:[{name:"HTMLSpanElement"}]},name:"arg1"}],return:{name:"void"}}},description:""},onTouchEnd:{required:!0,tsType:{name:"signature",type:"function",raw:"(arg1: React.TouchEvent<HTMLSpanElement>) => void",signature:{arguments:[{type:{name:"ReactTouchEvent",raw:"React.TouchEvent<HTMLSpanElement>",elements:[{name:"HTMLSpanElement"}]},name:"arg1"}],return:{name:"void"}}},description:""},onTouchMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(arg1: React.TouchEvent<HTMLSpanElement>) => void",signature:{arguments:[{type:{name:"ReactTouchEvent",raw:"React.TouchEvent<HTMLSpanElement>",elements:[{name:"HTMLSpanElement"}]},name:"arg1"}],return:{name:"void"}}},description:""},onTouchStart:{required:!0,tsType:{name:"signature",type:"function",raw:"(arg1: React.TouchEvent<HTMLSpanElement>) => void",signature:{arguments:[{type:{name:"ReactTouchEvent",raw:"React.TouchEvent<HTMLSpanElement>",elements:[{name:"HTMLSpanElement"}]},name:"arg1"}],return:{name:"void"}}},description:""},visible:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},x:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}},y:{required:!1,tsType:{name:"number"},description:"",defaultValue:{value:"0",computed:!1}}}};const P=8;class re{constructor(s,e){i(this,"_scrollListener");i(this,"_moveListener");i(this,"_endAndCancelListener");this._scrollListener=()=>{s()};const t={};for(let n=0;n<e.changedTouches.length;n++){const o=e.changedTouches[n];t[o.identifier]=[o.clientX,o.clientY]}this._moveListener=n=>{for(let o=0;o<n.changedTouches.length;o++){const r=n.changedTouches[o],l=t[r.identifier];if(l){const c=[r.clientX,r.clientY],d=c[0]-l[0],p=c[1]-l[1],f=d*d+p*p,b=P*P;f>b&&s()}}},this._endAndCancelListener=n=>{for(let o=0;o<n.changedTouches.length;o++)delete t[n.changedTouches[o].identifier]}}attach(){window.addEventListener("scroll",this._scrollListener),window.addEventListener("touchmove",this._moveListener),window.addEventListener("touchend",this._endAndCancelListener),window.addEventListener("touchcancel",this._endAndCancelListener)}detach(){window.removeEventListener("scroll",this._scrollListener),window.removeEventListener("touchmove",this._moveListener),window.removeEventListener("touchend",this._endAndCancelListener),window.removeEventListener("touchcancel",this._endAndCancelListener)}}function ae(a,s){const e=s[m.L]===T.MQ_END,t=x(s.parent.parent.blocks[0].ends);e?(v(s.parent.parent,s),t&&a.keystroke("Backspace")):a.keystroke("Backspace")}function de(a,s){if(x(s)){const e=s.parent.parent,t=e.latex(),n=e[m.L];v(e,s),e.blocks[1]._el.textContent===""?a.keystroke("Backspace"):(a.keystroke("Backspace"),a.write(t.replace(/^\\sqrt\[\]/,"\\sqrt")),n===T.MQ_END?a.moveToLeftEnd():s.insRightOf(n))}else s[m.L]!==T.MQ_END&&a.keystroke("Backspace")}function le(a,s){if(x(s)){const e=s.parent.parent,t=F(e);s.insLeftOf(t==null?void 0:t.startNode),s.startSelection(),e[m.R]!==T.MQ_END?s.insRightOf(e[m.R]):s.insRightOf(e),s.select(),s.endSelection(),e[m.R]._el.textContent===""&&a.keystroke("Backspace")}else a.keystroke("Backspace")}function ce(a,s){if(s[m.L]!==T.MQ_END){a.keystroke("Backspace");return}const e=s.parent.parent;if(e[m.L].sub&&e[m.L].sub._el.textContent){s.insAtRightEnd(e[m.L].sub);return}const t=x(s),n=F(e);s.insLeftOf(n&&n.startNode||e),s.startSelection(),s.insRightOf(e),s.select(),s.endSelection(),t&&a.keystroke("Backspace")}function ue(a){a.keystroke("Backspace"),a.keystroke("Backspace")}function he(a){const s=a.cursor();if(s.selection)a.keystroke("Backspace");else{const e=s.parent,t=e.parent,n=s[m.L];Y(n)?v(n,s):$(n)?v(n,s):M(n)?v(n,s):z(e)?de(a,s):t.ctrlSeq==="\\left("?ce(a,s):G(s)?le(a,s):n.ctrlSeq==="\\ge "||n.ctrlSeq==="\\le "?ue(a):M(t)&&n===T.MQ_END?ae(a,s):a.keystroke("Backspace")}}class pe{constructor(s,e,t,n,o={}){i(this,"mathField");i(this,"callbacks");i(this,"mobileKeyTranslator");var r;this.mathField=J(s,n,t,()=>({substituteTextarea:function(){return document.createElement("span")}})),(r=this.mathField)==null||r.setAriaLabel(e),this.callbacks=o,this.mobileKeyTranslator={...Z(n,t),BACKSPACE:he}}focus(){this.mathField.cursor().show(),this.mathField.focus()}blur(){this.mathField.cursor().hide(),this.mathField.blur()}pressKey(s){const e=this.getCursor(),t=this.mobileKeyTranslator[s];return t&&t(this.mathField,s),e.selection||e.show(),this.callbacks.onSelectionChanged&&this.callbacks.onSelectionChanged(e.selection),{context:this.contextForCursor()}}setCursorPosition(s,e,t){const n=t||document.elementFromPoint(s,e);if(n){const o=this.getCursor();if(n.hasAttribute("mq-root-block"))o.insAtRightEnd(this.mathField.controller().root);else{const r=this.mathField.controller(),l=s-document.body.scrollLeft,c=e-document.body.scrollTop;r.seek(n,l,c).cursor.startSelection();const d=ee(o[m.L]);d&&d.endNode&&(o.insLeftOf(d.endNode),this.mathField.keystroke("Right"))}this.callbacks.onCursorMove&&this.callbacks.onCursorMove({context:this.contextForCursor()})}}getCursor(){return this.mathField.cursor()}contextForCursor(){return te(this.mathField)}getSelection(){return this.getCursor().selection}getContent(){return this.mathField.latex()}setContent(s){this.mathField.latex(s)}isEmpty(){const s=this.getCursor();return s.parent.id===1&&s[1]===0&&s[-1]===0}}const me=60,fe=(a,s)=>{const e=a.getBoundingClientRect(),t=e.bottom,n=e.top,o=document.scrollingElement,r=16;if(s){const l=window.innerHeight,c=s.clientHeight,d=l-(c+me);if(t>d){const p=Math.min(t-d+r,n);o&&(o.scrollTop+=p);return}}o&&n<r&&(o.scrollTop-=e.height+r)},I=.8;class C extends R.Component{constructor(){super(...arguments);i(this,"didTouchOutside");i(this,"didScroll");i(this,"mathField");i(this,"recordTouchStartOutside");i(this,"blurOnTouchEndOutside");i(this,"blurOnClickOutside");i(this,"dragListener");i(this,"inputRef");i(this,"_isMounted");i(this,"_mathContainer");i(this,"_container");i(this,"_root");i(this,"_containerBounds");i(this,"state",{focused:!1,showInputFocusStyle:!1,handle:{animateIntoPosition:!1,visible:!1,x:0,y:0}});i(this,"_updateInputPadding",()=>{this._container=k.findDOMNode(this),this._root=this._container.querySelector(".mq-root-block");const e=this.getInputInnerPadding();this._root.style.padding=`${e.paddingTop}px ${e.paddingRight}px ${e.paddingBottom}px ${e.paddingLeft}px`,this._root.style.fontSize=`${ge}pt`});i(this,"_updateCursorHandle",e=>{const t=this._container.getBoundingClientRect(),o=this._container.querySelector(".mq-cursor").getBoundingClientRect(),r=o.width,l=2,c=this.getInputInnerPadding(),d=t.right-r-c.paddingRight,p=t.left+r+c.paddingLeft;let f=o.left;o.left>d?f=d:o.left<p&&(f=p),this.setState({handle:{visible:!0,animateIntoPosition:e,x:f+r/2-t.left,y:o.bottom+l-t.top}})});i(this,"_hideCursorHandle",()=>{this.setState({handle:{visible:!1,x:0,y:0}})});i(this,"_handleScroll",()=>{this.state.handle.animateIntoPosition!==!1&&this._hideCursorHandle()});i(this,"blur",()=>{this.mathField.blur(),this.setState({showInputFocusStyle:!1,handle:{visible:!1}})});i(this,"focus",e=>{var t,n;(t=this.props.keypadElement)==null||t.setKeyHandler(o=>{const r=this.mathField.pressKey(o),l=()=>{this.setState({handle:{visible:!1}})},c=this.mathField.getContent();return this.props.value!==c?this.props.onChange(c,l):l(),r}),this.mathField.focus(),(n=this.props)==null||n.onFocus(),e(!0),this.setState({focused:!0,showInputFocusStyle:!0},()=>{setTimeout(()=>{var o;if(this._isMounted){const r=(o=this.props.keypadElement)==null?void 0:o.getDOMNode();fe(this._container,r)}})})});i(this,"_findHitNode",(e,t,n,o,r)=>{for(;n>=e.top&&n<=e.bottom;){n+=r;const c=[[t-o,n],[t,n],[t+o,n]].map(h=>document.elementFromPoint(...h)).filter(h=>h&&this._root.contains(h)&&(!h.classList.contains("mq-root-block")&&!h.classList.contains("mq-non-leaf")||h.classList.contains("mq-empty")||h.classList.contains("mq-hasCursor")));let d=null;const p=[];let f=0;const b={},S={};for(const h of c){const g=h.getAttribute("mathquill-command-id");g!=null?(b[g]=(b[g]||0)+1,S[g]=h):p.push(h)}for(const[h,g]of V(b))g>f&&(f=g,d=S[h]);if(d==null&&p.length>0&&(d=p[0]),d!==null)return this.mathField.setCursorPosition(t,n,d),!0}return!1});i(this,"_insertCursorAtClosestNode",(e,t)=>{var f;const n=this.mathField.getCursor();if(!this._root.hasChildNodes()){n.insAtLeftEnd(this.mathField.mathField.controller().root);return}t>this._containerBounds.bottom?t=this._containerBounds.bottom-10:t<this._containerBounds.top&&(t=this._containerBounds.top+10),e>this._containerBounds.right?e=this._containerBounds.right-15:e<this._containerBounds.left&&(e=this._containerBounds.left+15);let o;o=-8;const r=5;if(this._findHitNode(this._containerBounds,e,t,r,o)||(t=this._containerBounds.top,o=8,this._findHitNode(this._containerBounds,e,t,r,o)))return;const l=this._root.firstChild.getBoundingClientRect(),c=this._root.lastChild.getBoundingClientRect(),d=l.left,p=c.right;Math.abs(e-p)<Math.abs(e-d)?n.insAtRightEnd(this.mathField.mathField.controller().root):n.insAtLeftEnd(this.mathField.mathField.controller().root),(f=this.props.keypadElement)==null||f.setCursor({context:this.mathField.contextForCursor()})});i(this,"handleTouchStart",(e,t,n)=>{var o;if(e.stopPropagation(),this._hideCursorHandle(),this.mathField.getContent()!==""){this._containerBounds=this._container.getBoundingClientRect();const r=e.changedTouches[0];this._insertCursorAtClosestNode(r.clientX,r.clientY)}this.state.focused&&!t&&n(!0),this.state.focused||this.focus(n),(o=this.inputRef)==null||o.focus()});i(this,"handleClick",(e,t,n)=>{var o;e.stopPropagation(),this._hideCursorHandle(),this.mathField.getContent()!==""&&(this._containerBounds=this._container.getBoundingClientRect(),this._insertCursorAtClosestNode(e.clientX,e.clientY)),this.state.focused&&!t&&n(!0),this.state.focused||this.focus(n),(o=this.inputRef)==null||o.focus()});i(this,"handleTouchMove",e=>{if(e.stopPropagation(),this.mathField.getContent()!==""&&this.state.focused){const t=e.changedTouches[0];this._insertCursorAtClosestNode(t.clientX,t.clientY)}});i(this,"handleTouchEnd",e=>{e.stopPropagation(),this.mathField.getContent()!==""&&this.state.focused&&this._updateCursorHandle()});i(this,"onCursorHandleTouchStart",e=>{e.stopPropagation(),e.preventDefault(),this._containerBounds=this._container.getBoundingClientRect()});i(this,"_constrainToBound",(e,t,n,o)=>e<t?t+(e-t)*o:e>n?n+(e-n)*o:e);i(this,"onCursorHandleTouchMove",e=>{e.stopPropagation();const t=e.changedTouches[0].clientX,n=e.changedTouches[0].clientY,o=t-this._containerBounds.left,r=n-2*B*O-this._containerBounds.top;this.setState({handle:{animateIntoPosition:!1,visible:!0,x:this._constrainToBound(o,0,this._containerBounds.width,I),y:this._constrainToBound(r,0,this._containerBounds.height,I)}});const c=n-22;this._insertCursorAtClosestNode(t,c)});i(this,"onCursorHandleTouchEnd",e=>{e.stopPropagation(),this._updateCursorHandle(!0)});i(this,"onCursorHandleTouchCancel",e=>{e.stopPropagation(),this._updateCursorHandle(!0)});i(this,"domKeyToMathQuillKey",e=>{const t={"+":"PLUS","-":"MINUS","*":"TIMES","/":"DIVIDE",".":"DECIMAL","%":"PERCENT","=":"EQUAL",">":"GT","<":"LT","^":"EXP"};return["0","1","2","3","4","5","6","7","8","9"].includes(e)?`NUM_${e}`:e==="Backspace"?"BACKSPACE":e in t?t[e]:null});i(this,"handleKeyUp",e=>{const t=this.domKeyToMathQuillKey(e.key);if(t){this.mathField.pressKey(t);const n=this.mathField.getContent();this.props.value!==n&&(this.mathField.setContent(this.props.value),this.props.onChange(n,()=>{}),this._hideCursorHandle())}});i(this,"getBorderWidthPx",()=>this.state.focused?2:1);i(this,"getInputInnerPadding",()=>{const e=D-this.getBorderWidthPx(),t=3,n=1,o=2;return{paddingTop:e-n,paddingRight:e+o,paddingBottom:e-t,paddingLeft:e+o}})}componentDidMount(){this._isMounted=!0,this.mathField=new pe(this._mathContainer,this.props.ariaLabel,this.context.strings,this.context.locale,{onCursorMove:t=>{var n;(n=this.props.keypadElement)==null||n.setCursor(t)}}),this.mathField.setContent(this.props.value),this._updateInputPadding(),this._container=k.findDOMNode(this),this._root=this._container.querySelector(".mq-root-block"),this._root.addEventListener("scroll",this._handleScroll);const e=(t,n)=>{const o=this._getKeypadBounds();return o?o.left<=t&&o.right>=t&&o.top<=n&&o.bottom>=n||o.bottom<n:!1};this.recordTouchStartOutside=t=>{if(this.state.focused&&!this._container.contains(t.target)){let n=!1;if(this.props.keypadElement&&this.props.keypadElement.getDOMNode())for(let o=0;o<t.changedTouches.length;o++){const[r,l]=[t.changedTouches[o].clientX,t.changedTouches[o].clientY];if(e(r,l)){n=!0;break}}n||(this.didTouchOutside=!0,this.dragListener&&this.dragListener.detach(),this.dragListener=new re(()=>{this.didScroll=!0,this.dragListener.detach()},t),this.dragListener.attach())}},this.blurOnTouchEndOutside=t=>{var n,o;this.state.focused&&this.didTouchOutside&&!this.didScroll&&(this.blur(),this.mathField.blur(),(o=(n=this.props).onBlur)==null||o.call(n)),this.didTouchOutside=!1,this.didScroll=!1,this.dragListener&&this.dragListener.detach()},this.blurOnClickOutside=t=>{var n,o;if(this.state.focused&&!this._container.contains(t.target)&&this.props.keypadElement&&this.props.keypadElement.getDOMNode()){const[r,l]=[t.clientX,t.clientY];e(r,l)||(this.blur(),(o=(n=this.props).onBlur)==null||o.call(n))}},window.addEventListener("touchstart",this.recordTouchStartOutside),window.addEventListener("touchend",this.blurOnTouchEndOutside),window.addEventListener("touchcancel",this.blurOnTouchEndOutside),window.addEventListener("click",this.blurOnClickOutside)}componentDidUpdate(e,t){this.mathField.getContent()!==this.props.value&&this.mathField.setContent(this.props.value),t.focused!==this.state.focused&&this._updateInputPadding()}componentWillUnmount(){this._isMounted=!1,window.removeEventListener("touchstart",this.recordTouchStartOutside),window.removeEventListener("touchend",this.blurOnTouchEndOutside),window.removeEventListener("touchcancel",this.blurOnTouchEndOutside),window.removeEventListener("click",this.blurOnClickOutside)}_getKeypadBounds(){var t;const e=(t=this.props.keypadElement)==null?void 0:t.getDOMNode();return e instanceof Element?e.getBoundingClientRect():null}render(){const{showInputFocusStyle:e,handle:t}=this.state,{style:n}=this.props,o={...Ce.innerContainer,borderWidth:this.getBorderWidthPx(),...e?{borderColor:w.blue}:{},...n},r=this.context.strings.mathInputBox+" "+this.context.strings.fingerTap;return u.jsx(Q.Consumer,{children:({keypadActive:l,setKeypadActive:c})=>u.jsxs(U,{style:ve.input,onTouchStart:d=>{this.handleTouchStart(d,l,c)},onTouchMove:this.handleTouchMove,onTouchEnd:this.handleTouchEnd,onClick:d=>{this.handleClick(d,l,c)},role:"textbox",ariaLabel:r,children:[u.jsx("div",{className:"keypad-input",tabIndex:"0",ref:d=>{this.inputRef=d},onFocus:()=>{this.focus(c)},onBlur:this.blur,onKeyUp:this.handleKeyUp,children:u.jsx("div",{ref:d=>{this._mathContainer=k.findDOMNode(d)},style:o})}),e&&t.visible&&u.jsx(L,{...t,onTouchStart:this.onCursorHandleTouchStart,onTouchMove:this.onCursorHandleTouchMove,onTouchEnd:this.onCursorHandleTouchEnd,onTouchCancel:this.onCursorHandleTouchCancel})]})})}}i(C,"contextType",H),i(C,"defaultProps",{style:{},value:""});C.contextType=H;const ge=18,A=128,ye=20,D=12,Te=ye+D*2,be=64,ve=X.StyleSheet.create({input:{position:"relative",display:"inline-block",verticalAlign:"middle",maxWidth:A}}),Ce={innerContainer:{backgroundColor:"white",minHeight:Te,minWidth:be,maxWidth:A,boxSizing:"border-box",position:"relative",borderStyle:"solid",borderColor:w.offBlack50,borderRadius:4,color:w.offBlack}};C.__docgenInfo={description:"",methods:[{name:"_updateInputPadding",docblock:null,modifiers:[],params:[],returns:null},{name:"_getKeypadBounds",docblock:"Returns the current bounds of the keypadElement",modifiers:[],params:[],returns:{type:{name:"union",raw:"DOMRect | null",elements:[{name:"DOMRect"},{name:"null"}]}},description:"Returns the current bounds of the keypadElement"},{name:"_updateCursorHandle",docblock:null,modifiers:[],params:[{name:"animateIntoPosition",optional:!1,type:null}],returns:null},{name:"_hideCursorHandle",docblock:null,modifiers:[],params:[],returns:null},{name:"_handleScroll",docblock:null,modifiers:[],params:[],returns:null},{name:"blur",docblock:null,modifiers:[],params:[],returns:null},{name:"focus",docblock:null,modifiers:[],params:[{name:"setKeypadActive",optional:!1,type:null}],returns:null},{name:"_findHitNode",docblock:`Tries to determine which DOM node to place the cursor next to based on
where the user drags the cursor handle.  If it finds a node it will
place the cursor next to it, update the handle to be under the cursor,
and return true.  If it doesn't find a node, it returns false.

It searches for nodes by doing it tests at the following points:

  (x - dx, y), (x, y), (x + dx, y)

If it doesn't find any nodes from the rendered math it will update y
by adding dy.

The algorithm ends its search when y goes outside the bounds of
containerBounds.

@param {DOMRect} containerBounds - bounds of the container node
@param {number} x - the initial x coordinate in the viewport
@param {number} y - the initial y coordinate in the viewport
@param {number} dx - horizontal spacing between elementFromPoint calls
@param {number} dy - vertical spacing between elementFromPoint calls,
                     sign determines direction.
@returns {boolean} - true if a node was hit, false otherwise.`,modifiers:[],params:[{name:"containerBounds",description:"bounds of the container node",type:{name:"DOMRect"},optional:!1},{name:"x",description:"the initial x coordinate in the viewport",type:{name:"number"},optional:!1},{name:"y",description:"the initial y coordinate in the viewport",type:{name:"number"},optional:!1},{name:"dx",description:"horizontal spacing between elementFromPoint calls",type:{name:"number"},optional:!1},{name:"dy",description:`vertical spacing between elementFromPoint calls,
                     sign determines direction.`,type:{name:"number"},optional:!1}],returns:{description:"true if a node was hit, false otherwise.",type:{name:"boolean"}},description:`Tries to determine which DOM node to place the cursor next to based on
where the user drags the cursor handle.  If it finds a node it will
place the cursor next to it, update the handle to be under the cursor,
and return true.  If it doesn't find a node, it returns false.

It searches for nodes by doing it tests at the following points:

  (x - dx, y), (x, y), (x + dx, y)

If it doesn't find any nodes from the rendered math it will update y
by adding dy.

The algorithm ends its search when y goes outside the bounds of
containerBounds.`},{name:"_insertCursorAtClosestNode",docblock:`Inserts the cursor at the DOM node closest to the given coordinates,
based on hit-tests conducted using #_findHitNode.

@param {number} x - the x coordinate in the viewport
@param {number} y - the y coordinate in the viewport`,modifiers:[],params:[{name:"x",description:"the x coordinate in the viewport",type:{name:"number"},optional:!1},{name:"y",description:"the y coordinate in the viewport",type:{name:"number"},optional:!1}],returns:null,description:`Inserts the cursor at the DOM node closest to the given coordinates,
based on hit-tests conducted using #_findHitNode.`},{name:"handleTouchStart",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactTouchEvent",raw:"React.TouchEvent<HTMLDivElement>",elements:[{name:"HTMLDivElement"}],alias:"React.TouchEvent"}},{name:"keypadActive",optional:!1,type:{name:"boolean",raw:'KeypadContextType["keypadActive"]'}},{name:"setKeypadActive",optional:!1,type:{name:"signature",raw:'KeypadContextType["setKeypadActive"]'}}],returns:{type:{name:"void"}}},{name:"handleClick",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLDivElement>",elements:[{name:"HTMLDivElement"}],alias:"React.MouseEvent"}},{name:"keypadActive",optional:!1,type:{name:"boolean",raw:'KeypadContextType["keypadActive"]'}},{name:"setKeypadActive",optional:!1,type:{name:"signature",raw:'KeypadContextType["setKeypadActive"]'}}],returns:{type:{name:"void"}}},{name:"handleTouchMove",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"handleTouchEnd",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"onCursorHandleTouchStart",docblock:`When a touch starts in the cursor handle, we track it so as to avoid
handling any touch events ourself.

@param {TouchEvent} e - the raw touch event from the browser`,modifiers:[],params:[{name:"e",description:"the raw touch event from the browser",type:{name:"TouchEvent"},optional:!1}],returns:null,description:`When a touch starts in the cursor handle, we track it so as to avoid
handling any touch events ourself.`},{name:"_constrainToBound",docblock:null,modifiers:[],params:[{name:"value",optional:!1,type:null},{name:"min",optional:!1,type:null},{name:"max",optional:!1,type:null},{name:"friction",optional:!1,type:null}],returns:null},{name:"onCursorHandleTouchMove",docblock:`When the user moves the cursor handle update the position of the cursor
and the handle.

@param {TouchEvent} e - the raw touch event from the browser`,modifiers:[],params:[{name:"e",description:"the raw touch event from the browser",type:{name:"TouchEvent"},optional:!1}],returns:null,description:`When the user moves the cursor handle update the position of the cursor
and the handle.`},{name:"onCursorHandleTouchEnd",docblock:`When the user releases the cursor handle, animate it back into place.

@param {TouchEvent} e - the raw touch event from the browser`,modifiers:[],params:[{name:"e",description:"the raw touch event from the browser",type:{name:"TouchEvent"},optional:!1}],returns:null,description:"When the user releases the cursor handle, animate it back into place."},{name:"onCursorHandleTouchCancel",docblock:`If the gesture is cancelled mid-drag, simply hide it.

@param {TouchEvent} e - the raw touch event from the browser`,modifiers:[],params:[{name:"e",description:"the raw touch event from the browser",type:{name:"TouchEvent"},optional:!1}],returns:null,description:"If the gesture is cancelled mid-drag, simply hide it."},{name:"domKeyToMathQuillKey",docblock:null,modifiers:[],params:[{name:"key",optional:!1,type:null}],returns:null},{name:"handleKeyUp",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:null}],returns:null},{name:"getBorderWidthPx",docblock:null,modifiers:[],params:[],returns:null},{name:"getInputInnerPadding",docblock:null,modifiers:[],params:[],returns:null}],displayName:"MathInput",props:{keypadElement:{required:!1,tsType:{name:"KeypadAPI"},description:""},ariaLabel:{required:!0,tsType:{name:"string"},description:""},onBlur:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(value: string, callback: any) => void",signature:{arguments:[{type:{name:"string"},name:"value"},{type:{name:"any"},name:"callback"}],return:{name:"void"}}},description:""},onFocus:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:""},style:{required:!1,tsType:{name:"any"},description:"",defaultValue:{value:"{}",computed:!1}},value:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'""',computed:!1}}}};const He=y.shape({activate:y.func.isRequired,dismiss:y.func.isRequired,configure:y.func.isRequired,setCursor:y.func.isRequired,setKeyHandler:y.func.isRequired,getDOMNode:y.func.isRequired});export{C as M,He as k};
