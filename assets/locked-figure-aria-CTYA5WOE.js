import"./all-widgets-DT--A9xM.js";import"./phet-simulation-DOXsIrrc.js";import"./underscore-U-AHniOr.js";import"./core-widget-registry-2tCIH_GM.js";import"./dependencies-BsVPGK1s.js";import"./perseus-api-DmwU2RjF.js";import"./server-item-renderer-B2-PPl2j.js";import"./article-renderer-XuVFlMX9.js";import"./hints-renderer-Bgu9Wu6L.js";import"./renderer-Doy-sv_3.js";import"./base-radio-kaSH4GDV.js";import{c as d}from"./components-DVAzFIw2.js";import"./i18n-context-glBZFVwC.js";import"./util-Cjm22Ttl.js";import"./svg-image-fTqFFTIk.js";import"./jquery-CkHB0_Mt.js";import"./index-Dd-cahjY.js";import{B as g}from"./index-CYrfVekP.js";import{V as l}from"./index-CskvhqFA.js";import{a as f}from"./index-CieYLtDP.js";import{S as r,a as b}from"./index-B-CZbs2J.js";import{s as a,c as h}from"./index-C9RM_t1w.js";import{a as y,d as w}from"./index-CbNKSLRm.js";import{n as L}from"./no-important-DlFk8a1I.js";import{r as e}from"./index-C6mWTJJr.js";const Q=""+new URL("plus-circle-x9sP7dzF.svg",import.meta.url).href,E=""+new URL("pencil-circle-gxKdCU6a.svg",import.meta.url).href,{InfoTip:v}=d;function x(m){const{ariaLabel:p,getPrepopulatedAriaLabel:c,onChangeProps:n}=m,o=`aria-label-${e.useId()}`,[u,s]=e.useState(!1);return e.createElement(l,null,e.createElement(r,{size:a.xSmall_8}),e.createElement(l,{style:i.row},e.createElement(y,{tag:"label",htmlFor:o},"Aria label"),e.createElement(b,null),e.createElement(v,null,"Aria label is used by screen readers to describe content to users who may be visually impaired. ",e.createElement("br",null),e.createElement("br",null),"Populating this field will make it so that users can use a screen reader to navigate to this point and hear the description.",e.createElement("br",null),e.createElement("br",null),"If you leave this field blank, the point will be hidden from screen readers. Users will not be able to navigate to this point using a screen reader.")),e.createElement(r,{size:a.xxSmall_6}),e.createElement(w,{style:i.caption},"The figure is hidden from screen readers if this field is left blank."),e.createElement(r,{size:a.xxSmall_6}),e.createElement(f,{id:o,value:u?"Loading...":p??"",onChange:t=>{n({ariaLabel:t||void 0})},placeholder:"Ex. Point at (x, y)",rows:1,resizeType:"vertical"}),e.createElement(g,{kind:"tertiary",startIcon:E,style:i.button,onClick:()=>{s(!0),c().then(t=>{s(!1),n({ariaLabel:t})})}},"Auto-generate"))}const i=L.StyleSheet.create({row:{flexDirection:"row",alignItems:"center"},button:{alignSelf:"start"},caption:{color:h.offBlack64}});x.__docgenInfo={description:"",methods:[],displayName:"LockedFigureAria",props:{ariaLabel:{required:!0,tsType:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}]},description:""},getPrepopulatedAriaLabel:{required:!0,tsType:{name:"signature",type:"function",raw:"() => Promise<string>",signature:{arguments:[],return:{name:"Promise",elements:[{name:"string"}],raw:"Promise<string>"}}},description:`The async function that generates the prepopulated aria label
for the locked figure with math details converted to spoken words.`},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(props: {ariaLabel?: string | undefined}) => void",signature:{arguments:[{type:{name:"signature",type:"object",raw:"{ariaLabel?: string | undefined}",signature:{properties:[{key:"ariaLabel",value:{name:"union",raw:"string | undefined",elements:[{name:"string"},{name:"undefined"}],required:!1}}]}},name:"props"}],return:{name:"void"}}},description:""}}};export{x as L,Q as p};
