import{j as e,aF as C,y as p,s,V as d,n as $,cH as j,cM as z,e as w,L as f,h,z as L,bN as H,r as Q}from"./iframe-D3VzT3LL.js";import{S as A,O as b,C as Y}from"./color-select-fF9B68dj.js";import{p as q}from"./plus-circle-DsgEZe2H.js";import{C as Z,L as J,a as K}from"./locked-label-settings-BUQcaqGP.js";import{L as ee}from"./labeled-switch-Bf0lvwtt.js";import{P as T}from"./trash-bold-BVYeKEKD.js";import{L as ne}from"./line-stroke-select-JKM01Ujq.js";import{L as ae}from"./locked-figure-aria-BUFjaQOM.js";import{g as te,j as re,a as P,b as le}from"./util-BqQaeTdh.js";const oe=""+new URL("arrow-fat-down-Bfm634Ub.svg",import.meta.url).href,ie=""+new URL("arrow-fat-left-vG4eNh8n.svg",import.meta.url).href,se=""+new URL("arrow-fat-right-LGRtshLE.svg",import.meta.url).href,ue=""+new URL("arrow-fat-up-BqHZ5poh.svg",import.meta.url).href,de=""+new URL("minus-circle-D0QptBrx.svg",import.meta.url).href,_=m=>{const{selectedValue:r,containerStyle:u,onChange:y}=m;return e.jsxs(C,{tag:"label",style:[{display:"flex",flexDirection:"row",alignItems:"center",minWidth:0},u],children:["weight",e.jsx(p,{size:s.xxxSmall_4}),e.jsxs(A,{selectedValue:r,onChange:g=>y(g),placeholder:"",children:[e.jsx(b,{value:"thin",label:"thin"}),e.jsx(b,{value:"medium",label:"medium"}),e.jsx(b,{value:"thick",label:"thick"})]})]})};_.__docgenInfo={description:"",methods:[],displayName:"LineWeightSelect",props:{selectedValue:{required:!0,tsType:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(newValue: StrokeWeight) => void",signature:{arguments:[{type:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},name:"newValue"}],return:{name:"void"}}},description:""},containerStyle:{required:!1,tsType:{name:"StyleType"},description:""}}};const R=m=>{const{color:r,fillStyle:u,strokeStyle:y}=m;return e.jsx(d,{"aria-label":`${r}, stroke ${y}, fill ${u}`,style:[F.container,{border:`4px ${y} ${j[r]}`}],children:e.jsx(d,{style:[F.innerSquare,{backgroundColor:j[r],opacity:u==="white"?0:z[u]}]})})},F=$.StyleSheet.create({container:{outline:`2px solid ${w.offWhite}`,width:s.large_24,height:s.large_24,backgroundColor:w.white,alignItems:"center",justifyContent:"center"},innerSquare:{width:20,height:20}});R.__docgenInfo={description:"",methods:[],displayName:"PolygonSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const me=m=>{const{points:r,color:u,showVertices:y,fillStyle:g,strokeStyle:x,weight:S="medium",labels:i,ariaLabel:V,expanded:U,onToggle:I,onChangeProps:o,onMove:M,onRemove:B}=m;async function W(){let n=`Polygon${await re(i)} with ${r.length} sides, vertices at `;const l=await Promise.all(r.map(async([v,O])=>{const X=await P(`$${v}$`),G=await P(`$${O}$`);return`${X} comma ${G}`}));n+=l.join(", ");const c=le(u,x,g,S);return n+=c,n}function N(a){const n={color:a};n.labels=i.map(l=>({...l,color:a})),o(n)}function k(a){switch(a){case"up":o({points:r.map(([n,l])=>[n,l+1]),labels:i.map(n=>({...n,coord:[n.coord[0],n.coord[1]+1]}))});break;case"down":o({points:r.map(([n,l])=>[n,l-1]),labels:i.map(n=>({...n,coord:[n.coord[0],n.coord[1]-1]}))});break;case"left":o({points:r.map(([n,l])=>[n-1,l]),labels:i.map(n=>({...n,coord:[n.coord[0]-1,n.coord[1]]}))});break;case"right":o({points:r.map(([n,l])=>[n+1,l]),labels:i.map(n=>({...n,coord:[n.coord[0]+1,n.coord[1]]}))});break}}function D(a,n){const l=[...i];l[n]={...i[n],...a},o({labels:l})}function E(a){const n=i.filter((l,c)=>c!==a);o({labels:n})}return e.jsxs(T,{expanded:U,onToggle:I,header:e.jsxs(d,{style:t.row,children:[e.jsx(f,{children:`Polygon, ${r.length} sides`}),e.jsx(p,{size:s.xSmall_8}),e.jsx(R,{color:u,fillStyle:g,strokeStyle:x})]}),children:[e.jsxs(d,{style:[t.row,t.spaceUnder],children:[e.jsx(Y,{selectedValue:u,onChange:N}),e.jsx(p,{size:s.medium_16}),e.jsxs(C,{tag:"label",style:[t.row,t.truncatedWidth],children:["fill",e.jsx(p,{size:s.xxSmall_6}),e.jsx(A,{selectedValue:g,onChange:a=>o({fillStyle:a}),placeholder:"",children:Object.keys(z).map(a=>e.jsx(b,{value:a,label:a},a))})]})]}),e.jsx(ne,{selectedValue:x,onChange:a=>o({strokeStyle:a}),containerStyle:t.spaceUnder}),e.jsx(_,{selectedValue:S,onChange:a=>o({weight:a}),containerStyle:t.spaceUnder}),e.jsx(ee,{label:"show vertices",checked:y,onChange:a=>o({showVertices:a}),style:t.spaceUnder}),e.jsxs(T,{header:e.jsx(f,{children:"Points"}),expanded:!0,containerStyle:t.pointAccordionContainer,panelStyle:t.pointAccordionPanel,children:[r.map((a,n)=>{const l=String.fromCharCode(65+n);return e.jsxs(d,{style:[t.row,t.spaceUnder],children:[e.jsx(f,{children:`${l}:`}),e.jsx(p,{size:s.medium_16}),e.jsx(Z,{coord:a,labels:["x","y"],onChange:c=>{const v=[...r];v[n]=c,m.onChangeProps({points:v})}}),r.length>3&&e.jsx(h,{"aria-label":`Delete polygon point ${l}`,icon:de,kind:"tertiary",actionType:"destructive",onClick:()=>{const c=[...r];c.splice(n,1),m.onChangeProps({points:c})},style:t.icon})]},`locked-polygon-point-index-${n}`)}),e.jsxs(d,{style:[t.row,t.polygonActionsContainer],children:[e.jsx(L,{kind:"tertiary",startIcon:q,onClick:()=>{m.onChangeProps({points:[...r,[0,0]]})},children:"Add point"}),e.jsx(H,{}),e.jsxs(d,{style:t.movementButtonsContainer,children:[e.jsx(h,{"aria-label":"Move polygon up",size:"small",icon:ue,kind:"tertiary",onClick:()=>k("up")}),e.jsxs(d,{style:t.row,children:[e.jsx(h,{"aria-label":"Move polygon left",size:"small",icon:ie,kind:"tertiary",onClick:()=>k("left")}),e.jsx(h,{"aria-label":"Move polygon down",size:"small",icon:oe,kind:"tertiary",onClick:()=>k("down")}),e.jsx(h,{"aria-label":"Move polygon right",size:"small",icon:se,kind:"tertiary",onClick:()=>k("right")})]})]})]})]}),e.jsx(p,{size:s.small_12}),e.jsx(d,{style:t.horizontalRule}),e.jsx(ae,{ariaLabel:V,getPrepopulatedAriaLabel:W,onChangeProps:a=>{o(a)}}),e.jsx(p,{size:s.xxxSmall_4}),e.jsx(d,{style:t.horizontalRule}),e.jsx(p,{size:s.small_12}),e.jsx(C,{children:"Visible labels"}),i.map((a,n)=>Q.createElement(J,{...a,key:n,expanded:!0,onChangeProps:l=>{D(l,n)},onRemove:()=>{E(n)},containerStyle:t.labelContainer})),e.jsx(L,{kind:"tertiary",startIcon:q,onClick:()=>{const a={...te("label"),coord:[r[0][0],r[0][1]-i.length],color:u};o({labels:[...i,a]})},style:t.addButton,children:"Add visible label"}),e.jsx(K,{figureType:m.type,onMove:M,onRemove:B})]})},t=$.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},pointAccordionContainer:{backgroundColor:w.white},pointAccordionPanel:{alignItems:"start"},icon:{marginInlineStart:s.xxxSmall_4},polygonActionsContainer:{width:"100%"},movementButtonsContainer:{display:"flex",flexDirection:"column",alignItems:"center",minWidth:"fit-content"},spaceUnder:{marginBottom:s.xSmall_8},truncatedWidth:{minWidth:0},addButton:{alignSelf:"start"},labelContainer:{backgroundColor:w.white},horizontalRule:{height:1,backgroundColor:w.offBlack16}});me.__docgenInfo={description:"",methods:[],displayName:"LockedPolygonSettings",props:{onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},type:{required:!0,tsType:{name:"literal",value:'"polygon"'},description:""},points:{required:!0,tsType:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],raw:"Coord[]"},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},showVertices:{required:!0,tsType:{name:"boolean"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},weight:{required:!0,tsType:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},description:""},labels:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPolygonType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedPolygonType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};export{me as L};
