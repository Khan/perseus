import{r}from"./index-6oxdNXpR.js";import{L as n}from"./locked-polygon-settings-KcMIzKK0.js";import{g as y}from"./util-UcIpDj0P.js";import"./_commonjsHelpers-4gQjN7DL.js";import"./underscore-885MUNGo.js";import"./random-util-Lyo-jiyD.js";import"./index-dLgOY9TT.js";import"./index-iTGWTR8W.js";import"./no-important-xCWWYXQR.js";import"./index-k8usAFZT.js";import"./tiny-invariant-bHgPayXn.js";import"./index-QHkT31Yt.js";import"./index-OUR0CuKj.js";import"./index-oeg-q71o.js";import"./index-DQI2fDhH.js";import"./index-xxLWRBZ2.js";import"./answer-choices-GDtCZAXG.js";import"./index-86cQASob.js";import"./index-Mag-4PMw.js";import"./index-9gkyvru-.js";import"./index-OQMtW1Q1.js";import"./assertThisInitialized-4q6YPdh3.js";import"./Popper-Y5KDXl-P.js";import"./index-NdzxJoEP.js";import"./index-pFS_Jhjg.js";import"./i18n-context-g2lQsEMW.js";import"./renderer-q5I3YOSz.js";import"./perseus-error-l3K_anoI.js";import"./util-SOQXJ_QX.js";import"./jquery-5v7aFUvu.js";import"./get-decimal-separator-c07pHhM9.js";import"./index-o42urCig.js";import"./index-J2t_5nK1.js";import"./index-dnMhQZ-1.js";import"./zoomable-tex-vrUOkV3E.js";import"./tex-q_4hQMGs.js";import"./dependencies-CP7Uh8Kq.js";import"./zoomable-m_J-BBOg.js";import"./svg-image-cWgWkhfP.js";import"./fixed-to-responsive-8Rm8IBlT.js";import"./constants-vGHYchdS.js";import"./client-Rb4DelHy.js";import"./inline-icon-8e4u-lSW.js";import"./icon-paths-5JCXzGsq.js";import"./image-loader-qCu_dXQl.js";import"./perseus-api-Y55S7ZPk.js";import"./stub-tag-editor--BF0WBUz.js";import"./text-list-editor-9dKImvgD.js";import"./lint-a43UkMJQ.js";import"./locked-figure-aria-xnI2F_S_.js";import"./all-widgets-ORoYjAfN.js";import"./prop-types-AnP_owQy.js";import"./mobile-keypad-cU622FXo.js";import"./tabbar-zpu-45Sc.js";import"./item-Q2jDffTR.js";import"./button-assets-CakeIBrU.js";import"./keypad-button-qWZwbi9I.js";import"./operators-page-IQiVNVIS.js";import"./navigation-pad-vWrthk3_.js";import"./key-translator-ErEkqSCF.js";import"./enums-x5qaTru7.js";import"./index-z5d8ny9G.js";import"./math-input-blekQYLw.js";import"./index-Q2smMtUQ.js";import"./simple-keypad-input-DLK5OEEV.js";import"./input-with-examples-YoWDIx42.js";import"./text-input-BQGv1FeH.js";import"./base-radio-fegp-LN7.js";import"./media-queries-OayJ4KsJ.js";import"./choice-ZnGKbyCF.js";import"./icon-H34hvC3Q.js";import"./choice-icon-1xOYhLa3.js";import"./focus-ring-bfQ0sQA2.js";import"./option-status-MdgQPRmj.js";import"./choice-none-above-kztHALvE.js";import"./shared-hWJYD-yu.js";import"./phet-simulation-FTLyxKwk.js";import"./index-Pjx4unLq.js";import"./button-group-f5V3tSn8.js";import"./index-smZ6iCr_.js";import"./jsx-runtime-63Ea5SlK.js";import"./hud-VpTa1tZ-.js";import"./index-9tMpZISW.js";import"./multi-button-group-7ejnk4_z.js";import"./number-input-9Gcj3Z-D.js";import"./range-input-bavsOWw_.js";import"./marker-1U162sjz.js";import"./answer-pill-31uVmPmZ.js";import"./sortable-IIVWCU-u.js";import"./video-transcript-link-o120AhrJ.js";import"./server-item-renderer-NbmlglkO.js";import"./hints-renderer-ebUv8pQc.js";import"./article-renderer-bPxTLDQ5.js";import"./components-g4yGRV6m.js";import"./locked-label-settings-KV96gaO1.js";import"./scrollless-number-text-field-GPqzD2Ar.js";import"./trash-bold-DBae6Z71.js";import"./color-select-3JpYzQmD.js";import"./labeled-switch-KbBYrwUc.js";import"./line-stroke-select-HJ7rld2g.js";const fr={title:"PerseusEditor/Components/Locked Polygon Settings",component:n},o=i=>r.createElement(n,{...i}),d={...y("polygon"),onChangeProps:()=>{},onMove:()=>{},onRemove:()=>{}};o.args=d;const t={render:function(){const[e,s]=r.useState(d),p=a=>{s({...e,...a})};return r.createElement(n,{...e,onChangeProps:p})}};t.parameters={chromatic:{disableSnapshot:!0}};const m={render:function(){const[e,s]=r.useState(!0),[p,a]=r.useState(d),E=R=>{a({...p,...R})};return r.createElement(n,{...p,expanded:e,onToggle:s,onChangeProps:E})}};o.__docgenInfo={description:"",methods:[],displayName:"Default"};var c,l,u;o.parameters={...o.parameters,docs:{...(c=o.parameters)==null?void 0:c.docs,source:{originalSource:`(args): React.ReactElement => {
  return <LockedPolygonSettings {...args} />;
}`,...(u=(l=o.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};var g,P,f;t.parameters={...t.parameters,docs:{...(g=t.parameters)==null?void 0:g.docs,source:{originalSource:`{
  render: function Render() {
    const [props, setProps] = React.useState(defaultProps);
    const handlePropsUpdate = newProps => {
      setProps({
        ...props,
        ...newProps
      });
    };
    return <LockedPolygonSettings {...props} onChangeProps={handlePropsUpdate} />;
  }
}`,...(f=(P=t.parameters)==null?void 0:P.docs)==null?void 0:f.source}}};var S,h,x;m.parameters={...m.parameters,docs:{...(S=m.parameters)==null?void 0:S.docs,source:{originalSource:`{
  render: function Render() {
    const [expanded, setExpanded] = React.useState(true);
    const [props, setProps] = React.useState(defaultProps);
    const handlePropsUpdate = newProps => {
      setProps({
        ...props,
        ...newProps
      });
    };
    return <LockedPolygonSettings {...props} expanded={expanded} onToggle={setExpanded} onChangeProps={handlePropsUpdate} />;
  }
}`,...(x=(h=m.parameters)==null?void 0:h.docs)==null?void 0:x.source}}};const Sr=["Default","Controlled","Expanded"];export{t as Controlled,o as Default,m as Expanded,Sr as __namedExportsOrder,fr as default};
