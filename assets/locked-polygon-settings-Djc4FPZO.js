import{j as n,V as u,n as F,cH as C,cM as $,e as g,s,y as p,aF as L,L as x,h as y,z as S,bN as O,r as X}from"./iframe-Cn2sr9XL.js";import{C as G,S as H,O as Q}from"./color-select-DnTLIDUM.js";import{p as j}from"./plus-circle-DsgEZe2H.js";import{C as Y,L as Z,a as J}from"./locked-label-settings-CoxZeMn2.js";import{L as K}from"./labeled-switch-lLcMj7Fp.js";import{P as q}from"./trash-bold-CxYA3pEV.js";import{L as ee}from"./line-stroke-select-Lqk_zGca.js";import{L as ne}from"./line-weight-select-Dvy8Wfl1.js";import{L as re}from"./locked-figure-aria-DLdl6QaE.js";import{g as ae,j as te,a as P,b as oe}from"./util-BxRJXdXY.js";const le=""+new URL("arrow-fat-down-Bfm634Ub.svg",import.meta.url).href,ie=""+new URL("arrow-fat-left-vG4eNh8n.svg",import.meta.url).href,se=""+new URL("arrow-fat-right-LGRtshLE.svg",import.meta.url).href,ue=""+new URL("arrow-fat-up-BqHZ5poh.svg",import.meta.url).href,de=""+new URL("minus-circle-D0QptBrx.svg",import.meta.url).href,z=c=>{const{color:o,fillStyle:d,strokeStyle:h}=c;return n.jsx(u,{"aria-label":`${o}, stroke ${h}, fill ${d}`,style:[T.container,{border:`4px ${h} ${C[o]}`}],children:n.jsx(u,{style:[T.innerSquare,{backgroundColor:C[o],opacity:d==="white"?0:$[d]}]})})},T=F.StyleSheet.create({container:{outline:`2px solid ${g.offWhite}`,width:s.large_24,height:s.large_24,backgroundColor:g.white,alignItems:"center",justifyContent:"center"},innerSquare:{width:20,height:20}});z.__docgenInfo={description:"",methods:[],displayName:"PolygonSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const me=c=>{const{points:o,color:d,showVertices:h,fillStyle:v,strokeStyle:b,weight:f,labels:i,ariaLabel:A,expanded:_,onToggle:R,onChangeProps:l,onMove:U,onRemove:M}=c;async function B(){let e=`Polygon${await te(i)} with ${o.length} sides, vertices at `;const t=await Promise.all(o.map(async([k,D])=>{const W=await P(`$${k}$`),E=await P(`$${D}$`);return`${W} comma ${E}`}));e+=t.join(", ");const m=oe(d,b,v,f);return e+=m,e}function V(r){const e={color:r};e.labels=i.map(t=>({...t,color:r})),l(e)}function w(r){switch(r){case"up":l({points:o.map(([e,t])=>[e,t+1]),labels:i.map(e=>({...e,coord:[e.coord[0],e.coord[1]+1]}))});break;case"down":l({points:o.map(([e,t])=>[e,t-1]),labels:i.map(e=>({...e,coord:[e.coord[0],e.coord[1]-1]}))});break;case"left":l({points:o.map(([e,t])=>[e-1,t]),labels:i.map(e=>({...e,coord:[e.coord[0]-1,e.coord[1]]}))});break;case"right":l({points:o.map(([e,t])=>[e+1,t]),labels:i.map(e=>({...e,coord:[e.coord[0]+1,e.coord[1]]}))});break}}function I(r,e){const t=[...i];t[e]={...i[e],...r},l({labels:t})}function N(r){const e=i.filter((t,m)=>m!==r);l({labels:e})}return n.jsxs(q,{expanded:_,onToggle:R,header:n.jsxs(u,{style:a.row,children:[n.jsx(x,{children:`Polygon, ${o.length} sides`}),n.jsx(p,{size:s.xSmall_8}),n.jsx(z,{color:d,fillStyle:v,strokeStyle:b})]}),children:[n.jsxs(u,{style:[a.row,a.spaceUnder],children:[n.jsx(G,{selectedValue:d,onChange:V}),n.jsx(p,{size:s.medium_16}),n.jsxs(L,{tag:"label",style:[a.row,a.truncatedWidth],children:["fill",n.jsx(p,{size:s.xxSmall_6}),n.jsx(H,{selectedValue:v,onChange:r=>l({fillStyle:r}),placeholder:"",children:Object.keys($).map(r=>n.jsx(Q,{value:r,label:r},r))})]})]}),n.jsx(ee,{selectedValue:b,onChange:r=>l({strokeStyle:r}),containerStyle:a.spaceUnder}),n.jsx(ne,{selectedValue:f,onChange:r=>l({weight:r}),containerStyle:a.spaceUnder}),n.jsx(K,{label:"show vertices",checked:h,onChange:r=>l({showVertices:r}),style:a.spaceUnder}),n.jsxs(q,{header:n.jsx(x,{children:"Points"}),expanded:!0,containerStyle:a.pointAccordionContainer,panelStyle:a.pointAccordionPanel,children:[o.map((r,e)=>{const t=String.fromCharCode(65+e);return n.jsxs(u,{style:[a.row,a.spaceUnder],children:[n.jsx(x,{children:`${t}:`}),n.jsx(p,{size:s.medium_16}),n.jsx(Y,{coord:r,labels:["x","y"],onChange:m=>{const k=[...o];k[e]=m,c.onChangeProps({points:k})}}),o.length>3&&n.jsx(y,{"aria-label":`Delete polygon point ${t}`,icon:de,kind:"tertiary",actionType:"destructive",onClick:()=>{const m=[...o];m.splice(e,1),c.onChangeProps({points:m})},style:a.icon})]},`locked-polygon-point-index-${e}`)}),n.jsxs(u,{style:[a.row,a.polygonActionsContainer],children:[n.jsx(S,{kind:"tertiary",startIcon:j,onClick:()=>{c.onChangeProps({points:[...o,[0,0]]})},children:"Add point"}),n.jsx(O,{}),n.jsxs(u,{style:a.movementButtonsContainer,children:[n.jsx(y,{"aria-label":"Move polygon up",size:"small",icon:ue,kind:"tertiary",onClick:()=>w("up")}),n.jsxs(u,{style:a.row,children:[n.jsx(y,{"aria-label":"Move polygon left",size:"small",icon:ie,kind:"tertiary",onClick:()=>w("left")}),n.jsx(y,{"aria-label":"Move polygon down",size:"small",icon:le,kind:"tertiary",onClick:()=>w("down")}),n.jsx(y,{"aria-label":"Move polygon right",size:"small",icon:se,kind:"tertiary",onClick:()=>w("right")})]})]})]})]}),n.jsx(p,{size:s.small_12}),n.jsx(u,{style:a.horizontalRule}),n.jsx(re,{ariaLabel:A,getPrepopulatedAriaLabel:B,onChangeProps:r=>{l(r)}}),n.jsx(p,{size:s.xxxSmall_4}),n.jsx(u,{style:a.horizontalRule}),n.jsx(p,{size:s.small_12}),n.jsx(L,{children:"Visible labels"}),i.map((r,e)=>X.createElement(Z,{...r,key:e,expanded:!0,onChangeProps:t=>{I(t,e)},onRemove:()=>{N(e)},containerStyle:a.labelContainer})),n.jsx(S,{kind:"tertiary",startIcon:j,onClick:()=>{const r={...ae("label"),coord:[o[0][0],o[0][1]-i.length],color:d};l({labels:[...i,r]})},style:a.addButton,children:"Add visible label"}),n.jsx(J,{figureType:c.type,onMove:U,onRemove:M})]})},a=F.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},pointAccordionContainer:{backgroundColor:g.white},pointAccordionPanel:{alignItems:"start"},icon:{marginInlineStart:s.xxxSmall_4},polygonActionsContainer:{width:"100%"},movementButtonsContainer:{display:"flex",flexDirection:"column",alignItems:"center",minWidth:"fit-content"},spaceUnder:{marginBottom:s.xSmall_8},truncatedWidth:{minWidth:0},addButton:{alignSelf:"start"},labelContainer:{backgroundColor:g.white},horizontalRule:{height:1,backgroundColor:g.offBlack16}});me.__docgenInfo={description:"",methods:[],displayName:"LockedPolygonSettings",props:{onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},type:{required:!0,tsType:{name:"literal",value:'"polygon"'},description:""},points:{required:!0,tsType:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],raw:"Coord[]"},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},showVertices:{required:!0,tsType:{name:"boolean"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},weight:{required:!0,tsType:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},description:""},labels:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPolygonType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedPolygonType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};export{me as L};
