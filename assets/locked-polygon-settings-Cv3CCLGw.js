import{j as n}from"./jsx-runtime-BT65X5dW.js";import{r as E}from"./index-C6mWTJJr.js";import"./underscore-U-AHniOr.js";import{o as x,x as T}from"./core-widget-registry-2eRuEUfZ.js";import{B as C}from"./index-CYrfVekP.js";import{V as u}from"./index-CskvhqFA.js";import{S as O,O as X}from"./answer-choices-BLw65nLN.js";import{I as y}from"./index-CfqIx-dS.js";import{S as p,a as G}from"./index-B-CZbs2J.js";import{c as g,s}from"./index-C9RM_t1w.js";import{a as L,L as b}from"./index-CbNKSLRm.js";import{p as S,L as H}from"./locked-figure-aria-DX9AaqiJ.js";import{n as F}from"./no-important-DlFk8a1I.js";import{C as Q,L as Y,a as Z}from"./locked-label-settings-CjKYWIYs.js";import{P as j}from"./trash-bold-DBNoVsQP.js";import{C as J}from"./color-select-rN_KefsT.js";import{L as K}from"./labeled-switch-vLfLmOrz.js";import{L as ee}from"./line-stroke-select-BoSm0IAj.js";import{g as ne,j as re,a as q,b as oe}from"./util-C4TpJtrk.js";const te=""+new URL("arrow-fat-down-Bfm634Ub.svg",import.meta.url).href,ae=""+new URL("arrow-fat-left-vG4eNh8n.svg",import.meta.url).href,le=""+new URL("arrow-fat-right-LGRtshLE.svg",import.meta.url).href,ie=""+new URL("arrow-fat-up-BqHZ5poh.svg",import.meta.url).href,se=""+new URL("minus-circle-D0QptBrx.svg",import.meta.url).href,A=c=>{const{color:l,fillStyle:m,strokeStyle:h}=c;return n.jsx(u,{"aria-label":`${l}, stroke ${h}, fill ${m}`,style:[P.container,{border:`4px ${h} ${x[l]}`}],children:n.jsx(u,{style:[P.innerSquare,{backgroundColor:x[l],opacity:m==="white"?0:T[m]}]})})},P=F.StyleSheet.create({container:{outline:`2px solid ${g.offWhite}`,width:s.large_24,height:s.large_24,backgroundColor:g.white,alignItems:"center",justifyContent:"center"},innerSquare:{width:20,height:20}});A.__docgenInfo={description:"",methods:[],displayName:"PolygonSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const ue=c=>{const{points:l,color:m,showVertices:h,fillStyle:v,strokeStyle:f,labels:r,ariaLabel:$,expanded:R,onToggle:z,onChangeProps:i,onMove:B,onRemove:_}=c;async function I(){let e=`Polygon${await re(r)} with ${l.length} sides, vertices at `;const a=await Promise.all(l.map(async([k,D])=>{const N=await q(`$${k}$`),W=await q(`$${D}$`);return`${N} comma ${W}`}));e+=a.join(", ");const d=oe(m,f,v);return e+=d,e}function M(o){const e={color:o};e.labels=r==null?void 0:r.map(a=>({...a,color:o})),i(e)}function w(o){switch(o){case"up":i({points:l.map(([e,a])=>[e,a+1]),labels:r==null?void 0:r.map(e=>({...e,coord:[e.coord[0],e.coord[1]+1]}))});break;case"down":i({points:l.map(([e,a])=>[e,a-1]),labels:r==null?void 0:r.map(e=>({...e,coord:[e.coord[0],e.coord[1]-1]}))});break;case"left":i({points:l.map(([e,a])=>[e-1,a]),labels:r==null?void 0:r.map(e=>({...e,coord:[e.coord[0]-1,e.coord[1]]}))});break;case"right":i({points:l.map(([e,a])=>[e+1,a]),labels:r==null?void 0:r.map(e=>({...e,coord:[e.coord[0]+1,e.coord[1]]}))});break}}function U(o,e){if(!r)return;const a=[...r];a[e]={...r[e],...o},i({labels:a})}function V(o){if(!r)return;const e=r.filter((a,d)=>d!==o);i({labels:e})}return n.jsxs(j,{expanded:R,onToggle:z,header:n.jsxs(u,{style:t.row,children:[n.jsx(b,{children:`Polygon, ${l.length} sides`}),n.jsx(p,{size:s.xSmall_8}),n.jsx(A,{color:m,fillStyle:v,strokeStyle:f})]}),children:[n.jsxs(u,{style:[t.row,t.spaceUnder],children:[n.jsx(J,{selectedValue:m,onChange:M}),n.jsx(p,{size:s.medium_16}),n.jsxs(L,{tag:"label",style:[t.row,t.truncatedWidth],children:["fill",n.jsx(p,{size:s.xxSmall_6}),n.jsx(O,{selectedValue:v,onChange:o=>i({fillStyle:o}),placeholder:"",children:Object.keys(T).map(o=>n.jsx(X,{value:o,label:o},o))})]})]}),n.jsx(ee,{selectedValue:f,onChange:o=>i({strokeStyle:o})}),n.jsx(K,{label:"show vertices",checked:h,onChange:o=>i({showVertices:o}),style:t.spaceUnder}),n.jsxs(j,{header:n.jsx(b,{children:"Points"}),expanded:!0,containerStyle:t.pointAccordionContainer,panelStyle:t.pointAccordionPanel,children:[l.map((o,e)=>{const a=String.fromCharCode(65+e);return n.jsxs(u,{style:[t.row,t.spaceUnder],children:[n.jsx(b,{children:`${a}:`}),n.jsx(p,{size:s.medium_16}),n.jsx(Q,{coord:o,labels:["x","y"],onChange:d=>{const k=[...l];k[e]=d,c.onChangeProps({points:k})}}),l.length>3&&n.jsx(y,{"aria-label":`Delete polygon point ${a}`,icon:se,color:"destructive",onClick:()=>{const d=[...l];d.splice(e,1),c.onChangeProps({points:d})},style:t.icon})]},`locked-polygon-point-index-${e}`)}),n.jsxs(u,{style:[t.row,t.polygonActionsContainer],children:[n.jsx(C,{kind:"tertiary",startIcon:S,onClick:()=>{c.onChangeProps({points:[...l,[0,0]]})},children:"Add point"}),n.jsx(G,{}),n.jsxs(u,{style:t.movementButtonsContainer,children:[n.jsx(y,{"aria-label":"Move polygon up",style:t.iconButton,size:"small",icon:ie,onClick:()=>w("up")}),n.jsxs(u,{style:t.row,children:[n.jsx(y,{"aria-label":"Move polygon left",style:t.iconButton,size:"small",icon:ae,onClick:()=>w("left")}),n.jsx(y,{"aria-label":"Move polygon down",style:t.iconButton,size:"small",icon:te,onClick:()=>w("down")}),n.jsx(y,{"aria-label":"Move polygon right",style:t.iconButton,size:"small",icon:le,onClick:()=>w("right")})]})]})]})]}),n.jsx(p,{size:s.small_12}),n.jsx(u,{style:t.horizontalRule}),n.jsx(H,{ariaLabel:$,getPrepopulatedAriaLabel:I,onChangeProps:o=>{i(o)}}),n.jsx(p,{size:s.xxxSmall_4}),n.jsx(u,{style:t.horizontalRule}),n.jsx(p,{size:s.small_12}),n.jsx(L,{children:"Visible labels"}),r==null?void 0:r.map((o,e)=>E.createElement(Y,{...o,key:e,expanded:!0,onChangeProps:a=>{U(a,e)},onRemove:()=>{V(e)},containerStyle:t.labelContainer})),n.jsx(C,{kind:"tertiary",startIcon:S,onClick:()=>{const o={...ne("label"),coord:[l[0][0],l[0][1]-((r==null?void 0:r.length)??0)],color:m};i({labels:[...r??[],o]})},style:t.addButton,children:"Add visible label"}),n.jsx(Z,{figureType:c.type,onMove:B,onRemove:_})]})},t=F.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},pointAccordionContainer:{backgroundColor:g.white},pointAccordionPanel:{alignItems:"start"},icon:{marginInlineStart:s.xxxSmall_4},polygonActionsContainer:{width:"100%"},iconButton:{margin:0},movementButtonsContainer:{display:"flex",flexDirection:"column",alignItems:"center",minWidth:"fit-content"},spaceUnder:{marginBottom:s.xSmall_8},truncatedWidth:{minWidth:0},addButton:{alignSelf:"start"},labelContainer:{backgroundColor:g.white},horizontalRule:{height:1,backgroundColor:g.offBlack16}});ue.__docgenInfo={description:"",methods:[],displayName:"LockedPolygonSettings",props:{onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},type:{required:!0,tsType:{name:"literal",value:'"polygon"'},description:""},points:{required:!0,tsType:{name:"ReadonlyArray",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],raw:"ReadonlyArray<Coord>"},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},showVertices:{required:!0,tsType:{name:"boolean"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},labels:{required:!1,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPolygonType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: ReadonlyArray<Coord>;
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    labels?: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"ReadonlyArray",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"ReadonlyArray<Coord>",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!1}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedPolygonType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};export{ue as L};
