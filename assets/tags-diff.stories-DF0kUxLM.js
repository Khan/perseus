var y=Object.defineProperty;var u=(e,r,t)=>r in e?y(e,r,{enumerable:!0,configurable:!0,writable:!0,value:t}):e[r]=t;var i=(e,r,t)=>(u(e,typeof r!="symbol"?r+"":r,t),t);import{r as g,j as s}from"./iframe-JBJONHHl.js";import{T as x}from"./text-diff-JYYNWTT0.js";import{W as h}from"./perseus-diff-wrapper-gfuMZYSR.js";import"./item-version-DMyJMDPk.js";import"./article-renderer-ISec000u.js";import"./server-item-renderer-DM0y70U2.js";import"./hints-renderer-HTTi4Bca.js";import"./components-BhOs_jtJ.js";class o extends g.Component{render(){const{afterOnly:r,beforeOnly:t,intersection:n,showSeparator:f}=this.props,c=n.concat(t).join(`
`)+`
`,m=n.concat(r).join(`
`)+`
`;return s.jsxs("div",{children:[s.jsx(x,{before:c,after:m,title:this.props.title}),f&&s.jsx("div",{className:"diff-separator"})]})}}i(o,"defaultProps",{afterOnly:[],beforeOnly:[],showSeparator:!1,title:"Question tags"});o.__docgenInfo={description:"",methods:[],displayName:"TagsDiff",props:{afterOnly:{required:!1,tsType:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},description:"",defaultValue:{value:"[]",computed:!1}},beforeOnly:{required:!1,tsType:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},description:"",defaultValue:{value:"[]",computed:!1}},intersection:{required:!0,tsType:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>"},description:""},showSeparator:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},title:{required:!1,tsType:{name:"string"},description:"",defaultValue:{value:'"Question tags"',computed:!1}}}};const w={title:"PerseusEditor/Diffs/Tags Diff",decorators:[e=>s.jsx(h,{children:s.jsx(e,{})})]},a=e=>s.jsx(o,{title:"tags",beforeOnly:["Math","Biology","History"],afterOnly:["World War I"],intersection:["Physics","Chemistry"]});a.__docgenInfo={description:"",methods:[],displayName:"Example"};var l,p,d;a.parameters={...a.parameters,docs:{...(l=a.parameters)==null?void 0:l.docs,source:{originalSource:`(args: StoryArgs): React.ReactElement => {
  return <TagsDiff title="tags" beforeOnly={["Math", "Biology", "History"]} afterOnly={["World War I"]} intersection={["Physics", "Chemistry"]} />;
}`,...(d=(p=a.parameters)==null?void 0:p.docs)==null?void 0:d.source}}};const D=["Example"];export{a as Example,D as __namedExportsOrder,w as default};
