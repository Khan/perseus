import{j as i,F as g,a as l}from"./jsx-runtime-5BUNAZ9W.js";import{f as m,c as u}from"./index-lUErx3pE.js";import{T as b}from"./index-z05-Lc8k.js";import{l as r}from"./index-awljIyHI.js";import{r as v}from"./index-4g5l5LRQ.js";import{c as d,a as s,w as c,b as f,p as y}from"./constants-CTNUT-ej.js";import{I as k}from"./inline-icon-QIU9thzn.js";const w={path:"M6 11a1 1 0 1 1 0-2 1 1 0 0 1 0 2zm0-9a1 1 0 0 1 1 1v4a1 1 0 1 1-2 0V3a1 1 0 0 1 1-1z",height:12,width:12};class T extends v.Component{constructor(){super(...arguments),this.renderLink=n=>{let t,o,a;return this.props.severity===1?(t=e.indicatorError,o="Error",a=e.publishBlockingError):this.props.severity===2?(t=e.indicatorWarning,o="Warning",a=e.warning):(t=e.indicatorGuideline,o="Recommendation",a=e.warning),i(b,{backgroundColor:"offBlack",content:i(g,{children:this.props.message.split(`

`).map((h,p)=>l("p",{className:r.css(e.tooltipParagraph),children:[l("span",{className:r.css(a),children:[o,":"," "]}),h]},p))}),children:i("a",{href:`https://khanacademy.org/r/linter-rules#${this.props.ruleName}`,target:"lint-help-window",className:r.css(n),children:i("span",{className:r.css(e.indicator,t),children:this.props.severity===1&&i(k,{...w})})})})}}render(){const{children:n,inline:t,blockHighlight:o,insideTable:a}=this.props;return a?t?i("span",{"data-lint-inside-table":"true",children:n}):i("div",{"data-lint-inside-table":"true",children:n}):o?l("span",{className:r.css(e.lintContainer,e.lintContainerBlock),children:[this.renderLink(e.radioWidgetHoverTarget),i("span",{children:n})]}):t?l("span",{className:r.css(e.lintContainer),children:[this.renderLink(e.inlineHoverTarget),i("span",{children:n})]}):l("div",{className:r.css(e.lintContainer),children:[this.renderLink(e.hoverTarget),i("div",{children:n})]})}}const e=r.StyleSheet.create({lintContainer:{position:"relative"},lintContainerBlock:{display:"block"},hoverTarget:{position:"absolute",top:0,right:-40,display:"block",width:24,height:24,":hover > span":{backgroundColor:d},":hover div":{display:"block"},":hover ~ div":{outline:"1px solid "+s},":hover ~ div div[data-lint-inside-table]":{outline:"1px solid "+s},":hover ~ div span[data-lint-inside-table]":{backgroundColor:s,color:c}},inlineHoverTarget:{float:"right",position:"relative",marginRight:-40,display:"block",width:24,height:24,":hover > span":{backgroundColor:d},":hover div":{display:"block"},":hover ~ span":{backgroundColor:s,color:c}},radioWidgetHoverTarget:{position:"absolute",left:-40,display:"block",width:24,height:24,minWidth:264,":hover > span":{backgroundColor:d},":hover > div":{display:"block",padding:8,width:280},":hover > div > div":{left:8},":hover ~ span":{backgroundColor:s,color:c}},indicator:{alignItems:"center",borderRadius:4,color:"white",display:"flex",fontSize:12,height:8,justifyContent:"center",margin:8,width:8},indicatorError:{backgroundColor:"#be2612",borderRadius:8,height:16,width:16},indicatorWarning:{backgroundColor:"#f86700"},indicatorGuideline:{backgroundColor:"#ffbe26"},tooltipParagraph:{fontFamily:m.family.sans,color:u.white,margin:12},warning:{color:s,fontFamily:f},publishBlockingError:{color:y}});T.__docgenInfo={description:`This component renders "lint" nodes in a markdown parse tree. Lint nodes
are inserted into the tree by the Perseus linter (see
perseus-linter/src/index).

This component serves multiple purposes

1) It renders a small circle in the right margin to indicate that there
is lint on (or near) that line.

2) The area around the circle is hoverable: when the mouse moves over it
the linty content is highlighted and a tooltip is displayed that explains
what the problem is.

3) The hoverable area is also an HTML <a> tag. Clicking on it opens
a new tab and links to additional details about the specific lint rule.

The CSS required to position the circles in the right margin is tricky
and it does not always work perfectly. When lint occurs on a block element
that has a right margin (like anything blockquoted) the circle will appear
to the left of where it belongs.  And if there is more`,methods:[{name:"renderLink",docblock:null,modifiers:[],params:[{name:"style",optional:!1,type:null}],returns:null}],displayName:"Lint",props:{children:{required:!0,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},inline:{required:!1,tsType:{name:"boolean"},description:""},message:{required:!0,tsType:{name:"string"},description:""},ruleName:{required:!0,tsType:{name:"string"},description:""},insideTable:{required:!0,tsType:{name:"boolean"},description:""},blockHighlight:{required:!1,tsType:{name:"boolean"},description:""},severity:{required:!1,tsType:{name:"Severity"},description:""}}};export{T as L};
