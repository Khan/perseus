import"./util-Q3BXsyUV.js";import"./index-default-4_ZsnO94.js";import{l as v,s as P}from"./svg-image-1KPe8aE1.js";import{g as S,a as f,b as F,d as h,e as w,f as A,h as T,i as b,j as q}from"./article-renderer-oI4YmYfU.js";import"./phet-simulation-mWZYlqxH.js";import"./version-akiLXZts.js";import"./dependencies-8XILypbq.js";import"./perseus-api-TZuPrt69.js";import"./multi-renderer-P0C-I-iG.js";import"./hints-renderer-xXQhzKns.js";import"./renderer-_VS37mk6.js";import"./base-radio-tGYiHWel.js";import"./button-group-nsoLlHtM.js";import"./graph-7upsjcvo.js";import"./hud-FI3E3dT_.js";import"./icon-YuYiVxsK.js";import"./index-sNnTAXhT.js";import"./inline-icon-tKY1iMkH.js";import"./math-input-7QTcx3Ho.js";import"./multi-button-group-a0iIfrwx.js";import"./number-input-pCzft7OM.js";import"./range-input-ayWbl0Ct.js";import"./text-input-UKLpKhjh.js";import"./text-list-editor-oYfrC68v.js";import"./jquery-5v7aFUvu.js";import"./i18n-context-W41LcU6B.js";import{w as k}from"./index-J2t_5nK1.js";function et(t){t.focus({preventScroll:!0})}const s="grayH";function y(t){switch(t){case"point":return{type:"point",coord:[0,0],color:s,filled:!0};case"line":return{type:"line",kind:"line",points:[y("point"),{...y("point"),coord:[2,2]}],color:s,lineStyle:"solid",showPoint1:!1,showPoint2:!1};case"vector":return{type:"vector",points:[[0,0],[2,2]],color:s};case"ellipse":return{type:"ellipse",center:[0,0],radius:[1,1],angle:0,color:s,fillStyle:"none",strokeStyle:"solid"};case"polygon":return{type:"polygon",points:[[0,2],[-1,0],[1,0]],color:s,showVertices:!1,fillStyle:"none",strokeStyle:"solid"};case"function":return{type:"function",color:s,strokeStyle:"solid",equation:"x^2",directionalAxis:"x"};case"label":return{type:"label",coord:[0,0],text:"",color:s,size:"medium"};default:throw new k(t)}}function rt(t){return t/180*Math.PI}function nt(t){return t/Math.PI*180}function st(t,o,e){switch(t.type){case"linear":case"ray":return q({...t,startCoords:void 0},o,e);case"segment":return b({...t,startCoords:void 0},o,e);case"linear-system":return T({...t,startCoords:void 0},o,e);case"circle":const r=A({...t,startCoords:void 0}),n=v(P(r.radiusPoint,r.center));return{center:r.center,radius:n};case"sinusoid":return w({...t,startCoords:void 0},o,e);case"quadratic":return h({...t,startCoords:void 0},o,e);case"point":return F({...t,startCoords:void 0},o,e);case"polygon":return f({...t,startCoords:void 0},o,e);case"angle":return S({graph:{...t,startCoords:void 0},range:o,step:e});default:return}}const it=t=>{const o=t[0],e=t[1],r=e[1]-o[1],n=Math.PI/(2*(e[0]-o[0])),i=o[0]*n,c=o[1];return"y = "+r.toFixed(3)+"sin("+n.toFixed(3)+"x - "+i.toFixed(3)+") + "+c.toFixed(3)},ct=t=>{const o=t[0],e=t[1],r=t[2],n=(o[0]-e[0])*(o[0]-r[0])*(e[0]-r[0]);if(n===0)return"Division by zero error";const i=(r[0]*(e[1]-o[1])+e[0]*(o[1]-r[1])+o[0]*(r[1]-e[1]))/n,c=(r[0]*r[0]*(o[1]-e[1])+e[0]*e[0]*(r[1]-o[1])+o[0]*o[0]*(e[1]-r[1]))/n,d=(e[0]*r[0]*(e[0]-r[0])*o[1]+r[0]*o[0]*(r[0]-o[0])*e[1]+o[0]*e[0]*(o[0]-e[0])*r[1])/n;return"y = "+i.toFixed(3)+"x^2 + "+c.toFixed(3)+"x + "+d.toFixed(3)},C=(t,o)=>{const e=t[0]-o[0],r=t[1]-o[1];return(180+Math.atan2(-r,-e)*180/Math.PI+360)%360},dt=t=>{const[o,e,r]=t;return`${(C(r,e)-C(o,e)).toFixed(0)}Â° angle at (${e[0]}, ${e[1]})`},at=(t,o)=>{var a,u,l,m,p;const e=["linear","linear-system","ray","segment","circle"],r=["sinusoid","quadratic"],n=(a=t==null?void 0:t.mafs)==null?void 0:a["start-coords-ui-phase-1"],i=(u=t==null?void 0:t.mafs)==null?void 0:u["start-coords-ui-phase-2"],c=(l=t==null?void 0:t.mafs)==null?void 0:l["start-coords-ui-point"],d=(m=t==null?void 0:t.mafs)==null?void 0:m["start-coords-ui-polygon"],x=(p=t==null?void 0:t.mafs)==null?void 0:p["start-coords-ui-angle"];return!!(n&&e.includes(o.type)||i&&r.includes(o.type)||x&&o.type==="angle"||c&&o.type==="point"&&o.numPoints!=="unlimited"||d&&o.type==="polygon"&&o.numSides!=="unlimited"&&(o.snapTo==="grid"||o.snapTo===void 0))};export{dt as a,ct as b,it as c,rt as d,st as e,et as f,y as g,nt as r,at as s};
