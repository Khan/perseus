import{r as v,j as e,V as c,n as q,y as o,s as l,br as C,aH as f,L as A,z as J,e as y,h as N}from"./iframe-vtNTHGDv.js";import{C as X,S as I,O as L}from"./color-select-xMp51Mzj.js";import{p as Y}from"./plus-circle-DsgEZe2H.js";import{P as M}from"./trash-bold-Dnc91Nih.js";import{L as Z}from"./line-stroke-select-t57VhVFi.js";import{L as K}from"./line-swatch-BJRrT8vC.js";import{L as Q}from"./locked-figure-aria-CFWSg9Uy.js";import{L as ee,a as ne}from"./locked-label-settings-C1kmmuEe.js";import{g as ae,j as te,b as ie}from"./util-CjbfVMCM.js";const re=""+new URL("copy-ChcUWZci.svg",import.meta.url).href,le=""+new URL("note-pencil-CqqXva0w.svg",import.meta.url).href,_={linear:["x + 5","1/2x - 2"],polynomial:["1/2x^2 + 3x - 4","(1/3)x^3 - 2x^2 + 3x - 4"],trigonometric:["sin(x) * 3","arctan(2x) + 4"]},oe=u=>{const{color:p,strokeStyle:d,equation:x,directionalAxis:h,domain:r,ariaLabel:R,onChangeProps:m,onMove:E,onRemove:B}=u,s=u.labels,S=h==="x"?"y=":"x=",$=`Function (${S}${x})`,T=n=>[Number.isFinite(n[0])?n[0].toString():"",Number.isFinite(n[1])?n[1].toString():""],[k,F]=v.useState(T(r)),[g,D]=v.useState("");v.useEffect(()=>{F(T(r))},[r]);async function O(){let t=`Function${await te(s)} with equation ${S}${x}`;(Number.isFinite(r[0])||Number.isFinite(r[1]))&&(t+=`, domain from ${r[0]} to ${r[1]}`);const i=ie(p,d);return t+=i,t}function b(n,t){const i={};i[n]=t,m(i)}function z(n,t){const i=[...k];i[n]=t,F(i);const w=[...r];let j=parseFloat(t);t===""&&n===0?j=-1/0:t===""&&n===1&&(j=1/0),w[n]=j,m({domain:w})}const V=Object.keys(_),P=g!=="",W=P?_[g]:["Select category to see example equations"];function H(n){const t={color:n};t.labels=s.map(i=>({...i,color:n})),m(t)}function U(n,t){const i=[...s];i[t]={...s[t],...n},m({labels:i})}function G(n){const t=s.filter((i,w)=>w!==n);m({labels:t})}return e.jsxs(M,{expanded:u.expanded,onToggle:u.onToggle,header:e.jsxs(c,{style:a.row,children:[e.jsx(A,{style:a.accordionHeader,children:$}),e.jsx(o,{size:l.xSmall_8}),e.jsx(K,{color:p,lineStyle:d})]}),children:[e.jsxs(c,{style:[a.row,a.spaceUnder],children:[e.jsx(X,{selectedValue:p,onChange:H}),e.jsx(o,{size:l.small_12}),e.jsx(Z,{selectedValue:d,onChange:n=>{b("strokeStyle",n)}})]}),e.jsxs(c,{style:[a.row,a.rowSpace],children:[e.jsxs(I,{selectedValue:h,onChange:n=>{b("directionalAxis",n)},"aria-label":"equation prefix",style:[a.dropdownLabel,a.axisMenu],placeholder:"",children:[e.jsx(L,{value:"x",label:"y ="}),e.jsx(L,{value:"y",label:"x ="})]}),e.jsx(o,{size:l.xSmall_8}),e.jsx(C,{type:"text","aria-label":"equation",value:x,onChange:n=>{b("equation",n)},style:[a.textField]})]}),e.jsxs(c,{style:[a.row,a.rowSpace],children:[e.jsxs(f,{tag:"label",style:[a.dropdownLabel,a.domainMin],children:["domain min",e.jsx(o,{size:l.xxSmall_6}),e.jsx(C,{type:"number",style:a.domainMinField,value:k[0],onChange:n=>{z(0,n)}})]}),e.jsx(o,{size:l.medium_16}),e.jsxs(f,{tag:"label","aria-label":"domain max",style:[a.dropdownLabel,a.domainMax],children:["max",e.jsx(o,{size:l.xxSmall_6}),e.jsx(C,{type:"number",style:a.domainMaxField,value:k[1],onChange:n=>{z(1,n)}})]})]}),e.jsxs(M,{header:e.jsx(A,{children:"Example Functions"}),expanded:!1,containerStyle:a.exampleWorkspace,panelStyle:a.exampleAccordionPanel,children:[e.jsxs(f,{tag:"label",style:a.dropdownLabel,children:["Choose a category",e.jsx(o,{size:l.xxSmall_6}),e.jsx(I,{selectedValue:g,onChange:D,placeholder:"examples",children:V.map(n=>e.jsx(L,{value:n,label:n},n))})]}),P&&e.jsx("ul",{className:q.css(a.exampleContainer),children:W.map((n,t)=>e.jsx(se,{category:g,example:n,index:t,pasteEquationFn:b},t))})]}),e.jsx(o,{size:l.small_12}),e.jsx(c,{style:a.horizontalRule}),e.jsx(Q,{ariaLabel:R,getPrepopulatedAriaLabel:O,onChangeProps:n=>{m(n)}}),e.jsx(o,{size:l.xxxSmall_4}),e.jsx(c,{style:a.horizontalRule}),e.jsx(o,{size:l.small_12}),e.jsx(f,{children:"Visible labels"}),s.map((n,t)=>e.jsx(ee,{...n,expanded:!0,onChangeProps:i=>{U(i,t)},onRemove:()=>{G(t)},containerStyle:a.labelContainer},t)),e.jsx(J,{kind:"tertiary",startIcon:Y,onClick:()=>{const n={...ae("label"),coord:[0,-s.length],color:p};m({labels:[...s,n]})},style:a.addButton,children:"Add visible label"}),e.jsx(ne,{figureType:u.type,onMove:E,onRemove:B})]})},se=u=>{const{category:p,example:d,index:x,pasteEquationFn:h}=u,r=v.useId();return e.jsxs("li",{className:q.css(a.exampleRow),children:[e.jsx(N,{icon:le,kind:"tertiary","aria-label":"paste example","aria-describedby":r,onClick:()=>h("equation",d),size:"medium",style:a.copyPasteButton}),e.jsx(N,{icon:re,kind:"tertiary","aria-label":"copy example","aria-describedby":r,onClick:()=>navigator.clipboard.writeText(d),size:"medium",style:a.copyPasteButton}),e.jsx(o,{size:l.xxxSmall_4}),e.jsx(c,{style:a.exampleContent,id:r,children:d})]},`${p}-${x}`)},a=q.StyleSheet.create({accordionHeader:{textOverflow:"ellipsis",maxWidth:"calc(100% - 64px)",overflow:"hidden",whiteSpace:"nowrap"},axisMenu:{minWidth:"auto"},copyPasteButton:{flexShrink:"0",margin:"0 2px"},domainMin:{justifyContent:"space-between",width:"calc(((100% - 141px) / 2) + 88.7px)",textWrap:"nowrap"},domainMinField:{width:"calc(100% - 88.7px)"},domainMax:{width:"calc(((100% - 141px) / 2) + 36.2px)"},domainMaxField:{width:"calc(100% - 36.2px)"},dropdownLabel:{alignItems:"center",display:"flex"},exampleAccordionPanel:{alignItems:"start",paddingBottom:"12px",flexDirection:"row",flexWrap:"wrap"},exampleContainer:{background:"white",border:`1px solid ${y.fadedOffBlack16}`,borderRadius:"4px",flexGrow:"1",listStyleType:"none",maxHeight:"88px",margin:"8px 0 0 0",overflowY:"scroll",padding:"4px 12px 4px 4px"},exampleContent:{fontFamily:'"Lato", sans-serif',flexGrow:"1",color:y.offBlack},exampleRow:{alignItems:"center",display:"flex",flexDirection:"row",minHeight:"44px"},exampleWorkspace:{background:y.white50},rowSpace:{marginTop:l.xSmall_8},row:{display:"flex",flexDirection:"row",alignItems:"center"},textField:{flexGrow:"1"},addButton:{alignSelf:"start"},horizontalRule:{height:1,backgroundColor:y.offBlack16},labelContainer:{backgroundColor:y.white}});oe.__docgenInfo={description:"",methods:[],displayName:"LockedFunctionSettings",props:{type:{required:!0,tsType:{name:"literal",value:'"function"'},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},equation:{required:!0,tsType:{name:"string"},description:"This is the user-defined equation (as it was typed)"},directionalAxis:{required:!0,tsType:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}]},description:"The independent variable of this function"},domain:{required:!0,tsType:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},labels:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedFunctionType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "function";
    color: LockedFigureColor;
    strokeStyle: LockedLineStyle;
    /**
     * This is the user-defined equation (as it was typed)
     */
    equation: string;
    /**
     * The independent variable of this function
     */
    directionalAxis: "x" | "y";
    /**
     * The minimum and maximum values along the \`directionalAxis\` at which
     * this function should be graphed. Values of -Infinity and Infinity are
     * allowed. Note that infinite values are serialized as \`null\` in JSON.
     */
    domain: [min: number, max: number];
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"function"',required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"equation",value:{name:"string",required:!0},description:"This is the user-defined equation (as it was typed)"},{key:"directionalAxis",value:{name:"union",raw:'"x" | "y"',elements:[{name:"literal",value:'"x"'},{name:"literal",value:'"y"'}],required:!0},description:"The independent variable of this function"},{key:"domain",value:{name:"tuple",raw:"[min: number, max: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0},description:"The minimum and maximum values along the `directionalAxis` at which\nthis function should be graphed. Values of -Infinity and Infinity are\nallowed. Note that infinite values are serialized as `null` in JSON."},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedFunctionType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (points, color, etc.) are updated."}}};export{oe as L};
