import{j as e}from"./jsx-runtime-63Ea5SlK.js";import"./article-renderer-672kQv0H.js";import{_ as d}from"./jquery-yG1GhClm.js";import"./util-AYeX86gl.js";import"./phet-simulation-_7qOO4_B.js";import"./version-akiLXZts.js";import"./dependencies-CP7Uh8Kq.js";import"./perseus-api-1-ethIrW.js";import"./perseus-item-tX_UkuqW.js";import"./hints-renderer-55KvvYOM.js";import"./renderer-Fa29TEBe.js";import"./base-radio-lzGbv5LT.js";import{c}from"./components-_HVRA9p2.js";import"./index-0C4KXdeC.js";import"./i18n-context-fsWEgybQ.js";import"./svg-image-ZjoZQGiG.js";import"./index-smZ6iCr_.js";import{C as h}from"./index-V5gl6frG.js";import{P as i}from"./index-k-0mNqHS.js";import{r as u}from"./index-6oxdNXpR.js";const{InfoTip:a,TextListEditor:m}=c,s="horizontal",l="vertical",t=class t extends u.Component{constructor(){super(...arguments),this.onLayoutChange=o=>{this.props.onChange({layout:o.target.value})},this.serialize=()=>d.pick(this.props,"correct","layout","padding")}render(){const o=this;return e.jsxs("div",{children:[e.jsxs("div",{children:[" ","Correct answer:"," ",e.jsx(a,{children:e.jsx("p",{children:"Enter the correct answer (in the correct order) here. The preview on the right will have the cards in a randomized order, which is how the student will see them."})})]}),e.jsx(m,{options:this.props.correct,onChange:function(r,p){o.props.onChange({correct:r},p)},layout:this.props.layout}),e.jsxs("div",{children:[e.jsxs("label",{children:[" ","Layout:"," ",e.jsxs("select",{value:this.props.layout,onChange:this.onLayoutChange,children:[e.jsx("option",{value:s,children:"Horizontal"}),e.jsx("option",{value:l,children:"Vertical"})]})]}),e.jsx(a,{children:e.jsx("p",{children:"Use the horizontal layout for short text and small images. The vertical layout is best for longer text and larger images."})})]}),e.jsxs("div",{children:[e.jsx(h,{label:"Padding:",checked:this.props.padding,onChange:r=>{this.props.onChange({padding:r})}}),e.jsx(a,{children:e.jsx("p",{children:"Padding is good for text, but not needed for images."})})]})]})}};t.propTypes={correct:i.array,layout:i.oneOf([s,l]),padding:i.bool},t.widgetName="sorter",t.defaultProps={correct:["$x$","$y$","$z$"],layout:s,padding:!0};let n=t;n.__docgenInfo={description:"",methods:[{name:"onLayoutChange",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"SorterEditor",props:{correct:{defaultValue:{value:'["$x$", "$y$", "$z$"]',computed:!1},description:"",type:{name:"array"},required:!1},layout:{defaultValue:{value:'"horizontal"',computed:!1},description:"",type:{name:"enum",value:[{value:'"horizontal"',computed:!1},{value:'"vertical"',computed:!1}]},required:!1},padding:{defaultValue:{value:"true",computed:!1},description:"",type:{name:"bool"},required:!1}}};export{n as S};
