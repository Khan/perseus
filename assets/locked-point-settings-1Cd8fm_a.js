import{a as m,j as o,F as b}from"./jsx-runtime-FVsy8kgq.js";import{B as V}from"./choice-XJA1Q6b6.js";import{V as w}from"./index-6h5t6F0w.js";import{S as u}from"./index-qUyqkRvh.js";import{s,c as P}from"./index-deFLJwr4.js";import{L as j,a as I}from"./index-h_CiYGGb.js";import{L as U,p as E}from"./locked-figure-aria-DNbu0jjV.js";import{l as W}from"./index-awljIyHI.js";import{P as N,C as G,L as H,a as J}from"./locked-label-settings-FXCQ3N8L.js";import{C as K}from"./color-select-p23lnIuD.js";import{C as Q,g as X,a as Y,b as Z}from"./util-Z8cSxNZ_.js";import{L as _}from"./labeled-switch-9akzhm5x.js";const q=L=>{var x,S,T;const{flags:i,headerLabel:A,coord:l,color:g,filled:C=!0,labels:n,ariaLabel:B,onChangeProps:d,onMove:k,onRemove:h,showPoint:f,expanded:F,onTogglePoint:v,onToggle:R}=L,c=!k&&!h;async function $(){let e="";n&&n.length>0&&(e+=` ${n.map(p=>p.text).join(", ")}`);let a=await Y(`Point${e} at (${l[0]}, ${l[1]})`);const t=Z(g);return a+=t,a}function z(e){const a={color:e};n&&(a.labels=n.map(t=>({...t,color:e}))),d(a)}function O(e){const a=e[0]-l[0],t=e[1]-l[1],p={coord:e};n&&(p.labels=n.map(y=>({...y,coord:[y.coord[0]+a,y.coord[1]+t]}))),d(p)}function D(e,a){if(!n)return;const t=[...n];t[a]={...n[a],...e},d({labels:t})}function M(e){if(!n)return;const a=n.filter((t,p)=>p!==e);d({labels:a})}return m(N,{expanded:F,onToggle:R,containerStyle:c?r.definingContainer:void 0,panelStyle:c?r.definingPanel:void 0,header:m(w,{style:r.row,children:[o(j,{children:`${A||"Point"} (${l[0]}, ${l[1]})`}),o(u,{size:s.xSmall_8}),o(Q,{color:g,filled:C})]}),children:[o(G,{coord:l,style:r.spaceUnder,onChange:O}),v&&o(_,{label:"show point on graph",checked:!!f,style:f&&r.spaceUnder,onChange:v}),(!c||f)&&m(b,{children:[o(K,{selectedValue:g,onChange:z,style:r.spaceUnder}),o(_,{label:"open point",checked:!C,onChange:e=>{d({filled:!e})}})]}),!c&&((x=i==null?void 0:i.mafs)==null?void 0:x["locked-figures-aria"])&&m(b,{children:[o(u,{size:s.small_12}),o(w,{style:r.horizontalRule}),o(U,{ariaLabel:B,getPrepopulatedAriaLabel:$,onChangeProps:e=>{d(e)}})]}),(!c&&((S=i==null?void 0:i.mafs)==null?void 0:S["locked-point-labels"])||c&&((T=i==null?void 0:i.mafs)==null?void 0:T["locked-line-labels"]))&&m(b,{children:[o(u,{size:s.xxxSmall_4}),o(w,{style:r.horizontalRule}),o(u,{size:s.small_12}),o(I,{children:"Visible labels"}),n==null?void 0:n.map((e,a)=>o(H,{...e,containerStyle:!c&&r.lockedPointLabelContainer,expanded:!0,onChangeProps:t=>{D(t,a)},onRemove:()=>{M(a)}})),o(V,{kind:"tertiary",startIcon:E,onClick:()=>{const e={...X("label"),coord:[l[0]+.5,l[1]-1*((n==null?void 0:n.length)??0)],color:g};d({labels:[...n??[],e]})},style:r.addButton,children:"Add visible label"})]}),h&&o(J,{figureType:L.type,onMove:k,onRemove:h})]})},r=W.StyleSheet.create({definingContainer:{marginTop:s.xSmall_8,marginBottom:0,marginLeft:-s.xxxSmall_4,marginRight:-s.xxxSmall_4,backgroundColor:P.white},definingPanel:{paddingBottom:s.xxSmall_6},lockedPointLabelContainer:{backgroundColor:P.white},row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:s.xSmall_8},addButton:{alignSelf:"start"},horizontalRule:{height:1,backgroundColor:P.offBlack16}}),me=q;q.__docgenInfo={description:"",methods:[],displayName:"LockedPointSettings",props:{flags:{required:!1,tsType:{name:'APIOptions["flags"]',raw:'APIOptions["flags"]'},description:"Optional flags to determine which features are enabled."},headerLabel:{required:!1,tsType:{name:"string"},description:`Optional label for the point to display in the header summary.
Defaults to "Point".`},showPoint:{required:!1,tsType:{name:"boolean"},description:"Whether the extra point settings are toggled open."},error:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"Optional error message to display."},onTogglePoint:{required:!1,tsType:{name:"signature",type:"function",raw:"(newValue) => void",signature:{arguments:[{name:"newValue"}],return:{name:"void"}}},description:"Called when the extra settings toggle switch is changed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPointType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedPointType"}],raw:"Partial<LockedPointType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onMove:{required:!1,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when the point is moved."},onRemove:{required:!1,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the point is removed."}}};export{me as L};
