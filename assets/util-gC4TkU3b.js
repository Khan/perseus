import"./util-KY8kJaBW.js";import"./jquery-yG1GhClm.js";import{l,s as m}from"./svg-image-UfCByHtE.js";import{g as y,b as C,e as f,f as S,h as x,i as h,j as v}from"./article-renderer-SmZ0i9O2.js";import"./version-akiLXZts.js";import"./dependencies-9B_Bv_mA.js";import"./perseus-api-GqFoxb6z.js";import"./multi-renderer-cBeI2FHY.js";import"./hints-renderer-qD9-HtxR.js";import"./renderer-oy_Lc-D5.js";import"./base-radio-JGHr_AaJ.js";import"./button-group-KR3umc1e.js";import"./graph-VKYZ1zR1.js";import"./hud-CJYktPgf.js";import"./icon-TA3bBVIW.js";import"./index-unb9_VrH.js";import"./inline-icon-QIU9thzn.js";import"./math-input-TH7UZ2rn.js";import"./multi-button-group-AxfQn4Cq.js";import"./number-input-9C90QKz-.js";import"./range-input--rysMEnL.js";import"./text-input-Q1V0RBx1.js";import"./text-list-editor--7RKQsFY.js";import"./i18n-context-DsDGD6dy.js";import{w as P}from"./index-J2t_5nK1.js";function K(t){t.focus({preventScroll:!0})}const s="grayH";function p(t){switch(t){case"point":return{type:"point",coord:[0,0],color:s,filled:!0};case"line":return{type:"line",kind:"line",points:[p("point"),{...p("point"),coord:[2,2]}],color:s,lineStyle:"solid",showPoint1:!1,showPoint2:!1};case"vector":return{type:"vector",points:[[0,0],[2,2]],color:s};case"ellipse":return{type:"ellipse",center:[0,0],radius:[1,1],angle:0,color:s,fillStyle:"none",strokeStyle:"solid"};case"polygon":return{type:"polygon",points:[[0,2],[-1,0],[1,0]],color:s,showVertices:!1,fillStyle:"none",strokeStyle:"solid"};case"function":return{type:"function",color:s,strokeStyle:"solid",equation:"x^2",directionalAxis:"x"};default:throw new P(t)}}function N(t){return t/180*Math.PI}function X(t){return t/Math.PI*180}function Y(t,o,r){switch(t.type){case"linear":case"ray":return v({...t,startCoords:void 0},o,r);case"segment":return h({...t,startCoords:void 0},o,r);case"linear-system":return x({...t,startCoords:void 0},o,r);case"circle":const e=S({...t,startCoords:void 0}),i=l(m(e.radiusPoint,e.center));return{center:e.center,radius:i};case"sinusoid":return f({...t,startCoords:void 0},o,r);case"quadratic":return C({...t,startCoords:void 0},o,r);case"point":return y({...t,startCoords:void 0},o,r);default:return}}const Z=t=>{const o=t[0],r=t[1],e=r[1]-o[1],i=Math.PI/(2*(r[0]-o[0])),n=o[0]*i,c=o[1];return"y = "+e.toFixed(3)+"sin("+i.toFixed(3)+"x - "+n.toFixed(3)+") + "+c.toFixed(3)},$=t=>{const o=t[0],r=t[1],e=t[2],i=(o[0]-r[0])*(o[0]-e[0])*(r[0]-e[0]);if(i===0)return"Division by zero error";const n=(e[0]*(r[1]-o[1])+r[0]*(o[1]-e[1])+o[0]*(e[1]-r[1]))/i,c=(e[0]*e[0]*(o[1]-r[1])+r[0]*r[0]*(e[1]-o[1])+o[0]*o[0]*(r[1]-e[1]))/i,a=(r[0]*e[0]*(r[0]-e[0])*o[1]+e[0]*o[0]*(e[0]-o[0])*r[1]+o[0]*r[0]*(o[0]-r[0])*e[1])/i;return"y = "+n.toFixed(3)+"x^2 + "+c.toFixed(3)+"x + "+a.toFixed(3)},g=(t,o)=>{var a,u,d;const r=["linear","linear-system","ray","segment","circle"],e=["sinusoid","quadratic"],i=(a=t==null?void 0:t.mafs)==null?void 0:a["start-coords-ui-phase-1"],n=(u=t==null?void 0:t.mafs)==null?void 0:u["start-coords-ui-phase-2"],c=(d=t==null?void 0:t.mafs)==null?void 0:d["start-coords-ui-point"];return!!(i&&r.includes(o.type)||n&&e.includes(o.type)||c&&o.type==="point"&&o.numPoints!=="unlimited")};export{$ as a,Z as b,Y as c,N as d,K as f,p as g,X as r,g as s};
