var f=Object.defineProperty;var b=(i,l,s)=>l in i?f(i,l,{enumerable:!0,configurable:!0,writable:!0,value:s}):i[l]=s;var a=(i,l,s)=>(b(i,typeof l!="symbol"?l+"":l,s),s);import{r as g,E as t,bq as x,_ as c,aW as C,j as e,L as j,aH as d,br as u,$ as v}from"./iframe-BXVA8BYU.js";import"./item-version-BykZ0nru.js";import"./article-renderer-CvpNpo6i.js";import"./server-item-renderer-CWYIQbo4.js";import"./hints-renderer-BHzQDwYd.js";import{c as y}from"./components-DNWlZddO.js";import{E as w}from"./editor-jsonify-CBmMHNMs.js";import{i as k}from"./icon-paths-BU5otBoc.js";const{InfoTip:h,InlineIcon:m}=y;class p extends g.Component{constructor(){super(...arguments);a(this,"onVisibleLabelChange",s=>{this.props.onChange({visibleLabel:s})});a(this,"onAriaLabelChange",s=>{this.props.onChange({ariaLabel:s})});a(this,"onPlaceholderChange",s=>{this.props.onChange({placeholder:s})});a(this,"onCorrectChange",s=>{const o=c.map(this.props.choices,function(n,r){return c.extend({},n,{correct:r===s})});this.props.onChange({choices:o})});a(this,"onContentChange",(s,o)=>{const n=this.props.choices.slice(),r=c.clone(n[s]);r.content=o.target.value,n[s]=r,this.props.onChange({choices:n})});a(this,"addChoice",s=>{s.preventDefault();const o=this.props.choices,n={content:"",correct:!1};this.props.onChange({choices:o.concat([n])},this.focus.bind(this,o.length))});a(this,"removeChoice",(s,o)=>{o.preventDefault();const n=c(this.props.choices).clone();n.splice(s,1),this.props.onChange({choices:n})});a(this,"focus",s=>(C.findDOMNode(this.refs["editor"+s]).focus(),!0));a(this,"serialize",()=>w.serialize.call(this))}render(){const s=c.uniqueId("perseus_dropdown_");return e.jsxs("div",{className:"perseus-widget-dropdown",children:[e.jsxs("div",{className:"dropdown-info",children:[e.jsx(j,{children:"Dropdown"}),e.jsx(h,{children:e.jsxs("p",{children:["The drop down is useful for making inequalities in a custom format. We normally use the symbols ","<",","," ",">",', ≤, ≥ (in that order) which you can copy into the choices. When possible, use the "multiple choice" answer type instead.']})})]}),e.jsxs("div",{className:"dropdown-field",children:[e.jsxs(d,{children:["Visible label",e.jsx(u,{value:this.props.visibleLabel,onChange:this.onVisibleLabelChange})]}),e.jsx(h,{children:e.jsx("p",{children:"Optional visible label"})})]}),e.jsxs("div",{className:"dropdown-field",children:[e.jsxs(d,{children:["Aria label",e.jsx(u,{value:this.props.ariaLabel,onChange:this.onAriaLabelChange,type:"text"})]}),e.jsx(h,{children:e.jsxs("p",{children:["Label text that's read by screen readers. Highly recommend adding a label here to ensure your exercise is accessible. For more information on writing accessible labels, please see"," ",e.jsx("a",{href:"https://www.w3.org/WAI/tips/designing/#ensure-that-form-elements-include-clearly-associated-labels",target:"_blank",rel:"noreferrer",children:"this article."})," ",'If left blank, the value will default to "Select an answer".']})})]}),e.jsxs("div",{className:"dropdown-field",children:[e.jsxs(d,{children:["Placeholder",e.jsx(u,{value:this.props.placeholder,onChange:this.onPlaceholderChange,placeholder:"Placeholder value"})]}),e.jsx(h,{children:e.jsx("p",{children:"This value will appear as the drop down default. It should give the user some indication of the values available in the drop down itself, e.g., Yes/No/Maybe."})})]}),e.jsx("div",{className:"clearfix"}),e.jsx(d,{children:"Choices"}),e.jsx("ul",{className:"dropdown-choices",children:this.props.choices.map(function(o,n){const r=o.correct?"correct":"incorrect";return e.jsx("li",{children:e.jsxs("div",{children:[e.jsx("input",{ref:"radio"+n,type:"radio",name:s,checked:o.correct?"checked":"",onChange:this.onCorrectChange.bind(this,n),value:n}),e.jsx("input",{type:"text",ref:"editor"+n,onChange:this.onContentChange.bind(this,n),className:r,value:o.content}),e.jsx("a",{href:"#",className:"simple-button orange","aria-label":"Delete choice",onClick:this.removeChoice.bind(this,n),children:e.jsx("span",{className:"remove-choice",children:e.jsx(m,{...v})})})]})},""+n)},this)}),e.jsx("div",{className:"add-choice-container",children:e.jsxs("a",{href:"#",className:"simple-button orange",onClick:this.addChoice,children:[e.jsx(m,{...k})," Add a choice"," "]})})]})}}a(p,"propTypes",{choices:t.arrayOf(t.shape({content:t.string,correct:t.bool})),placeholder:t.string}),a(p,"widgetName","dropdown"),a(p,"defaultProps",x.defaultWidgetOptions);p.__docgenInfo={description:"",methods:[{name:"onVisibleLabelChange",docblock:null,modifiers:[],params:[{name:"visibleLabel",optional:!1,type:null}],returns:null},{name:"onAriaLabelChange",docblock:null,modifiers:[],params:[{name:"ariaLabel",optional:!1,type:null}],returns:null},{name:"onPlaceholderChange",docblock:null,modifiers:[],params:[{name:"placeholder",optional:!1,type:null}],returns:null},{name:"onCorrectChange",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null}],returns:null},{name:"onContentChange",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null},{name:"e",optional:!1,type:null}],returns:null},{name:"addChoice",docblock:null,modifiers:[],params:[{name:"e",optional:!1,type:null}],returns:null},{name:"removeChoice",docblock:null,modifiers:[],params:[{name:"choiceIndex",optional:!1,type:null},{name:"e",optional:!1,type:null}],returns:null},{name:"focus",docblock:null,modifiers:[],params:[{name:"i",optional:!1,type:null}],returns:null},{name:"serialize",docblock:null,modifiers:[],params:[],returns:null}],displayName:"DropdownEditor",props:{placeholder:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},choices:{defaultValue:{value:`[
    {
        content: "",
        correct: false,
    },
]`,computed:!1},description:"",type:{name:"arrayOf",value:{name:"shape",value:{content:{name:"string",required:!1},correct:{name:"bool",required:!1}}}},required:!1}}};export{p as D};
