import{r as d}from"./index-6oxdNXpR.js";import{g as l}from"./dependencies-CP7Uh8Kq.js";const e={PENDING:"pending",LOADING:"loading",LOADED:"loaded",FAILED:"failed"};class m extends d.Component{constructor(n){super(n),this.createLoader=()=>{this.destroyLoader(),this.img=new Image,this.img.onload=this.handleLoad,this.img.onerror=this.handleError,this.img.src=this.props.src},this.destroyLoader=()=>{this.img&&(this.img.onload=null,this.img.onerror=null,this.img=null)},this.handleLoad=t=>{this.destroyLoader(),this.setState({status:e.LOADED}),this.props.onLoad&&this.props.onLoad(t)},this.handleError=t=>{this.destroyLoader(),this.setState({status:e.FAILED}),this.props.onError&&this.props.onError(t)},this.renderImg=()=>{const{src:t,imgProps:a}=this.props;let s,i;a.onClick!=null&&(s=r=>{var o;(r.keyCode===13||r.keyCode===32)&&((o=a.onClick)==null||o.call(a,r))},i=r=>{r.keyCode===32&&r.preventDefault()});const u=l().staticUrl;return d.createElement("img",{tabIndex:0,src:u(t),onKeyUp:s,onKeyDown:i,...a})},this.state={status:n.src?e.LOADING:e.PENDING}}componentDidMount(){this.state.status===e.LOADING&&this.createLoader()}UNSAFE_componentWillReceiveProps(n){this.props.src!==n.src&&this.setState({status:n.src?e.LOADING:e.PENDING})}componentDidUpdate(n,t){this.state.status===e.LOADING&&!this.img&&this.createLoader(),t.status!==this.state.status&&this.props.onUpdate(this.state.status)}componentWillUnmount(){this.destroyLoader()}render(){switch(this.state.status){case e.LOADED:return this.renderImg();case e.FAILED:if(this.props.children)return this.props.children;break;default:if(this.props.preloader)return this.props.preloader()}return null}}m.__docgenInfo={description:`Component to display an image (or other React components) while the desired
image is loading.

Derived from
https://github.com/hzdg/react-imageloader/blob/master/src/index.js
to better suit our environment/build tools. Additionally, this one does
not introduce a wrapper element, which makes styling easier.`,methods:[{name:"createLoader",docblock:null,modifiers:[],params:[],returns:null},{name:"destroyLoader",docblock:null,modifiers:[],params:[],returns:null},{name:"handleLoad",docblock:null,modifiers:[],params:[{name:"event",optional:!1,type:{name:"Event",alias:"Event"}}],returns:null},{name:"handleError",docblock:null,modifiers:[],params:[{name:"error",optional:!1,type:{name:"Event",alias:"Event"}}],returns:null},{name:"renderImg",docblock:null,modifiers:[],params:[],returns:null}],displayName:"ImageLoader",props:{children:{required:!1,tsType:{name:"ReactReactNode",raw:"React.ReactNode"},description:""},imgProps:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    alt: string;
    title?: string;
    ["aria-hidden"]?: boolean;
    tabIndex?: number;
    onClick?: (e: React.SyntheticEvent) => void;
    style?: Dimensions;
}`,signature:{properties:[{key:"alt",value:{name:"string",required:!0}},{key:"title",value:{name:"string",required:!1}},{key:"aria-hidden",value:{name:"boolean",required:!1}},{key:"tabIndex",value:{name:"number",required:!1}},{key:"onClick",value:{name:"signature",type:"function",raw:"(e: React.SyntheticEvent) => void",signature:{arguments:[{type:{name:"ReactSyntheticEvent",raw:"React.SyntheticEvent"},name:"e"}],return:{name:"void"}},required:!1}},{key:"style",value:{name:"signature",type:"object",raw:`{
    width?: number;
    height?: number;
}`,signature:{properties:[{key:"width",value:{name:"number",required:!1}},{key:"height",value:{name:"number",required:!1}}]},required:!1}}]}},description:""},onError:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"event"}],return:{name:"void"}}},description:""},onLoad:{required:!1,tsType:{name:"signature",type:"function",raw:"(event: Event) => void",signature:{arguments:[{type:{name:"Event"},name:"event"}],return:{name:"void"}}},description:""},onUpdate:{required:!0,tsType:{name:"signature",type:"function",raw:"(status: (typeof Status)[keyof typeof Status]) => void",signature:{arguments:[{type:{name:"unknown[union]",raw:"(typeof Status)[keyof typeof Status]"},name:"status"}],return:{name:"void"}}},description:""},preloader:{required:!0,tsType:{name:"union",raw:"(() => React.ReactNode) | null | undefined",elements:[{name:"unknown"},{name:"null"},{name:"undefined"}]},description:""},src:{required:!0,tsType:{name:"string"},description:""}}};export{m as I};
