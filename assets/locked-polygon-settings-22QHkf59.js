import{j as e,a}from"./jsx-runtime-BGVbfQ2Z.js";import{l as C,a as x}from"./article-renderer-ZmMSaVgJ.js";import"./index-default-4_ZsnO94.js";import"./util-WvQWLN3r.js";import"./unit-uxf7imOh.js";import"./dependencies-fnqF3NiV.js";import"./perseus-api-BF68z3pH.js";import"./multi-renderer-X5TcLv1b.js";import"./hints-renderer-KFGc1oI5.js";import"./renderer-HTuW3Ak6.js";import"./base-radio-CEoTBmnL.js";import"./button-group-eBTrRsKy.js";import"./graph-vFuFnkva.js";import"./svg-image-5C3n_KnR.js";import"./hud-Q7Km3N9P.js";import"./icon-HbAIhp4d.js";import"./info-tip-8pHiOl5T.js";import"./inline-icon-MJBS_-2U.js";import"./math-input-Z6lNLhZg.js";import"./multi-button-group-rHU9dGVb.js";import"./number-input-QmtkIb5a.js";import"./prop-check-box-yQKE-Nit.js";import"./range-input-IMzA4hKn.js";import"./text-input-yDsqFbe3.js";import"./text-list-editor-bJphcq85.js";import"./jquery-5v7aFUvu.js";import"./i18n-context-9-s9cJ--.js";import{B as I}from"./choice-unuhbNi1.js";import{V as d}from"./index-oMd7J_hd.js";import{S as b,O as h}from"./answer-choices-2Dx0x68A.js";import{I as A}from"./index-DDXzYFOx.js";import{S as s}from"./index-KIBY7gd7.js";import{c as g,s as n}from"./index-lUErx3pE.js";import{a as y,L as k}from"./index-OY3Waz-e.js";import{l as P}from"./index-awljIyHI.js";import{P as V,C as U,L as T}from"./locked-figure-settings-actions-YTUWtEvx.js";import{C as j}from"./color-select-EAx7aPoi.js";import{L as z}from"./labeled-switch-bqhOQax9.js";const R=""+new URL("minus-circle-9EKbQa8X.svg",import.meta.url).href,B=""+new URL("plus-circle-MfbD-3cx.svg",import.meta.url).href,N=t=>{const{color:r,fillStyle:i,strokeStyle:u}=t;return e(d,{"aria-label":`${r}, stroke ${u}, fill ${i}`,style:[_.container,{border:`4px ${u} ${C[r]}`}],children:e(d,{style:[_.innerSquare,{backgroundColor:C[r],opacity:x[i]}]})})},_=P.StyleSheet.create({container:{outline:`2px solid ${g.offWhite}`,width:n.large_24,height:n.large_24,backgroundColor:g.white,alignItems:"center",justifyContent:"center"},innerSquare:{width:20,height:20}});try{polygonswatch.displayName="polygonswatch",polygonswatch.__docgenInfo={description:"",displayName:"polygonswatch",props:{color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"enum",value:[{value:'"blue"'},{value:'"green"'},{value:'"grayH"'},{value:'"purple"'},{value:'"pink"'},{value:'"orange"'},{value:'"red"'}]}},fillStyle:{defaultValue:null,description:"",name:"fillStyle",required:!0,type:{name:"enum",value:[{value:'"none"'},{value:'"solid"'},{value:'"translucent"'}]}},strokeStyle:{defaultValue:null,description:"",name:"strokeStyle",required:!0,type:{name:"enum",value:[{value:'"solid"'},{value:'"dashed"'}]}}}}}catch{}const D=t=>{const{points:r,color:i,showVertices:u,fillStyle:f,strokeStyle:v,expanded:q,onToggle:L,onChangeProps:c,onMove:$,onRemove:M}=t;function F(o){c({color:o})}return a(V,{expanded:q,onToggle:L,header:a(d,{style:l.row,children:[e(y,{children:`Polygon, ${r.length} sides`}),e(s,{size:n.xSmall_8}),e(N,{color:i,fillStyle:f,strokeStyle:v})]}),children:[a(d,{style:[l.row,l.spaceUnder],children:[e(j,{selectedValue:i,onChange:F}),e(s,{size:n.medium_16}),a(k,{tag:"label",style:l.row,children:["fill",e(s,{size:n.xxSmall_6}),e(b,{selectedValue:f,onChange:o=>c({fillStyle:o}),placeholder:"",children:Object.keys(x).map(o=>e(h,{value:o,label:o,children:o},o))})]})]}),a(k,{tag:"label",style:[l.row,l.spaceUnder],children:["stroke",e(s,{size:n.xxSmall_6}),a(b,{selectedValue:v,onChange:o=>c({strokeStyle:o}),placeholder:"",children:[e(h,{value:"solid",label:"solid",children:"solid"}),e(h,{value:"dashed",label:"dashed",children:"dashed"})]})]}),e(z,{label:"show vertices",checked:u,onChange:o=>c({showVertices:o}),style:l.spaceUnder}),a(V,{header:e(y,{children:"Points"}),expanded:!0,containerStyle:l.pointAccordionContainer,panelStyle:l.pointAccordionPanel,children:[r.map((o,p)=>{const S=String.fromCharCode(65+p);return a(d,{style:[l.row,l.spaceUnder],children:[e(y,{children:`${S}:`}),e(s,{size:n.medium_16}),e(U,{coord:o,labels:["x","y"],onChange:m=>{const w=[...r];w[p]=m,t.onChangeProps({points:w})}}),r.length>3&&e(A,{"aria-label":`Delete polygon point ${S}`,icon:R,color:"destructive",onClick:()=>{const m=[...r];m.splice(p,1),t.onChangeProps({points:m})},style:l.icon})]},`locked-polygon-point-${o[0]}-${o[1]}-index-${p}`)}),e(I,{kind:"tertiary",startIcon:B,onClick:()=>{t.onChangeProps({points:[...r,[0,0]]})},children:"Add point"})]}),e(T,{showM2Features:t.showM2Features,figureType:t.type,onMove:$,onRemove:M})]})},l=P.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},pointAccordionContainer:{backgroundColor:g.white},pointAccordionPanel:{alignItems:"start"},icon:{marginInlineStart:n.xxxSmall_4},spaceUnder:{marginBottom:n.xSmall_8}}),Pe=D;try{lockedpolygonsettings.displayName="lockedpolygonsettings",lockedpolygonsettings.__docgenInfo={description:"",displayName:"lockedpolygonsettings",props:{showM2Features:{defaultValue:null,description:"",name:"showM2Features",required:!1,type:{name:"boolean"}},showM2bFeatures:{defaultValue:null,description:"",name:"showM2bFeatures",required:!1,type:{name:"boolean"}},onMove:{defaultValue:null,description:"Called when a movement button (top, up, down, bottom) is pressed.",name:"onMove",required:!0,type:{name:"(movement: LockedFigureSettingsMovementType) => void"}},onRemove:{defaultValue:null,description:"Called when the delete button is pressed.",name:"onRemove",required:!0,type:{name:"() => void"}},expanded:{defaultValue:null,description:"Whether this accordion is expanded.",name:"expanded",required:!1,type:{name:"boolean"}},onToggle:{defaultValue:null,description:"Called when the accordion is expanded or collapsed.",name:"onToggle",required:!1,type:{name:"((expanded: boolean) => void)"}},type:{defaultValue:null,description:"",name:"type",required:!0,type:{name:'"polygon"'}},points:{defaultValue:null,description:"",name:"points",required:!0,type:{name:"readonly Coord[]"}},color:{defaultValue:null,description:"",name:"color",required:!0,type:{name:"enum",value:[{value:'"blue"'},{value:'"green"'},{value:'"grayH"'},{value:'"purple"'},{value:'"pink"'},{value:'"orange"'},{value:'"red"'}]}},showVertices:{defaultValue:null,description:"",name:"showVertices",required:!0,type:{name:"boolean"}},fillStyle:{defaultValue:null,description:"",name:"fillStyle",required:!0,type:{name:"enum",value:[{value:'"none"'},{value:'"solid"'},{value:'"translucent"'}]}},strokeStyle:{defaultValue:null,description:"",name:"strokeStyle",required:!0,type:{name:"enum",value:[{value:'"solid"'},{value:'"dashed"'}]}},onChangeProps:{defaultValue:null,description:"Called when the props (coords, color, etc.) are updated.",name:"onChangeProps",required:!0,type:{name:"(newProps: Partial<LockedPolygonType>) => void"}}}}}catch{}export{Pe as L};
