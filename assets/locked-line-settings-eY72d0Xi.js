import{a as d,j as o,F as A}from"./jsx-runtime-FVsy8kgq.js";import"./util-XcxTwqb0.js";import{e as H}from"./svg-image-DX-NHRDr.js";import{B as J}from"./choice-j6w4LtFN.js";import{V as x}from"./index-6h5t6F0w.js";import{S as Q,O as _}from"./answer-choices-pR5N7Qex.js";import{S as L}from"./index-qUyqkRvh.js";import{s as a,c as B}from"./index-deFLJwr4.js";import{L as D,a as R}from"./index-h_CiYGGb.js";import{L as U,p as X}from"./labeled-switch-rKIyx6Iy.js";import{l as M}from"./index-awljIyHI.js";import{v as b}from"./article-renderer-8lIlIKVI.js";import{P as O,L as Y}from"./locked-figure-settings-actions-DsQ3rjOG.js";import{C as j}from"./color-select-DT9P5Df1.js";import{C as ee}from"./coordinate-pair-input-23mAp7kL.js";import{C as oe,g as ne}from"./util-sCSzm9ZT.js";import{L as te}from"./line-stroke-select-REeykKhH.js";import{L as ae}from"./line-swatch-YGnxskCL.js";import{L as re}from"./locked-label-settings-dnFaULZV.js";const F=g=>{const{coord:c,color:u,filled:s=!0,label:f,showPoint:p="false",error:S,onChangeProps:y,onTogglePoint:r,expanded:i,onToggle:C}=g;function v(l){y({color:l})}return d(O,{expanded:i,onToggle:C,containerStyle:h.container,panelStyle:h.accordionPanel,header:d(x,{style:h.row,children:[o(D,{children:`${f||"Point"} (${c[0]}, ${c[1]})`}),o(L,{size:a.xSmall_8}),p&&o(oe,{color:u,filled:s})]}),children:[o(ee,{coord:c,error:!!S,style:h.spaceUnder,onChange:l=>{y({coord:l})}}),r&&o(U,{label:"show point on graph",checked:!!p,style:p&&h.spaceUnder,onChange:r}),p&&d(A,{children:[o(j,{selectedValue:u,onChange:v,style:h.spaceUnder}),o(U,{label:"open point",checked:!s,onChange:l=>{y({filled:!l})}})]})]})},h=M.StyleSheet.create({container:{marginTop:a.xSmall_8,marginBottom:0,marginLeft:-a.xxxSmall_4,marginRight:-a.xxxSmall_4,backgroundColor:B.white},accordionPanel:{paddingBottom:a.medium_16},row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:a.xSmall_8}});F.__docgenInfo={description:"",methods:[],displayName:"DefiningPointSettings",props:{label:{required:!0,tsType:{name:"string"},description:`Optional label for the point to display in the header summary.
Defaults to "Point".`},showPoint:{required:!1,tsType:{name:"boolean"},description:"Whether the extra point settings are toggled open."},error:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"Optional error message to display."},onTogglePoint:{required:!1,tsType:{name:"signature",type:"function",raw:"(newValue) => void",signature:{arguments:[{name:"newValue"}],return:{name:"void"}}},description:"Called when the extra settings toggle switch is changed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPointType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedPointType"}],raw:"Partial<LockedPointType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."}}};const q="The line cannot have length 0.",W=g=>{var I;const{flags:c,kind:u,points:s,color:f,lineStyle:p="solid",showPoint1:S,showPoint2:y,labels:r,onChangeProps:i,onMove:C,onRemove:v}=g,[l,w]=s,E=`${u.charAt(0).toUpperCase()+u.slice(1)} (${l.coord[0]},
        ${l.coord[1]}), (${w.coord[0]}, ${w.coord[1]})`,T=H(l.coord,w.coord);function $(e,n){const t=[...s];t[n]={...s[n],...e};const P=b.midpoint(s[0].coord,s[1].coord),z=b.midpoint(t[0].coord,t[1].coord),V=[z[0]-P[0],z[1]-P[1]],G=r.map((k,le)=>({...k,coord:[k.coord[0]+V[0],k.coord[1]+V[1]]}));i({points:t,labels:G})}function K(e){const n=r.map(t=>({...t,color:e}));i({color:e,points:[{...l,color:e},{...w,color:e}],labels:n})}function N(e,n){const t=[...r];t[n]={...r[n],...e},i({labels:t})}function Z(e){const n=r.filter((t,P)=>P!==e);i({labels:n})}return d(O,{expanded:g.expanded,onToggle:g.onToggle,header:d(x,{style:m.row,children:[o(D,{children:E}),o(L,{size:a.xSmall_8}),o(ae,{color:f,lineStyle:p})]}),children:[d(R,{tag:"label",style:[m.row,m.spaceUnder],children:["kind",o(L,{size:a.xxxSmall_4}),d(Q,{selectedValue:u,onChange:e=>i({kind:e}),placeholder:"",children:[o(_,{value:"line",label:"line"}),o(_,{value:"ray",label:"ray"}),o(_,{value:"segment",label:"segment"})]})]}),d(x,{style:m.row,children:[o(j,{selectedValue:f,onChange:K}),o(L,{size:a.small_12}),o(te,{selectedValue:p,onChange:e=>i({lineStyle:e})})]}),T&&o(R,{style:m.errorText,children:q}),o(F,{label:"Point 1",expanded:!0,showPoint:S,error:T?q:null,...l,onTogglePoint:e=>i({showPoint1:e}),onChangeProps:e=>$(e,0)}),o(F,{label:"Point 2",expanded:!0,showPoint:y,error:T?q:null,...w,onTogglePoint:e=>i({showPoint2:e}),onChangeProps:e=>$(e,1)}),((I=c==null?void 0:c.mafs)==null?void 0:I["locked-line-labels"])&&d(A,{children:[o(x,{style:m.horizontalRule}),r.map((e,n)=>o(re,{...e,expanded:!0,onChangeProps:t=>{N(t,n)},onRemove:()=>{Z(n)}})),o(J,{kind:"tertiary",startIcon:X,onClick:()=>{const e=[0,-1],n=b.add(b.scale(e,r.length),b.midpoint(s[0].coord,s[1].coord)),t={...ne("label"),coord:n,color:f};i({labels:[...r,t]})},style:m.addButton,children:"Add visible label"})]}),o(Y,{figureType:g.type,onMove:C,onRemove:v})]})},m=M.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:a.xSmall_8},errorText:{color:B.red},addButton:{alignSelf:"start"},horizontalRule:{marginTop:a.small_12,marginBottom:a.xxxSmall_4,height:1,backgroundColor:B.offBlack16}}),ke=W;W.__docgenInfo={description:"",methods:[],displayName:"LockedLineSettings",props:{flags:{required:!1,tsType:{name:'APIOptions["flags"]',raw:'APIOptions["flags"]'},description:""},showLabelsFlag:{required:!1,tsType:{name:"boolean"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedFigure>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedFigure"}],raw:"Partial<LockedFigure>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (points, color, etc.) are updated."}}};export{ke as L};
