import"./util-KY8kJaBW.js";import"./jquery-yG1GhClm.js";import{l as y,s as C}from"./svg-image-UfCByHtE.js";import{g as f,b as S,e as v,f as P,h as x,i as F,j as w,k as h}from"./article-renderer-9MFVAD_I.js";import"./version-akiLXZts.js";import"./dependencies-9B_Bv_mA.js";import"./perseus-api-GqFoxb6z.js";import"./multi-renderer-woWt8f2W.js";import"./hints-renderer-_cfyGynV.js";import"./renderer-bN75HO46.js";import"./base-radio-oSiEycJG.js";import"./button-group-KR3umc1e.js";import"./graph-VKYZ1zR1.js";import"./hud-CJYktPgf.js";import"./icon-TA3bBVIW.js";import"./index-unb9_VrH.js";import"./inline-icon-QIU9thzn.js";import"./math-input-FrakTMQN.js";import"./multi-button-group-AxfQn4Cq.js";import"./number-input-_vmR2dDD.js";import"./range-input-W6BaCFKq.js";import"./text-input-Q1V0RBx1.js";import"./text-list-editor--7RKQsFY.js";import"./i18n-context-SHL040F7.js";import{w as T}from"./index-J2t_5nK1.js";function Y(o){o.focus({preventScroll:!0})}const s="grayH";function m(o){switch(o){case"point":return{type:"point",coord:[0,0],color:s,filled:!0};case"line":return{type:"line",kind:"line",points:[m("point"),{...m("point"),coord:[2,2]}],color:s,lineStyle:"solid",showPoint1:!1,showPoint2:!1};case"vector":return{type:"vector",points:[[0,0],[2,2]],color:s};case"ellipse":return{type:"ellipse",center:[0,0],radius:[1,1],angle:0,color:s,fillStyle:"none",strokeStyle:"solid"};case"polygon":return{type:"polygon",points:[[0,2],[-1,0],[1,0]],color:s,showVertices:!1,fillStyle:"none",strokeStyle:"solid"};case"function":return{type:"function",color:s,strokeStyle:"solid",equation:"x^2",directionalAxis:"x"};default:throw new T(o)}}function Z(o){return o/180*Math.PI}function $(o){return o/Math.PI*180}function g(o,t,r){switch(o.type){case"linear":case"ray":return h({...o,startCoords:void 0},t,r);case"segment":return w({...o,startCoords:void 0},t,r);case"linear-system":return F({...o,startCoords:void 0},t,r);case"circle":const e=x({...o,startCoords:void 0}),i=y(C(e.radiusPoint,e.center));return{center:e.center,radius:i};case"sinusoid":return P({...o,startCoords:void 0},t,r);case"quadratic":return v({...o,startCoords:void 0},t,r);case"point":return S({...o,startCoords:void 0},t,r);case"polygon":return f({...o,startCoords:void 0},t,r);default:return}}const oo=o=>{const t=o[0],r=o[1],e=r[1]-t[1],i=Math.PI/(2*(r[0]-t[0])),n=t[0]*i,c=t[1];return"y = "+e.toFixed(3)+"sin("+i.toFixed(3)+"x - "+n.toFixed(3)+") + "+c.toFixed(3)},to=o=>{const t=o[0],r=o[1],e=o[2],i=(t[0]-r[0])*(t[0]-e[0])*(r[0]-e[0]);if(i===0)return"Division by zero error";const n=(e[0]*(r[1]-t[1])+r[0]*(t[1]-e[1])+t[0]*(e[1]-r[1]))/i,c=(e[0]*e[0]*(t[1]-r[1])+r[0]*r[0]*(e[1]-t[1])+t[0]*t[0]*(r[1]-e[1]))/i,d=(r[0]*e[0]*(r[0]-e[0])*t[1]+e[0]*t[0]*(e[0]-t[0])*r[1]+t[0]*r[0]*(t[0]-r[0])*e[1])/i;return"y = "+n.toFixed(3)+"x^2 + "+c.toFixed(3)+"x + "+d.toFixed(3)},ro=(o,t)=>{var u,a,p,l;const r=["linear","linear-system","ray","segment","circle"],e=["sinusoid","quadratic"],i=(u=o==null?void 0:o.mafs)==null?void 0:u["start-coords-ui-phase-1"],n=(a=o==null?void 0:o.mafs)==null?void 0:a["start-coords-ui-phase-2"],c=(p=o==null?void 0:o.mafs)==null?void 0:p["start-coords-ui-point"],d=(l=o==null?void 0:o.mafs)==null?void 0:l["start-coords-ui-polygon"];return!!(i&&r.includes(t.type)||n&&e.includes(t.type)||c&&t.type==="point"&&t.numPoints!=="unlimited"||d&&t.type==="polygon"&&t.numSides!=="unlimited"&&(t.snapTo==="grid"||t.snapTo===void 0))};export{to as a,oo as b,g as c,Z as d,Y as f,m as g,$ as r,ro as s};
