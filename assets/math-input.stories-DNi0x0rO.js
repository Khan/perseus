import{a as y}from"./index-B-lxVbXh.js";import{M as f}from"./math-input-Dh_f8kfs.js";import"./v4-CtRu48qb.js";import"./jsx-runtime-BT65X5dW.js";import"./index-C6mWTJJr.js";import"./_commonjsHelpers-BosuxZz1.js";import"./prop-types-DY0DdirP.js";import"./core-widget-registry-Be22yvXk.js";import"./underscore-U-AHniOr.js";import"./mobile-keypad-DlNbOZKZ.js";import"./no-important-DlFk8a1I.js";import"./index-B1Gws05u.js";import"./index-3H81sEQ1.js";import"./index-BzwLglMS.js";import"./index-CW2s7ekB.js";import"./assertThisInitialized-DIFuz7Pv.js";import"./index-Ds5N5m2R.js";import"./tabbar-MpFAbKP0.js";import"./item-bIeXIAjZ.js";import"./index-CazpBUXm.js";import"./extends-DDykod_l.js";import"./button-assets-CtFxlXLZ.js";import"./get-decimal-separator-B2cicA45.js";import"./keypad-button-BkDCpxri.js";import"./operators-page-y0NCvs6i.js";import"./navigation-pad-DADFeqNo.js";import"./key-translator-Bh_oSP9a.js";import"./index-CrGd2QqM.js";import"./index-BXjKE-B5.js";import"./index-qaYZOyAC.js";import"./index-ZfDK3AP8.js";import"./index-DAJiRA_A.js";import"./index-Bdux6mmb.js";import"./index-CFvGmn7i.js";import"./index-CUPgSPQO.js";import"./Popper-Bj3TCzZA.js";import"./index-D7h-teXI.js";import"./jquery-CkHB0_Mt.js";import"./i18n-context-3AkWzTTj.js";const or={title:"Perseus/Components/Math Input",component:f,args:{keypadButtonSets:{advancedRelations:!0,basicRelations:!0,divisionKey:!0,logarithms:!0,preAlgebra:!0,trigonometry:!0,scientific:!0},convertDotToTimes:!1,value:"",onChange:y("onChange"),analytics:{onAnalyticsEvent:()=>Promise.resolve()},labelText:"Math input"},parameters:{controls:{exclude:["onChange","analytics"]}}},r={},t={args:{ariaLabel:"Sample label"}},e={args:{buttonsVisible:"always"}},o={args:{buttonsVisible:"never"}};var a,i,s;r.parameters={...r.parameters,docs:{...(a=r.parameters)==null?void 0:a.docs,source:{originalSource:"{}",...(s=(i=r.parameters)==null?void 0:i.docs)==null?void 0:s.source}}};var p,m,n;t.parameters={...t.parameters,docs:{...(p=t.parameters)==null?void 0:p.docs,source:{originalSource:`{
  args: {
    ariaLabel: "Sample label"
  }
}`,...(n=(m=t.parameters)==null?void 0:m.docs)==null?void 0:n.source}}};var c,l,u;e.parameters={...e.parameters,docs:{...(c=e.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    buttonsVisible: "always"
  }
}`,...(u=(l=e.parameters)==null?void 0:l.docs)==null?void 0:u.source}}};var d,b,g;o.parameters={...o.parameters,docs:{...(d=o.parameters)==null?void 0:d.docs,source:{originalSource:`{
  args: {
    buttonsVisible: "never"
  }
}`,...(g=(b=o.parameters)==null?void 0:b.docs)==null?void 0:g.source}}};const ar=["DefaultWithBasicButtonSet","DefaultWithAriaLabel","KeypadOpenByDefault","KeypadNeverVisible"];export{t as DefaultWithAriaLabel,r as DefaultWithBasicButtonSet,o as KeypadNeverVisible,e as KeypadOpenByDefault,ar as __namedExportsOrder,or as default};
