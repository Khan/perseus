import{j as n,V as u,n as T,cz as f,cE as F,e as g,s,y as p,aH as C,L as x,h as y,z as L,bO as W,r as O}from"./iframe-B9Y7vzCP.js";import{C as X,S as G,O as H}from"./color-select-fRo4Scor.js";import{p as j}from"./plus-circle-DsgEZe2H.js";import{C as Q,L as Y,a as Z}from"./locked-label-settings-BTe4ZWYt.js";import{P as S}from"./trash-bold-D-mo8Y8i.js";import{L as J}from"./labeled-switch-D6W1hgog.js";import{L as K}from"./line-stroke-select-BW8aVZ0a.js";import{L as ee}from"./locked-figure-aria-CVbdorZ1.js";import{g as ne,j as re,a as q,b as ae}from"./util-B5dMkSHv.js";const te=""+new URL("arrow-fat-down-Bfm634Ub.svg",import.meta.url).href,oe=""+new URL("arrow-fat-left-vG4eNh8n.svg",import.meta.url).href,le=""+new URL("arrow-fat-right-LGRtshLE.svg",import.meta.url).href,ie=""+new URL("arrow-fat-up-BqHZ5poh.svg",import.meta.url).href,se=""+new URL("minus-circle-D0QptBrx.svg",import.meta.url).href,$=m=>{const{color:o,fillStyle:d,strokeStyle:h}=m;return n.jsx(u,{"aria-label":`${o}, stroke ${h}, fill ${d}`,style:[P.container,{border:`4px ${h} ${f[o]}`}],children:n.jsx(u,{style:[P.innerSquare,{backgroundColor:f[o],opacity:d==="white"?0:F[d]}]})})},P=T.StyleSheet.create({container:{outline:`2px solid ${g.offWhite}`,width:s.large_24,height:s.large_24,backgroundColor:g.white,alignItems:"center",justifyContent:"center"},innerSquare:{width:20,height:20}});$.__docgenInfo={description:"",methods:[],displayName:"PolygonSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const ue=m=>{const{points:o,color:d,showVertices:h,fillStyle:b,strokeStyle:v,labels:l,ariaLabel:z,expanded:A,onToggle:_,onChangeProps:i,onMove:R,onRemove:B}=m;async function M(){let e=`Polygon${await re(l)} with ${o.length} sides, vertices at `;const a=await Promise.all(o.map(async([k,D])=>{const N=await q(`$${k}$`),E=await q(`$${D}$`);return`${N} comma ${E}`}));e+=a.join(", ");const c=ae(d,v,b);return e+=c,e}function U(r){const e={color:r};e.labels=l.map(a=>({...a,color:r})),i(e)}function w(r){switch(r){case"up":i({points:o.map(([e,a])=>[e,a+1]),labels:l.map(e=>({...e,coord:[e.coord[0],e.coord[1]+1]}))});break;case"down":i({points:o.map(([e,a])=>[e,a-1]),labels:l.map(e=>({...e,coord:[e.coord[0],e.coord[1]-1]}))});break;case"left":i({points:o.map(([e,a])=>[e-1,a]),labels:l.map(e=>({...e,coord:[e.coord[0]-1,e.coord[1]]}))});break;case"right":i({points:o.map(([e,a])=>[e+1,a]),labels:l.map(e=>({...e,coord:[e.coord[0]+1,e.coord[1]]}))});break}}function I(r,e){const a=[...l];a[e]={...l[e],...r},i({labels:a})}function V(r){const e=l.filter((a,c)=>c!==r);i({labels:e})}return n.jsxs(S,{expanded:A,onToggle:_,header:n.jsxs(u,{style:t.row,children:[n.jsx(x,{children:`Polygon, ${o.length} sides`}),n.jsx(p,{size:s.xSmall_8}),n.jsx($,{color:d,fillStyle:b,strokeStyle:v})]}),children:[n.jsxs(u,{style:[t.row,t.spaceUnder],children:[n.jsx(X,{selectedValue:d,onChange:U}),n.jsx(p,{size:s.medium_16}),n.jsxs(C,{tag:"label",style:[t.row,t.truncatedWidth],children:["fill",n.jsx(p,{size:s.xxSmall_6}),n.jsx(G,{selectedValue:b,onChange:r=>i({fillStyle:r}),placeholder:"",children:Object.keys(F).map(r=>n.jsx(H,{value:r,label:r},r))})]})]}),n.jsx(K,{selectedValue:v,onChange:r=>i({strokeStyle:r})}),n.jsx(J,{label:"show vertices",checked:h,onChange:r=>i({showVertices:r}),style:t.spaceUnder}),n.jsxs(S,{header:n.jsx(x,{children:"Points"}),expanded:!0,containerStyle:t.pointAccordionContainer,panelStyle:t.pointAccordionPanel,children:[o.map((r,e)=>{const a=String.fromCharCode(65+e);return n.jsxs(u,{style:[t.row,t.spaceUnder],children:[n.jsx(x,{children:`${a}:`}),n.jsx(p,{size:s.medium_16}),n.jsx(Q,{coord:r,labels:["x","y"],onChange:c=>{const k=[...o];k[e]=c,m.onChangeProps({points:k})}}),o.length>3&&n.jsx(y,{"aria-label":`Delete polygon point ${a}`,icon:se,kind:"tertiary",actionType:"destructive",onClick:()=>{const c=[...o];c.splice(e,1),m.onChangeProps({points:c})},style:t.icon})]},`locked-polygon-point-index-${e}`)}),n.jsxs(u,{style:[t.row,t.polygonActionsContainer],children:[n.jsx(L,{kind:"tertiary",startIcon:j,onClick:()=>{m.onChangeProps({points:[...o,[0,0]]})},children:"Add point"}),n.jsx(W,{}),n.jsxs(u,{style:t.movementButtonsContainer,children:[n.jsx(y,{"aria-label":"Move polygon up",size:"small",icon:ie,kind:"tertiary",onClick:()=>w("up")}),n.jsxs(u,{style:t.row,children:[n.jsx(y,{"aria-label":"Move polygon left",size:"small",icon:oe,kind:"tertiary",onClick:()=>w("left")}),n.jsx(y,{"aria-label":"Move polygon down",size:"small",icon:te,kind:"tertiary",onClick:()=>w("down")}),n.jsx(y,{"aria-label":"Move polygon right",size:"small",icon:le,kind:"tertiary",onClick:()=>w("right")})]})]})]})]}),n.jsx(p,{size:s.small_12}),n.jsx(u,{style:t.horizontalRule}),n.jsx(ee,{ariaLabel:z,getPrepopulatedAriaLabel:M,onChangeProps:r=>{i(r)}}),n.jsx(p,{size:s.xxxSmall_4}),n.jsx(u,{style:t.horizontalRule}),n.jsx(p,{size:s.small_12}),n.jsx(C,{children:"Visible labels"}),l.map((r,e)=>O.createElement(Y,{...r,key:e,expanded:!0,onChangeProps:a=>{I(a,e)},onRemove:()=>{V(e)},containerStyle:t.labelContainer})),n.jsx(L,{kind:"tertiary",startIcon:j,onClick:()=>{const r={...ne("label"),coord:[o[0][0],o[0][1]-l.length],color:d};i({labels:[...l,r]})},style:t.addButton,children:"Add visible label"}),n.jsx(Z,{figureType:m.type,onMove:R,onRemove:B})]})},t=T.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},pointAccordionContainer:{backgroundColor:g.white},pointAccordionPanel:{alignItems:"start"},icon:{marginInlineStart:s.xxxSmall_4},polygonActionsContainer:{width:"100%"},movementButtonsContainer:{display:"flex",flexDirection:"column",alignItems:"center",minWidth:"fit-content"},spaceUnder:{marginBottom:s.xSmall_8},truncatedWidth:{minWidth:0},addButton:{alignSelf:"start"},labelContainer:{backgroundColor:g.white},horizontalRule:{height:1,backgroundColor:g.offBlack16}});ue.__docgenInfo={description:"",methods:[],displayName:"LockedPolygonSettings",props:{onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},type:{required:!0,tsType:{name:"literal",value:'"polygon"'},description:""},points:{required:!0,tsType:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]}],raw:"Coord[]"},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},showVertices:{required:!0,tsType:{name:"boolean"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},labels:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPolygonType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "polygon";
    points: Coord[];
    color: LockedFigureColor;
    showVertices: boolean;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"polygon"',required:!0}},{key:"points",value:{name:"Array",elements:[{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}],raw:"Coord[]",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"showVertices",value:{name:"boolean",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedPolygonType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};export{ue as L};
