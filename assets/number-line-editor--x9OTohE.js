import{a as n,j as i}from"./jsx-runtime-BGVbfQ2Z.js";import{i as C}from"./util-2H85FoUC.js";import"./article-renderer-IypNbsfe.js";import{_ as v}from"./index-default-4_ZsnO94.js";import"./unit-uxf7imOh.js";import"./dependencies-fnqF3NiV.js";import"./perseus-api-BF68z3pH.js";import"./multi-renderer-Su5KW17I.js";import"./hints-renderer-n6WaJYpu.js";import"./renderer-qN6twphC.js";import"./base-radio-oIB6BXUd.js";import{c as k}from"./components-HqUM7hS5.js";import"./jquery-5v7aFUvu.js";import{P as r}from"./index-tvtfaFq4.js";import"./i18n-context-9-s9cJ--.js";import{E as S}from"./editor-jsonify-q8hSKygW.js";import{r as R}from"./index-qhcEwEpg.js";const{ButtonGroup:N,InfoTip:h,NumberInput:l,PropCheckBox:m,RangeInput:T}=k,q=(b,e,s)=>Math.min(Math.max(b,e),s),x="–",c=class c extends R.Component{constructor(){super(...arguments),this.onRangeChange=e=>{this.props.onChange({range:e})},this.onLabelRangeChange=(e,s)=>{let o=this.props.labelRange.slice();const a=o[1-e];s==null||a==null?o[e]=s:o=[Math.min(s,a),Math.max(s,a)],this.props.onChange({labelRange:o})},this.onDivisionRangeChange=e=>{let s=this.props.numDivisions;s=q(s,e[0],e[1]),this.props.onChange({divisionRange:e,numDivisions:s})},this.onNumChange=(e,s)=>{const o={};o[e]=s,this.props.onChange(o)},this.onNumDivisionsChange=e=>{const s=this.props.divisionRange.slice();e=v.isFinite(e)?Math.round(e):0,e=e<0?e*-1:e,e&&(e=Math.min(s[1],Math.max(s[0],e)),this.props.onChange({tickStep:null,divisionRange:s,numDivisions:e}))},this.onTickStepChange=e=>{this.props.onChange({numDivisions:null,tickStep:e})},this.onChangeRelation=e=>{const s=e.target.value;this.props.onChange({correctRel:s,isInequality:s!=="eq"})},this.onLabelStyleChange=e=>{this.props.onChange({labelStyle:e})},this.serialize=()=>S.serialize.call(this)}render(){const e=this.props.range,s=this.props.labelRange,o=this.props.divisionRange;e[0]=+e[0],e[1]=+e[1];const a=e[1]-e[0],w=this.props.numDivisions,u=this.props.snapDivisions,f=this.props.tickStep,g=this.props.isTickCtrl;let p;g?p=null:p=f?f/u:a/w/u;const y=[{value:"decimal",content:"0.75",title:"Decimals"},{value:"improper",content:"⁷⁄₄",title:"Improper fractions"},{value:"mixed",content:"1¾",title:"Mixed numbers"},{value:"non-reduced",content:"⁸⁄₄",title:"Non-reduced"}];return n("div",{className:"perseus-widget-number-line-editor",children:[n("div",{className:"perseus-widget-row",children:["Correct x"," ",n("select",{value:this.props.correctRel,onChange:this.onChangeRelation,"aria-label":"Select relationship",children:[i("option",{value:"eq","aria-label":"Equal",children:"="}),i("option",{value:"lt","aria-label":"Less than",children:"<"}),i("option",{value:"gt","aria-label":"Greater than",children:">"}),i("option",{value:"le","aria-label":"Less than or equal",children:"≤"}),i("option",{value:"ge","aria-label":"Greater than or equal",children:"≥"})]})," ",i(l,{value:this.props.correctX,format:this.props.labelStyle,onChange:this.onNumChange.bind(this,"correctX"),checkValidity:t=>t>=e[0]&&t<=e[1]&&(!p||C((t-e[0])/p)),placeholder:"answer",size:"normal",useArrowKeys:!0}),i(h,{children:i("p",{children:"This is the correct answer. The answer is validated (as right or wrong) by using only the end position of the point and the relation (=, <, >, ≤, ≥)."})})]}),n("div",{className:"perseus-widget-row",children:[this.props.static?i("label",{children:"Range:"}):n("label",{children:["Position:"," ",i(l,{value:this.props.initialX,format:this.props.labelStyle,onChange:this.onNumChange.bind(this,"initialX"),placeholder:e[0],checkValidity:t=>t>=e[0]&&t<=e[1],useArrowKeys:!0})," ∈ "]}),i(T,{value:e,onChange:this.onRangeChange,format:this.props.labelStyle,useArrowKeys:!0}),n(h,{children:[n("p",{children:["This controls the initial position of the point along the number line and the",i("strong",{children:"range"}),", the position of the endpoints of the number line. Setting the range constrains the position of the answer and the labels."]}),i("p",{children:"In static mode, the initial position of the point is determined by Correct x instead of position."})]})]}),i("div",{className:"perseus-widget-row",children:n("div",{className:"perseus-widget-left-col",children:["Labels:"," ",i(l,{value:s[0],placeholder:e[0],format:this.props.labelStyle,checkValidity:t=>t>=e[0]&&t<=e[1],onChange:this.onLabelRangeChange.bind(this,0),useArrowKeys:!0}),i("span",{children:" & "}),i(l,{value:s[1],placeholder:e[1],format:this.props.labelStyle,checkValidity:t=>t>=e[0]&&t<=e[1],onChange:this.onLabelRangeChange.bind(this,1),useArrowKeys:!0}),i(h,{children:n("p",{children:["This controls the position of the left / right labels. By default, the labels are set by the range ",i("br",{}),i("strong",{children:"Note:"})," Ensure that the labels line up with the tick marks, or it may be confusing for users."]})})]})}),n("div",{className:"perseus-widget-row",children:["Style:"," ",i(N,{allowEmpty:!1,value:this.props.labelStyle,buttons:y,onChange:this.onLabelStyleChange}),i(h,{children:i("p",{children:"This controls the styling of the labels for the two main labels as well as all the tick mark labels, if applicable. Your choices are decimal, improper fractions, mixed fractions, and non-reduced fractions."})})]}),n("div",{className:"perseus-widget-row",children:[!this.props.static&&i("div",{className:"perseus-widget-left-col",children:i(m,{label:"Show tick controller",isTickCtrl:this.props.isTickCtrl,onChange:this.props.onChange})}),i("div",{className:"perseus-widget-right-col",children:i(m,{label:"Show label ticks",labelTicks:this.props.labelTicks,onChange:this.props.onChange})})]}),i("div",{className:"perseus-widget-row",children:!this.props.static&&i(m,{label:"Show tooltips",showTooltips:this.props.showTooltips,onChange:this.props.onChange})}),n("div",{className:"perseus-widget-row",children:[g&&n("span",{children:[n("label",{children:["Start num divisions at"," ",i(l,{value:this.props.numDivisions||null,format:"decimal",onChange:this.onNumDivisionsChange,checkValidity:t=>t>=o[0]&&t<=o[1],placeholder:a/this.props.tickStep,useArrowKeys:!0})]}),i(h,{children:n("p",{children:["This controls the number (and position) of the tick marks. The number of divisions is constrained to"," "+o[0]+x+o[1],".",i("br",{}),i("strong",{children:"Note:"})," The user will be able to specify the number of divisions in a number input."]})})]}),!g&&n("span",{children:[n("label",{children:["Num divisions:"," ",i(l,{value:this.props.numDivisions||null,format:"decimal",onChange:this.onNumDivisionsChange,checkValidity:t=>t>=o[0]&&t<=o[1],placeholder:a/this.props.tickStep,useArrowKeys:!0})]})," ",n("label",{children:["or tick step:"," ",i(l,{value:this.props.tickStep||null,format:this.props.labelStyle,onChange:this.onTickStepChange,checkValidity:t=>t>0&&t<=a,placeholder:a/this.props.numDivisions,useArrowKeys:!0})]}),i(h,{children:n("p",{children:["This controls the number (and position) of the tick marks; you can either set the number of divisions (2 divisions would split the entire range in two halves), or the tick step (the distance between ticks) and the other value will be updated accordingly."," ",i("br",{}),i("strong",{children:"Note:"})," There is no check to see if labels coordinate with the tick marks, which may be confusing for users if the blue labels and black ticks are off-step."]})})]})]}),n("div",{className:"perseus-widget-row",children:[n("label",{children:["Snap increments per tick:"," ",i(l,{value:u,checkValidity:t=>t>0,format:this.props.labelStyle,onChange:this.onNumChange.bind(this,"snapDivisions"),useArrowKeys:!0})]}),i(h,{children:n("p",{children:["This determines the number of different places the point will snap between two adjacent tick marks."," ",i("br",{}),i("strong",{children:"Note:"}),"Ensure the required number of snap increments is provided to answer the question."]})})]})]})}};c.propTypes={range:r.arrayOf(r.number).isRequired,labelRange:r.arrayOf(r.number).isRequired,labelStyle:r.string.isRequired,labelTicks:r.bool,divisionRange:r.arrayOf(r.number).isRequired,numDivisions:r.number.isRequired,snapDivisions:r.number,tickStep:r.number,correctRel:r.oneOf(["lt","gt","le","ge","eq"]),correctX:r.number,initialX:r.number,isTickCtrl:r.bool,onChange:r.func.isRequired,static:r.bool,showTooltips:r.bool},c.widgetName="number-line",c.defaultProps={range:[0,10],labelRange:[null,null],labelStyle:"decimal",labelTicks:!0,divisionRange:[1,12],numDivisions:5,snapDivisions:2,tickStep:null,correctRel:"eq",correctX:null,initialX:null,showTooltips:!1};let d=c;try{d.displayName="NumberLineEditor",d.__docgenInfo={description:"",displayName:"NumberLineEditor",props:{}}}catch{}export{d as N};
