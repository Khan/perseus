import{j as m}from"./iframe-DiqXPJfj.js";import{E as p}from"./editor-page-with-storybook-preview-D6d_iZxA.js";import{c,r as d}from"./register-all-widgets-and-editors-for-testing-NvFzoUwF.js";import"./changeable-D_TtF40x.js";import"./article-renderer-DkhlFpBs.js";import"./server-item-renderer-D_YRAwSw.js";import"./hints-renderer-B6nliYZ9.js";import"./content-preview-V5wcKruB.js";import"./editor-page-BvVUKue9.js";import"./components-D8DHAHSW.js";import"./viewport-resizer-DeMdwrbW.js";import"./image-widget-generator-BkbJOfbU.js";import"./tex-error-view-DOMJAYgx.js";import"./item-extras-editor-Cg5Obl--.js";import"./preview-panel-CnKtuz32.js";import"./editor-jsonify-Cue7L1kc.js";import"./blur-input-GtapLIN-.js";import"./free-response-editor-CpjRbJD4.js";import"./input-number-editor-B5a3cdPa.js";import"./Popper-D3aZAOyU.js";import"./label-image-editor-Y8INsNmf.js";import"./form-wrapped-text-field-B1yM9tjY.js";import"./global-colors-DSS4FaUr.js";import"./answer-choices-BWaqQO_S.js";import"./behavior-Cu0v0EjM.js";import"./question-markers-BLi05kks.js";import"./marker-COQlGgCW.js";import"./select-image-pBZ3nOJf.js";import"./matcher-editor-DqH_n-Nj.js";import"./number-line-editor-DchvBSp_.js";import"./phet-simulation-editor-UYyv8YOr.js";import"./plotter-editor-Nf4VrKES.js";import"./python-program-editor-Fd5QPSNQ.js";import"./sorter-editor-BjNX3zv1.js";const g={content:"The total number of boxes the forklift can carry is [[â˜ƒ dropdown 1]] $60$.",images:{},widgets:{"dropdown 1":{type:"dropdown",alignment:"default",static:!1,graded:!0,options:{static:!1,placeholder:"greater/less than or equal to",choices:[{content:"greater than or equal to",correct:!1},{content:"less than or equal to",correct:!0}]},version:{major:0,minor:0}}}},{action:l}=__STORYBOOK_MODULE_ACTIONS__;d();const H={title:"Widgets/Dropdown/Editor Demo",component:c,tags:["!dev"]},o={args:{onChange:l("onChange")}},t={render:()=>m.jsx(p,{question:g})};var r,e,i;o.parameters={...o.parameters,docs:{...(r=o.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    onChange: action("onChange")
  }
}`,...(i=(e=o.parameters)==null?void 0:e.docs)==null?void 0:i.source}}};var a,s,n;t.parameters={...t.parameters,docs:{...(a=t.parameters)==null?void 0:a.docs,source:{originalSource:`{
  render: (): React.ReactElement => <EditorPageWithStorybookPreview question={question} />
}`,...(n=(s=t.parameters)==null?void 0:s.docs)==null?void 0:n.source}}};const J=["Default","WithinEditorPage"];export{o as Default,t as WithinEditorPage,J as __namedExportsOrder,H as default};
