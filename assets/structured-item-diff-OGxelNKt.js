import{j as d,a as k}from"./jsx-runtime-5BUNAZ9W.js";import"./article-renderer-Eu9TCFjo.js";import{_ as y}from"./index-default-4_ZsnO94.js";import"./util-Kf-UsGkl.js";import"./unit-ti2HXQ4p.js";import"./version-akiLXZts.js";import"./dependencies-9B_Bv_mA.js";import"./perseus-api-cFDIds9P.js";import{c as U,d as W,e as B,s as $}from"./multi-renderer-4xif9Gxw.js";import"./hints-renderer-5MYO6gBp.js";import{g as ie,s as ae}from"./renderer-jXtsf37s.js";import"./base-radio-y4Xo7lPV.js";import"./button-group-KR3umc1e.js";import"./graph-jmTyxyV8.js";import"./svg-image-D5zktulZ.js";import"./hud-CJYktPgf.js";import"./icon-TA3bBVIW.js";import"./info-tip-7k4XWhfR.js";import"./inline-icon-QIU9thzn.js";import"./math-input-b0AfbzvY.js";import"./multi-button-group-AxfQn4Cq.js";import"./number-input-XS-IwU_4.js";import"./prop-check-box-f7I2HerX.js";import"./range-input-XXGnnDKu.js";import"./text-input-Q1V0RBx1.js";import"./text-list-editor-A-LpoxgU.js";import"./jquery-5v7aFUvu.js";import"./i18n-context-3gTlIcWM.js";import{r as N}from"./index-4g5l5LRQ.js";import{T as oe}from"./text-diff-q2ee-Dez.js";import{c as de}from"./components-MWI_x7cO.js";import{P as i}from"./index-tvtfaFq4.js";import{c as A}from"./index-dnMhQZ-1.js";import{T as pe}from"./tags-diff-QfQhfETe.js";const V="unchanged",Y="changed",Z="added",_="removed",le=function(s,e,t){let n;return s===e?n=V:s===void 0?n=Z:e===void 0?n=_:n=Y,{after:JSON.stringify(e),before:JSON.stringify(s),children:[],key:t,status:n}},ce=function(s,e,t){const n=y.isObject(s)?y(s).keys():[],r=y.isObject(e)?y(e).keys():[],o=y.union(n,r),a=y.map(o,function(c){return ee((s||{})[c],(e||{})[c],c)});let p;return s===void 0?p=Z:e===void 0?p=_:p=y.any(a,function(h){return h.status!==V})?Y:V,{after:"",before:"",children:a,key:t,status:p}},ee=function(s,e,t){return typeof s=="object"||typeof e=="object"?ce(s,e,t):le(s,e,t)},{SvgImage:z}=de,te=function(s){return(s-1)*20},C="before",j="after",ue="unchanged",F=class F extends N.Component{render(){const e=A(this.props.className,{"diff-row":!0,before:this.props.side===C,after:this.props.side===j});return d("div",{className:e,children:k("div",{style:{paddingLeft:te(this.props.depth)},children:[this.props.showKey&&this.props.propKey+": ",d("span",{className:"inner-value dark "+this.props.className,children:this.props.value})]})})}};F.propTypes={className:i.string.isRequired,depth:i.number.isRequired,propKey:i.string.isRequired,showKey:i.bool.isRequired,side:i.oneOf([C,j]).isRequired,value:i.string};let S=F;const K=class K extends N.Component{render(){const e=this;return d("div",{onClick:e.props.onClick,style:{clear:"both"},children:y.map([C,j],function(t){return d("div",{className:"diff-row collapsed "+t,children:d("div",{style:{paddingLeft:te(e.props.depth)},children:d("span",{children:" [ show unmodified ] "})})},t)})})}};K.propTypes={depth:i.number,onClick:i.func.isRequired},K.defaultProps={depth:0};let I=K;const R=class R extends N.Component{constructor(){super(...arguments),this.state={expanded:this.props.expanded},this.expand=()=>{this.setState({expanded:!0})}}render(){const e=this.props.entry,t=e.status==="removed",n=e.status==="added",r=e.status==="changed",o=e.children.length>0,a=A({removed:t||r&&!o,dark:t,"blank-space":n}),p=A({added:n||r&&!o,dark:n,"blank-space":t});let c;this.state.expanded?c=e.children:c=y(e.children).select(function(m){return m.status!==ue});let h=c.length<e.children.length;e.children.length===c.length+1&&(c=e.children,h=!1);const w=this;return k("div",{children:[e.key&&k("div",{style:{clear:"both"},children:[d(S,{side:C,className:a,depth:this.props.depth,propKey:e.key,showKey:!n,value:e.before}),d(S,{side:j,className:p,depth:this.props.depth,propKey:e.key,showKey:!t,value:e.after})]}),y.map(c,function(m){return d(R,{depth:w.props.depth+1,entry:m,expanded:w.state.expanded},m.key)}),h&&d(I,{depth:this.props.depth+1,onClick:this.expand})]})}};R.propTypes={depth:i.number,entry:i.shape({after:i.string,before:i.string,children:i.arrayOf(i.any),key:i.string}),expanded:i.bool},R.defaultProps={depth:0};let H=R;const G=class G extends N.Component{render(){const{before:e,after:t}=this.props,n=e.options&&e.options.backgroundImage?e.options.backgroundImage.url:"",r=t.options&&t.options.backgroundImage?t.options.backgroundImage.url:"";return k("div",{children:[d("div",{className:"diff-row before",children:n&&d("div",{className:A({image:!0,"image-unchanged":n===r,"image-removed":n!==r}),children:d(z,{src:n,title:n})})}),d("div",{className:"diff-row after",children:r&&d("div",{className:A({image:!0,"image-unchanged":n===r,"image-added":n!==r}),children:d(z,{src:r,title:r})})})]})}};G.propTypes={after:i.shape({options:i.objectOf(i.any)}).isRequired,before:i.shape({options:i.objectOf(i.any)}).isRequired};let D=G;const L=class L extends N.Component{render(){const{after:e,before:t,title:n,type:r}=this.props,o=ee(t,e);return k("div",{children:[d("div",{className:"diff-header",children:n}),d("div",{className:"diff-header",children:n}),k("div",{className:"diff-body ui-helper-clearfix",children:[r==="image"&&d(D,{before:t,after:e}),d(H,{entry:o})]})]})}};L.propTypes={after:i.shape({options:i.objectOf(i.any)}),before:i.shape({options:i.objectOf(i.any)}),title:i.string.isRequired,type:i.string},L.defaultProps={after:{},before:{},type:""};let E=L;E.__docgenInfo={description:"",methods:[],displayName:"WidgetDiff",props:{after:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"shape",value:{options:{name:"objectOf",value:{name:"any"},required:!1}}},required:!1},before:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"shape",value:{options:{name:"objectOf",value:{name:"any"},required:!1}}},required:!1},type:{defaultValue:{value:'""',computed:!1},description:"",type:{name:"string"},required:!1},title:{description:"",type:{name:"string"},required:!0}}};const Q=function(s,e){const{alignment:t,graded:n,options:r,type:o}=s||{},a={options:r};return e&&ie(o).length>1&&(a.alignment=t),o==="transformer"&&(a.graded=n),ae(o)&&(a.static=(s==null?void 0:s.static)??void 0),a},J=class J extends N.Component{render(){const{after:e,before:t,showAlignmentOptions:n,showSeparator:r,title:o}=this.props;let a,p;(t.content||e.content)&&(a=d(oe,{before:t.content,after:e.content,title:o}));const c=Object.keys(t.widgets??{}).filter(w=>t.content.includes(w)),h=Object.keys(e.widgets??{}).filter(w=>e.content.includes(w));return(c.length||h.length)&&(p=y.union(c,h).map(m=>{var l,f,u,P;return d(E,{before:Q((l=t.widgets)==null?void 0:l[m],n),after:Q((f=e.widgets)==null?void 0:f[m],n),title:m,type:(((u=t.widgets)==null?void 0:u[m])??{}).type||(((P=e.widgets)==null?void 0:P[m])??{}).type},m)})),k("div",{children:[a,p,r&&d("div",{className:"diff-separator"})]})}};J.defaultProps={after:{content:"",images:{},widgets:{}},before:{content:"",images:{},widgets:{}},showAlignmentOptions:!1,showSeparator:!1};let M=J;M.__docgenInfo={description:"",methods:[],displayName:"RendererDiff",props:{after:{required:!1,tsType:{name:"signature",type:"object",raw:`{
    content: string;
    // NOTE: images and widgets may not be set for some items hints,
    // specifically in old revisions, which may only be loaded for diffing.
    widgets: PerseusRenderer["widgets"] | null | undefined;
    images: PerseusRenderer["images"] | null | undefined;
}`,signature:{properties:[{key:"content",value:{name:"string",required:!0}},{key:"widgets",value:{name:"union",raw:'PerseusRenderer["widgets"] | null | undefined',elements:[{name:'PerseusRenderer["widgets"]',raw:'PerseusRenderer["widgets"]'},{name:"null"},{name:"undefined"}],required:!0}},{key:"images",value:{name:"union",raw:'PerseusRenderer["images"] | null | undefined',elements:[{name:'PerseusRenderer["images"]',raw:'PerseusRenderer["images"]'},{name:"null"},{name:"undefined"}],required:!0}}]}},description:"",defaultValue:{value:`{
    content: "",
    images: {},
    widgets: {},
}`,computed:!1}},before:{required:!1,tsType:{name:"signature",type:"object",raw:`{
    content: string;
    // NOTE: images and widgets may not be set for some items hints,
    // specifically in old revisions, which may only be loaded for diffing.
    widgets: PerseusRenderer["widgets"] | null | undefined;
    images: PerseusRenderer["images"] | null | undefined;
}`,signature:{properties:[{key:"content",value:{name:"string",required:!0}},{key:"widgets",value:{name:"union",raw:'PerseusRenderer["widgets"] | null | undefined',elements:[{name:'PerseusRenderer["widgets"]',raw:'PerseusRenderer["widgets"]'},{name:"null"},{name:"undefined"}],required:!0}},{key:"images",value:{name:"union",raw:'PerseusRenderer["images"] | null | undefined',elements:[{name:'PerseusRenderer["images"]',raw:'PerseusRenderer["images"]'},{name:"null"},{name:"undefined"}],required:!0}}]}},description:"",defaultValue:{value:`{
    content: "",
    images: {},
    widgets: {},
}`,computed:!1}},showAlignmentOptions:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},showSeparator:{required:!1,tsType:{name:"boolean"},description:"",defaultValue:{value:"false",computed:!1}},title:{required:!0,tsType:{name:"string"},description:""}}};function X(s,e){let t=!0;for(let n=0;n<e.length;n++){if(n>=s.length)return!1;e[n]!==s[n]&&(t=!1)}return t}function x(s,e){if(s.length!==e.length)return!1;for(let t=0,n=s.length;t<n;t++)if(s[t]!==e[t])return!1;return!0}function me(s){const e=[];for(let t=0;t<s.length;t++)typeof s[t]=="number"?e.push((s[t]+1).toString()+":"):e.push(s[t]);return e.join(" ")}class q extends N.Component{static generateCompletePathsList(e,t,n,r,o){if(r.type==="content"||r.type==="hint"||r.type==="tags"){const a=e.length>0&&x(o,e[0][1]),p=t.length>0&&x(o,t[0][1]);a&&p?(n.push(o),e.splice(0,1),t.splice(0,1)):a?(n.push(o),e.splice(0,1)):p&&(n.push(o),t.splice(0,1))}else if(r.type==="array"){let a=0,p=o.concat(a);for(;e.length>0&&X(e[0][1],p)||t.length>0&&X(t[0][1],p);)q.generateCompletePathsList(e,t,n,r.elementShape,p),a++,p=o.concat(a)}else if(r.type==="object"){const a=Object.keys(r.shape);for(let p=0;p<a.length;p++){const c=o.concat([a[p]]);q.generateCompletePathsList(e,t,n,r.shape[a[p]],c)}}}render(){const{before:e,after:t,shape:n,tags:r}=this.props,o=[],a=[];U().setContentMapper((l,f,u)=>o.push([l,u])).setHintMapper((l,f,u)=>o.push([l,u])).setTagsMapper((l,f,u)=>o.push([l,u])).mapTree(W(e),n),U().setContentMapper((l,f,u)=>a.push([l,u])).setHintMapper((l,f,u)=>a.push([l,u])).setTagsMapper((l,f,u)=>a.push([l,u])).mapTree(W(t),n);const p=o.slice(),c=a.slice(),h=[];q.generateCompletePathsList(p,c,h,n,[]);const w=h.length,m=h.map((l,f)=>{const u=l[l.length-1]==="tags",P=me(l);let v=o.find(b=>x(b[1],l)),T=a.find(b=>x(b[1],l));if(u){v||(v=[[],l]),T||(T=[[],l]);const b=[];Array.isArray(v[0])&&v[0].forEach(g=>{typeof g=="string"&&b.push(r.idToName(g))});const O=[];Array.isArray(T[0])&&T[0].forEach(g=>{typeof g=="string"&&O.push(r.idToName(g))});const ne=b.filter(g=>O.includes(g)),se=b.filter(g=>!O.includes(g)),re=O.filter(g=>!b.includes(g));return d(pe,{beforeOnly:se,afterOnly:re,intersection:ne,title:P,showSeparator:f<w-1},f)}return v||(v=[B($.content),l]),T||(T=[B($.content),l]),d(M,{before:v[0],after:T[0],title:P,showAlignmentOptions:!1,showSeparator:f<w-1},f)});return d("div",{className:"framework-perseus",children:m})}}q.__docgenInfo={description:"",methods:[{name:"generateCompletePathsList",docblock:`Traverses the given shape and adds paths that are present in
beforeList and afterList to result. Note that this method assumes
the order of elements in beforeList and afterList, which are
from buildMapper(), is the same order they appear in in the shape.`,modifiers:["static"],params:[{name:"beforeList",optional:!1,type:{name:"Array",elements:[{name:"tuple",raw:"[unknown, Path]",elements:[{name:"unknown"},{name:"Path"}]}],raw:"Array<ItemList>",alias:"Array"}},{name:"afterList",optional:!1,type:{name:"Array",elements:[{name:"tuple",raw:"[unknown, Path]",elements:[{name:"unknown"},{name:"Path"}]}],raw:"Array<ItemList>",alias:"Array"}},{name:"result",optional:!1,type:{name:"Array",elements:[{name:"Path"}],raw:"Array<Path>",alias:"Array"}},{name:"shape",optional:!1,type:{name:"Shape",alias:"Shape"}},{name:"path",optional:!1,type:{name:"ReadonlyArray",elements:[{name:"any"}],raw:"ReadonlyArray<any>",alias:"ReadonlyArray"}}],returns:{type:{name:"void"}},description:`Traverses the given shape and adds paths that are present in
beforeList and afterList to result. Note that this method assumes
the order of elements in beforeList and afterList, which are
from buildMapper(), is the same order they appear in in the shape.`}],displayName:"StructuredItemDiff",props:{after:{required:!0,tsType:{name:"Item"},description:""},before:{required:!0,tsType:{name:"Item"},description:""},shape:{required:!0,tsType:{name:"Shape"},description:""},tags:{required:!0,tsType:{name:"signature",type:"object",raw:`{
    idToName: (arg1: string) => string;
    nameToId: (arg1: string) => string;
    names: ReadonlyArray<string>;
}`,signature:{properties:[{key:"idToName",value:{name:"signature",type:"function",raw:"(arg1: string) => string",signature:{arguments:[{type:{name:"string"},name:"arg1"}],return:{name:"string"}},required:!0}},{key:"nameToId",value:{name:"signature",type:"function",raw:"(arg1: string) => string",signature:{arguments:[{type:{name:"string"},name:"arg1"}],return:{name:"string"}},required:!0}},{key:"names",value:{name:"ReadonlyArray",elements:[{name:"string"}],raw:"ReadonlyArray<string>",required:!0}}]}},description:""}}};export{M as R,q as S,E as W};
