import{j as o,a as s,F as D}from"./jsx-runtime-FVsy8kgq.js";import{l as L,h as _}from"./article-renderer-qRbPWDlp.js";import"./jquery-yG1GhClm.js";import"./util-XcxTwqb0.js";import"./phet-simulation-fZpYIOCA.js";import"./version-akiLXZts.js";import"./dependencies-8XILypbq.js";import"./perseus-api-mOiZT07d.js";import"./multi-renderer-O-cudKc-.js";import"./hints-renderer-BWZXeNwe.js";import"./renderer-c9SukZ77.js";import"./base-radio-jZr-Cted.js";import"./button-group-nsoLlHtM.js";import"./graph-Y0iFaKoK.js";import"./svg-image-VUqtnnD6.js";import"./hud-FI3E3dT_.js";import"./icon-YuYiVxsK.js";import"./index-K9BSJPWl.js";import"./inline-icon-tKY1iMkH.js";import"./math-input-b6JdL4xR.js";import"./multi-button-group-a0iIfrwx.js";import"./number-input-dpusjjfa.js";import"./range-input-R0Q6JH86.js";import"./text-input-15gEhfDF.js";import"./text-list-editor-pe7AGDAl.js";import"./index-0C4KXdeC.js";import"./i18n-context-hxuRe8oU.js";import"./index-IIMKO4_x.js";import{B as P}from"./choice-E4eyMygy.js";import{V as d}from"./index-6h5t6F0w.js";import{S as O,O as E}from"./answer-choices-LxX0lGJ7.js";import{P as x,C as N,I as y,L as X,a as G}from"./locked-label-settings-9pa4TBNp.js";import{S as h,a as H}from"./index-qUyqkRvh.js";import{c as f,s as c}from"./index-deFLJwr4.js";import{L as C,a as T}from"./index-h_CiYGGb.js";import{p as F}from"./plus-circle-JCxQSzSv.js";import{l as B}from"./index-awljIyHI.js";import{C as J}from"./color-select-JTpvRQnc.js";import{L as K}from"./labeled-switch-t4MMn2oa.js";import{L as Q}from"./line-stroke-select-pTQiZN8p.js";import{g as Y}from"./util-_lGj1EH0.js";const Z=""+new URL("arrow-fat-down-X5ut-FGw.svg",import.meta.url).href,ee=""+new URL("arrow-fat-left-LxuHjYfJ.svg",import.meta.url).href,oe=""+new URL("arrow-fat-right-CxkbbISx.svg",import.meta.url).href,te=""+new URL("arrow-fat-up-ah2eaaIR.svg",import.meta.url).href,ne=""+new URL("minus-circle-9EKbQa8X.svg",import.meta.url).href,R=p=>{const{color:m,fillStyle:a,strokeStyle:u}=p;return o(d,{"aria-label":`${m}, stroke ${u}, fill ${a}`,style:[I.container,{border:`4px ${u} ${L[m]}`}],children:o(d,{style:[I.innerSquare,{backgroundColor:L[m],opacity:a==="white"?0:_[a]}]})})},I=B.StyleSheet.create({container:{outline:`2px solid ${f.offWhite}`,width:c.large_24,height:c.large_24,backgroundColor:f.white,alignItems:"center",justifyContent:"center"},innerSquare:{width:20,height:20}});R.__docgenInfo={description:"",methods:[],displayName:"PolygonSwatch",props:{color:{required:!0,tsType:{name:"LockedFigureColor"},description:""},fillStyle:{required:!0,tsType:{name:"LockedFigureFillType"},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const q=p=>{var b;const{flags:m,points:a,color:u,showVertices:z,fillStyle:k,strokeStyle:S,labels:t,expanded:A,onToggle:$,onChangeProps:l,onMove:U,onRemove:M}=p;function V(n){const e={color:n};e.labels=t==null?void 0:t.map(i=>({...i,color:n})),l(e)}function w(n){switch(n){case"up":l({points:a.map(([e,i])=>[e,i+1]),labels:t==null?void 0:t.map(e=>({...e,coord:[e.coord[0],e.coord[1]+1]}))});break;case"down":l({points:a.map(([e,i])=>[e,i-1]),labels:t==null?void 0:t.map(e=>({...e,coord:[e.coord[0],e.coord[1]-1]}))});break;case"left":l({points:a.map(([e,i])=>[e-1,i]),labels:t==null?void 0:t.map(e=>({...e,coord:[e.coord[0]-1,e.coord[1]]}))});break;case"right":l({points:a.map(([e,i])=>[e+1,i]),labels:t==null?void 0:t.map(e=>({...e,coord:[e.coord[0]+1,e.coord[1]]}))});break}}function j(n,e){if(!t)return;const i=[...t];i[e]={...t[e],...n},l({labels:i})}function W(n){if(!t)return;const e=t.filter((i,g)=>g!==n);l({labels:e})}return s(x,{expanded:A,onToggle:$,header:s(d,{style:r.row,children:[o(C,{children:`Polygon, ${a.length} sides`}),o(h,{size:c.xSmall_8}),o(R,{color:u,fillStyle:k,strokeStyle:S})]}),children:[s(d,{style:[r.row,r.spaceUnder],children:[o(J,{selectedValue:u,onChange:V}),o(h,{size:c.medium_16}),s(T,{tag:"label",style:[r.row,r.truncatedWidth],children:["fill",o(h,{size:c.xxSmall_6}),o(O,{selectedValue:k,onChange:n=>l({fillStyle:n}),placeholder:"",children:Object.keys(_).map(n=>o(E,{value:n,label:n},n))})]})]}),o(Q,{selectedValue:S,onChange:n=>l({strokeStyle:n})}),o(K,{label:"show vertices",checked:z,onChange:n=>l({showVertices:n}),style:r.spaceUnder}),s(x,{header:o(C,{children:"Points"}),expanded:!0,containerStyle:r.pointAccordionContainer,panelStyle:r.pointAccordionPanel,children:[a.map((n,e)=>{const i=String.fromCharCode(65+e);return s(d,{style:[r.row,r.spaceUnder],children:[o(C,{children:`${i}:`}),o(h,{size:c.medium_16}),o(N,{coord:n,labels:["x","y"],onChange:g=>{const v=[...a];v[e]=g,p.onChangeProps({points:v})}}),a.length>3&&o(y,{"aria-label":`Delete polygon point ${i}`,icon:ne,color:"destructive",onClick:()=>{const g=[...a];g.splice(e,1),p.onChangeProps({points:g})},style:r.icon})]},`locked-polygon-point-index-${e}`)}),s(d,{style:[r.row,r.polygonActionsContainer],children:[o(P,{kind:"tertiary",startIcon:F,onClick:()=>{p.onChangeProps({points:[...a,[0,0]]})},children:"Add point"}),o(H,{}),s(d,{style:r.movementButtonsContainer,children:[o(y,{"aria-label":"Move polygon up",style:r.iconButton,size:"small",icon:te,onClick:()=>w("up")}),s(d,{style:r.row,children:[o(y,{"aria-label":"Move polygon left",style:r.iconButton,size:"small",icon:ee,onClick:()=>w("left")}),o(y,{"aria-label":"Move polygon down",style:r.iconButton,size:"small",icon:Z,onClick:()=>w("down")}),o(y,{"aria-label":"Move polygon right",style:r.iconButton,size:"small",icon:oe,onClick:()=>w("right")})]})]})]})]}),((b=m==null?void 0:m.mafs)==null?void 0:b["locked-polygon-labels"])&&s(D,{children:[o(h,{size:c.small_12}),o(d,{style:r.horizontalRule}),o(h,{size:c.small_12}),o(T,{children:"Visible labels"}),t==null?void 0:t.map((n,e)=>o(X,{...n,expanded:!0,onChangeProps:i=>{j(i,e)},onRemove:()=>{W(e)},containerStyle:r.labelContainer})),o(P,{kind:"tertiary",startIcon:F,onClick:()=>{const n={...Y("label"),coord:[a[0][0],a[0][1]-((t==null?void 0:t.length)??0)],color:u};l({labels:[...t??[],n]})},style:r.addButton,children:"Add visible label"})]}),o(G,{figureType:p.type,onMove:U,onRemove:M})]})},r=B.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},pointAccordionContainer:{backgroundColor:f.white},pointAccordionPanel:{alignItems:"start"},icon:{marginInlineStart:c.xxxSmall_4},polygonActionsContainer:{width:"100%"},iconButton:{margin:0},movementButtonsContainer:{display:"flex",flexDirection:"column",alignItems:"center",minWidth:"fit-content"},spaceUnder:{marginBottom:c.xSmall_8},truncatedWidth:{minWidth:0},addButton:{alignSelf:"start"},labelContainer:{backgroundColor:f.white},horizontalRule:{height:1,backgroundColor:f.offBlack16}}),Ne=q;q.__docgenInfo={description:"",methods:[],displayName:"LockedPolygonSettings",props:{flags:{required:!1,tsType:{name:'APIOptions["flags"]',raw:'APIOptions["flags"]'},description:""},showLabelsFlag:{required:!1,tsType:{name:"boolean"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPolygonType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedPolygonType"}],raw:"Partial<LockedPolygonType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};export{Ne as L};
