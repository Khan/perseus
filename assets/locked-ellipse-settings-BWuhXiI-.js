import{r as F,c0 as _,j as e,aF as S,n as C,y as d,s as i,V as c,cI as j,cN as z,e as w,bB as V,z as X,L as Y}from"./iframe-ClpJ2tSX.js";import"./item-version-CQubXDjk.js";import"./article-renderer-swXFKa55.js";import"./server-item-renderer-DLm0hFtk.js";import"./hints-renderer-m5to_iUG.js";import{c as G}from"./components-BTpdromP.js";import{C as H,S as J,O as K}from"./color-select-C92XDuV1.js";import{p as Q}from"./plus-circle-DsgEZe2H.js";import{S as Z}from"./scrollless-number-text-field-B4A8hgv0.js";import{C as q,L as ee,a as ne}from"./locked-label-settings-CxVe76wq.js";import{P as re}from"./trash-bold-CF2loVbk.js";import{L as ae}from"./line-stroke-select-Dgim2eOA.js";import{L as te}from"./line-weight-select-PhK6FtRb.js";import{L as le}from"./locked-figure-aria-Cw_mXcqZ.js";import{g as ie,j as oe,a as f,b as se}from"./util-CjYOiRFR.js";const{convertDegreesToRadians:ue,convertRadiansToDegrees:de}=_,P=p=>{const{angle:r,onChange:t}=p,[m,k]=F.useState(de(r).toString());function o(g){k(g),!(isNaN(+g)||g==="")&&t(ue(g))}return e.jsxs(S,{tag:"label",style:T.row,children:["angle (degrees)",e.jsx(d,{size:i.xxSmall_6}),e.jsx(Z,{value:m,onChange:o,style:T.textField}),e.jsx(d,{size:i.xxSmall_6})]})},T=C.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},textField:{width:i.xxxLarge_64}});P.__docgenInfo={description:"",methods:[],displayName:"AngleInput",props:{angle:{required:!0,tsType:{name:"number"},description:""},onChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(angle: number) => void",signature:{arguments:[{type:{name:"number"},name:"angle"}],return:{name:"void"}}},description:""}}};const R=p=>{const{color:r,fillStyle:t,strokeStyle:m}=p;return e.jsx(c,{"aria-label":`${r}, stroke ${m}, fill ${t}`,style:[$.container,{border:`4px ${m} ${j[r]}`}],children:e.jsx(c,{style:[$.innerCircle,{backgroundColor:j[r],opacity:t==="white"?0:z[t]}]})})},$=C.StyleSheet.create({container:{outline:`2px solid ${w.offWhite}`,borderRadius:"50%",width:i.xLarge_32,height:i.large_24,backgroundColor:w.white,alignItems:"center",justifyContent:"center"},innerCircle:{width:28,height:20,borderRadius:"50%"}});R.__docgenInfo={description:"",methods:[],displayName:"EllipseSwatch",props:{color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""}}};const{convertRadiansToDegrees:me}=_,{InfoTip:ce}=G,pe=p=>{const{center:r,radius:t,angle:m,color:k,labels:o,ariaLabel:g,fillStyle:v,strokeStyle:x,weight:L,expanded:A,onToggle:I,onChangeProps:s,onMove:E,onRemove:N}=p;async function D(){const n=await oe(o),a=await f(`$${r[0]}$`),u=await f(`$${r[1]}$`),y=await f(`$${me(m)}$`),h=t[0]===t[1];let b="";h?b+=`Circle${n} with radius ${t[0]}`:b+=`Ellipse${n} with x radius ${t[0]} and y radius ${t[1]}`,b+=`, centered at ${a} comma ${u}`,!h&&m!==0&&(b+=`, rotated by ${y} degrees`);const U=se(k,x,v,L);return b+=U,b}function B(n){const a=n[0]-r[0],u=n[1]-r[1],y={center:n};y.labels=o.map(h=>({...h,coord:[h.coord[0]+a,h.coord[1]+u]})),s(y)}function W(n){const a={color:n};a.labels=o.map(u=>({...u,color:n})),s(a)}function M(n,a){const u=[...o];u[a]={...o[a],...n},s({labels:u})}function O(n){const a=o.filter((u,y)=>y!==n);s({labels:a})}return e.jsxs(re,{expanded:A,onToggle:I,header:e.jsxs(c,{style:l.row,children:[e.jsx(Y,{children:`Ellipse (${r[0]}, ${r[1]}), radius ${t[0]}, ${t[1]}`}),e.jsx(d,{size:i.xSmall_8}),e.jsx(R,{color:p.color,fillStyle:v,strokeStyle:x})]}),children:[e.jsxs(c,{style:l.row,children:[e.jsx(q,{coord:r,style:l.spaceUnder,onChange:B}),e.jsx(c,{style:l.spaceUnder,children:e.jsx(ce,{children:"The coordinates for the center of the ellipse."})})]}),e.jsx(q,{coord:t,labels:["x radius","y radius"],style:l.spaceUnder,onChange:n=>s({radius:n})}),e.jsx(P,{angle:m,onChange:n=>s({angle:n})}),e.jsx(d,{size:i.xSmall_8}),e.jsxs(c,{style:[l.row,l.spaceUnder],children:[e.jsx(H,{selectedValue:k,onChange:W}),e.jsx(d,{size:i.medium_16}),e.jsxs(S,{tag:"label",style:[l.row,l.truncatedWidth],children:["fill",e.jsx(d,{size:i.xxSmall_6}),e.jsx(J,{selectedValue:v,onChange:n=>s({fillStyle:n}),placeholder:"",children:Object.keys(z).map(n=>e.jsx(K,{value:n,label:n},n))})]})]}),e.jsx(ae,{selectedValue:x,onChange:n=>s({strokeStyle:n}),containerStyle:{marginBottom:V.size_080}}),e.jsx(te,{selectedValue:L,onChange:n=>s({weight:n})}),e.jsx(d,{size:i.small_12}),e.jsx(c,{style:l.horizontalRule}),e.jsx(le,{ariaLabel:g,getPrepopulatedAriaLabel:D,onChangeProps:n=>{s(n)}}),e.jsx(d,{size:i.xxxSmall_4}),e.jsx(c,{style:l.horizontalRule}),e.jsx(d,{size:i.small_12}),e.jsx(S,{children:"Visible labels"}),o.map((n,a)=>F.createElement(ee,{...n,key:a,expanded:!0,onChangeProps:u=>{M(u,a)},onRemove:()=>{O(a)},containerStyle:l.labelContainer})),e.jsx(X,{kind:"tertiary",startIcon:Q,onClick:()=>{const n={...ie("label"),coord:[r[0],r[1]-o.length],color:k};s({labels:[...o,n]})},style:l.addButton,children:"Add visible label"}),e.jsx(ne,{figureType:p.type,onMove:E,onRemove:N})]})},l=C.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:i.xSmall_8},truncatedWidth:{minWidth:0},addButton:{alignSelf:"start"},labelContainer:{backgroundColor:w.white},horizontalRule:{height:1,backgroundColor:w.offBlack16}});pe.__docgenInfo={description:"",methods:[],displayName:"LockedEllipseSettings",props:{onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},type:{required:!0,tsType:{name:"literal",value:'"ellipse"'},description:""},center:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},radius:{required:!0,tsType:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}]},description:""},angle:{required:!0,tsType:{name:"number"},description:""},color:{required:!0,tsType:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]"},description:""},fillStyle:{required:!0,tsType:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}]},description:""},strokeStyle:{required:!0,tsType:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}]},description:""},weight:{required:!0,tsType:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}]},description:""},labels:{required:!0,tsType:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]"},description:""},ariaLabel:{required:!1,tsType:{name:"string"},description:""},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedEllipseType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"signature",type:"object",raw:`{
    type: "ellipse";
    center: Coord;
    radius: [x: number, y: number];
    angle: number;
    color: LockedFigureColor;
    fillStyle: LockedFigureFillType;
    strokeStyle: LockedLineStyle;
    weight: StrokeWeight;
    labels: LockedLabelType[];
    ariaLabel?: string;
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"ellipse"',required:!0}},{key:"center",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"radius",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"angle",value:{name:"number",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"fillStyle",value:{name:"union",raw:'"none" | "white" | "translucent" | "solid"',elements:[{name:"literal",value:'"none"'},{name:"literal",value:'"white"'},{name:"literal",value:'"translucent"'},{name:"literal",value:'"solid"'}],required:!0}},{key:"strokeStyle",value:{name:"union",raw:'"solid" | "dashed"',elements:[{name:"literal",value:'"solid"'},{name:"literal",value:'"dashed"'}],required:!0}},{key:"weight",value:{name:"union",raw:'"thin" | "medium" | "thick"',elements:[{name:"literal",value:'"thin"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"thick"'}],required:!0}},{key:"labels",value:{name:"Array",elements:[{name:"signature",type:"object",raw:`{
    type: "label";
    coord: Coord;
    // TeX-supported string
    text: string;
    color: LockedFigureColor;
    size: "small" | "medium" | "large";
}`,signature:{properties:[{key:"type",value:{name:"literal",value:'"label"',required:!0}},{key:"coord",value:{name:"tuple",raw:"[x: number, y: number]",elements:[{name:"unknown"},{name:"unknown"}],required:!0}},{key:"text",value:{name:"string",required:!0}},{key:"color",value:{name:"unknown[number]",raw:"(typeof lockedFigureColorNames)[number]",required:!0}},{key:"size",value:{name:"union",raw:'"small" | "medium" | "large"',elements:[{name:"literal",value:'"small"'},{name:"literal",value:'"medium"'},{name:"literal",value:'"large"'}],required:!0}}]}}],raw:"LockedLabelType[]",required:!0}},{key:"ariaLabel",value:{name:"string",required:!1}}]}}],raw:"Partial<LockedEllipseType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."}}};export{pe as L};
