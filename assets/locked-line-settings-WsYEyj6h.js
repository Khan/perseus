import{a,j as e,F as D}from"./jsx-runtime-5BUNAZ9W.js";import"./util-KY8kJaBW.js";import"./jquery-yG1GhClm.js";import{e as B}from"./svg-image-UfCByHtE.js";import{V as C}from"./index-e4P84RkC.js";import{S as q,O as h}from"./answer-choices-99eGZVAv.js";import{S as y}from"./index-wjVcXLkf.js";import{s as o,c as F}from"./index-lUErx3pE.js";import{L as I,a as S}from"./index-QR_wlop5.js";import{l as V}from"./index-awljIyHI.js";import{P as z,C as j,L as A}from"./locked-figure-settings-actions-YLvABO1y.js";import{C as M}from"./color-select-v5AwKqWD.js";import{C as E}from"./color-swatch-TI09xICT.js";import{L as $}from"./labeled-switch-Zty3momP.js";import{L as R}from"./line-swatch-7dz03e1W.js";const T=d=>{const{coord:i,color:c,filled:u=!0,label:f,showPoint:p="false",error:P,onChangeProps:t,onTogglePoint:w,expanded:x,onToggle:l}=d;function s(m){t({color:m})}return a(z,{expanded:x,onToggle:l,containerStyle:g.container,panelStyle:g.accordionPanel,header:a(C,{style:g.row,children:[e(I,{children:`${f||"Point"} (${i[0]}, ${i[1]})`}),e(y,{size:o.xSmall_8}),p&&e(E,{color:c,filled:u})]}),children:[e(j,{coord:i,error:!!P,style:g.spaceUnder,onChange:m=>{t({coord:m})}}),w&&e($,{label:"show point on graph",checked:!!p,style:p&&g.spaceUnder,onChange:w}),p&&a(D,{children:[e(M,{selectedValue:c,onChange:s,style:g.spaceUnder}),e($,{label:"open point",checked:!u,onChange:m=>{t({filled:!m})}})]})]})},g=V.StyleSheet.create({container:{marginTop:o.xSmall_8,marginBottom:0,marginLeft:-o.xxxSmall_4,marginRight:-o.xxxSmall_4,backgroundColor:F.white},accordionPanel:{paddingBottom:o.medium_16},row:{flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:o.xSmall_8}});T.__docgenInfo={description:"",methods:[],displayName:"DefiningPointSettings",props:{label:{required:!0,tsType:{name:"string"},description:`Optional label for the point to display in the header summary.
Defaults to "Point".`},showPoint:{required:!1,tsType:{name:"boolean"},description:"Whether the extra point settings are toggled open."},error:{required:!1,tsType:{name:"union",raw:"string | null",elements:[{name:"string"},{name:"null"}]},description:"Optional error message to display."},onTogglePoint:{required:!1,tsType:{name:"signature",type:"function",raw:"(newValue) => void",signature:{arguments:[{name:"newValue"}],return:{name:"void"}}},description:"Called when the extra settings toggle switch is changed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedPointType>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedPointType"}],raw:"Partial<LockedPointType>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (coords, color, etc.) are updated."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."}}};const v="The line cannot have length 0.",U=d=>{const{kind:i,points:c,color:u,lineStyle:f="solid",showPoint1:p,showPoint2:P,onChangeProps:t,onMove:w,onRemove:x}=d,[l,s]=c,O=`${i.charAt(0).toUpperCase()+i.slice(1)} (${l.coord[0]},
        ${l.coord[1]}), (${s.coord[0]}, ${s.coord[1]})`,b=B(l.coord,s.coord);function L(n,k){const _=[...c];_[k]={...c[k],...n},t({points:_})}function W(n){t({color:n,points:[{...l,color:n},{...s,color:n}]})}return a(z,{expanded:d.expanded,onToggle:d.onToggle,header:a(C,{style:r.row,children:[e(I,{children:O}),e(y,{size:o.xSmall_8}),e(R,{color:u,lineStyle:f})]}),children:[a(S,{tag:"label",style:[r.row,r.spaceUnder],children:["kind",e(y,{size:o.xxxSmall_4}),a(q,{selectedValue:i,onChange:n=>t({kind:n}),placeholder:"",children:[e(h,{value:"line",label:"line"}),e(h,{value:"ray",label:"ray"}),e(h,{value:"segment",label:"segment"})]})]}),a(C,{style:r.row,children:[e(M,{selectedValue:u,onChange:W}),e(y,{size:o.small_12}),a(S,{tag:"label",style:[r.row,r.truncatedWidth],children:["style",e(y,{size:o.xxxSmall_4}),a(q,{selectedValue:f,onChange:n=>t({lineStyle:n}),placeholder:"",style:r.selectMarginOffset,children:[e(h,{value:"solid",label:"solid"}),e(h,{value:"dashed",label:"dashed"})]})]})]}),b&&e(S,{style:r.errorText,children:v}),e(T,{label:"Point 1",showPoint:p,error:b?v:null,...l,onTogglePoint:n=>t({showPoint1:n}),onChangeProps:n=>L(n,0)}),e(T,{label:"Point 2",showPoint:P,error:b?v:null,...s,onTogglePoint:n=>t({showPoint2:n}),onChangeProps:n=>L(n,1)}),e(A,{figureType:d.type,onMove:w,onRemove:x})]})},r=V.StyleSheet.create({row:{display:"flex",flexDirection:"row",alignItems:"center"},spaceUnder:{marginBottom:o.xSmall_8},selectMarginOffset:{marginInlineEnd:-o.xxxSmall_4},errorText:{color:F.red},truncatedWidth:{minWidth:0}}),ie=U;U.__docgenInfo={description:"",methods:[],displayName:"LockedLineSettings",props:{showM2bFeatures:{required:!1,tsType:{name:"boolean"},description:""},onMove:{required:!0,tsType:{name:"signature",type:"function",raw:"(movement: LockedFigureSettingsMovementType) => void",signature:{arguments:[{type:{name:"union",raw:`| "back"
| "backward"
| "forward"
| "front"`,elements:[{name:"literal",value:'"back"'},{name:"literal",value:'"backward"'},{name:"literal",value:'"forward"'},{name:"literal",value:'"front"'}]},name:"movement"}],return:{name:"void"}}},description:"Called when a movement button (top, up, down, bottom) is pressed."},onRemove:{required:!0,tsType:{name:"signature",type:"function",raw:"() => void",signature:{arguments:[],return:{name:"void"}}},description:"Called when the delete button is pressed."},expanded:{required:!1,tsType:{name:"boolean"},description:"Whether this accordion is expanded."},onToggle:{required:!1,tsType:{name:"signature",type:"function",raw:"(expanded: boolean) => void",signature:{arguments:[{type:{name:"boolean"},name:"expanded"}],return:{name:"void"}}},description:"Called when the accordion is expanded or collapsed."},onChangeProps:{required:!0,tsType:{name:"signature",type:"function",raw:"(newProps: Partial<LockedFigure>) => void",signature:{arguments:[{type:{name:"Partial",elements:[{name:"LockedFigure"}],raw:"Partial<LockedFigure>"},name:"newProps"}],return:{name:"void"}}},description:"Called when the props (points, color, etc.) are updated."}}};export{ie as L};
