"use strict";(self.webpackChunkperseus=self.webpackChunkperseus||[]).push([[3988],{"./packages/perseus-editor/src/diffs/__stories__/structured-item-diff.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ContentAdded:()=>ContentAdded,ContentAddedRemovedAndChanged:()=>ContentAddedRemovedAndChanged,ContentRemoved:()=>ContentRemoved,MiscContentChanges:()=>MiscContentChanges,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js"),_structured_item_diff__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./packages/perseus-editor/src/diffs/structured-item-diff.tsx"),_perseus_diff_wrapper__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./packages/perseus-editor/src/diffs/__stories__/perseus-diff-wrapper.tsx");__webpack_require__.e(4874).then(__webpack_require__.bind(__webpack_require__,"./packages/perseus-editor/src/styles/perseus-editor.less"));const __WEBPACK_DEFAULT_EXPORT__={title:"Perseus/Editor/Diffs/Structured Item Diff",decorators:[StoryComponent=>react__WEBPACK_IMPORTED_MODULE_0__.createElement(_perseus_diff_wrapper__WEBPACK_IMPORTED_MODULE_2__.Z,null,react__WEBPACK_IMPORTED_MODULE_0__.createElement(StoryComponent,null))]},tags={a:"a tag",b:"b tag",c:"c tag"},ContentAdded=args=>{const props={before:{_multi:{directions:{__type:"content",content:"",images:{},widgets:{}},passage:{type:"content",content:"",images:{},widgets:{}},overview:{type:"content",content:"",images:{},widgets:{}},hints:[],questions:[]}},after:{_multi:{directions:{type:"content",content:"directions",images:{},widgets:{}},passage:{type:"content",content:"passage",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},hints:[{type:"hint",content:"hint 1",images:{},widgets:{}}],questions:[{hints:[{type:"hint",content:"question hint 1",images:{},widgets:{}}],keepInMind:{type:"content",content:"keep in mind",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},question:{type:"content",content:"question",images:{},widgets:{}},tags:["a","b"]}]}},shape:{type:"object",shape:{directions:{type:"content"},overview:{type:"content"},passage:{type:"content"},hints:{type:"array",elementShape:{type:"hint"}},questions:{type:"array",elementShape:{type:"object",shape:{tags:{type:"tags"},question:{type:"content"},overview:{type:"content"},keepInMind:{type:"content"},hints:{type:"array",elementShape:{type:"hint"}}}}}}},tags:{idToName:id=>tags[id],nameToId:name=>name[0],names:["a tag","b tag","c tag"]}};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_structured_item_diff__WEBPACK_IMPORTED_MODULE_1__.Z,props)},ContentAddedRemovedAndChanged=args=>{const props={before:{_multi:{directions:{__type:"content",content:"directions",images:{},widgets:{}},passage:{type:"content",content:"passage",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},hints:[{type:"hint",content:"hint 1",images:{},widgets:{}},{type:"hint",content:"hint 2",images:{},widgets:{}}],questions:[{hints:[{type:"hint",content:"question hint 1",images:{},widgets:{}}],keepInMind:{type:"content",content:"keep in mind",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},question:{type:"content",content:"question",images:{},widgets:{}},tags:["a","b"]}]}},after:{_multi:{directions:{type:"content",content:"directions",images:{},widgets:{}},passage:{type:"content",content:"passage",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},hints:[{type:"hint",content:"hint 1",images:{},widgets:{}}],questions:[{hints:[],keepInMind:{type:"content",content:"keep in mind",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},question:{type:"content",content:"question edited",images:{},widgets:{}},tags:["a","c"]},{hints:[{type:"hint",content:"question hint 1",images:{},widgets:{}}],keepInMind:{type:"content",content:"keep in mind",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},question:{type:"content",content:"question",images:{},widgets:{}},tags:["a","b"]}]}},shape:{type:"object",shape:{directions:{type:"content"},overview:{type:"content"},passage:{type:"content"},hints:{type:"array",elementShape:{type:"hint"}},questions:{type:"array",elementShape:{type:"object",shape:{tags:{type:"tags"},question:{type:"content"},overview:{type:"content"},keepInMind:{type:"content"},hints:{type:"array",elementShape:{type:"hint"}}}}}}},tags:{idToName:id=>tags[id],nameToId:name=>name[0],names:["a tag","b tag","c tag"]}};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_structured_item_diff__WEBPACK_IMPORTED_MODULE_1__.Z,props)},MiscContentChanges=args=>{const props={before:{_multi:{directions:{__type:"content",content:"directions",images:{},widgets:{}},passage:{type:"content",content:"passage",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},hints:[{type:"hint",content:"hint 1",images:{},widgets:{}},{type:"hint",content:"hint 2",images:{},widgets:{}},{type:"hint",content:"hint 3",images:{},widgets:{}}],questions:[{hints:[{type:"hint",content:"question hint 1",images:{},widgets:{}},{type:"hint",content:"question hint 2",images:{},widgets:{}},{type:"hint",content:"question hint 3",images:{},widgets:{}}],keepInMind:{type:"content",content:"keep in mind",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},question:{type:"content",content:"question edited",images:{},widgets:{}},tags:["a","c"]},{hints:[{type:"hint",content:"question hint 1",images:{},widgets:{}}],keepInMind:{type:"content",content:"keep in mind",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},question:{type:"content",content:"question",images:{},widgets:{}},tags:["a","b"]},{hints:[{type:"hint",content:"question hint 1",images:{},widgets:{}}],keepInMind:{type:"content",content:"keep in mind",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},question:{type:"content",content:"question",images:{},widgets:{}},tags:["a","b"]}]}},after:{_multi:{directions:{__type:"content",content:"directions",images:{},widgets:{}},passage:{type:"content",content:"passage",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},hints:[{type:"hint",content:"hint 1",images:{},widgets:{}},{type:"hint",content:"hint 2",images:{},widgets:{}}],questions:[{hints:[{type:"hint",content:"question hint 1 edited",images:{},widgets:{}}],keepInMind:{type:"content",content:"keep in mind",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},question:{type:"content",content:"question edited",images:{},widgets:{}},tags:["a","c"]},{hints:[{type:"hint",content:"question hint 1",images:{},widgets:{}}],keepInMind:{type:"content",content:"keep in mind",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},question:{type:"content",content:"question",images:{},widgets:{}},tags:["a","b"]}]}},shape:{type:"object",shape:{directions:{type:"content"},overview:{type:"content"},passage:{type:"content"},hints:{type:"array",elementShape:{type:"hint"}},questions:{type:"array",elementShape:{type:"object",shape:{tags:{type:"tags"},question:{type:"content"},overview:{type:"content"},keepInMind:{type:"content"},hints:{type:"array",elementShape:{type:"hint"}}}}}}},tags:{idToName:id=>tags[id],nameToId:name=>name[0],names:["a tag","b tag","c tag"]}};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_structured_item_diff__WEBPACK_IMPORTED_MODULE_1__.Z,props)},ContentRemoved=args=>{const props={before:{_multi:{directions:{__type:"content",content:"directions",images:{},widgets:{}},passage:{type:"content",content:"passage",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},hints:[{type:"hint",content:"hint 1",images:{},widgets:{}},{type:"hint",content:"hint 2",images:{},widgets:{}}],questions:[{hints:[{type:"hint",content:"question hint 1 edited",images:{},widgets:{}}],keepInMind:{type:"content",content:"keep in mind",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},question:{type:"content",content:"question edited",images:{},widgets:{}},tags:["a","c"]},{hints:[{type:"hint",content:"question hint 1",images:{},widgets:{}}],keepInMind:{type:"content",content:"keep in mind",images:{},widgets:{}},overview:{type:"content",content:"overview",images:{},widgets:{}},question:{type:"content",content:"question",images:{},widgets:{}},tags:["a","b"]}]}},after:{_multi:{directions:{__type:"content",content:"",images:{},widgets:{}},passage:{type:"content",content:"",images:{},widgets:{}},overview:{type:"content",content:"",images:{},widgets:{}},hints:[],questions:[]}},shape:{type:"object",shape:{directions:{type:"content"},overview:{type:"content"},passage:{type:"content"},hints:{type:"array",elementShape:{type:"hint"}},questions:{type:"array",elementShape:{type:"object",shape:{tags:{type:"tags"},question:{type:"content"},overview:{type:"content"},keepInMind:{type:"content"},hints:{type:"array",elementShape:{type:"hint"}}}}}}},tags:{idToName:id=>tags[id],nameToId:name=>name[0],names:["a tag","b tag","c tag"]}};return react__WEBPACK_IMPORTED_MODULE_0__.createElement(_structured_item_diff__WEBPACK_IMPORTED_MODULE_1__.Z,props)};ContentAdded.parameters={...ContentAdded.parameters,docs:{...ContentAdded.parameters?.docs,source:{originalSource:'(args: StoryArgs): React.ReactElement => {\n  const props = ({\n    before: {\n      _multi: {\n        directions: {\n          __type: "content",\n          content: "",\n          images: {},\n          widgets: {}\n        },\n        passage: {\n          type: "content",\n          content: "",\n          images: {},\n          widgets: {}\n        },\n        overview: {\n          type: "content",\n          content: "",\n          images: {},\n          widgets: {}\n        },\n        hints: [],\n        questions: []\n      }\n    },\n    after: {\n      _multi: {\n        directions: {\n          type: "content",\n          content: "directions",\n          images: {},\n          widgets: {}\n        },\n        passage: {\n          type: "content",\n          content: "passage",\n          images: {},\n          widgets: {}\n        },\n        overview: {\n          type: "content",\n          content: "overview",\n          images: {},\n          widgets: {}\n        },\n        hints: [{\n          type: "hint",\n          content: "hint 1",\n          images: {},\n          widgets: {}\n        }],\n        questions: [{\n          hints: [{\n            type: "hint",\n            content: "question hint 1",\n            images: {},\n            widgets: {}\n          }],\n          keepInMind: {\n            type: "content",\n            content: "keep in mind",\n            images: {},\n            widgets: {}\n          },\n          overview: {\n            type: "content",\n            content: "overview",\n            images: {},\n            widgets: {}\n          },\n          question: {\n            type: "content",\n            content: "question",\n            images: {},\n            widgets: {}\n          },\n          tags: ["a", "b"]\n        }]\n      }\n    },\n    shape: {\n      type: "object",\n      shape: {\n        directions: {\n          type: "content"\n        },\n        overview: {\n          type: "content"\n        },\n        passage: {\n          type: "content"\n        },\n        hints: {\n          type: "array",\n          elementShape: {\n            type: "hint"\n          }\n        },\n        questions: {\n          type: "array",\n          elementShape: {\n            type: "object",\n            shape: {\n              tags: {\n                type: "tags"\n              },\n              question: {\n                type: "content"\n              },\n              overview: {\n                type: "content"\n              },\n              keepInMind: {\n                type: "content"\n              },\n              hints: {\n                type: "array",\n                elementShape: {\n                  type: "hint"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    tags: {\n      idToName: id => tags[id],\n      nameToId: name => name[0],\n      names: ["a tag", "b tag", "c tag"]\n    }\n  } as const);\n  return <StructuredItemDiff {...props} />;\n}',...ContentAdded.parameters?.docs?.source}}},ContentAddedRemovedAndChanged.parameters={...ContentAddedRemovedAndChanged.parameters,docs:{...ContentAddedRemovedAndChanged.parameters?.docs,source:{originalSource:'(args: StoryArgs): React.ReactElement => {\n  const props = ({\n    before: {\n      _multi: {\n        directions: {\n          __type: "content",\n          content: "directions",\n          images: {},\n          widgets: {}\n        },\n        passage: {\n          type: "content",\n          content: "passage",\n          images: {},\n          widgets: {}\n        },\n        overview: {\n          type: "content",\n          content: "overview",\n          images: {},\n          widgets: {}\n        },\n        hints: [{\n          type: "hint",\n          content: "hint 1",\n          images: {},\n          widgets: {}\n        }, {\n          type: "hint",\n          content: "hint 2",\n          images: {},\n          widgets: {}\n        }],\n        questions: [{\n          hints: [{\n            type: "hint",\n            content: "question hint 1",\n            images: {},\n            widgets: {}\n          }],\n          keepInMind: {\n            type: "content",\n            content: "keep in mind",\n            images: {},\n            widgets: {}\n          },\n          overview: {\n            type: "content",\n            content: "overview",\n            images: {},\n            widgets: {}\n          },\n          question: {\n            type: "content",\n            content: "question",\n            images: {},\n            widgets: {}\n          },\n          tags: ["a", "b"]\n        }]\n      }\n    },\n    after: {\n      _multi: {\n        directions: {\n          type: "content",\n          content: "directions",\n          images: {},\n          widgets: {}\n        },\n        passage: {\n          type: "content",\n          content: "passage",\n          images: {},\n          widgets: {}\n        },\n        overview: {\n          type: "content",\n          content: "overview",\n          images: {},\n          widgets: {}\n        },\n        hints: [{\n          type: "hint",\n          content: "hint 1",\n          images: {},\n          widgets: {}\n        }],\n        questions: [{\n          hints: [],\n          keepInMind: {\n            type: "content",\n            content: "keep in mind",\n            images: {},\n            widgets: {}\n          },\n          overview: {\n            type: "content",\n            content: "overview",\n            images: {},\n            widgets: {}\n          },\n          question: {\n            type: "content",\n            content: "question edited",\n            images: {},\n            widgets: {}\n          },\n          tags: ["a", "c"]\n        }, {\n          hints: [{\n            type: "hint",\n            content: "question hint 1",\n            images: {},\n            widgets: {}\n          }],\n          keepInMind: {\n            type: "content",\n            content: "keep in mind",\n            images: {},\n            widgets: {}\n          },\n          overview: {\n            type: "content",\n            content: "overview",\n            images: {},\n            widgets: {}\n          },\n          question: {\n            type: "content",\n            content: "question",\n            images: {},\n            widgets: {}\n          },\n          tags: ["a", "b"]\n        }]\n      }\n    },\n    shape: {\n      type: "object",\n      shape: {\n        directions: {\n          type: "content"\n        },\n        overview: {\n          type: "content"\n        },\n        passage: {\n          type: "content"\n        },\n        hints: {\n          type: "array",\n          elementShape: {\n            type: "hint"\n          }\n        },\n        questions: {\n          type: "array",\n          elementShape: {\n            type: "object",\n            shape: {\n              tags: {\n                type: "tags"\n              },\n              question: {\n                type: "content"\n              },\n              overview: {\n                type: "content"\n              },\n              keepInMind: {\n                type: "content"\n              },\n              hints: {\n                type: "array",\n                elementShape: {\n                  type: "hint"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    tags: {\n      idToName: id => tags[id],\n      nameToId: name => name[0],\n      names: ["a tag", "b tag", "c tag"]\n    }\n  } as const);\n  return <StructuredItemDiff {...props} />;\n}',...ContentAddedRemovedAndChanged.parameters?.docs?.source}}},MiscContentChanges.parameters={...MiscContentChanges.parameters,docs:{...MiscContentChanges.parameters?.docs,source:{originalSource:'(args: StoryArgs): React.ReactElement => {\n  const props = ({\n    before: {\n      _multi: {\n        directions: {\n          __type: "content",\n          content: "directions",\n          images: {},\n          widgets: {}\n        },\n        passage: {\n          type: "content",\n          content: "passage",\n          images: {},\n          widgets: {}\n        },\n        overview: {\n          type: "content",\n          content: "overview",\n          images: {},\n          widgets: {}\n        },\n        hints: [{\n          type: "hint",\n          content: "hint 1",\n          images: {},\n          widgets: {}\n        }, {\n          type: "hint",\n          content: "hint 2",\n          images: {},\n          widgets: {}\n        }, {\n          type: "hint",\n          content: "hint 3",\n          images: {},\n          widgets: {}\n        }],\n        questions: [{\n          hints: [{\n            type: "hint",\n            content: "question hint 1",\n            images: {},\n            widgets: {}\n          }, {\n            type: "hint",\n            content: "question hint 2",\n            images: {},\n            widgets: {}\n          }, {\n            type: "hint",\n            content: "question hint 3",\n            images: {},\n            widgets: {}\n          }],\n          keepInMind: {\n            type: "content",\n            content: "keep in mind",\n            images: {},\n            widgets: {}\n          },\n          overview: {\n            type: "content",\n            content: "overview",\n            images: {},\n            widgets: {}\n          },\n          question: {\n            type: "content",\n            content: "question edited",\n            images: {},\n            widgets: {}\n          },\n          tags: ["a", "c"]\n        }, {\n          hints: [{\n            type: "hint",\n            content: "question hint 1",\n            images: {},\n            widgets: {}\n          }],\n          keepInMind: {\n            type: "content",\n            content: "keep in mind",\n            images: {},\n            widgets: {}\n          },\n          overview: {\n            type: "content",\n            content: "overview",\n            images: {},\n            widgets: {}\n          },\n          question: {\n            type: "content",\n            content: "question",\n            images: {},\n            widgets: {}\n          },\n          tags: ["a", "b"]\n        }, {\n          hints: [{\n            type: "hint",\n            content: "question hint 1",\n            images: {},\n            widgets: {}\n          }],\n          keepInMind: {\n            type: "content",\n            content: "keep in mind",\n            images: {},\n            widgets: {}\n          },\n          overview: {\n            type: "content",\n            content: "overview",\n            images: {},\n            widgets: {}\n          },\n          question: {\n            type: "content",\n            content: "question",\n            images: {},\n            widgets: {}\n          },\n          tags: ["a", "b"]\n        }]\n      }\n    },\n    after: {\n      _multi: {\n        directions: {\n          __type: "content",\n          content: "directions",\n          images: {},\n          widgets: {}\n        },\n        passage: {\n          type: "content",\n          content: "passage",\n          images: {},\n          widgets: {}\n        },\n        overview: {\n          type: "content",\n          content: "overview",\n          images: {},\n          widgets: {}\n        },\n        hints: [{\n          type: "hint",\n          content: "hint 1",\n          images: {},\n          widgets: {}\n        }, {\n          type: "hint",\n          content: "hint 2",\n          images: {},\n          widgets: {}\n        }],\n        questions: [{\n          hints: [{\n            type: "hint",\n            content: "question hint 1 edited",\n            images: {},\n            widgets: {}\n          }],\n          keepInMind: {\n            type: "content",\n            content: "keep in mind",\n            images: {},\n            widgets: {}\n          },\n          overview: {\n            type: "content",\n            content: "overview",\n            images: {},\n            widgets: {}\n          },\n          question: {\n            type: "content",\n            content: "question edited",\n            images: {},\n            widgets: {}\n          },\n          tags: ["a", "c"]\n        }, {\n          hints: [{\n            type: "hint",\n            content: "question hint 1",\n            images: {},\n            widgets: {}\n          }],\n          keepInMind: {\n            type: "content",\n            content: "keep in mind",\n            images: {},\n            widgets: {}\n          },\n          overview: {\n            type: "content",\n            content: "overview",\n            images: {},\n            widgets: {}\n          },\n          question: {\n            type: "content",\n            content: "question",\n            images: {},\n            widgets: {}\n          },\n          tags: ["a", "b"]\n        }]\n      }\n    },\n    shape: {\n      type: "object",\n      shape: {\n        directions: {\n          type: "content"\n        },\n        overview: {\n          type: "content"\n        },\n        passage: {\n          type: "content"\n        },\n        hints: {\n          type: "array",\n          elementShape: {\n            type: "hint"\n          }\n        },\n        questions: {\n          type: "array",\n          elementShape: {\n            type: "object",\n            shape: {\n              tags: {\n                type: "tags"\n              },\n              question: {\n                type: "content"\n              },\n              overview: {\n                type: "content"\n              },\n              keepInMind: {\n                type: "content"\n              },\n              hints: {\n                type: "array",\n                elementShape: {\n                  type: "hint"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    tags: {\n      idToName: id => tags[id],\n      nameToId: name => name[0],\n      names: ["a tag", "b tag", "c tag"]\n    }\n  } as const);\n  return <StructuredItemDiff {...props} />;\n}',...MiscContentChanges.parameters?.docs?.source}}},ContentRemoved.parameters={...ContentRemoved.parameters,docs:{...ContentRemoved.parameters?.docs,source:{originalSource:'(args: StoryArgs): React.ReactElement => {\n  const props = ({\n    before: {\n      _multi: {\n        directions: {\n          __type: "content",\n          content: "directions",\n          images: {},\n          widgets: {}\n        },\n        passage: {\n          type: "content",\n          content: "passage",\n          images: {},\n          widgets: {}\n        },\n        overview: {\n          type: "content",\n          content: "overview",\n          images: {},\n          widgets: {}\n        },\n        hints: [{\n          type: "hint",\n          content: "hint 1",\n          images: {},\n          widgets: {}\n        }, {\n          type: "hint",\n          content: "hint 2",\n          images: {},\n          widgets: {}\n        }],\n        questions: [{\n          hints: [{\n            type: "hint",\n            content: "question hint 1 edited",\n            images: {},\n            widgets: {}\n          }],\n          keepInMind: {\n            type: "content",\n            content: "keep in mind",\n            images: {},\n            widgets: {}\n          },\n          overview: {\n            type: "content",\n            content: "overview",\n            images: {},\n            widgets: {}\n          },\n          question: {\n            type: "content",\n            content: "question edited",\n            images: {},\n            widgets: {}\n          },\n          tags: ["a", "c"]\n        }, {\n          hints: [{\n            type: "hint",\n            content: "question hint 1",\n            images: {},\n            widgets: {}\n          }],\n          keepInMind: {\n            type: "content",\n            content: "keep in mind",\n            images: {},\n            widgets: {}\n          },\n          overview: {\n            type: "content",\n            content: "overview",\n            images: {},\n            widgets: {}\n          },\n          question: {\n            type: "content",\n            content: "question",\n            images: {},\n            widgets: {}\n          },\n          tags: ["a", "b"]\n        }]\n      }\n    },\n    after: {\n      _multi: {\n        directions: {\n          __type: "content",\n          content: "",\n          images: {},\n          widgets: {}\n        },\n        passage: {\n          type: "content",\n          content: "",\n          images: {},\n          widgets: {}\n        },\n        overview: {\n          type: "content",\n          content: "",\n          images: {},\n          widgets: {}\n        },\n        hints: [],\n        questions: []\n      }\n    },\n    shape: {\n      type: "object",\n      shape: {\n        directions: {\n          type: "content"\n        },\n        overview: {\n          type: "content"\n        },\n        passage: {\n          type: "content"\n        },\n        hints: {\n          type: "array",\n          elementShape: {\n            type: "hint"\n          }\n        },\n        questions: {\n          type: "array",\n          elementShape: {\n            type: "object",\n            shape: {\n              tags: {\n                type: "tags"\n              },\n              question: {\n                type: "content"\n              },\n              overview: {\n                type: "content"\n              },\n              keepInMind: {\n                type: "content"\n              },\n              hints: {\n                type: "array",\n                elementShape: {\n                  type: "hint"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    tags: {\n      idToName: id => tags[id],\n      nameToId: name => name[0],\n      names: ["a tag", "b tag", "c tag"]\n    }\n  } as const);\n  return <StructuredItemDiff {...props} />;\n}',...ContentRemoved.parameters?.docs?.source}}};const __namedExportsOrder=["ContentAdded","ContentAddedRemovedAndChanged","MiscContentChanges","ContentRemoved"];try{ContentAdded.displayName="ContentAdded",ContentAdded.__docgenInfo={description:"",displayName:"ContentAdded",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/perseus-editor/src/diffs/__stories__/structured-item-diff.stories.tsx#ContentAdded"]={docgenInfo:ContentAdded.__docgenInfo,name:"ContentAdded",path:"packages/perseus-editor/src/diffs/__stories__/structured-item-diff.stories.tsx#ContentAdded"})}catch(__react_docgen_typescript_loader_error){}try{ContentAddedRemovedAndChanged.displayName="ContentAddedRemovedAndChanged",ContentAddedRemovedAndChanged.__docgenInfo={description:"",displayName:"ContentAddedRemovedAndChanged",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/perseus-editor/src/diffs/__stories__/structured-item-diff.stories.tsx#ContentAddedRemovedAndChanged"]={docgenInfo:ContentAddedRemovedAndChanged.__docgenInfo,name:"ContentAddedRemovedAndChanged",path:"packages/perseus-editor/src/diffs/__stories__/structured-item-diff.stories.tsx#ContentAddedRemovedAndChanged"})}catch(__react_docgen_typescript_loader_error){}try{MiscContentChanges.displayName="MiscContentChanges",MiscContentChanges.__docgenInfo={description:"",displayName:"MiscContentChanges",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/perseus-editor/src/diffs/__stories__/structured-item-diff.stories.tsx#MiscContentChanges"]={docgenInfo:MiscContentChanges.__docgenInfo,name:"MiscContentChanges",path:"packages/perseus-editor/src/diffs/__stories__/structured-item-diff.stories.tsx#MiscContentChanges"})}catch(__react_docgen_typescript_loader_error){}try{ContentRemoved.displayName="ContentRemoved",ContentRemoved.__docgenInfo={description:"",displayName:"ContentRemoved",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/perseus-editor/src/diffs/__stories__/structured-item-diff.stories.tsx#ContentRemoved"]={docgenInfo:ContentRemoved.__docgenInfo,name:"ContentRemoved",path:"packages/perseus-editor/src/diffs/__stories__/structured-item-diff.stories.tsx#ContentRemoved"})}catch(__react_docgen_typescript_loader_error){}},"./packages/perseus-editor/src/diffs/__stories__/perseus-diff-wrapper.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{Z:()=>__WEBPACK_DEFAULT_EXPORT__});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/react/index.js");const __WEBPACK_DEFAULT_EXPORT__=_ref=>{let{children}=_ref;return react__WEBPACK_IMPORTED_MODULE_0__.createElement("div",{className:"perseus-diff"},children)};try{perseusdiffwrapper.displayName="perseusdiffwrapper",perseusdiffwrapper.__docgenInfo={description:"",displayName:"perseusdiffwrapper",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["packages/perseus-editor/src/diffs/__stories__/perseus-diff-wrapper.tsx#perseusdiffwrapper"]={docgenInfo:perseusdiffwrapper.__docgenInfo,name:"perseusdiffwrapper",path:"packages/perseus-editor/src/diffs/__stories__/perseus-diff-wrapper.tsx#perseusdiffwrapper"})}catch(__react_docgen_typescript_loader_error){}}}]);