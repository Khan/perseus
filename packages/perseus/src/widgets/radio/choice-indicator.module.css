.base {
    appearance: none;
    background-color: var(--wb-semanticColor-core-transparent);
    border: solid 0.2rem var(--wb-semanticColor-core-border-neutral-strong);
    color: var(--wb-semanticColor-core-foreground-neutral-default);
    cursor: pointer;
    font-family: var(--wb-font-family-sans);
    font-size: var(--wb-font-heading-size-small);
    height: var(--wb-c-button-root-sizing-height-small);
    line-height: var(--wb-font-heading-lineHeight-small);
    outline: 0 solid var(--wb-semanticColor-core-background-instructive-default);
    outline-offset: 0;
    padding: 0;
    width: var(
        --wb-c-button-root-sizing-height-small
    ); /* using the height value ensures a square/circle */
}

@media (prefers-reduced-motion: no-preference) {
    .base {
        transition: all 0.2s;
    }
}

.base:hover,
.base:focus {
    outline-offset: 0.2rem;
    outline-width: 0.2rem;
}

/* button is checked */
.base[aria-pressed="true"] {
    background-color: var(
        --wb-semanticColor-core-background-instructive-default
    );
    border-width: 0;
    color: var(--wb-semanticColor-core-foreground-inverse-strong);
}

/* icon inside the button when showing correctness */
.base [role="img"] {
    margin-inline-end: 0.4rem;
}

.is-correct,
.is-wrong {
    cursor: default;
}

.is-correct:hover,
.is-wrong:hover {
    outline: none;
}

.is-correct[aria-pressed="false"] {
    /* make an unchecked indicator solid so that it better matches styling for the option when correct */
    background-color: var(
        --wb-semanticColor-core-background-instructive-default
    );
    border-width: 0;
    color: var(--wb-semanticColor-core-foreground-inverse-strong);
}

.is-correct[aria-pressed="true"] {
    background-color: var(--wb-semanticColor-core-background-success-strong);
    color: var(
        --wb-semanticColor-action-primary-progressive-default-foreground
    );
    width: calc(
        1.8rem + var(--wb-c-button-root-sizing-height-small)
    ); /* adding 1.8rem accounts for the checkmark icon */
}

.is-wrong[aria-pressed="false"] {
    background-color: var(--wb-semanticColor-core-transparent);
    border-color: var(--wb-semanticColor-core-border-disabled-strong);
    color: var(--wb-semanticColor-core-foreground-disabled-strong);
}

.is-wrong[aria-pressed="true"] {
    background-color: var(--wb-semanticColor-core-background-critical-subtle);
    color: var(--wb-semanticColor-core-foreground-critical-default);
    width: calc(
        1.8rem + var(--wb-c-button-root-sizing-height-small)
    ); /* adding 1.8rem accounts for the minus-circle icon */
}

.circle-shape {
    /* Extremely large border radii cause an overlap situation,
           resulting in a recalculation to the smallest radius that doesn't cause overlap,
           and applying the reduction proportionally across all radii.
       https://drafts.csswg.org/css-backgrounds/#corner-overlap
       Using this method of rounding the edges instead of specifying a pre-determined amount
           in order to make the measurement relative to the size of the button.
       In the case where the single-select indicator has multiple elements in its content (like a checkmark),
           the shape changes from a circle to a gel-capsule.
       This property setting automatically handles that case without the need for JS logic.
    */
    border-radius: 100vh;
}

.square-shape {
    border-radius: 0.4rem;
}
